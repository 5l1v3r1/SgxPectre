
./libpal-Linux-SGX.so:     file format elf64-x86-64


Disassembly of section .plt:

0000000000002550 <pal_printf@plt-0x10>:
    2550:	ff 35 0a 81 22 00    	pushq  0x22810a(%rip)        # 22a660 <_GLOBAL_OFFSET_TABLE_+0x8>
    2556:	ff 25 0c 81 22 00    	jmpq   *0x22810c(%rip)        # 22a668 <_GLOBAL_OFFSET_TABLE_+0x10>
    255c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002560 <pal_printf@plt>:
    2560:	ff 25 0a 81 22 00    	jmpq   *0x22810a(%rip)        # 22a670 <_GLOBAL_OFFSET_TABLE_+0x18>
    2566:	68 00 00 00 00       	pushq  $0x0
    256b:	e9 e0 ff ff ff       	jmpq   2550 <text_start+0x23c0>

0000000000002570 <pal_control_addr@plt>:
    2570:	ff 25 02 81 22 00    	jmpq   *0x228102(%rip)        # 22a678 <_GLOBAL_OFFSET_TABLE_+0x20>
    2576:	68 01 00 00 00       	pushq  $0x1
    257b:	e9 d0 ff ff ff       	jmpq   2550 <text_start+0x23c0>

Disassembly of section .text:

0000000000002580 <DkStreamAttributesSetbyHandle>:
    2580:	55                   	push   %rbp
    2581:	48 89 e5             	mov    %rsp,%rbp
    2584:	41 56                	push   %r14
    2586:	41 55                	push   %r13
    2588:	41 54                	push   %r12
    258a:	53                   	push   %rbx
    258b:	48 83 ec 60          	sub    $0x60,%rsp
    258f:	48 89 e0             	mov    %rsp,%rax
    2592:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    2596:	48 89 e8             	mov    %rbp,%rax
    2599:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    259d:	48 89 d8             	mov    %rbx,%rax
    25a0:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    25a4:	48 89 f0             	mov    %rsi,%rax
    25a7:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    25ab:	48 89 f8             	mov    %rdi,%rax
    25ae:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    25b2:	4c 89 e0             	mov    %r12,%rax
    25b5:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    25b9:	4c 89 e8             	mov    %r13,%rax
    25bc:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    25c0:	4c 89 f0             	mov    %r14,%rax
    25c3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    25c7:	4c 89 f8             	mov    %r15,%rax
    25ca:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    25ce:	48 8b 05 f3 7e 22 00 	mov    0x227ef3(%rip),%rax        # 22a4c8 <data_start+0x10>
    25d5:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    25d9:	48 8d 05 20 56 02 00 	lea    0x25620(%rip),%rax        # 27c00 <section_rodata>
    25e0:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    25e4:	90                   	nop
    25e5:	48 85 ff             	test   %rdi,%rdi
    25e8:	49 bd ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%r13
    25ef:	de ad de 
    25f2:	0f 94 c3             	sete   %bl
    25f5:	48 85 f6             	test   %rsi,%rsi
    25f8:	4c 89 6d 80          	mov    %r13,-0x80(%rbp)
    25fc:	0f 94 c0             	sete   %al
    25ff:	08 c3                	or     %al,%bl
    2601:	75 75                	jne    2678 <DkStreamAttributesSetbyHandle+0xf8>
    2603:	48 63 07             	movslq (%rdi),%rax
    2606:	49 89 fc             	mov    %rdi,%r12
    2609:	8d 50 ff             	lea    -0x1(%rax),%edx
    260c:	83 fa 10             	cmp    $0x10,%edx
    260f:	0f 87 8b 00 00 00    	ja     26a0 <DkStreamAttributesSetbyHandle+0x120>
    2615:	48 8d 15 64 80 22 00 	lea    0x228064(%rip),%rdx        # 22a680 <pal_handle_ops>
    261c:	49 89 f6             	mov    %rsi,%r14
    261f:	4c 8b 2c c2          	mov    (%rdx,%rax,8),%r13
    2623:	4d 85 ed             	test   %r13,%r13
    2626:	0f 84 d4 00 00 00    	je     2700 <DkStreamAttributesSetbyHandle+0x180>
    262c:	49 8b 45 78          	mov    0x78(%r13),%rax
    2630:	bf 03 00 00 00       	mov    $0x3,%edi
    2635:	48 85 c0             	test   %rax,%rax
    2638:	0f 84 a6 00 00 00    	je     26e4 <DkStreamAttributesSetbyHandle+0x164>
    263e:	4c 89 f6             	mov    %r14,%rsi
    2641:	4c 89 e7             	mov    %r12,%rdi
    2644:	ff d0                	callq  *%rax
    2646:	85 c0                	test   %eax,%eax
    2648:	0f 88 92 00 00 00    	js     26e0 <DkStreamAttributesSetbyHandle+0x160>
    264e:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    2652:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    2659:	de ad de 
    265c:	bb 01 00 00 00       	mov    $0x1,%ebx
    2661:	48 39 c2             	cmp    %rax,%rdx
    2664:	74 4d                	je     26b3 <DkStreamAttributesSetbyHandle+0x133>
    2666:	48 83 c4 60          	add    $0x60,%rsp
    266a:	89 d8                	mov    %ebx,%eax
    266c:	5b                   	pop    %rbx
    266d:	41 5c                	pop    %r12
    266f:	41 5d                	pop    %r13
    2671:	41 5e                	pop    %r14
    2673:	5d                   	pop    %rbp
    2674:	c3                   	retq   
    2675:	0f 1f 00             	nopl   (%rax)
    2678:	bf 04 00 00 00       	mov    $0x4,%edi
    267d:	e8 1e e0 00 00       	callq  106a0 <_DkRaiseFailure>
    2682:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    2686:	4c 39 e8             	cmp    %r13,%rax
    2689:	74 45                	je     26d0 <DkStreamAttributesSetbyHandle+0x150>
    268b:	31 db                	xor    %ebx,%ebx
    268d:	48 83 c4 60          	add    $0x60,%rsp
    2691:	89 d8                	mov    %ebx,%eax
    2693:	5b                   	pop    %rbx
    2694:	41 5c                	pop    %r12
    2696:	41 5d                	pop    %r13
    2698:	41 5e                	pop    %r14
    269a:	5d                   	pop    %rbp
    269b:	c3                   	retq   
    269c:	0f 1f 40 00          	nopl   0x0(%rax)
    26a0:	bf 07 00 00 00       	mov    $0x7,%edi
    26a5:	e8 f6 df 00 00       	callq  106a0 <_DkRaiseFailure>
    26aa:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    26ae:	4c 39 e8             	cmp    %r13,%rax
    26b1:	75 d8                	jne    268b <DkStreamAttributesSetbyHandle+0x10b>
    26b3:	90                   	nop
    26b4:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
    26bb:	00 
    26bc:	48 83 c4 60          	add    $0x60,%rsp
    26c0:	89 d8                	mov    %ebx,%eax
    26c2:	5b                   	pop    %rbx
    26c3:	41 5c                	pop    %r12
    26c5:	41 5d                	pop    %r13
    26c7:	41 5e                	pop    %r14
    26c9:	5d                   	pop    %rbp
    26ca:	c3                   	retq   
    26cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    26d0:	90                   	nop
    26d1:	31 db                	xor    %ebx,%ebx
    26d3:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
    26da:	00 
    26db:	eb b0                	jmp    268d <DkStreamAttributesSetbyHandle+0x10d>
    26dd:	0f 1f 00             	nopl   (%rax)
    26e0:	f7 d8                	neg    %eax
    26e2:	89 c7                	mov    %eax,%edi
    26e4:	e8 b7 df 00 00       	callq  106a0 <_DkRaiseFailure>
    26e9:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    26ed:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    26f4:	de ad de 
    26f7:	48 39 c2             	cmp    %rax,%rdx
    26fa:	74 b7                	je     26b3 <DkStreamAttributesSetbyHandle+0x133>
    26fc:	31 db                	xor    %ebx,%ebx
    26fe:	eb 8d                	jmp    268d <DkStreamAttributesSetbyHandle+0x10d>
    2700:	48 8d 3d 29 56 02 00 	lea    0x25629(%rip),%rdi        # 27d30 <section_rodata+0x130>
    2707:	31 d2                	xor    %edx,%edx
    2709:	be db 01 00 00       	mov    $0x1db,%esi
    270e:	31 c0                	xor    %eax,%eax
    2710:	e8 3b 4a 00 00       	callq  7150 <warn>
    2715:	e8 26 4a 00 00       	callq  7140 <__abort>
    271a:	e9 0d ff ff ff       	jmpq   262c <DkStreamAttributesSetbyHandle+0xac>
    271f:	90                   	nop

0000000000002720 <DkStreamUnmap>:
    2720:	55                   	push   %rbp
    2721:	48 89 e5             	mov    %rsp,%rbp
    2724:	41 54                	push   %r12
    2726:	53                   	push   %rbx
    2727:	49 89 f4             	mov    %rsi,%r12
    272a:	48 89 fb             	mov    %rdi,%rbx
    272d:	48 83 ec 60          	sub    $0x60,%rsp
    2731:	48 89 e0             	mov    %rsp,%rax
    2734:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    2738:	48 89 e8             	mov    %rbp,%rax
    273b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    273f:	48 89 d8             	mov    %rbx,%rax
    2742:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    2746:	48 89 f0             	mov    %rsi,%rax
    2749:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    274d:	48 89 f8             	mov    %rdi,%rax
    2750:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    2754:	4c 89 e0             	mov    %r12,%rax
    2757:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    275b:	4c 89 e8             	mov    %r13,%rax
    275e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2762:	4c 89 f0             	mov    %r14,%rax
    2765:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2769:	4c 89 f8             	mov    %r15,%rax
    276c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2770:	48 8b 05 d1 7d 22 00 	mov    0x227dd1(%rip),%rax        # 22a548 <data_start+0x90>
    2777:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    277b:	48 8d 05 9c 54 02 00 	lea    0x2549c(%rip),%rax        # 27c1e <section_rodata+0x1e>
    2782:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    2786:	90                   	nop
    2787:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    278e:	de ad de 
    2791:	48 85 ff             	test   %rdi,%rdi
    2794:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    2798:	74 26                	je     27c0 <DkStreamUnmap+0xa0>
    279a:	48 8d 05 3f bf 22 04 	lea    0x422bf3f(%rip),%rax        # 422e6e0 <pal_state>
    27a1:	48 8b 40 60          	mov    0x60(%rax),%rax
    27a5:	48 89 c2             	mov    %rax,%rdx
    27a8:	48 21 fa             	and    %rdi,%rdx
    27ab:	48 39 d7             	cmp    %rdx,%rdi
    27ae:	75 10                	jne    27c0 <DkStreamUnmap+0xa0>
    27b0:	48 85 f6             	test   %rsi,%rsi
    27b3:	74 0b                	je     27c0 <DkStreamUnmap+0xa0>
    27b5:	48 21 f0             	and    %rsi,%rax
    27b8:	48 39 c6             	cmp    %rax,%rsi
    27bb:	74 20                	je     27dd <DkStreamUnmap+0xbd>
    27bd:	0f 1f 00             	nopl   (%rax)
    27c0:	bf 04 00 00 00       	mov    $0x4,%edi
    27c5:	e8 d6 de 00 00       	callq  106a0 <_DkRaiseFailure>
    27ca:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    27ce:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    27d5:	de ad de 
    27d8:	48 39 c2             	cmp    %rax,%rdx
    27db:	74 73                	je     2850 <DkStreamUnmap+0x130>
    27dd:	44 89 e6             	mov    %r12d,%esi
    27e0:	48 89 df             	mov    %rbx,%rdi
    27e3:	e8 28 b1 00 00       	callq  d910 <_DkCheckMemoryMappable>
    27e8:	84 c0                	test   %al,%al
    27ea:	75 34                	jne    2820 <DkStreamUnmap+0x100>
    27ec:	4c 89 e6             	mov    %r12,%rsi
    27ef:	48 89 df             	mov    %rbx,%rdi
    27f2:	e8 29 a9 00 00       	callq  d120 <_DkStreamUnmap>
    27f7:	85 c0                	test   %eax,%eax
    27f9:	78 65                	js     2860 <DkStreamUnmap+0x140>
    27fb:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    27ff:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    2806:	de ad de 
    2809:	48 39 c2             	cmp    %rax,%rdx
    280c:	75 09                	jne    2817 <DkStreamUnmap+0xf7>
    280e:	90                   	nop
    280f:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    2816:	00 
    2817:	48 83 c4 60          	add    $0x60,%rsp
    281b:	5b                   	pop    %rbx
    281c:	41 5c                	pop    %r12
    281e:	5d                   	pop    %rbp
    281f:	c3                   	retq   
    2820:	bf 06 00 00 00       	mov    $0x6,%edi
    2825:	e8 76 de 00 00       	callq  106a0 <_DkRaiseFailure>
    282a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    282e:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    2835:	de ad de 
    2838:	48 39 c2             	cmp    %rax,%rdx
    283b:	75 af                	jne    27ec <DkStreamUnmap+0xcc>
    283d:	90                   	nop
    283e:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    2845:	00 
    2846:	eb a4                	jmp    27ec <DkStreamUnmap+0xcc>
    2848:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    284f:	00 
    2850:	90                   	nop
    2851:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    2858:	00 
    2859:	eb 82                	jmp    27dd <DkStreamUnmap+0xbd>
    285b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2860:	f7 d8                	neg    %eax
    2862:	89 c7                	mov    %eax,%edi
    2864:	e8 37 de 00 00       	callq  106a0 <_DkRaiseFailure>
    2869:	eb 90                	jmp    27fb <DkStreamUnmap+0xdb>
    286b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002870 <DkSendHandle>:
    2870:	55                   	push   %rbp
    2871:	48 89 e5             	mov    %rsp,%rbp
    2874:	41 54                	push   %r12
    2876:	53                   	push   %rbx
    2877:	48 83 ec 60          	sub    $0x60,%rsp
    287b:	48 89 e0             	mov    %rsp,%rax
    287e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    2882:	48 89 e8             	mov    %rbp,%rax
    2885:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    2889:	48 89 d8             	mov    %rbx,%rax
    288c:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    2890:	48 89 f0             	mov    %rsi,%rax
    2893:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    2897:	48 89 f8             	mov    %rdi,%rax
    289a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    289e:	4c 89 e0             	mov    %r12,%rax
    28a1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    28a5:	4c 89 e8             	mov    %r13,%rax
    28a8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    28ac:	4c 89 f0             	mov    %r14,%rax
    28af:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    28b3:	4c 89 f8             	mov    %r15,%rax
    28b6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    28ba:	48 8b 05 1f 7c 22 00 	mov    0x227c1f(%rip),%rax        # 22a4e0 <data_start+0x28>
    28c1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    28c5:	48 8d 05 60 53 02 00 	lea    0x25360(%rip),%rax        # 27c2c <section_rodata+0x2c>
    28cc:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    28d0:	90                   	nop
    28d1:	48 85 ff             	test   %rdi,%rdi
    28d4:	49 bc ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%r12
    28db:	de ad de 
    28de:	0f 94 c3             	sete   %bl
    28e1:	48 85 f6             	test   %rsi,%rsi
    28e4:	4c 89 65 90          	mov    %r12,-0x70(%rbp)
    28e8:	0f 94 c0             	sete   %al
    28eb:	08 c3                	or     %al,%bl
    28ed:	74 21                	je     2910 <DkSendHandle+0xa0>
    28ef:	bf 04 00 00 00       	mov    $0x4,%edi
    28f4:	e8 a7 dd 00 00       	callq  106a0 <_DkRaiseFailure>
    28f9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    28fd:	4c 39 e0             	cmp    %r12,%rax
    2900:	74 3e                	je     2940 <DkSendHandle+0xd0>
    2902:	31 db                	xor    %ebx,%ebx
    2904:	48 83 c4 60          	add    $0x60,%rsp
    2908:	89 d8                	mov    %ebx,%eax
    290a:	5b                   	pop    %rbx
    290b:	41 5c                	pop    %r12
    290d:	5d                   	pop    %rbp
    290e:	c3                   	retq   
    290f:	90                   	nop
    2910:	e8 5b ad 00 00       	callq  d670 <_DkSendHandle>
    2915:	85 c0                	test   %eax,%eax
    2917:	78 37                	js     2950 <DkSendHandle+0xe0>
    2919:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    291d:	bb 01 00 00 00       	mov    $0x1,%ebx
    2922:	4c 39 e0             	cmp    %r12,%rax
    2925:	75 dd                	jne    2904 <DkSendHandle+0x94>
    2927:	90                   	nop
    2928:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    292f:	00 
    2930:	48 83 c4 60          	add    $0x60,%rsp
    2934:	89 d8                	mov    %ebx,%eax
    2936:	5b                   	pop    %rbx
    2937:	41 5c                	pop    %r12
    2939:	5d                   	pop    %rbp
    293a:	c3                   	retq   
    293b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2940:	90                   	nop
    2941:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    2948:	00 
    2949:	eb b7                	jmp    2902 <DkSendHandle+0x92>
    294b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2950:	f7 d8                	neg    %eax
    2952:	89 c7                	mov    %eax,%edi
    2954:	e8 47 dd 00 00       	callq  106a0 <_DkRaiseFailure>
    2959:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    295d:	4c 39 e0             	cmp    %r12,%rax
    2960:	75 a0                	jne    2902 <DkSendHandle+0x92>
    2962:	eb c3                	jmp    2927 <DkSendHandle+0xb7>
    2964:	66 90                	xchg   %ax,%ax
    2966:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    296d:	00 00 00 

0000000000002970 <DkReceiveHandle>:
    2970:	55                   	push   %rbp
    2971:	48 89 e5             	mov    %rsp,%rbp
    2974:	53                   	push   %rbx
    2975:	48 83 ec 78          	sub    $0x78,%rsp
    2979:	48 89 e0             	mov    %rsp,%rax
    297c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    2980:	48 89 e8             	mov    %rbp,%rax
    2983:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    2987:	48 89 d8             	mov    %rbx,%rax
    298a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    298e:	48 89 f0             	mov    %rsi,%rax
    2991:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    2995:	48 89 f8             	mov    %rdi,%rax
    2998:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    299c:	4c 89 e0             	mov    %r12,%rax
    299f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    29a3:	4c 89 e8             	mov    %r13,%rax
    29a6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    29aa:	4c 89 f0             	mov    %r14,%rax
    29ad:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    29b1:	4c 89 f8             	mov    %r15,%rax
    29b4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    29b8:	48 8b 05 e9 7b 22 00 	mov    0x227be9(%rip),%rax        # 22a5a8 <data_start+0xf0>
    29bf:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    29c3:	48 8d 05 6f 52 02 00 	lea    0x2526f(%rip),%rax        # 27c39 <section_rodata+0x39>
    29ca:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    29ce:	90                   	nop
    29cf:	48 bb ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rbx
    29d6:	de ad de 
    29d9:	48 85 ff             	test   %rdi,%rdi
    29dc:	48 89 5d 90          	mov    %rbx,-0x70(%rbp)
    29e0:	0f 84 9a 00 00 00    	je     2a80 <DkReceiveHandle+0x110>
    29e6:	48 8d 75 88          	lea    -0x78(%rbp),%rsi
    29ea:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
    29f1:	00 
    29f2:	e8 89 ad 00 00       	callq  d780 <_DkReceiveHandle>
    29f7:	85 c0                	test   %eax,%eax
    29f9:	0f 88 a1 00 00 00    	js     2aa0 <DkReceiveHandle+0x130>
    29ff:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    2a03:	48 85 c0             	test   %rax,%rax
    2a06:	74 28                	je     2a30 <DkReceiveHandle+0xc0>
    2a08:	8b 00                	mov    (%rax),%eax
    2a0a:	85 c0                	test   %eax,%eax
    2a0c:	74 44                	je     2a52 <DkReceiveHandle+0xe2>
    2a0e:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    2a12:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    2a19:	de ad de 
    2a1c:	48 39 c2             	cmp    %rax,%rdx
    2a1f:	74 4f                	je     2a70 <DkReceiveHandle+0x100>
    2a21:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    2a25:	48 83 c4 78          	add    $0x78,%rsp
    2a29:	5b                   	pop    %rbx
    2a2a:	5d                   	pop    %rbp
    2a2b:	c3                   	retq   
    2a2c:	0f 1f 40 00          	nopl   0x0(%rax)
    2a30:	48 8d 3d 29 53 02 00 	lea    0x25329(%rip),%rdi        # 27d60 <section_rodata+0x160>
    2a37:	31 d2                	xor    %edx,%edx
    2a39:	be ef 02 00 00       	mov    $0x2ef,%esi
    2a3e:	e8 0d 47 00 00       	callq  7150 <warn>
    2a43:	e8 f8 46 00 00       	callq  7140 <__abort>
    2a48:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    2a4c:	8b 00                	mov    (%rax),%eax
    2a4e:	85 c0                	test   %eax,%eax
    2a50:	75 bc                	jne    2a0e <DkReceiveHandle+0x9e>
    2a52:	48 8d 3d 37 53 02 00 	lea    0x25337(%rip),%rdi        # 27d90 <section_rodata+0x190>
    2a59:	31 d2                	xor    %edx,%edx
    2a5b:	be f0 02 00 00       	mov    $0x2f0,%esi
    2a60:	31 c0                	xor    %eax,%eax
    2a62:	e8 e9 46 00 00       	callq  7150 <warn>
    2a67:	e8 d4 46 00 00       	callq  7140 <__abort>
    2a6c:	eb a0                	jmp    2a0e <DkReceiveHandle+0x9e>
    2a6e:	66 90                	xchg   %ax,%ax
    2a70:	90                   	nop
    2a71:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    2a78:	00 
    2a79:	eb a6                	jmp    2a21 <DkReceiveHandle+0xb1>
    2a7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2a80:	bf 04 00 00 00       	mov    $0x4,%edi
    2a85:	e8 16 dc 00 00       	callq  106a0 <_DkRaiseFailure>
    2a8a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    2a8e:	48 39 d8             	cmp    %rbx,%rax
    2a91:	74 1f                	je     2ab2 <DkReceiveHandle+0x142>
    2a93:	31 c0                	xor    %eax,%eax
    2a95:	48 83 c4 78          	add    $0x78,%rsp
    2a99:	5b                   	pop    %rbx
    2a9a:	5d                   	pop    %rbp
    2a9b:	c3                   	retq   
    2a9c:	0f 1f 40 00          	nopl   0x0(%rax)
    2aa0:	f7 d8                	neg    %eax
    2aa2:	89 c7                	mov    %eax,%edi
    2aa4:	e8 f7 db 00 00       	callq  106a0 <_DkRaiseFailure>
    2aa9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    2aad:	48 39 d8             	cmp    %rbx,%rax
    2ab0:	75 e1                	jne    2a93 <DkReceiveHandle+0x123>
    2ab2:	90                   	nop
    2ab3:	31 c0                	xor    %eax,%eax
    2ab5:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    2abc:	00 
    2abd:	eb d6                	jmp    2a95 <DkReceiveHandle+0x125>
    2abf:	90                   	nop

0000000000002ac0 <parse_stream_uri>:
    2ac0:	55                   	push   %rbp
    2ac1:	48 89 e5             	mov    %rsp,%rbp
    2ac4:	41 57                	push   %r15
    2ac6:	41 56                	push   %r14
    2ac8:	41 55                	push   %r13
    2aca:	41 54                	push   %r12
    2acc:	53                   	push   %rbx
    2acd:	48 83 ec 08          	sub    $0x8,%rsp
    2ad1:	4c 8b 27             	mov    (%rdi),%r12
    2ad4:	41 0f b6 0c 24       	movzbl (%r12),%ecx
    2ad9:	4c 89 e3             	mov    %r12,%rbx
    2adc:	80 f9 3a             	cmp    $0x3a,%cl
    2adf:	74 1f                	je     2b00 <parse_stream_uri+0x40>
    2ae1:	84 c9                	test   %cl,%cl
    2ae3:	75 10                	jne    2af5 <parse_stream_uri+0x35>
    2ae5:	eb 19                	jmp    2b00 <parse_stream_uri+0x40>
    2ae7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    2aee:	00 00 
    2af0:	80 f9 3a             	cmp    $0x3a,%cl
    2af3:	74 0b                	je     2b00 <parse_stream_uri+0x40>
    2af5:	48 83 c3 01          	add    $0x1,%rbx
    2af9:	0f b6 0b             	movzbl (%rbx),%ecx
    2afc:	84 c9                	test   %cl,%cl
    2afe:	75 f0                	jne    2af0 <parse_stream_uri+0x30>
    2b00:	80 f9 3a             	cmp    $0x3a,%cl
    2b03:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    2b08:	0f 85 99 00 00 00    	jne    2ba7 <parse_stream_uri+0xe7>
    2b0e:	48 89 d8             	mov    %rbx,%rax
    2b11:	49 89 d6             	mov    %rdx,%r14
    2b14:	49 89 f7             	mov    %rsi,%r15
    2b17:	4c 29 e0             	sub    %r12,%rax
    2b1a:	49 89 fd             	mov    %rdi,%r13
    2b1d:	48 83 f8 04          	cmp    $0x4,%rax
    2b21:	0f 84 f1 00 00 00    	je     2c18 <parse_stream_uri+0x158>
    2b27:	7e 37                	jle    2b60 <parse_stream_uri+0xa0>
    2b29:	48 83 f8 07          	cmp    $0x7,%rax
    2b2d:	0f 84 bd 00 00 00    	je     2bf0 <parse_stream_uri+0x130>
    2b33:	48 83 f8 08          	cmp    $0x8,%rax
    2b37:	0f 85 95 00 00 00    	jne    2bd2 <parse_stream_uri+0x112>
    2b3d:	48 8d 35 2f 51 02 00 	lea    0x2512f(%rip),%rsi        # 27c73 <section_rodata+0x73>
    2b44:	ba 08 00 00 00       	mov    $0x8,%edx
    2b49:	4c 89 e7             	mov    %r12,%rdi
    2b4c:	e8 3f 2b 01 00       	callq  15690 <memcmp>
    2b51:	85 c0                	test   %eax,%eax
    2b53:	75 7d                	jne    2bd2 <parse_stream_uri+0x112>
    2b55:	48 8d 05 a4 80 22 00 	lea    0x2280a4(%rip),%rax        # 22ac00 <pipe_ops>
    2b5c:	eb 2b                	jmp    2b89 <parse_stream_uri+0xc9>
    2b5e:	66 90                	xchg   %ax,%ax
    2b60:	48 83 f8 03          	cmp    $0x3,%rax
    2b64:	75 6c                	jne    2bd2 <parse_stream_uri+0x112>
    2b66:	48 8d 35 dc 50 02 00 	lea    0x250dc(%rip),%rsi        # 27c49 <section_rodata+0x49>
    2b6d:	ba 03 00 00 00       	mov    $0x3,%edx
    2b72:	4c 89 e7             	mov    %r12,%rdi
    2b75:	e8 16 2b 01 00       	callq  15690 <memcmp>
    2b7a:	85 c0                	test   %eax,%eax
    2b7c:	0f 85 c1 00 00 00    	jne    2c43 <parse_stream_uri+0x183>
    2b82:	48 8d 05 57 7d 22 00 	lea    0x227d57(%rip),%rax        # 22a8e0 <dir_ops>
    2b89:	48 83 c3 01          	add    $0x1,%rbx
    2b8d:	4d 85 ff             	test   %r15,%r15
    2b90:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    2b94:	74 03                	je     2b99 <parse_stream_uri+0xd9>
    2b96:	4d 89 27             	mov    %r12,(%r15)
    2b99:	4d 85 f6             	test   %r14,%r14
    2b9c:	0f 84 9a 00 00 00    	je     2c3c <parse_stream_uri+0x17c>
    2ba2:	49 89 06             	mov    %rax,(%r14)
    2ba5:	31 c0                	xor    %eax,%eax
    2ba7:	48 83 c4 08          	add    $0x8,%rsp
    2bab:	5b                   	pop    %rbx
    2bac:	41 5c                	pop    %r12
    2bae:	41 5d                	pop    %r13
    2bb0:	41 5e                	pop    %r14
    2bb2:	41 5f                	pop    %r15
    2bb4:	5d                   	pop    %rbp
    2bb5:	c3                   	retq   
    2bb6:	48 8d 35 ae 50 02 00 	lea    0x250ae(%rip),%rsi        # 27c6b <section_rodata+0x6b>
    2bbd:	ba 07 00 00 00       	mov    $0x7,%edx
    2bc2:	4c 89 e7             	mov    %r12,%rdi
    2bc5:	e8 c6 2a 01 00       	callq  15690 <memcmp>
    2bca:	85 c0                	test   %eax,%eax
    2bcc:	0f 84 12 01 00 00    	je     2ce4 <parse_stream_uri+0x224>
    2bd2:	48 83 c4 08          	add    $0x8,%rsp
    2bd6:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    2bdb:	5b                   	pop    %rbx
    2bdc:	41 5c                	pop    %r12
    2bde:	41 5d                	pop    %r13
    2be0:	41 5e                	pop    %r14
    2be2:	41 5f                	pop    %r15
    2be4:	5d                   	pop    %rbp
    2be5:	c3                   	retq   
    2be6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2bed:	00 00 00 
    2bf0:	48 8d 35 6c 50 02 00 	lea    0x2506c(%rip),%rsi        # 27c63 <section_rodata+0x63>
    2bf7:	ba 07 00 00 00       	mov    $0x7,%edx
    2bfc:	4c 89 e7             	mov    %r12,%rdi
    2bff:	e8 8c 2a 01 00       	callq  15690 <memcmp>
    2c04:	85 c0                	test   %eax,%eax
    2c06:	75 ae                	jne    2bb6 <parse_stream_uri+0xf6>
    2c08:	48 8d 05 71 82 22 00 	lea    0x228271(%rip),%rax        # 22ae80 <tcp_ops>
    2c0f:	e9 75 ff ff ff       	jmpq   2b89 <parse_stream_uri+0xc9>
    2c14:	0f 1f 40 00          	nopl   0x0(%rax)
    2c18:	48 8d 35 68 54 02 00 	lea    0x25468(%rip),%rsi        # 28087 <section_rodata+0x487>
    2c1f:	ba 04 00 00 00       	mov    $0x4,%edx
    2c24:	4c 89 e7             	mov    %r12,%rdi
    2c27:	e8 64 2a 01 00       	callq  15690 <memcmp>
    2c2c:	85 c0                	test   %eax,%eax
    2c2e:	75 70                	jne    2ca0 <parse_stream_uri+0x1e0>
    2c30:	48 8d 05 49 7d 22 00 	lea    0x227d49(%rip),%rax        # 22a980 <file_ops>
    2c37:	e9 4d ff ff ff       	jmpq   2b89 <parse_stream_uri+0xc9>
    2c3c:	31 c0                	xor    %eax,%eax
    2c3e:	e9 64 ff ff ff       	jmpq   2ba7 <parse_stream_uri+0xe7>
    2c43:	48 8d 35 03 50 02 00 	lea    0x25003(%rip),%rsi        # 27c4d <section_rodata+0x4d>
    2c4a:	ba 03 00 00 00       	mov    $0x3,%edx
    2c4f:	4c 89 e7             	mov    %r12,%rdi
    2c52:	e8 39 2a 01 00       	callq  15690 <memcmp>
    2c57:	85 c0                	test   %eax,%eax
    2c59:	74 ad                	je     2c08 <parse_stream_uri+0x148>
    2c5b:	48 8d 35 ef 4f 02 00 	lea    0x24fef(%rip),%rsi        # 27c51 <section_rodata+0x51>
    2c62:	ba 03 00 00 00       	mov    $0x3,%edx
    2c67:	4c 89 e7             	mov    %r12,%rdi
    2c6a:	e8 21 2a 01 00       	callq  15690 <memcmp>
    2c6f:	85 c0                	test   %eax,%eax
    2c71:	74 71                	je     2ce4 <parse_stream_uri+0x224>
    2c73:	48 8d 35 db 4f 02 00 	lea    0x24fdb(%rip),%rsi        # 27c55 <section_rodata+0x55>
    2c7a:	ba 03 00 00 00       	mov    $0x3,%edx
    2c7f:	4c 89 e7             	mov    %r12,%rdi
    2c82:	e8 09 2a 01 00       	callq  15690 <memcmp>
    2c87:	85 c0                	test   %eax,%eax
    2c89:	0f 85 43 ff ff ff    	jne    2bd2 <parse_stream_uri+0x112>
    2c8f:	48 8d 05 8a 7d 22 00 	lea    0x227d8a(%rip),%rax        # 22aa20 <dev_ops>
    2c96:	e9 ee fe ff ff       	jmpq   2b89 <parse_stream_uri+0xc9>
    2c9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2ca0:	48 8d 35 b2 4f 02 00 	lea    0x24fb2(%rip),%rsi        # 27c59 <section_rodata+0x59>
    2ca7:	ba 04 00 00 00       	mov    $0x4,%edx
    2cac:	4c 89 e7             	mov    %r12,%rdi
    2caf:	e8 dc 29 01 00       	callq  15690 <memcmp>
    2cb4:	85 c0                	test   %eax,%eax
    2cb6:	0f 84 99 fe ff ff    	je     2b55 <parse_stream_uri+0x95>
    2cbc:	48 8d 35 9b 4f 02 00 	lea    0x24f9b(%rip),%rsi        # 27c5e <section_rodata+0x5e>
    2cc3:	ba 04 00 00 00       	mov    $0x4,%edx
    2cc8:	4c 89 e7             	mov    %r12,%rdi
    2ccb:	e8 c0 29 01 00       	callq  15690 <memcmp>
    2cd0:	85 c0                	test   %eax,%eax
    2cd2:	0f 85 fa fe ff ff    	jne    2bd2 <parse_stream_uri+0x112>
    2cd8:	48 8d 05 21 85 22 00 	lea    0x228521(%rip),%rax        # 22b200 <gipc_ops>
    2cdf:	e9 a5 fe ff ff       	jmpq   2b89 <parse_stream_uri+0xc9>
    2ce4:	48 8d 05 f5 80 22 00 	lea    0x2280f5(%rip),%rax        # 22ade0 <udp_ops>
    2ceb:	e9 99 fe ff ff       	jmpq   2b89 <parse_stream_uri+0xc9>

0000000000002cf0 <DkStreamChangeName>:
    2cf0:	55                   	push   %rbp
    2cf1:	48 89 e5             	mov    %rsp,%rbp
    2cf4:	41 54                	push   %r12
    2cf6:	53                   	push   %rbx
    2cf7:	49 89 fc             	mov    %rdi,%r12
    2cfa:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    2cfe:	48 89 b5 78 ff ff ff 	mov    %rsi,-0x88(%rbp)
    2d05:	48 89 e0             	mov    %rsp,%rax
    2d08:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    2d0c:	48 89 e8             	mov    %rbp,%rax
    2d0f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    2d13:	48 89 d8             	mov    %rbx,%rax
    2d16:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    2d1a:	48 89 f0             	mov    %rsi,%rax
    2d1d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    2d21:	48 89 f8             	mov    %rdi,%rax
    2d24:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    2d28:	4c 89 e0             	mov    %r12,%rax
    2d2b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    2d2f:	4c 89 e8             	mov    %r13,%rax
    2d32:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2d36:	4c 89 f0             	mov    %r14,%rax
    2d39:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2d3d:	4c 89 f8             	mov    %r15,%rax
    2d40:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2d44:	48 8b 05 3d 78 22 00 	mov    0x22783d(%rip),%rax        # 22a588 <data_start+0xd0>
    2d4b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    2d4f:	48 8d 05 26 4f 02 00 	lea    0x24f26(%rip),%rax        # 27c7c <section_rodata+0x7c>
    2d56:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    2d5a:	90                   	nop
    2d5b:	48 83 bd 78 ff ff ff 	cmpq   $0x0,-0x88(%rbp)
    2d62:	00 
    2d63:	48 bb ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rbx
    2d6a:	de ad de 
    2d6d:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
    2d74:	00 
    2d75:	48 89 5d 90          	mov    %rbx,-0x70(%rbp)
    2d79:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
    2d80:	00 
    2d81:	74 18                	je     2d9b <DkStreamChangeName+0xab>
    2d83:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    2d87:	48 8d 75 88          	lea    -0x78(%rbp),%rsi
    2d8b:	48 8d bd 78 ff ff ff 	lea    -0x88(%rbp),%rdi
    2d92:	e8 29 fd ff ff       	callq  2ac0 <parse_stream_uri>
    2d97:	85 c0                	test   %eax,%eax
    2d99:	78 6d                	js     2e08 <DkStreamChangeName+0x118>
    2d9b:	49 63 04 24          	movslq (%r12),%rax
    2d9f:	8d 50 ff             	lea    -0x1(%rax),%edx
    2da2:	83 fa 10             	cmp    $0x10,%edx
    2da5:	77 30                	ja     2dd7 <DkStreamChangeName+0xe7>
    2da7:	48 8d 15 d2 78 22 00 	lea    0x2278d2(%rip),%rdx        # 22a680 <pal_handle_ops>
    2dae:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
    2db2:	48 85 c0             	test   %rax,%rax
    2db5:	74 20                	je     2dd7 <DkStreamChangeName+0xe7>
    2db7:	48 8b 88 88 00 00 00 	mov    0x88(%rax),%rcx
    2dbe:	48 85 c9             	test   %rcx,%rcx
    2dc1:	74 14                	je     2dd7 <DkStreamChangeName+0xe7>
    2dc3:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    2dc7:	48 39 c2             	cmp    %rax,%rdx
    2dca:	0f 95 c3             	setne  %bl
    2dcd:	48 85 d2             	test   %rdx,%rdx
    2dd0:	0f 95 c0             	setne  %al
    2dd3:	20 c3                	and    %al,%bl
    2dd5:	74 59                	je     2e30 <DkStreamChangeName+0x140>
    2dd7:	bf 03 00 00 00       	mov    $0x3,%edi
    2ddc:	e8 bf d8 00 00       	callq  106a0 <_DkRaiseFailure>
    2de1:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    2de5:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    2dec:	de ad de 
    2def:	48 39 c2             	cmp    %rax,%rdx
    2df2:	74 2c                	je     2e20 <DkStreamChangeName+0x130>
    2df4:	31 db                	xor    %ebx,%ebx
    2df6:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    2dfa:	89 d8                	mov    %ebx,%eax
    2dfc:	5b                   	pop    %rbx
    2dfd:	41 5c                	pop    %r12
    2dff:	5d                   	pop    %rbp
    2e00:	c3                   	retq   
    2e01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2e08:	f7 d8                	neg    %eax
    2e0a:	89 c7                	mov    %eax,%edi
    2e0c:	e8 8f d8 00 00       	callq  106a0 <_DkRaiseFailure>
    2e11:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    2e15:	48 39 d8             	cmp    %rbx,%rax
    2e18:	75 da                	jne    2df4 <DkStreamChangeName+0x104>
    2e1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2e20:	90                   	nop
    2e21:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    2e28:	00 
    2e29:	eb c9                	jmp    2df4 <DkStreamChangeName+0x104>
    2e2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2e30:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    2e37:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
    2e3b:	4c 89 e7             	mov    %r12,%rdi
    2e3e:	ff d1                	callq  *%rcx
    2e40:	85 c0                	test   %eax,%eax
    2e42:	78 2c                	js     2e70 <DkStreamChangeName+0x180>
    2e44:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    2e48:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    2e4f:	de ad de 
    2e52:	bb 01 00 00 00       	mov    $0x1,%ebx
    2e57:	48 39 c2             	cmp    %rax,%rdx
    2e5a:	75 9a                	jne    2df6 <DkStreamChangeName+0x106>
    2e5c:	90                   	nop
    2e5d:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    2e64:	00 
    2e65:	eb 8f                	jmp    2df6 <DkStreamChangeName+0x106>
    2e67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    2e6e:	00 00 
    2e70:	f7 d8                	neg    %eax
    2e72:	89 c7                	mov    %eax,%edi
    2e74:	e8 27 d8 00 00       	callq  106a0 <_DkRaiseFailure>
    2e79:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    2e7d:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    2e84:	de ad de 
    2e87:	48 39 c2             	cmp    %rax,%rdx
    2e8a:	0f 85 64 ff ff ff    	jne    2df4 <DkStreamChangeName+0x104>
    2e90:	eb ca                	jmp    2e5c <DkStreamChangeName+0x16c>
    2e92:	0f 1f 40 00          	nopl   0x0(%rax)
    2e96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2e9d:	00 00 00 

0000000000002ea0 <_DkStreamOpen>:
    2ea0:	55                   	push   %rbp
    2ea1:	48 89 e5             	mov    %rsp,%rbp
    2ea4:	41 57                	push   %r15
    2ea6:	41 56                	push   %r14
    2ea8:	41 55                	push   %r13
    2eaa:	41 54                	push   %r12
    2eac:	41 89 cd             	mov    %ecx,%r13d
    2eaf:	53                   	push   %rbx
    2eb0:	41 89 d4             	mov    %edx,%r12d
    2eb3:	48 89 fb             	mov    %rdi,%rbx
    2eb6:	45 89 c6             	mov    %r8d,%r14d
    2eb9:	45 89 cf             	mov    %r9d,%r15d
    2ebc:	48 83 ec 28          	sub    $0x28,%rsp
    2ec0:	48 85 f6             	test   %rsi,%rsi
    2ec3:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
    2ec7:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    2ece:	00 
    2ecf:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    2ed6:	00 
    2ed7:	74 2f                	je     2f08 <_DkStreamOpen+0x68>
    2ed9:	48 8d 05 00 b8 22 04 	lea    0x422b800(%rip),%rax        # 422e6e0 <pal_state>
    2ee0:	48 83 78 30 00       	cmpq   $0x0,0x30(%rax)
    2ee5:	74 21                	je     2f08 <_DkStreamOpen+0x68>
    2ee7:	8b 40 38             	mov    0x38(%rax),%eax
    2eea:	a8 01                	test   $0x1,%al
    2eec:	74 09                	je     2ef7 <_DkStreamOpen+0x57>
    2eee:	80 3e 66             	cmpb   $0x66,(%rsi)
    2ef1:	0f 84 09 01 00 00    	je     3000 <_DkStreamOpen+0x160>
    2ef7:	a8 02                	test   $0x2,%al
    2ef9:	74 09                	je     2f04 <_DkStreamOpen+0x64>
    2efb:	80 3e 70             	cmpb   $0x70,(%rsi)
    2efe:	0f 84 dc 00 00 00    	je     2fe0 <_DkStreamOpen+0x140>
    2f04:	a8 04                	test   $0x4,%al
    2f06:	75 58                	jne    2f60 <_DkStreamOpen+0xc0>
    2f08:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    2f0c:	48 8d 75 c8          	lea    -0x38(%rbp),%rsi
    2f10:	48 8d 7d b8          	lea    -0x48(%rbp),%rdi
    2f14:	e8 a7 fb ff ff       	callq  2ac0 <parse_stream_uri>
    2f19:	85 c0                	test   %eax,%eax
    2f1b:	78 30                	js     2f4d <_DkStreamOpen+0xad>
    2f1d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2f21:	48 85 c0             	test   %rax,%rax
    2f24:	74 72                	je     2f98 <_DkStreamOpen+0xf8>
    2f26:	48 8b 40 10          	mov    0x10(%rax),%rax
    2f2a:	48 85 c0             	test   %rax,%rax
    2f2d:	74 69                	je     2f98 <_DkStreamOpen+0xf8>
    2f2f:	48 83 ec 08          	sub    $0x8,%rsp
    2f33:	44 89 e1             	mov    %r12d,%ecx
    2f36:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    2f3a:	41 57                	push   %r15
    2f3c:	45 89 f1             	mov    %r14d,%r9d
    2f3f:	45 89 e8             	mov    %r13d,%r8d
    2f42:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    2f46:	48 89 df             	mov    %rbx,%rdi
    2f49:	ff d0                	callq  *%rax
    2f4b:	5a                   	pop    %rdx
    2f4c:	59                   	pop    %rcx
    2f4d:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    2f51:	5b                   	pop    %rbx
    2f52:	41 5c                	pop    %r12
    2f54:	41 5d                	pop    %r13
    2f56:	41 5e                	pop    %r14
    2f58:	41 5f                	pop    %r15
    2f5a:	5d                   	pop    %rbp
    2f5b:	c3                   	retq   
    2f5c:	0f 1f 40 00          	nopl   0x0(%rax)
    2f60:	0f b6 06             	movzbl (%rsi),%eax
    2f63:	3c 74                	cmp    $0x74,%al
    2f65:	74 59                	je     2fc0 <_DkStreamOpen+0x120>
    2f67:	31 d2                	xor    %edx,%edx
    2f69:	3c 75                	cmp    $0x75,%al
    2f6b:	75 9b                	jne    2f08 <_DkStreamOpen+0x68>
    2f6d:	80 7e 01 64          	cmpb   $0x64,0x1(%rsi)
    2f71:	0f 84 a9 00 00 00    	je     3020 <_DkStreamOpen+0x180>
    2f77:	84 d2                	test   %dl,%dl
    2f79:	74 8d                	je     2f08 <_DkStreamOpen+0x68>
    2f7b:	48 8d 15 54 59 02 00 	lea    0x25954(%rip),%rdx        # 288d6 <__FUNCTION__.2860+0x43e>
    2f82:	bf 02 00 00 00       	mov    $0x2,%edi
    2f87:	31 c0                	xor    %eax,%eax
    2f89:	e8 62 36 00 00       	callq  65f0 <write_log>
    2f8e:	e9 75 ff ff ff       	jmpq   2f08 <_DkStreamOpen+0x68>
    2f93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2f98:	48 8d 3d 31 4e 02 00 	lea    0x24e31(%rip),%rdi        # 27dd0 <section_rodata+0x1d0>
    2f9f:	31 c0                	xor    %eax,%eax
    2fa1:	31 d2                	xor    %edx,%edx
    2fa3:	be 9a 00 00 00       	mov    $0x9a,%esi
    2fa8:	e8 a3 41 00 00       	callq  7150 <warn>
    2fad:	e8 8e 41 00 00       	callq  7140 <__abort>
    2fb2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2fb6:	48 8b 40 10          	mov    0x10(%rax),%rax
    2fba:	e9 70 ff ff ff       	jmpq   2f2f <_DkStreamOpen+0x8f>
    2fbf:	90                   	nop
    2fc0:	80 7e 01 63          	cmpb   $0x63,0x1(%rsi)
    2fc4:	0f 85 3e ff ff ff    	jne    2f08 <_DkStreamOpen+0x68>
    2fca:	80 7e 02 70          	cmpb   $0x70,0x2(%rsi)
    2fce:	0f 85 34 ff ff ff    	jne    2f08 <_DkStreamOpen+0x68>
    2fd4:	eb a5                	jmp    2f7b <_DkStreamOpen+0xdb>
    2fd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2fdd:	00 00 00 
    2fe0:	80 7e 01 69          	cmpb   $0x69,0x1(%rsi)
    2fe4:	0f 85 1e ff ff ff    	jne    2f08 <_DkStreamOpen+0x68>
    2fea:	80 7e 02 70          	cmpb   $0x70,0x2(%rsi)
    2fee:	0f 85 14 ff ff ff    	jne    2f08 <_DkStreamOpen+0x68>
    2ff4:	80 7e 03 65          	cmpb   $0x65,0x3(%rsi)
    2ff8:	0f 94 c2             	sete   %dl
    2ffb:	e9 77 ff ff ff       	jmpq   2f77 <_DkStreamOpen+0xd7>
    3000:	31 d2                	xor    %edx,%edx
    3002:	80 7e 01 69          	cmpb   $0x69,0x1(%rsi)
    3006:	74 28                	je     3030 <_DkStreamOpen+0x190>
    3008:	a8 04                	test   $0x4,%al
    300a:	0f 84 67 ff ff ff    	je     2f77 <_DkStreamOpen+0xd7>
    3010:	80 3e 75             	cmpb   $0x75,(%rsi)
    3013:	0f 85 5e ff ff ff    	jne    2f77 <_DkStreamOpen+0xd7>
    3019:	e9 4f ff ff ff       	jmpq   2f6d <_DkStreamOpen+0xcd>
    301e:	66 90                	xchg   %ax,%ax
    3020:	80 7e 02 70          	cmpb   $0x70,0x2(%rsi)
    3024:	0f 85 4d ff ff ff    	jne    2f77 <_DkStreamOpen+0xd7>
    302a:	e9 4c ff ff ff       	jmpq   2f7b <_DkStreamOpen+0xdb>
    302f:	90                   	nop
    3030:	80 7e 02 6c          	cmpb   $0x6c,0x2(%rsi)
    3034:	75 d2                	jne    3008 <_DkStreamOpen+0x168>
    3036:	80 7e 03 65          	cmpb   $0x65,0x3(%rsi)
    303a:	0f 94 c2             	sete   %dl
    303d:	eb c9                	jmp    3008 <_DkStreamOpen+0x168>
    303f:	90                   	nop

0000000000003040 <DkStreamOpen>:
    3040:	55                   	push   %rbp
    3041:	48 89 f8             	mov    %rdi,%rax
    3044:	48 89 e5             	mov    %rsp,%rbp
    3047:	53                   	push   %rbx
    3048:	48 83 ec 78          	sub    $0x78,%rsp
    304c:	48 89 e7             	mov    %rsp,%rdi
    304f:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    3053:	48 89 ef             	mov    %rbp,%rdi
    3056:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
    305a:	48 89 df             	mov    %rbx,%rdi
    305d:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    3061:	48 89 f7             	mov    %rsi,%rdi
    3064:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
    3068:	48 89 ff             	mov    %rdi,%rdi
    306b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    306f:	4c 89 e7             	mov    %r12,%rdi
    3072:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
    3076:	4c 89 ef             	mov    %r13,%rdi
    3079:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    307d:	4c 89 f7             	mov    %r14,%rdi
    3080:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
    3084:	4c 89 ff             	mov    %r15,%rdi
    3087:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    308b:	48 8b 3d de 74 22 00 	mov    0x2274de(%rip),%rdi        # 22a570 <data_start+0xb8>
    3092:	48 8d 1d f6 4b 02 00 	lea    0x24bf6(%rip),%rbx        # 27c8f <section_rodata+0x8f>
    3099:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    309d:	48 89 5d a0          	mov    %rbx,-0x60(%rbp)
    30a1:	90                   	nop
    30a2:	48 8d 7d 88          	lea    -0x78(%rbp),%rdi
    30a6:	45 89 c1             	mov    %r8d,%r9d
    30a9:	48 bb ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rbx
    30b0:	de ad de 
    30b3:	41 89 c8             	mov    %ecx,%r8d
    30b6:	89 d1                	mov    %edx,%ecx
    30b8:	89 f2                	mov    %esi,%edx
    30ba:	48 89 c6             	mov    %rax,%rsi
    30bd:	48 89 5d 90          	mov    %rbx,-0x70(%rbp)
    30c1:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
    30c8:	00 
    30c9:	e8 d2 fd ff ff       	callq  2ea0 <_DkStreamOpen>
    30ce:	85 c0                	test   %eax,%eax
    30d0:	78 7e                	js     3150 <DkStreamOpen+0x110>
    30d2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    30d6:	48 85 c0             	test   %rax,%rax
    30d9:	74 25                	je     3100 <DkStreamOpen+0xc0>
    30db:	8b 00                	mov    (%rax),%eax
    30dd:	85 c0                	test   %eax,%eax
    30df:	74 41                	je     3122 <DkStreamOpen+0xe2>
    30e1:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    30e5:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    30ec:	de ad de 
    30ef:	48 39 c2             	cmp    %rax,%rdx
    30f2:	74 4c                	je     3140 <DkStreamOpen+0x100>
    30f4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    30f8:	48 83 c4 78          	add    $0x78,%rsp
    30fc:	5b                   	pop    %rbx
    30fd:	5d                   	pop    %rbp
    30fe:	c3                   	retq   
    30ff:	90                   	nop
    3100:	48 8d 3d 09 4d 02 00 	lea    0x24d09(%rip),%rdi        # 27e10 <section_rodata+0x210>
    3107:	31 d2                	xor    %edx,%edx
    3109:	be af 00 00 00       	mov    $0xaf,%esi
    310e:	e8 3d 40 00 00       	callq  7150 <warn>
    3113:	e8 28 40 00 00       	callq  7140 <__abort>
    3118:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    311c:	8b 00                	mov    (%rax),%eax
    311e:	85 c0                	test   %eax,%eax
    3120:	75 bf                	jne    30e1 <DkStreamOpen+0xa1>
    3122:	48 8d 3d 1f 4d 02 00 	lea    0x24d1f(%rip),%rdi        # 27e48 <section_rodata+0x248>
    3129:	31 d2                	xor    %edx,%edx
    312b:	be b0 00 00 00       	mov    $0xb0,%esi
    3130:	31 c0                	xor    %eax,%eax
    3132:	e8 19 40 00 00       	callq  7150 <warn>
    3137:	e8 04 40 00 00       	callq  7140 <__abort>
    313c:	eb a3                	jmp    30e1 <DkStreamOpen+0xa1>
    313e:	66 90                	xchg   %ax,%ax
    3140:	90                   	nop
    3141:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    3148:	00 
    3149:	eb a9                	jmp    30f4 <DkStreamOpen+0xb4>
    314b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3150:	f7 d8                	neg    %eax
    3152:	89 c7                	mov    %eax,%edi
    3154:	e8 47 d5 00 00       	callq  106a0 <_DkRaiseFailure>
    3159:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    315d:	31 c0                	xor    %eax,%eax
    315f:	48 39 da             	cmp    %rbx,%rdx
    3162:	75 94                	jne    30f8 <DkStreamOpen+0xb8>
    3164:	90                   	nop
    3165:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    316c:	00 
    316d:	eb 89                	jmp    30f8 <DkStreamOpen+0xb8>
    316f:	90                   	nop

0000000000003170 <_DkStreamWaitForClient>:
    3170:	48 63 07             	movslq (%rdi),%rax
    3173:	55                   	push   %rbp
    3174:	48 89 e5             	mov    %rsp,%rbp
    3177:	8d 50 ff             	lea    -0x1(%rax),%edx
    317a:	83 fa 10             	cmp    $0x10,%edx
    317d:	77 21                	ja     31a0 <_DkStreamWaitForClient+0x30>
    317f:	48 8d 15 fa 74 22 00 	lea    0x2274fa(%rip),%rdx        # 22a680 <pal_handle_ops>
    3186:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
    318a:	48 85 c0             	test   %rax,%rax
    318d:	74 21                	je     31b0 <_DkStreamWaitForClient+0x40>
    318f:	48 8b 40 60          	mov    0x60(%rax),%rax
    3193:	48 85 c0             	test   %rax,%rax
    3196:	74 18                	je     31b0 <_DkStreamWaitForClient+0x40>
    3198:	5d                   	pop    %rbp
    3199:	ff e0                	jmpq   *%rax
    319b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    31a0:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    31a5:	5d                   	pop    %rbp
    31a6:	c3                   	retq   
    31a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    31ae:	00 00 
    31b0:	b8 eb ff ff ff       	mov    $0xffffffeb,%eax
    31b5:	5d                   	pop    %rbp
    31b6:	c3                   	retq   
    31b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    31be:	00 00 

00000000000031c0 <DkStreamWaitForClient>:
    31c0:	55                   	push   %rbp
    31c1:	48 89 e5             	mov    %rsp,%rbp
    31c4:	48 83 ec 70          	sub    $0x70,%rsp
    31c8:	48 89 e0             	mov    %rsp,%rax
    31cb:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    31cf:	48 89 e8             	mov    %rbp,%rax
    31d2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    31d6:	48 89 d8             	mov    %rbx,%rax
    31d9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    31dd:	48 89 f0             	mov    %rsi,%rax
    31e0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    31e4:	48 89 f8             	mov    %rdi,%rax
    31e7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    31eb:	4c 89 e0             	mov    %r12,%rax
    31ee:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    31f2:	4c 89 e8             	mov    %r13,%rax
    31f5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    31f9:	4c 89 f0             	mov    %r14,%rax
    31fc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3200:	4c 89 f8             	mov    %r15,%rax
    3203:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3207:	48 8b 05 ba 73 22 00 	mov    0x2273ba(%rip),%rax        # 22a5c8 <data_start+0x110>
    320e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    3212:	48 8d 05 83 4a 02 00 	lea    0x24a83(%rip),%rax        # 27c9c <section_rodata+0x9c>
    3219:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    321d:	90                   	nop
    321e:	48 8d 75 98          	lea    -0x68(%rbp),%rsi
    3222:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    3229:	de ad de 
    322c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    3230:	e8 3b ff ff ff       	callq  3170 <_DkStreamWaitForClient>
    3235:	85 c0                	test   %eax,%eax
    3237:	78 27                	js     3260 <DkStreamWaitForClient+0xa0>
    3239:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    323d:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    3244:	de ad de 
    3247:	48 39 c2             	cmp    %rax,%rdx
    324a:	75 09                	jne    3255 <DkStreamWaitForClient+0x95>
    324c:	90                   	nop
    324d:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    3254:	00 
    3255:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    3259:	c9                   	leaveq 
    325a:	c3                   	retq   
    325b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3260:	f7 d8                	neg    %eax
    3262:	89 c7                	mov    %eax,%edi
    3264:	e8 37 d4 00 00       	callq  106a0 <_DkRaiseFailure>
    3269:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    3270:	00 
    3271:	eb c6                	jmp    3239 <DkStreamWaitForClient+0x79>
    3273:	0f 1f 00             	nopl   (%rax)
    3276:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    327d:	00 00 00 

0000000000003280 <_DkStreamDelete>:
    3280:	48 63 07             	movslq (%rdi),%rax
    3283:	55                   	push   %rbp
    3284:	48 89 e5             	mov    %rsp,%rbp
    3287:	8d 50 ff             	lea    -0x1(%rax),%edx
    328a:	83 fa 10             	cmp    $0x10,%edx
    328d:	77 21                	ja     32b0 <_DkStreamDelete+0x30>
    328f:	48 8d 15 ea 73 22 00 	lea    0x2273ea(%rip),%rdx        # 22a680 <pal_handle_ops>
    3296:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
    329a:	48 85 c0             	test   %rax,%rax
    329d:	74 21                	je     32c0 <_DkStreamDelete+0x40>
    329f:	48 8b 40 40          	mov    0x40(%rax),%rax
    32a3:	48 85 c0             	test   %rax,%rax
    32a6:	74 18                	je     32c0 <_DkStreamDelete+0x40>
    32a8:	5d                   	pop    %rbp
    32a9:	ff e0                	jmpq   *%rax
    32ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    32b0:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    32b5:	5d                   	pop    %rbp
    32b6:	c3                   	retq   
    32b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    32be:	00 00 
    32c0:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    32c5:	5d                   	pop    %rbp
    32c6:	c3                   	retq   
    32c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    32ce:	00 00 

00000000000032d0 <DkStreamDelete>:
    32d0:	55                   	push   %rbp
    32d1:	48 89 e5             	mov    %rsp,%rbp
    32d4:	41 54                	push   %r12
    32d6:	53                   	push   %rbx
    32d7:	48 89 fb             	mov    %rdi,%rbx
    32da:	48 83 ec 70          	sub    $0x70,%rsp
    32de:	48 89 e0             	mov    %rsp,%rax
    32e1:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    32e5:	48 89 e8             	mov    %rbp,%rax
    32e8:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    32ec:	48 89 d8             	mov    %rbx,%rax
    32ef:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    32f3:	48 89 f0             	mov    %rsi,%rax
    32f6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    32fa:	48 89 f8             	mov    %rdi,%rax
    32fd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    3301:	4c 89 e0             	mov    %r12,%rax
    3304:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3308:	4c 89 e8             	mov    %r13,%rax
    330b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    330f:	4c 89 f0             	mov    %r14,%rax
    3312:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3316:	4c 89 f8             	mov    %r15,%rax
    3319:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    331d:	48 8b 05 2c 73 22 00 	mov    0x22732c(%rip),%rax        # 22a650 <data_start+0x198>
    3324:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    3328:	48 8d 05 83 49 02 00 	lea    0x24983(%rip),%rax        # 27cb2 <section_rodata+0xb2>
    332f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    3333:	90                   	nop
    3334:	49 bc ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%r12
    333b:	de ad de 
    333e:	48 85 ff             	test   %rdi,%rdi
    3341:	4c 89 65 90          	mov    %r12,-0x70(%rbp)
    3345:	74 49                	je     3390 <DkStreamDelete+0xc0>
    3347:	48 89 df             	mov    %rbx,%rdi
    334a:	e8 31 ff ff ff       	callq  3280 <_DkStreamDelete>
    334f:	85 c0                	test   %eax,%eax
    3351:	78 2d                	js     3380 <DkStreamDelete+0xb0>
    3353:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    3357:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    335e:	de ad de 
    3361:	48 39 c2             	cmp    %rax,%rdx
    3364:	75 09                	jne    336f <DkStreamDelete+0x9f>
    3366:	90                   	nop
    3367:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    336e:	00 
    336f:	48 83 c4 70          	add    $0x70,%rsp
    3373:	5b                   	pop    %rbx
    3374:	41 5c                	pop    %r12
    3376:	5d                   	pop    %rbp
    3377:	c3                   	retq   
    3378:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    337f:	00 
    3380:	f7 d8                	neg    %eax
    3382:	89 c7                	mov    %eax,%edi
    3384:	e8 17 d3 00 00       	callq  106a0 <_DkRaiseFailure>
    3389:	eb c8                	jmp    3353 <DkStreamDelete+0x83>
    338b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3390:	bf 04 00 00 00       	mov    $0x4,%edi
    3395:	89 75 8c             	mov    %esi,-0x74(%rbp)
    3398:	e8 03 d3 00 00       	callq  106a0 <_DkRaiseFailure>
    339d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    33a1:	8b 75 8c             	mov    -0x74(%rbp),%esi
    33a4:	4c 39 e0             	cmp    %r12,%rax
    33a7:	75 9e                	jne    3347 <DkStreamDelete+0x77>
    33a9:	90                   	nop
    33aa:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    33b1:	00 
    33b2:	eb 93                	jmp    3347 <DkStreamDelete+0x77>
    33b4:	66 90                	xchg   %ax,%ax
    33b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    33bd:	00 00 00 

00000000000033c0 <_DkStreamRead>:
    33c0:	48 63 07             	movslq (%rdi),%rax
    33c3:	55                   	push   %rbp
    33c4:	48 89 e5             	mov    %rsp,%rbp
    33c7:	44 8d 50 ff          	lea    -0x1(%rax),%r10d
    33cb:	41 83 fa 10          	cmp    $0x10,%r10d
    33cf:	77 4f                	ja     3420 <_DkStreamRead+0x60>
    33d1:	4c 8d 15 a8 72 22 00 	lea    0x2272a8(%rip),%r10        # 22a680 <pal_handle_ops>
    33d8:	49 8b 04 c2          	mov    (%r10,%rax,8),%rax
    33dc:	48 85 c0             	test   %rax,%rax
    33df:	74 5f                	je     3440 <_DkStreamRead+0x80>
    33e1:	48 85 d2             	test   %rdx,%rdx
    33e4:	74 4a                	je     3430 <_DkStreamRead+0x70>
    33e6:	4d 85 c0             	test   %r8,%r8
    33e9:	74 25                	je     3410 <_DkStreamRead+0x50>
    33eb:	48 8b 40 28          	mov    0x28(%rax),%rax
    33ef:	48 85 c0             	test   %rax,%rax
    33f2:	74 4c                	je     3440 <_DkStreamRead+0x80>
    33f4:	ff d0                	callq  *%rax
    33f6:	48 85 c0             	test   %rax,%rax
    33f9:	48 c7 c2 ec ff ff ff 	mov    $0xffffffffffffffec,%rdx
    3400:	48 0f 44 c2          	cmove  %rdx,%rax
    3404:	5d                   	pop    %rbp
    3405:	c3                   	retq   
    3406:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    340d:	00 00 00 
    3410:	48 8b 40 18          	mov    0x18(%rax),%rax
    3414:	48 85 c0             	test   %rax,%rax
    3417:	74 27                	je     3440 <_DkStreamRead+0x80>
    3419:	ff d0                	callq  *%rax
    341b:	eb d9                	jmp    33f6 <_DkStreamRead+0x36>
    341d:	0f 1f 00             	nopl   (%rax)
    3420:	48 c7 c0 f9 ff ff ff 	mov    $0xfffffffffffffff9,%rax
    3427:	5d                   	pop    %rbp
    3428:	c3                   	retq   
    3429:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3430:	48 c7 c0 e9 ff ff ff 	mov    $0xffffffffffffffe9,%rax
    3437:	5d                   	pop    %rbp
    3438:	c3                   	retq   
    3439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3440:	48 c7 c0 fd ff ff ff 	mov    $0xfffffffffffffffd,%rax
    3447:	5d                   	pop    %rbp
    3448:	c3                   	retq   
    3449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003450 <DkStreamRead>:
    3450:	55                   	push   %rbp
    3451:	48 89 e5             	mov    %rsp,%rbp
    3454:	48 83 ec 60          	sub    $0x60,%rsp
    3458:	48 89 e0             	mov    %rsp,%rax
    345b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    345f:	48 89 e8             	mov    %rbp,%rax
    3462:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    3466:	48 89 d8             	mov    %rbx,%rax
    3469:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    346d:	48 89 f0             	mov    %rsi,%rax
    3470:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3474:	48 89 f8             	mov    %rdi,%rax
    3477:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    347b:	4c 89 e0             	mov    %r12,%rax
    347e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3482:	4c 89 e8             	mov    %r13,%rax
    3485:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3489:	4c 89 f0             	mov    %r14,%rax
    348c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3490:	4c 89 f8             	mov    %r15,%rax
    3493:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3497:	48 8b 05 82 71 22 00 	mov    0x227182(%rip),%rax        # 22a620 <data_start+0x168>
    349e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    34a2:	48 8d 05 18 48 02 00 	lea    0x24818(%rip),%rax        # 27cc1 <section_rodata+0xc1>
    34a9:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    34ad:	90                   	nop
    34ae:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    34b5:	de ad de 
    34b8:	48 85 ff             	test   %rdi,%rdi
    34bb:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    34bf:	74 47                	je     3508 <DkStreamRead+0xb8>
    34c1:	48 85 c9             	test   %rcx,%rcx
    34c4:	74 42                	je     3508 <DkStreamRead+0xb8>
    34c6:	4d 85 c0             	test   %r8,%r8
    34c9:	b8 00 00 00 00       	mov    $0x0,%eax
    34ce:	41 0f 45 c1          	cmovne %r9d,%eax
    34d2:	4d 85 c9             	test   %r9,%r9
    34d5:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    34db:	4d 0f 44 c1          	cmove  %r9,%r8
    34df:	41 89 c1             	mov    %eax,%r9d
    34e2:	e8 d9 fe ff ff       	callq  33c0 <_DkStreamRead>
    34e7:	48 85 c0             	test   %rax,%rax
    34ea:	78 4c                	js     3538 <DkStreamRead+0xe8>
    34ec:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    34f0:	48 ba ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rdx
    34f7:	de ad de 
    34fa:	48 39 d1             	cmp    %rdx,%rcx
    34fd:	74 28                	je     3527 <DkStreamRead+0xd7>
    34ff:	c9                   	leaveq 
    3500:	c3                   	retq   
    3501:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3508:	bf fc ff ff ff       	mov    $0xfffffffc,%edi
    350d:	e8 8e d1 00 00       	callq  106a0 <_DkRaiseFailure>
    3512:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    3516:	48 ba ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rdx
    351d:	de ad de 
    3520:	31 c0                	xor    %eax,%eax
    3522:	48 39 d1             	cmp    %rdx,%rcx
    3525:	75 d8                	jne    34ff <DkStreamRead+0xaf>
    3527:	90                   	nop
    3528:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    352f:	00 
    3530:	c9                   	leaveq 
    3531:	c3                   	retq   
    3532:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3538:	89 c7                	mov    %eax,%edi
    353a:	f7 df                	neg    %edi
    353c:	e8 5f d1 00 00       	callq  106a0 <_DkRaiseFailure>
    3541:	31 c0                	xor    %eax,%eax
    3543:	eb a7                	jmp    34ec <DkStreamRead+0x9c>
    3545:	90                   	nop
    3546:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    354d:	00 00 00 

0000000000003550 <_DkStreamWrite>:
    3550:	48 63 07             	movslq (%rdi),%rax
    3553:	55                   	push   %rbp
    3554:	48 89 e5             	mov    %rsp,%rbp
    3557:	44 8d 50 ff          	lea    -0x1(%rax),%r10d
    355b:	41 83 fa 10          	cmp    $0x10,%r10d
    355f:	77 4f                	ja     35b0 <_DkStreamWrite+0x60>
    3561:	4c 8d 15 18 71 22 00 	lea    0x227118(%rip),%r10        # 22a680 <pal_handle_ops>
    3568:	49 8b 04 c2          	mov    (%r10,%rax,8),%rax
    356c:	48 85 c0             	test   %rax,%rax
    356f:	74 5f                	je     35d0 <_DkStreamWrite+0x80>
    3571:	48 85 d2             	test   %rdx,%rdx
    3574:	74 4a                	je     35c0 <_DkStreamWrite+0x70>
    3576:	4d 85 c0             	test   %r8,%r8
    3579:	74 25                	je     35a0 <_DkStreamWrite+0x50>
    357b:	48 8b 40 30          	mov    0x30(%rax),%rax
    357f:	48 85 c0             	test   %rax,%rax
    3582:	74 4c                	je     35d0 <_DkStreamWrite+0x80>
    3584:	ff d0                	callq  *%rax
    3586:	48 85 c0             	test   %rax,%rax
    3589:	48 c7 c2 ec ff ff ff 	mov    $0xffffffffffffffec,%rdx
    3590:	48 0f 44 c2          	cmove  %rdx,%rax
    3594:	5d                   	pop    %rbp
    3595:	c3                   	retq   
    3596:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    359d:	00 00 00 
    35a0:	48 8b 40 20          	mov    0x20(%rax),%rax
    35a4:	48 85 c0             	test   %rax,%rax
    35a7:	74 27                	je     35d0 <_DkStreamWrite+0x80>
    35a9:	ff d0                	callq  *%rax
    35ab:	eb d9                	jmp    3586 <_DkStreamWrite+0x36>
    35ad:	0f 1f 00             	nopl   (%rax)
    35b0:	48 c7 c0 f9 ff ff ff 	mov    $0xfffffffffffffff9,%rax
    35b7:	5d                   	pop    %rbp
    35b8:	c3                   	retq   
    35b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    35c0:	48 c7 c0 e9 ff ff ff 	mov    $0xffffffffffffffe9,%rax
    35c7:	5d                   	pop    %rbp
    35c8:	c3                   	retq   
    35c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    35d0:	48 c7 c0 fd ff ff ff 	mov    $0xfffffffffffffffd,%rax
    35d7:	5d                   	pop    %rbp
    35d8:	c3                   	retq   
    35d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000035e0 <DkStreamWrite>:
    35e0:	55                   	push   %rbp
    35e1:	48 89 e5             	mov    %rsp,%rbp
    35e4:	53                   	push   %rbx
    35e5:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    35ec:	48 89 e0             	mov    %rsp,%rax
    35ef:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    35f3:	48 89 e8             	mov    %rbp,%rax
    35f6:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    35fa:	48 89 d8             	mov    %rbx,%rax
    35fd:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    3601:	48 89 f0             	mov    %rsi,%rax
    3604:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    3608:	48 89 f8             	mov    %rdi,%rax
    360b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    360f:	4c 89 e0             	mov    %r12,%rax
    3612:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3616:	4c 89 e8             	mov    %r13,%rax
    3619:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    361d:	4c 89 f0             	mov    %r14,%rax
    3620:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3624:	4c 89 f8             	mov    %r15,%rax
    3627:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    362b:	48 8b 05 36 6f 22 00 	mov    0x226f36(%rip),%rax        # 22a568 <data_start+0xb0>
    3632:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    3636:	48 8d 05 91 46 02 00 	lea    0x24691(%rip),%rax        # 27cce <section_rodata+0xce>
    363d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    3641:	90                   	nop
    3642:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    3649:	de ad de 
    364c:	48 85 ff             	test   %rdi,%rdi
    364f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    3653:	74 7b                	je     36d0 <DkStreamWrite+0xf0>
    3655:	48 85 c9             	test   %rcx,%rcx
    3658:	74 76                	je     36d0 <DkStreamWrite+0xf0>
    365a:	45 31 c9             	xor    %r9d,%r9d
    365d:	4d 85 c0             	test   %r8,%r8
    3660:	48 89 fb             	mov    %rdi,%rbx
    3663:	74 37                	je     369c <DkStreamWrite+0xbc>
    3665:	4c 89 c7             	mov    %r8,%rdi
    3668:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
    366f:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    3676:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    367a:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
    367e:	e8 ed 1f 01 00       	callq  15670 <strlen>
    3683:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
    368a:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    3691:	41 89 c1             	mov    %eax,%r9d
    3694:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
    3698:	4c 8b 45 88          	mov    -0x78(%rbp),%r8
    369c:	48 89 df             	mov    %rbx,%rdi
    369f:	e8 ac fe ff ff       	callq  3550 <_DkStreamWrite>
    36a4:	48 85 c0             	test   %rax,%rax
    36a7:	78 5f                	js     3708 <DkStreamWrite+0x128>
    36a9:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    36ad:	48 ba ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rdx
    36b4:	de ad de 
    36b7:	48 39 d1             	cmp    %rdx,%rcx
    36ba:	74 33                	je     36ef <DkStreamWrite+0x10f>
    36bc:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    36c3:	5b                   	pop    %rbx
    36c4:	5d                   	pop    %rbp
    36c5:	c3                   	retq   
    36c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    36cd:	00 00 00 
    36d0:	bf 04 00 00 00       	mov    $0x4,%edi
    36d5:	e8 c6 cf 00 00       	callq  106a0 <_DkRaiseFailure>
    36da:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    36de:	48 ba ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rdx
    36e5:	de ad de 
    36e8:	31 c0                	xor    %eax,%eax
    36ea:	48 39 d1             	cmp    %rdx,%rcx
    36ed:	75 cd                	jne    36bc <DkStreamWrite+0xdc>
    36ef:	90                   	nop
    36f0:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    36f7:	00 
    36f8:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    36ff:	5b                   	pop    %rbx
    3700:	5d                   	pop    %rbp
    3701:	c3                   	retq   
    3702:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3708:	89 c7                	mov    %eax,%edi
    370a:	f7 df                	neg    %edi
    370c:	e8 8f cf 00 00       	callq  106a0 <_DkRaiseFailure>
    3711:	31 c0                	xor    %eax,%eax
    3713:	eb 94                	jmp    36a9 <DkStreamWrite+0xc9>
    3715:	90                   	nop
    3716:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    371d:	00 00 00 

0000000000003720 <_DkStreamAttributesQuery>:
    3720:	55                   	push   %rbp
    3721:	48 89 e5             	mov    %rsp,%rbp
    3724:	53                   	push   %rbx
    3725:	48 89 f3             	mov    %rsi,%rbx
    3728:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    372c:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi
    3730:	48 83 ec 28          	sub    $0x28,%rsp
    3734:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3738:	48 8d 7d d8          	lea    -0x28(%rbp),%rdi
    373c:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    3743:	00 
    3744:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    374b:	00 
    374c:	e8 6f f3 ff ff       	callq  2ac0 <parse_stream_uri>
    3751:	85 c0                	test   %eax,%eax
    3753:	78 1a                	js     376f <_DkStreamAttributesQuery+0x4f>
    3755:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3759:	48 8b 40 68          	mov    0x68(%rax),%rax
    375d:	48 85 c0             	test   %rax,%rax
    3760:	74 1e                	je     3780 <_DkStreamAttributesQuery+0x60>
    3762:	48 89 da             	mov    %rbx,%rdx
    3765:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    3769:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    376d:	ff d0                	callq  *%rax
    376f:	48 83 c4 28          	add    $0x28,%rsp
    3773:	5b                   	pop    %rbx
    3774:	5d                   	pop    %rbp
    3775:	c3                   	retq   
    3776:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    377d:	00 00 00 
    3780:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    3785:	eb e8                	jmp    376f <_DkStreamAttributesQuery+0x4f>
    3787:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    378e:	00 00 

0000000000003790 <DkStreamAttributesQuery>:
    3790:	55                   	push   %rbp
    3791:	48 89 e5             	mov    %rsp,%rbp
    3794:	41 56                	push   %r14
    3796:	41 55                	push   %r13
    3798:	41 54                	push   %r12
    379a:	53                   	push   %rbx
    379b:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    37a2:	48 89 e0             	mov    %rsp,%rax
    37a5:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    37a9:	48 89 e8             	mov    %rbp,%rax
    37ac:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    37b0:	48 89 d8             	mov    %rbx,%rax
    37b3:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    37b7:	48 89 f0             	mov    %rsi,%rax
    37ba:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    37be:	48 89 f8             	mov    %rdi,%rax
    37c1:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    37c5:	4c 89 e0             	mov    %r12,%rax
    37c8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    37cc:	4c 89 e8             	mov    %r13,%rax
    37cf:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    37d3:	4c 89 f0             	mov    %r14,%rax
    37d6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    37da:	4c 89 f8             	mov    %r15,%rax
    37dd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    37e1:	48 8b 05 f8 6d 22 00 	mov    0x226df8(%rip),%rax        # 22a5e0 <data_start+0x128>
    37e8:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    37ec:	48 8d 05 e9 44 02 00 	lea    0x244e9(%rip),%rax        # 27cdc <section_rodata+0xdc>
    37f3:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    37f7:	90                   	nop
    37f8:	48 85 ff             	test   %rdi,%rdi
    37fb:	49 bd ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%r13
    3802:	de ad de 
    3805:	0f 94 c3             	sete   %bl
    3808:	48 85 f6             	test   %rsi,%rsi
    380b:	4c 89 6d 80          	mov    %r13,-0x80(%rbp)
    380f:	0f 94 c0             	sete   %al
    3812:	08 c3                	or     %al,%bl
    3814:	0f 85 96 00 00 00    	jne    38b0 <DkStreamAttributesQuery+0x120>
    381a:	48 8d 05 bf ae 22 04 	lea    0x422aebf(%rip),%rax        # 422e6e0 <pal_state>
    3821:	49 89 fc             	mov    %rdi,%r12
    3824:	49 89 f6             	mov    %rsi,%r14
    3827:	48 83 78 30 00       	cmpq   $0x0,0x30(%rax)
    382c:	74 32                	je     3860 <DkStreamAttributesQuery+0xd0>
    382e:	8b 40 38             	mov    0x38(%rax),%eax
    3831:	a8 01                	test   $0x1,%al
    3833:	74 09                	je     383e <DkStreamAttributesQuery+0xae>
    3835:	80 3f 66             	cmpb   $0x66,(%rdi)
    3838:	0f 84 0a 01 00 00    	je     3948 <DkStreamAttributesQuery+0x1b8>
    383e:	a8 02                	test   $0x2,%al
    3840:	0f 84 9a 00 00 00    	je     38e0 <DkStreamAttributesQuery+0x150>
    3846:	41 80 3c 24 70       	cmpb   $0x70,(%r12)
    384b:	0f 85 8f 00 00 00    	jne    38e0 <DkStreamAttributesQuery+0x150>
    3851:	41 80 7c 24 01 69    	cmpb   $0x69,0x1(%r12)
    3857:	0f 84 5b 01 00 00    	je     39b8 <DkStreamAttributesQuery+0x228>
    385d:	0f 1f 00             	nopl   (%rax)
    3860:	4c 8d ad 30 ff ff ff 	lea    -0xd0(%rbp),%r13
    3867:	4c 89 e7             	mov    %r12,%rdi
    386a:	4c 89 ee             	mov    %r13,%rsi
    386d:	e8 ae fe ff ff       	callq  3720 <_DkStreamAttributesQuery>
    3872:	85 c0                	test   %eax,%eax
    3874:	0f 88 a6 00 00 00    	js     3920 <DkStreamAttributesQuery+0x190>
    387a:	ba 48 00 00 00       	mov    $0x48,%edx
    387f:	4c 89 ee             	mov    %r13,%rsi
    3882:	4c 89 f7             	mov    %r14,%rdi
    3885:	e8 66 23 01 00       	callq  15bf0 <memcpy>
    388a:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    388e:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    3895:	de ad de 
    3898:	bb 01 00 00 00       	mov    $0x1,%ebx
    389d:	48 39 c2             	cmp    %rax,%rdx
    38a0:	75 23                	jne    38c5 <DkStreamAttributesQuery+0x135>
    38a2:	90                   	nop
    38a3:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
    38aa:	00 
    38ab:	eb 18                	jmp    38c5 <DkStreamAttributesQuery+0x135>
    38ad:	0f 1f 00             	nopl   (%rax)
    38b0:	bf 04 00 00 00       	mov    $0x4,%edi
    38b5:	e8 e6 cd 00 00       	callq  106a0 <_DkRaiseFailure>
    38ba:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    38be:	4c 39 e8             	cmp    %r13,%rax
    38c1:	74 4d                	je     3910 <DkStreamAttributesQuery+0x180>
    38c3:	31 db                	xor    %ebx,%ebx
    38c5:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
    38cc:	89 d8                	mov    %ebx,%eax
    38ce:	5b                   	pop    %rbx
    38cf:	41 5c                	pop    %r12
    38d1:	41 5d                	pop    %r13
    38d3:	41 5e                	pop    %r14
    38d5:	5d                   	pop    %rbp
    38d6:	c3                   	retq   
    38d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    38de:	00 00 
    38e0:	a8 04                	test   $0x4,%al
    38e2:	0f 84 78 ff ff ff    	je     3860 <DkStreamAttributesQuery+0xd0>
    38e8:	41 0f b6 04 24       	movzbl (%r12),%eax
    38ed:	3c 74                	cmp    $0x74,%al
    38ef:	0f 85 8b 00 00 00    	jne    3980 <DkStreamAttributesQuery+0x1f0>
    38f5:	41 80 7c 24 01 63    	cmpb   $0x63,0x1(%r12)
    38fb:	0f 85 5f ff ff ff    	jne    3860 <DkStreamAttributesQuery+0xd0>
    3901:	41 80 7c 24 02 70    	cmpb   $0x70,0x2(%r12)
    3907:	0f 85 53 ff ff ff    	jne    3860 <DkStreamAttributesQuery+0xd0>
    390d:	eb 54                	jmp    3963 <DkStreamAttributesQuery+0x1d3>
    390f:	90                   	nop
    3910:	90                   	nop
    3911:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
    3918:	00 
    3919:	eb a8                	jmp    38c3 <DkStreamAttributesQuery+0x133>
    391b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3920:	f7 d8                	neg    %eax
    3922:	89 c7                	mov    %eax,%edi
    3924:	e8 77 cd 00 00       	callq  106a0 <_DkRaiseFailure>
    3929:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    392d:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    3934:	de ad de 
    3937:	48 39 c2             	cmp    %rax,%rdx
    393a:	75 87                	jne    38c3 <DkStreamAttributesQuery+0x133>
    393c:	e9 61 ff ff ff       	jmpq   38a2 <DkStreamAttributesQuery+0x112>
    3941:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3948:	31 d2                	xor    %edx,%edx
    394a:	80 7f 01 69          	cmpb   $0x69,0x1(%rdi)
    394e:	74 50                	je     39a0 <DkStreamAttributesQuery+0x210>
    3950:	a8 04                	test   $0x4,%al
    3952:	74 07                	je     395b <DkStreamAttributesQuery+0x1cb>
    3954:	41 80 3c 24 75       	cmpb   $0x75,(%r12)
    3959:	74 2f                	je     398a <DkStreamAttributesQuery+0x1fa>
    395b:	84 d2                	test   %dl,%dl
    395d:	0f 84 fd fe ff ff    	je     3860 <DkStreamAttributesQuery+0xd0>
    3963:	48 8d 15 6c 4f 02 00 	lea    0x24f6c(%rip),%rdx        # 288d6 <__FUNCTION__.2860+0x43e>
    396a:	4c 89 e6             	mov    %r12,%rsi
    396d:	bf 02 00 00 00       	mov    $0x2,%edi
    3972:	31 c0                	xor    %eax,%eax
    3974:	e8 77 2c 00 00       	callq  65f0 <write_log>
    3979:	e9 e2 fe ff ff       	jmpq   3860 <DkStreamAttributesQuery+0xd0>
    397e:	66 90                	xchg   %ax,%ax
    3980:	31 d2                	xor    %edx,%edx
    3982:	3c 75                	cmp    $0x75,%al
    3984:	0f 85 d6 fe ff ff    	jne    3860 <DkStreamAttributesQuery+0xd0>
    398a:	41 80 7c 24 01 64    	cmpb   $0x64,0x1(%r12)
    3990:	75 c9                	jne    395b <DkStreamAttributesQuery+0x1cb>
    3992:	41 80 7c 24 02 70    	cmpb   $0x70,0x2(%r12)
    3998:	75 c1                	jne    395b <DkStreamAttributesQuery+0x1cb>
    399a:	eb c7                	jmp    3963 <DkStreamAttributesQuery+0x1d3>
    399c:	0f 1f 40 00          	nopl   0x0(%rax)
    39a0:	80 7f 02 6c          	cmpb   $0x6c,0x2(%rdi)
    39a4:	89 da                	mov    %ebx,%edx
    39a6:	75 a8                	jne    3950 <DkStreamAttributesQuery+0x1c0>
    39a8:	80 7f 03 65          	cmpb   $0x65,0x3(%rdi)
    39ac:	0f 94 c2             	sete   %dl
    39af:	eb 9f                	jmp    3950 <DkStreamAttributesQuery+0x1c0>
    39b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    39b8:	41 80 7c 24 02 70    	cmpb   $0x70,0x2(%r12)
    39be:	0f 85 9c fe ff ff    	jne    3860 <DkStreamAttributesQuery+0xd0>
    39c4:	41 80 7c 24 03 65    	cmpb   $0x65,0x3(%r12)
    39ca:	0f 94 c2             	sete   %dl
    39cd:	eb 8c                	jmp    395b <DkStreamAttributesQuery+0x1cb>
    39cf:	90                   	nop

00000000000039d0 <_DkStreamAttributesQuerybyHandle>:
    39d0:	48 63 07             	movslq (%rdi),%rax
    39d3:	8d 50 ff             	lea    -0x1(%rax),%edx
    39d6:	83 fa 10             	cmp    $0x10,%edx
    39d9:	77 5d                	ja     3a38 <_DkStreamAttributesQuerybyHandle+0x68>
    39db:	55                   	push   %rbp
    39dc:	48 89 e5             	mov    %rsp,%rbp
    39df:	41 55                	push   %r13
    39e1:	41 54                	push   %r12
    39e3:	53                   	push   %rbx
    39e4:	49 89 f4             	mov    %rsi,%r12
    39e7:	48 89 fb             	mov    %rdi,%rbx
    39ea:	48 83 ec 08          	sub    $0x8,%rsp
    39ee:	48 8d 15 8b 6c 22 00 	lea    0x226c8b(%rip),%rdx        # 22a680 <pal_handle_ops>
    39f5:	4c 8b 2c c2          	mov    (%rdx,%rax,8),%r13
    39f9:	4d 85 ed             	test   %r13,%r13
    39fc:	74 1b                	je     3a19 <_DkStreamAttributesQuerybyHandle+0x49>
    39fe:	49 8b 45 70          	mov    0x70(%r13),%rax
    3a02:	48 85 c0             	test   %rax,%rax
    3a05:	74 39                	je     3a40 <_DkStreamAttributesQuerybyHandle+0x70>
    3a07:	48 83 c4 08          	add    $0x8,%rsp
    3a0b:	4c 89 e6             	mov    %r12,%rsi
    3a0e:	48 89 df             	mov    %rbx,%rdi
    3a11:	5b                   	pop    %rbx
    3a12:	41 5c                	pop    %r12
    3a14:	41 5d                	pop    %r13
    3a16:	5d                   	pop    %rbp
    3a17:	ff e0                	jmpq   *%rax
    3a19:	48 8d 3d 10 43 02 00 	lea    0x24310(%rip),%rdi        # 27d30 <section_rodata+0x130>
    3a20:	31 d2                	xor    %edx,%edx
    3a22:	be a7 01 00 00       	mov    $0x1a7,%esi
    3a27:	31 c0                	xor    %eax,%eax
    3a29:	e8 22 37 00 00       	callq  7150 <warn>
    3a2e:	e8 0d 37 00 00       	callq  7140 <__abort>
    3a33:	eb c9                	jmp    39fe <_DkStreamAttributesQuerybyHandle+0x2e>
    3a35:	0f 1f 00             	nopl   (%rax)
    3a38:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    3a3d:	c3                   	retq   
    3a3e:	66 90                	xchg   %ax,%ax
    3a40:	48 83 c4 08          	add    $0x8,%rsp
    3a44:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    3a49:	5b                   	pop    %rbx
    3a4a:	41 5c                	pop    %r12
    3a4c:	41 5d                	pop    %r13
    3a4e:	5d                   	pop    %rbp
    3a4f:	c3                   	retq   

0000000000003a50 <DkStreamAttributesQuerybyHandle>:
    3a50:	55                   	push   %rbp
    3a51:	48 89 e5             	mov    %rsp,%rbp
    3a54:	41 54                	push   %r12
    3a56:	53                   	push   %rbx
    3a57:	48 83 ec 60          	sub    $0x60,%rsp
    3a5b:	48 89 e0             	mov    %rsp,%rax
    3a5e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    3a62:	48 89 e8             	mov    %rbp,%rax
    3a65:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    3a69:	48 89 d8             	mov    %rbx,%rax
    3a6c:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    3a70:	48 89 f0             	mov    %rsi,%rax
    3a73:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    3a77:	48 89 f8             	mov    %rdi,%rax
    3a7a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    3a7e:	4c 89 e0             	mov    %r12,%rax
    3a81:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3a85:	4c 89 e8             	mov    %r13,%rax
    3a88:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3a8c:	4c 89 f0             	mov    %r14,%rax
    3a8f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3a93:	4c 89 f8             	mov    %r15,%rax
    3a96:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3a9a:	48 8b 05 2f 6a 22 00 	mov    0x226a2f(%rip),%rax        # 22a4d0 <data_start+0x18>
    3aa1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    3aa5:	48 8d 05 dc 43 02 00 	lea    0x243dc(%rip),%rax        # 27e88 <section_rodata+0x288>
    3aac:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    3ab0:	90                   	nop
    3ab1:	48 85 ff             	test   %rdi,%rdi
    3ab4:	49 bc ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%r12
    3abb:	de ad de 
    3abe:	0f 94 c3             	sete   %bl
    3ac1:	48 85 f6             	test   %rsi,%rsi
    3ac4:	4c 89 65 90          	mov    %r12,-0x70(%rbp)
    3ac8:	0f 94 c0             	sete   %al
    3acb:	08 c3                	or     %al,%bl
    3acd:	74 21                	je     3af0 <DkStreamAttributesQuerybyHandle+0xa0>
    3acf:	bf 04 00 00 00       	mov    $0x4,%edi
    3ad4:	e8 c7 cb 00 00       	callq  106a0 <_DkRaiseFailure>
    3ad9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    3add:	4c 39 e0             	cmp    %r12,%rax
    3ae0:	74 3e                	je     3b20 <DkStreamAttributesQuerybyHandle+0xd0>
    3ae2:	31 db                	xor    %ebx,%ebx
    3ae4:	48 83 c4 60          	add    $0x60,%rsp
    3ae8:	89 d8                	mov    %ebx,%eax
    3aea:	5b                   	pop    %rbx
    3aeb:	41 5c                	pop    %r12
    3aed:	5d                   	pop    %rbp
    3aee:	c3                   	retq   
    3aef:	90                   	nop
    3af0:	e8 db fe ff ff       	callq  39d0 <_DkStreamAttributesQuerybyHandle>
    3af5:	85 c0                	test   %eax,%eax
    3af7:	78 37                	js     3b30 <DkStreamAttributesQuerybyHandle+0xe0>
    3af9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    3afd:	bb 01 00 00 00       	mov    $0x1,%ebx
    3b02:	4c 39 e0             	cmp    %r12,%rax
    3b05:	75 dd                	jne    3ae4 <DkStreamAttributesQuerybyHandle+0x94>
    3b07:	90                   	nop
    3b08:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    3b0f:	00 
    3b10:	48 83 c4 60          	add    $0x60,%rsp
    3b14:	89 d8                	mov    %ebx,%eax
    3b16:	5b                   	pop    %rbx
    3b17:	41 5c                	pop    %r12
    3b19:	5d                   	pop    %rbp
    3b1a:	c3                   	retq   
    3b1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3b20:	90                   	nop
    3b21:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    3b28:	00 
    3b29:	eb b7                	jmp    3ae2 <DkStreamAttributesQuerybyHandle+0x92>
    3b2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3b30:	f7 d8                	neg    %eax
    3b32:	89 c7                	mov    %eax,%edi
    3b34:	e8 67 cb 00 00       	callq  106a0 <_DkRaiseFailure>
    3b39:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    3b3d:	4c 39 e0             	cmp    %r12,%rax
    3b40:	75 a0                	jne    3ae2 <DkStreamAttributesQuerybyHandle+0x92>
    3b42:	eb c3                	jmp    3b07 <DkStreamAttributesQuerybyHandle+0xb7>
    3b44:	66 90                	xchg   %ax,%ax
    3b46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3b4d:	00 00 00 

0000000000003b50 <_DkStreamGetName>:
    3b50:	55                   	push   %rbp
    3b51:	48 89 e5             	mov    %rsp,%rbp
    3b54:	41 56                	push   %r14
    3b56:	41 55                	push   %r13
    3b58:	41 54                	push   %r12
    3b5a:	53                   	push   %rbx
    3b5b:	89 d3                	mov    %edx,%ebx
    3b5d:	48 63 07             	movslq (%rdi),%rax
    3b60:	49 89 fd             	mov    %rdi,%r13
    3b63:	49 89 f4             	mov    %rsi,%r12
    3b66:	8d 50 ff             	lea    -0x1(%rax),%edx
    3b69:	83 fa 10             	cmp    $0x10,%edx
    3b6c:	77 42                	ja     3bb0 <_DkStreamGetName+0x60>
    3b6e:	48 8d 15 0b 6b 22 00 	lea    0x226b0b(%rip),%rdx        # 22a680 <pal_handle_ops>
    3b75:	4c 8b 34 c2          	mov    (%rdx,%rax,8),%r14
    3b79:	4d 85 f6             	test   %r14,%r14
    3b7c:	74 35                	je     3bb3 <_DkStreamGetName+0x63>
    3b7e:	49 8b 46 08          	mov    0x8(%r14),%rax
    3b82:	48 85 c0             	test   %rax,%rax
    3b85:	74 49                	je     3bd0 <_DkStreamGetName+0x80>
    3b87:	8d 53 ff             	lea    -0x1(%rbx),%edx
    3b8a:	4c 89 e6             	mov    %r12,%rsi
    3b8d:	4c 89 ef             	mov    %r13,%rdi
    3b90:	ff d0                	callq  *%rax
    3b92:	85 c0                	test   %eax,%eax
    3b94:	78 08                	js     3b9e <_DkStreamGetName+0x4e>
    3b96:	48 63 d0             	movslq %eax,%rdx
    3b99:	41 c6 04 14 00       	movb   $0x0,(%r12,%rdx,1)
    3b9e:	5b                   	pop    %rbx
    3b9f:	41 5c                	pop    %r12
    3ba1:	41 5d                	pop    %r13
    3ba3:	41 5e                	pop    %r14
    3ba5:	5d                   	pop    %rbp
    3ba6:	c3                   	retq   
    3ba7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3bae:	00 00 
    3bb0:	45 31 f6             	xor    %r14d,%r14d
    3bb3:	48 8d 3d 76 41 02 00 	lea    0x24176(%rip),%rdi        # 27d30 <section_rodata+0x130>
    3bba:	31 d2                	xor    %edx,%edx
    3bbc:	be ef 01 00 00       	mov    $0x1ef,%esi
    3bc1:	31 c0                	xor    %eax,%eax
    3bc3:	e8 88 35 00 00       	callq  7150 <warn>
    3bc8:	e8 73 35 00 00       	callq  7140 <__abort>
    3bcd:	eb af                	jmp    3b7e <_DkStreamGetName+0x2e>
    3bcf:	90                   	nop
    3bd0:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    3bd5:	eb c7                	jmp    3b9e <_DkStreamGetName+0x4e>
    3bd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3bde:	00 00 

0000000000003be0 <DkStreamGetName>:
    3be0:	55                   	push   %rbp
    3be1:	48 89 e5             	mov    %rsp,%rbp
    3be4:	53                   	push   %rbx
    3be5:	48 83 ec 68          	sub    $0x68,%rsp
    3be9:	48 89 e0             	mov    %rsp,%rax
    3bec:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    3bf0:	48 89 e8             	mov    %rbp,%rax
    3bf3:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    3bf7:	48 89 d8             	mov    %rbx,%rax
    3bfa:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    3bfe:	48 89 f0             	mov    %rsi,%rax
    3c01:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    3c05:	48 89 f8             	mov    %rdi,%rax
    3c08:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    3c0c:	4c 89 e0             	mov    %r12,%rax
    3c0f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3c13:	4c 89 e8             	mov    %r13,%rax
    3c16:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3c1a:	4c 89 f0             	mov    %r14,%rax
    3c1d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3c21:	4c 89 f8             	mov    %r15,%rax
    3c24:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3c28:	48 8b 05 11 69 22 00 	mov    0x226911(%rip),%rax        # 22a540 <data_start+0x88>
    3c2f:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    3c33:	48 8d 05 ba 40 02 00 	lea    0x240ba(%rip),%rax        # 27cf4 <section_rodata+0xf4>
    3c3a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    3c3e:	90                   	nop
    3c3f:	48 85 f6             	test   %rsi,%rsi
    3c42:	48 bb ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rbx
    3c49:	de ad de 
    3c4c:	0f 94 c1             	sete   %cl
    3c4f:	48 85 d2             	test   %rdx,%rdx
    3c52:	48 89 5d 90          	mov    %rbx,-0x70(%rbp)
    3c56:	0f 94 c0             	sete   %al
    3c59:	08 c1                	or     %al,%cl
    3c5b:	75 3b                	jne    3c98 <DkStreamGetName+0xb8>
    3c5d:	48 85 ff             	test   %rdi,%rdi
    3c60:	74 36                	je     3c98 <DkStreamGetName+0xb8>
    3c62:	8b 07                	mov    (%rdi),%eax
    3c64:	83 e8 01             	sub    $0x1,%eax
    3c67:	83 f8 10             	cmp    $0x10,%eax
    3c6a:	77 54                	ja     3cc0 <DkStreamGetName+0xe0>
    3c6c:	e8 df fe ff ff       	callq  3b50 <_DkStreamGetName>
    3c71:	85 c0                	test   %eax,%eax
    3c73:	78 6b                	js     3ce0 <DkStreamGetName+0x100>
    3c75:	48 98                	cltq   
    3c77:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    3c7b:	48 ba ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rdx
    3c82:	de ad de 
    3c85:	48 39 d1             	cmp    %rdx,%rcx
    3c88:	75 2d                	jne    3cb7 <DkStreamGetName+0xd7>
    3c8a:	90                   	nop
    3c8b:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    3c92:	00 
    3c93:	eb 22                	jmp    3cb7 <DkStreamGetName+0xd7>
    3c95:	0f 1f 00             	nopl   (%rax)
    3c98:	bf 04 00 00 00       	mov    $0x4,%edi
    3c9d:	e8 fe c9 00 00       	callq  106a0 <_DkRaiseFailure>
    3ca2:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    3ca6:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    3cad:	de ad de 
    3cb0:	48 39 c2             	cmp    %rax,%rdx
    3cb3:	74 1e                	je     3cd3 <DkStreamGetName+0xf3>
    3cb5:	31 c0                	xor    %eax,%eax
    3cb7:	48 83 c4 68          	add    $0x68,%rsp
    3cbb:	5b                   	pop    %rbx
    3cbc:	5d                   	pop    %rbp
    3cbd:	c3                   	retq   
    3cbe:	66 90                	xchg   %ax,%ax
    3cc0:	bf 07 00 00 00       	mov    $0x7,%edi
    3cc5:	e8 d6 c9 00 00       	callq  106a0 <_DkRaiseFailure>
    3cca:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    3cce:	48 39 d8             	cmp    %rbx,%rax
    3cd1:	75 e2                	jne    3cb5 <DkStreamGetName+0xd5>
    3cd3:	90                   	nop
    3cd4:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    3cdb:	00 
    3cdc:	eb d7                	jmp    3cb5 <DkStreamGetName+0xd5>
    3cde:	66 90                	xchg   %ax,%ax
    3ce0:	f7 d8                	neg    %eax
    3ce2:	89 c7                	mov    %eax,%edi
    3ce4:	e8 b7 c9 00 00       	callq  106a0 <_DkRaiseFailure>
    3ce9:	31 c0                	xor    %eax,%eax
    3ceb:	eb 8a                	jmp    3c77 <DkStreamGetName+0x97>
    3ced:	0f 1f 00             	nopl   (%rax)

0000000000003cf0 <_DkStreamMap>:
    3cf0:	55                   	push   %rbp
    3cf1:	48 89 e5             	mov    %rsp,%rbp
    3cf4:	53                   	push   %rbx
    3cf5:	48 83 ec 18          	sub    $0x18,%rsp
    3cf9:	4c 63 0f             	movslq (%rdi),%r9
    3cfc:	48 8b 06             	mov    (%rsi),%rax
    3cff:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3d03:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    3d08:	45 8d 51 ff          	lea    -0x1(%r9),%r10d
    3d0c:	41 83 fa 10          	cmp    $0x10,%r10d
    3d10:	77 30                	ja     3d42 <_DkStreamMap+0x52>
    3d12:	4c 8d 15 67 69 22 00 	lea    0x226967(%rip),%r10        # 22a680 <pal_handle_ops>
    3d19:	4f 8b 0c ca          	mov    (%r10,%r9,8),%r9
    3d1d:	4d 85 c9             	test   %r9,%r9
    3d20:	74 20                	je     3d42 <_DkStreamMap+0x52>
    3d22:	4d 8b 49 48          	mov    0x48(%r9),%r9
    3d26:	4d 85 c9             	test   %r9,%r9
    3d29:	74 17                	je     3d42 <_DkStreamMap+0x52>
    3d2b:	48 89 f3             	mov    %rsi,%rbx
    3d2e:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi
    3d32:	41 ff d1             	callq  *%r9
    3d35:	85 c0                	test   %eax,%eax
    3d37:	78 09                	js     3d42 <_DkStreamMap+0x52>
    3d39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3d3d:	48 89 03             	mov    %rax,(%rbx)
    3d40:	31 c0                	xor    %eax,%eax
    3d42:	48 83 c4 18          	add    $0x18,%rsp
    3d46:	5b                   	pop    %rbx
    3d47:	5d                   	pop    %rbp
    3d48:	c3                   	retq   
    3d49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003d50 <DkStreamMap>:
    3d50:	55                   	push   %rbp
    3d51:	48 89 e5             	mov    %rsp,%rbp
    3d54:	41 54                	push   %r12
    3d56:	53                   	push   %rbx
    3d57:	49 89 fc             	mov    %rdi,%r12
    3d5a:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    3d61:	48 89 e0             	mov    %rsp,%rax
    3d64:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    3d68:	48 89 e8             	mov    %rbp,%rax
    3d6b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    3d6f:	48 89 d8             	mov    %rbx,%rax
    3d72:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    3d76:	48 89 f0             	mov    %rsi,%rax
    3d79:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    3d7d:	48 89 f8             	mov    %rdi,%rax
    3d80:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    3d84:	4c 89 e0             	mov    %r12,%rax
    3d87:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3d8b:	4c 89 e8             	mov    %r13,%rax
    3d8e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3d92:	4c 89 f0             	mov    %r14,%rax
    3d95:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3d99:	4c 89 f8             	mov    %r15,%rax
    3d9c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3da0:	48 8b 05 89 68 22 00 	mov    0x226889(%rip),%rax        # 22a630 <data_start+0x178>
    3da7:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    3dab:	48 8d 05 52 3f 02 00 	lea    0x23f52(%rip),%rax        # 27d04 <section_rodata+0x104>
    3db2:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    3db6:	90                   	nop
    3db7:	48 bb ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rbx
    3dbe:	de ad de 
    3dc1:	48 85 ff             	test   %rdi,%rdi
    3dc4:	48 89 75 88          	mov    %rsi,-0x78(%rbp)
    3dc8:	48 89 5d 90          	mov    %rbx,-0x70(%rbp)
    3dcc:	74 4a                	je     3e18 <DkStreamMap+0xc8>
    3dce:	48 85 f6             	test   %rsi,%rsi
    3dd1:	48 89 f7             	mov    %rsi,%rdi
    3dd4:	74 6a                	je     3e40 <DkStreamMap+0xf0>
    3dd6:	48 8d 05 03 a9 22 04 	lea    0x422a903(%rip),%rax        # 422e6e0 <pal_state>
    3ddd:	48 23 70 60          	and    0x60(%rax),%rsi
    3de1:	48 39 f7             	cmp    %rsi,%rdi
    3de4:	74 5a                	je     3e40 <DkStreamMap+0xf0>
    3de6:	bf 04 00 00 00       	mov    $0x4,%edi
    3deb:	e8 b0 c8 00 00       	callq  106a0 <_DkRaiseFailure>
    3df0:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    3df4:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    3dfb:	de ad de 
    3dfe:	48 39 c2             	cmp    %rax,%rdx
    3e01:	74 2d                	je     3e30 <DkStreamMap+0xe0>
    3e03:	31 c0                	xor    %eax,%eax
    3e05:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
    3e0c:	5b                   	pop    %rbx
    3e0d:	41 5c                	pop    %r12
    3e0f:	5d                   	pop    %rbp
    3e10:	c3                   	retq   
    3e11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3e18:	bf 04 00 00 00       	mov    $0x4,%edi
    3e1d:	e8 7e c8 00 00       	callq  106a0 <_DkRaiseFailure>
    3e22:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    3e26:	48 39 d8             	cmp    %rbx,%rax
    3e29:	75 d8                	jne    3e03 <DkStreamMap+0xb3>
    3e2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3e30:	90                   	nop
    3e31:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    3e38:	00 
    3e39:	eb c8                	jmp    3e03 <DkStreamMap+0xb3>
    3e3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3e40:	4d 85 c0             	test   %r8,%r8
    3e43:	74 a1                	je     3de6 <DkStreamMap+0x96>
    3e45:	48 8d 05 94 a8 22 04 	lea    0x422a894(%rip),%rax        # 422e6e0 <pal_state>
    3e4c:	4c 89 c6             	mov    %r8,%rsi
    3e4f:	48 8b 40 60          	mov    0x60(%rax),%rax
    3e53:	48 21 c6             	and    %rax,%rsi
    3e56:	49 39 f0             	cmp    %rsi,%r8
    3e59:	75 8b                	jne    3de6 <DkStreamMap+0x96>
    3e5b:	48 21 c8             	and    %rcx,%rax
    3e5e:	48 39 c1             	cmp    %rax,%rcx
    3e61:	75 83                	jne    3de6 <DkStreamMap+0x96>
    3e63:	48 85 ff             	test   %rdi,%rdi
    3e66:	74 34                	je     3e9c <DkStreamMap+0x14c>
    3e68:	44 89 c6             	mov    %r8d,%esi
    3e6b:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    3e72:	89 95 74 ff ff ff    	mov    %edx,-0x8c(%rbp)
    3e78:	4c 89 85 78 ff ff ff 	mov    %r8,-0x88(%rbp)
    3e7f:	e8 8c 9a 00 00       	callq  d910 <_DkCheckMemoryMappable>
    3e84:	84 c0                	test   %al,%al
    3e86:	4c 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%r8
    3e8d:	8b 95 74 ff ff ff    	mov    -0x8c(%rbp),%edx
    3e93:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    3e9a:	75 2c                	jne    3ec8 <DkStreamMap+0x178>
    3e9c:	48 8d 75 88          	lea    -0x78(%rbp),%rsi
    3ea0:	4c 89 e7             	mov    %r12,%rdi
    3ea3:	e8 48 fe ff ff       	callq  3cf0 <_DkStreamMap>
    3ea8:	85 c0                	test   %eax,%eax
    3eaa:	78 31                	js     3edd <DkStreamMap+0x18d>
    3eac:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    3eb0:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    3eb7:	de ad de 
    3eba:	48 39 c2             	cmp    %rax,%rdx
    3ebd:	74 13                	je     3ed2 <DkStreamMap+0x182>
    3ebf:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3ec3:	e9 3d ff ff ff       	jmpq   3e05 <DkStreamMap+0xb5>
    3ec8:	bf 06 00 00 00       	mov    $0x6,%edi
    3ecd:	e9 19 ff ff ff       	jmpq   3deb <DkStreamMap+0x9b>
    3ed2:	90                   	nop
    3ed3:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    3eda:	00 
    3edb:	eb e2                	jmp    3ebf <DkStreamMap+0x16f>
    3edd:	f7 d8                	neg    %eax
    3edf:	89 c7                	mov    %eax,%edi
    3ee1:	e8 ba c7 00 00       	callq  106a0 <_DkRaiseFailure>
    3ee6:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
    3eed:	00 
    3eee:	eb bc                	jmp    3eac <DkStreamMap+0x15c>

0000000000003ef0 <_DkStreamSetLength>:
    3ef0:	48 63 07             	movslq (%rdi),%rax
    3ef3:	55                   	push   %rbp
    3ef4:	48 89 e5             	mov    %rsp,%rbp
    3ef7:	8d 50 ff             	lea    -0x1(%rax),%edx
    3efa:	83 fa 10             	cmp    $0x10,%edx
    3efd:	77 21                	ja     3f20 <_DkStreamSetLength+0x30>
    3eff:	48 8d 15 7a 67 22 00 	lea    0x22677a(%rip),%rdx        # 22a680 <pal_handle_ops>
    3f06:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
    3f0a:	48 85 c0             	test   %rax,%rax
    3f0d:	74 21                	je     3f30 <_DkStreamSetLength+0x40>
    3f0f:	48 8b 40 50          	mov    0x50(%rax),%rax
    3f13:	48 85 c0             	test   %rax,%rax
    3f16:	74 18                	je     3f30 <_DkStreamSetLength+0x40>
    3f18:	5d                   	pop    %rbp
    3f19:	ff e0                	jmpq   *%rax
    3f1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3f20:	48 c7 c0 f9 ff ff ff 	mov    $0xfffffffffffffff9,%rax
    3f27:	5d                   	pop    %rbp
    3f28:	c3                   	retq   
    3f29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3f30:	48 c7 c0 fd ff ff ff 	mov    $0xfffffffffffffffd,%rax
    3f37:	5d                   	pop    %rbp
    3f38:	c3                   	retq   
    3f39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003f40 <DkStreamSetLength>:
    3f40:	55                   	push   %rbp
    3f41:	48 89 e5             	mov    %rsp,%rbp
    3f44:	53                   	push   %rbx
    3f45:	48 83 ec 68          	sub    $0x68,%rsp
    3f49:	48 89 e0             	mov    %rsp,%rax
    3f4c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    3f50:	48 89 e8             	mov    %rbp,%rax
    3f53:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    3f57:	48 89 d8             	mov    %rbx,%rax
    3f5a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    3f5e:	48 89 f0             	mov    %rsi,%rax
    3f61:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    3f65:	48 89 f8             	mov    %rdi,%rax
    3f68:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    3f6c:	4c 89 e0             	mov    %r12,%rax
    3f6f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3f73:	4c 89 e8             	mov    %r13,%rax
    3f76:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3f7a:	4c 89 f0             	mov    %r14,%rax
    3f7d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3f81:	4c 89 f8             	mov    %r15,%rax
    3f84:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3f88:	48 8b 05 c1 65 22 00 	mov    0x2265c1(%rip),%rax        # 22a550 <data_start+0x98>
    3f8f:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    3f93:	48 8d 05 76 3d 02 00 	lea    0x23d76(%rip),%rax        # 27d10 <section_rodata+0x110>
    3f9a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    3f9e:	90                   	nop
    3f9f:	48 bb ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rbx
    3fa6:	de ad de 
    3fa9:	48 85 ff             	test   %rdi,%rdi
    3fac:	48 89 5d 90          	mov    %rbx,-0x70(%rbp)
    3fb0:	74 2e                	je     3fe0 <DkStreamSetLength+0xa0>
    3fb2:	e8 39 ff ff ff       	callq  3ef0 <_DkStreamSetLength>
    3fb7:	48 85 c0             	test   %rax,%rax
    3fba:	78 4c                	js     4008 <DkStreamSetLength+0xc8>
    3fbc:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    3fc0:	48 ba ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rdx
    3fc7:	de ad de 
    3fca:	48 39 d1             	cmp    %rdx,%rcx
    3fcd:	74 26                	je     3ff5 <DkStreamSetLength+0xb5>
    3fcf:	48 83 c4 68          	add    $0x68,%rsp
    3fd3:	5b                   	pop    %rbx
    3fd4:	5d                   	pop    %rbp
    3fd5:	c3                   	retq   
    3fd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3fdd:	00 00 00 
    3fe0:	bf 04 00 00 00       	mov    $0x4,%edi
    3fe5:	e8 b6 c6 00 00       	callq  106a0 <_DkRaiseFailure>
    3fea:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    3fee:	31 c0                	xor    %eax,%eax
    3ff0:	48 39 da             	cmp    %rbx,%rdx
    3ff3:	75 da                	jne    3fcf <DkStreamSetLength+0x8f>
    3ff5:	90                   	nop
    3ff6:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    3ffd:	00 
    3ffe:	48 83 c4 68          	add    $0x68,%rsp
    4002:	5b                   	pop    %rbx
    4003:	5d                   	pop    %rbp
    4004:	c3                   	retq   
    4005:	0f 1f 00             	nopl   (%rax)
    4008:	89 c7                	mov    %eax,%edi
    400a:	f7 df                	neg    %edi
    400c:	e8 8f c6 00 00       	callq  106a0 <_DkRaiseFailure>
    4011:	31 c0                	xor    %eax,%eax
    4013:	eb a7                	jmp    3fbc <DkStreamSetLength+0x7c>
    4015:	90                   	nop
    4016:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    401d:	00 00 00 

0000000000004020 <_DkStreamFlush>:
    4020:	48 63 07             	movslq (%rdi),%rax
    4023:	55                   	push   %rbp
    4024:	48 89 e5             	mov    %rsp,%rbp
    4027:	8d 50 ff             	lea    -0x1(%rax),%edx
    402a:	83 fa 10             	cmp    $0x10,%edx
    402d:	77 21                	ja     4050 <_DkStreamFlush+0x30>
    402f:	48 8d 15 4a 66 22 00 	lea    0x22664a(%rip),%rdx        # 22a680 <pal_handle_ops>
    4036:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
    403a:	48 85 c0             	test   %rax,%rax
    403d:	74 21                	je     4060 <_DkStreamFlush+0x40>
    403f:	48 8b 40 58          	mov    0x58(%rax),%rax
    4043:	48 85 c0             	test   %rax,%rax
    4046:	74 18                	je     4060 <_DkStreamFlush+0x40>
    4048:	5d                   	pop    %rbp
    4049:	ff e0                	jmpq   *%rax
    404b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4050:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    4055:	5d                   	pop    %rbp
    4056:	c3                   	retq   
    4057:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    405e:	00 00 
    4060:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    4065:	5d                   	pop    %rbp
    4066:	c3                   	retq   
    4067:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    406e:	00 00 

0000000000004070 <DkStreamFlush>:
    4070:	55                   	push   %rbp
    4071:	48 89 e5             	mov    %rsp,%rbp
    4074:	53                   	push   %rbx
    4075:	48 83 ec 68          	sub    $0x68,%rsp
    4079:	48 89 e0             	mov    %rsp,%rax
    407c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4080:	48 89 e8             	mov    %rbp,%rax
    4083:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    4087:	48 89 d8             	mov    %rbx,%rax
    408a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    408e:	48 89 f0             	mov    %rsi,%rax
    4091:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4095:	48 89 f8             	mov    %rdi,%rax
    4098:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    409c:	4c 89 e0             	mov    %r12,%rax
    409f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    40a3:	4c 89 e8             	mov    %r13,%rax
    40a6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    40aa:	4c 89 f0             	mov    %r14,%rax
    40ad:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    40b1:	4c 89 f8             	mov    %r15,%rax
    40b4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    40b8:	48 8b 05 81 65 22 00 	mov    0x226581(%rip),%rax        # 22a640 <data_start+0x188>
    40bf:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    40c3:	48 8d 05 58 3c 02 00 	lea    0x23c58(%rip),%rax        # 27d22 <section_rodata+0x122>
    40ca:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    40ce:	90                   	nop
    40cf:	48 bb ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rbx
    40d6:	de ad de 
    40d9:	48 85 ff             	test   %rdi,%rdi
    40dc:	48 89 5d 90          	mov    %rbx,-0x70(%rbp)
    40e0:	74 2e                	je     4110 <DkStreamFlush+0xa0>
    40e2:	e8 39 ff ff ff       	callq  4020 <_DkStreamFlush>
    40e7:	85 c0                	test   %eax,%eax
    40e9:	78 45                	js     4130 <DkStreamFlush+0xc0>
    40eb:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    40ef:	b8 01 00 00 00       	mov    $0x1,%eax
    40f4:	48 39 da             	cmp    %rbx,%rdx
    40f7:	74 07                	je     4100 <DkStreamFlush+0x90>
    40f9:	48 83 c4 68          	add    $0x68,%rsp
    40fd:	5b                   	pop    %rbx
    40fe:	5d                   	pop    %rbp
    40ff:	c3                   	retq   
    4100:	90                   	nop
    4101:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    4108:	00 
    4109:	48 83 c4 68          	add    $0x68,%rsp
    410d:	5b                   	pop    %rbx
    410e:	5d                   	pop    %rbp
    410f:	c3                   	retq   
    4110:	bf 04 00 00 00       	mov    $0x4,%edi
    4115:	e8 86 c5 00 00       	callq  106a0 <_DkRaiseFailure>
    411a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    411e:	48 39 d8             	cmp    %rbx,%rax
    4121:	74 1f                	je     4142 <DkStreamFlush+0xd2>
    4123:	31 c0                	xor    %eax,%eax
    4125:	48 83 c4 68          	add    $0x68,%rsp
    4129:	5b                   	pop    %rbx
    412a:	5d                   	pop    %rbp
    412b:	c3                   	retq   
    412c:	0f 1f 40 00          	nopl   0x0(%rax)
    4130:	f7 d8                	neg    %eax
    4132:	89 c7                	mov    %eax,%edi
    4134:	e8 67 c5 00 00       	callq  106a0 <_DkRaiseFailure>
    4139:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    413d:	48 39 d8             	cmp    %rbx,%rax
    4140:	75 e1                	jne    4123 <DkStreamFlush+0xb3>
    4142:	90                   	nop
    4143:	31 c0                	xor    %eax,%eax
    4145:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    414c:	00 
    414d:	eb d6                	jmp    4125 <DkStreamFlush+0xb5>
    414f:	90                   	nop

0000000000004150 <_DkStreamRealpath>:
    4150:	48 63 07             	movslq (%rdi),%rax
    4153:	55                   	push   %rbp
    4154:	48 89 e5             	mov    %rsp,%rbp
    4157:	8d 50 ff             	lea    -0x1(%rax),%edx
    415a:	83 fa 10             	cmp    $0x10,%edx
    415d:	76 09                	jbe    4168 <_DkStreamRealpath+0x18>
    415f:	31 c0                	xor    %eax,%eax
    4161:	5d                   	pop    %rbp
    4162:	c3                   	retq   
    4163:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4168:	48 8d 15 11 65 22 00 	lea    0x226511(%rip),%rdx        # 22a680 <pal_handle_ops>
    416f:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
    4173:	48 85 c0             	test   %rax,%rax
    4176:	74 e7                	je     415f <_DkStreamRealpath+0xf>
    4178:	48 8b 00             	mov    (%rax),%rax
    417b:	48 85 c0             	test   %rax,%rax
    417e:	74 df                	je     415f <_DkStreamRealpath+0xf>
    4180:	5d                   	pop    %rbp
    4181:	ff e0                	jmpq   *%rax
    4183:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    418a:	00 00 00 
    418d:	0f 1f 00             	nopl   (%rax)

0000000000004190 <DkVirtualMemoryAlloc>:
    4190:	55                   	push   %rbp
    4191:	48 89 e5             	mov    %rsp,%rbp
    4194:	53                   	push   %rbx
    4195:	48 89 f3             	mov    %rsi,%rbx
    4198:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    419f:	48 89 e0             	mov    %rsp,%rax
    41a2:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    41a6:	48 89 e8             	mov    %rbp,%rax
    41a9:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    41ad:	48 89 d8             	mov    %rbx,%rax
    41b0:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    41b4:	48 89 f0             	mov    %rsi,%rax
    41b7:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    41bb:	48 89 f8             	mov    %rdi,%rax
    41be:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    41c2:	4c 89 e0             	mov    %r12,%rax
    41c5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    41c9:	4c 89 e8             	mov    %r13,%rax
    41cc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    41d0:	4c 89 f0             	mov    %r14,%rax
    41d3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    41d7:	4c 89 f8             	mov    %r15,%rax
    41da:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    41de:	48 8b 05 63 64 22 00 	mov    0x226463(%rip),%rax        # 22a648 <data_start+0x190>
    41e5:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    41e9:	48 8d 05 b8 3c 02 00 	lea    0x23cb8(%rip),%rax        # 27ea8 <section_rodata+0x2a8>
    41f0:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    41f4:	90                   	nop
    41f5:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    41fc:	de ad de 
    41ff:	48 85 ff             	test   %rdi,%rdi
    4202:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    4206:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    420a:	74 54                	je     4260 <DkVirtualMemoryAlloc+0xd0>
    420c:	48 8d 05 cd a4 22 04 	lea    0x422a4cd(%rip),%rax        # 422e6e0 <pal_state>
    4213:	48 89 fe             	mov    %rdi,%rsi
    4216:	48 23 70 60          	and    0x60(%rax),%rsi
    421a:	48 39 f7             	cmp    %rsi,%rdi
    421d:	74 41                	je     4260 <DkVirtualMemoryAlloc+0xd0>
    421f:	bf 04 00 00 00       	mov    $0x4,%edi
    4224:	e8 77 c4 00 00       	callq  106a0 <_DkRaiseFailure>
    4229:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    422d:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4234:	de ad de 
    4237:	48 39 c2             	cmp    %rax,%rdx
    423a:	74 14                	je     4250 <DkVirtualMemoryAlloc+0xc0>
    423c:	31 c0                	xor    %eax,%eax
    423e:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    4245:	5b                   	pop    %rbx
    4246:	5d                   	pop    %rbp
    4247:	c3                   	retq   
    4248:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    424f:	00 
    4250:	90                   	nop
    4251:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    4258:	00 
    4259:	eb e1                	jmp    423c <DkVirtualMemoryAlloc+0xac>
    425b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4260:	48 85 db             	test   %rbx,%rbx
    4263:	74 ba                	je     421f <DkVirtualMemoryAlloc+0x8f>
    4265:	48 8d 05 74 a4 22 04 	lea    0x422a474(%rip),%rax        # 422e6e0 <pal_state>
    426c:	48 89 de             	mov    %rbx,%rsi
    426f:	48 23 70 60          	and    0x60(%rax),%rsi
    4273:	48 39 f3             	cmp    %rsi,%rbx
    4276:	75 a7                	jne    421f <DkVirtualMemoryAlloc+0x8f>
    4278:	48 85 ff             	test   %rdi,%rdi
    427b:	74 23                	je     42a0 <DkVirtualMemoryAlloc+0x110>
    427d:	89 de                	mov    %ebx,%esi
    427f:	89 8d 78 ff ff ff    	mov    %ecx,-0x88(%rbp)
    4285:	89 95 7c ff ff ff    	mov    %edx,-0x84(%rbp)
    428b:	e8 80 96 00 00       	callq  d910 <_DkCheckMemoryMappable>
    4290:	84 c0                	test   %al,%al
    4292:	8b 95 7c ff ff ff    	mov    -0x84(%rbp),%edx
    4298:	8b 8d 78 ff ff ff    	mov    -0x88(%rbp),%ecx
    429e:	75 30                	jne    42d0 <DkVirtualMemoryAlloc+0x140>
    42a0:	48 8d 7d 88          	lea    -0x78(%rbp),%rdi
    42a4:	48 89 de             	mov    %rbx,%rsi
    42a7:	e8 44 97 00 00       	callq  d9f0 <_DkVirtualMemoryAlloc>
    42ac:	85 c0                	test   %eax,%eax
    42ae:	78 3b                	js     42eb <DkVirtualMemoryAlloc+0x15b>
    42b0:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    42b4:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    42bb:	de ad de 
    42be:	48 39 c2             	cmp    %rax,%rdx
    42c1:	74 1d                	je     42e0 <DkVirtualMemoryAlloc+0x150>
    42c3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    42c7:	e9 72 ff ff ff       	jmpq   423e <DkVirtualMemoryAlloc+0xae>
    42cc:	0f 1f 40 00          	nopl   0x0(%rax)
    42d0:	bf 06 00 00 00       	mov    $0x6,%edi
    42d5:	e9 4a ff ff ff       	jmpq   4224 <DkVirtualMemoryAlloc+0x94>
    42da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    42e0:	90                   	nop
    42e1:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    42e8:	00 
    42e9:	eb d8                	jmp    42c3 <DkVirtualMemoryAlloc+0x133>
    42eb:	f7 d8                	neg    %eax
    42ed:	89 c7                	mov    %eax,%edi
    42ef:	e8 ac c3 00 00       	callq  106a0 <_DkRaiseFailure>
    42f4:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
    42fb:	00 
    42fc:	eb b2                	jmp    42b0 <DkVirtualMemoryAlloc+0x120>
    42fe:	66 90                	xchg   %ax,%ax

0000000000004300 <DkVirtualMemoryFree>:
    4300:	55                   	push   %rbp
    4301:	48 89 e5             	mov    %rsp,%rbp
    4304:	41 54                	push   %r12
    4306:	53                   	push   %rbx
    4307:	49 89 f4             	mov    %rsi,%r12
    430a:	48 89 fb             	mov    %rdi,%rbx
    430d:	48 83 ec 60          	sub    $0x60,%rsp
    4311:	48 89 e0             	mov    %rsp,%rax
    4314:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4318:	48 89 e8             	mov    %rbp,%rax
    431b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    431f:	48 89 d8             	mov    %rbx,%rax
    4322:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    4326:	48 89 f0             	mov    %rsi,%rax
    4329:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    432d:	48 89 f8             	mov    %rdi,%rax
    4330:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    4334:	4c 89 e0             	mov    %r12,%rax
    4337:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    433b:	4c 89 e8             	mov    %r13,%rax
    433e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4342:	4c 89 f0             	mov    %r14,%rax
    4345:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4349:	4c 89 f8             	mov    %r15,%rax
    434c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4350:	48 8b 05 39 62 22 00 	mov    0x226239(%rip),%rax        # 22a590 <data_start+0xd8>
    4357:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    435b:	48 8d 05 5b 3b 02 00 	lea    0x23b5b(%rip),%rax        # 27ebd <section_rodata+0x2bd>
    4362:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    4366:	90                   	nop
    4367:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    436e:	de ad de 
    4371:	48 85 ff             	test   %rdi,%rdi
    4374:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    4378:	0f 84 a2 00 00 00    	je     4420 <DkVirtualMemoryFree+0x120>
    437e:	48 85 f6             	test   %rsi,%rsi
    4381:	0f 84 99 00 00 00    	je     4420 <DkVirtualMemoryFree+0x120>
    4387:	48 8d 05 52 a3 22 04 	lea    0x422a352(%rip),%rax        # 422e6e0 <pal_state>
    438e:	48 8b 40 60          	mov    0x60(%rax),%rax
    4392:	48 89 c2             	mov    %rax,%rdx
    4395:	48 21 da             	and    %rbx,%rdx
    4398:	48 39 d3             	cmp    %rdx,%rbx
    439b:	74 73                	je     4410 <DkVirtualMemoryFree+0x110>
    439d:	bf 04 00 00 00       	mov    $0x4,%edi
    43a2:	e8 f9 c2 00 00       	callq  106a0 <_DkRaiseFailure>
    43a7:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    43ab:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    43b2:	de ad de 
    43b5:	48 39 c2             	cmp    %rax,%rdx
    43b8:	0f 84 c2 00 00 00    	je     4480 <DkVirtualMemoryFree+0x180>
    43be:	44 89 e6             	mov    %r12d,%esi
    43c1:	48 89 df             	mov    %rbx,%rdi
    43c4:	e8 47 95 00 00       	callq  d910 <_DkCheckMemoryMappable>
    43c9:	84 c0                	test   %al,%al
    43cb:	0f 85 7f 00 00 00    	jne    4450 <DkVirtualMemoryFree+0x150>
    43d1:	4c 89 e6             	mov    %r12,%rsi
    43d4:	48 89 df             	mov    %rbx,%rdi
    43d7:	e8 24 97 00 00       	callq  db00 <_DkVirtualMemoryFree>
    43dc:	85 c0                	test   %eax,%eax
    43de:	0f 88 ac 00 00 00    	js     4490 <DkVirtualMemoryFree+0x190>
    43e4:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    43e8:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    43ef:	de ad de 
    43f2:	48 39 c2             	cmp    %rax,%rdx
    43f5:	75 09                	jne    4400 <DkVirtualMemoryFree+0x100>
    43f7:	90                   	nop
    43f8:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    43ff:	00 
    4400:	48 83 c4 60          	add    $0x60,%rsp
    4404:	5b                   	pop    %rbx
    4405:	41 5c                	pop    %r12
    4407:	5d                   	pop    %rbp
    4408:	c3                   	retq   
    4409:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4410:	4c 21 e0             	and    %r12,%rax
    4413:	49 39 c4             	cmp    %rax,%r12
    4416:	75 85                	jne    439d <DkVirtualMemoryFree+0x9d>
    4418:	eb a4                	jmp    43be <DkVirtualMemoryFree+0xbe>
    441a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4420:	bf 04 00 00 00       	mov    $0x4,%edi
    4425:	e8 76 c2 00 00       	callq  106a0 <_DkRaiseFailure>
    442a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    442e:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4435:	de ad de 
    4438:	48 39 c2             	cmp    %rax,%rdx
    443b:	0f 85 46 ff ff ff    	jne    4387 <DkVirtualMemoryFree+0x87>
    4441:	90                   	nop
    4442:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    4449:	00 
    444a:	e9 38 ff ff ff       	jmpq   4387 <DkVirtualMemoryFree+0x87>
    444f:	90                   	nop
    4450:	bf 06 00 00 00       	mov    $0x6,%edi
    4455:	e8 46 c2 00 00       	callq  106a0 <_DkRaiseFailure>
    445a:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    445e:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4465:	de ad de 
    4468:	48 39 c2             	cmp    %rax,%rdx
    446b:	0f 85 60 ff ff ff    	jne    43d1 <DkVirtualMemoryFree+0xd1>
    4471:	90                   	nop
    4472:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    4479:	00 
    447a:	e9 52 ff ff ff       	jmpq   43d1 <DkVirtualMemoryFree+0xd1>
    447f:	90                   	nop
    4480:	90                   	nop
    4481:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    4488:	00 
    4489:	e9 30 ff ff ff       	jmpq   43be <DkVirtualMemoryFree+0xbe>
    448e:	66 90                	xchg   %ax,%ax
    4490:	f7 d8                	neg    %eax
    4492:	89 c7                	mov    %eax,%edi
    4494:	e8 07 c2 00 00       	callq  106a0 <_DkRaiseFailure>
    4499:	e9 46 ff ff ff       	jmpq   43e4 <DkVirtualMemoryFree+0xe4>
    449e:	66 90                	xchg   %ax,%ax

00000000000044a0 <DkVirtualMemoryProtect>:
    44a0:	55                   	push   %rbp
    44a1:	48 89 e5             	mov    %rsp,%rbp
    44a4:	41 56                	push   %r14
    44a6:	41 55                	push   %r13
    44a8:	41 54                	push   %r12
    44aa:	53                   	push   %rbx
    44ab:	48 83 ec 70          	sub    $0x70,%rsp
    44af:	48 89 e0             	mov    %rsp,%rax
    44b2:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    44b6:	48 89 e8             	mov    %rbp,%rax
    44b9:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    44bd:	48 89 d8             	mov    %rbx,%rax
    44c0:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    44c4:	48 89 f0             	mov    %rsi,%rax
    44c7:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    44cb:	48 89 f8             	mov    %rdi,%rax
    44ce:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    44d2:	4c 89 e0             	mov    %r12,%rax
    44d5:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    44d9:	4c 89 e8             	mov    %r13,%rax
    44dc:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    44e0:	4c 89 f0             	mov    %r14,%rax
    44e3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    44e7:	4c 89 f8             	mov    %r15,%rax
    44ea:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    44ee:	48 8b 05 c3 5f 22 00 	mov    0x225fc3(%rip),%rax        # 22a4b8 <data_start>
    44f5:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    44f9:	48 8d 05 d1 39 02 00 	lea    0x239d1(%rip),%rax        # 27ed1 <section_rodata+0x2d1>
    4500:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    4504:	90                   	nop
    4505:	48 85 ff             	test   %rdi,%rdi
    4508:	49 be ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%r14
    450f:	de ad de 
    4512:	0f 94 c3             	sete   %bl
    4515:	48 85 f6             	test   %rsi,%rsi
    4518:	4c 89 75 80          	mov    %r14,-0x80(%rbp)
    451c:	0f 94 c0             	sete   %al
    451f:	08 c3                	or     %al,%bl
    4521:	0f 85 99 00 00 00    	jne    45c0 <DkVirtualMemoryProtect+0x120>
    4527:	48 8d 05 b2 a1 22 04 	lea    0x422a1b2(%rip),%rax        # 422e6e0 <pal_state>
    452e:	49 89 fc             	mov    %rdi,%r12
    4531:	48 8b 40 60          	mov    0x60(%rax),%rax
    4535:	48 89 c1             	mov    %rax,%rcx
    4538:	48 21 f9             	and    %rdi,%rcx
    453b:	48 39 cf             	cmp    %rcx,%rdi
    453e:	74 30                	je     4570 <DkVirtualMemoryProtect+0xd0>
    4540:	bf 04 00 00 00       	mov    $0x4,%edi
    4545:	e8 56 c1 00 00       	callq  106a0 <_DkRaiseFailure>
    454a:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    454e:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4555:	de ad de 
    4558:	48 39 c2             	cmp    %rax,%rdx
    455b:	74 46                	je     45a3 <DkVirtualMemoryProtect+0x103>
    455d:	31 db                	xor    %ebx,%ebx
    455f:	48 83 c4 70          	add    $0x70,%rsp
    4563:	89 d8                	mov    %ebx,%eax
    4565:	5b                   	pop    %rbx
    4566:	41 5c                	pop    %r12
    4568:	41 5d                	pop    %r13
    456a:	41 5e                	pop    %r14
    456c:	5d                   	pop    %rbp
    456d:	c3                   	retq   
    456e:	66 90                	xchg   %ax,%ax
    4570:	48 21 f0             	and    %rsi,%rax
    4573:	49 89 f5             	mov    %rsi,%r13
    4576:	48 39 c6             	cmp    %rax,%rsi
    4579:	75 c5                	jne    4540 <DkVirtualMemoryProtect+0xa0>
    457b:	89 95 7c ff ff ff    	mov    %edx,-0x84(%rbp)
    4581:	e8 8a 93 00 00       	callq  d910 <_DkCheckMemoryMappable>
    4586:	84 c0                	test   %al,%al
    4588:	8b 95 7c ff ff ff    	mov    -0x84(%rbp),%edx
    458e:	74 58                	je     45e8 <DkVirtualMemoryProtect+0x148>
    4590:	bf 06 00 00 00       	mov    $0x6,%edi
    4595:	e8 06 c1 00 00       	callq  106a0 <_DkRaiseFailure>
    459a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    459e:	4c 39 f0             	cmp    %r14,%rax
    45a1:	75 ba                	jne    455d <DkVirtualMemoryProtect+0xbd>
    45a3:	90                   	nop
    45a4:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
    45ab:	00 
    45ac:	48 83 c4 70          	add    $0x70,%rsp
    45b0:	89 d8                	mov    %ebx,%eax
    45b2:	5b                   	pop    %rbx
    45b3:	41 5c                	pop    %r12
    45b5:	41 5d                	pop    %r13
    45b7:	41 5e                	pop    %r14
    45b9:	5d                   	pop    %rbp
    45ba:	c3                   	retq   
    45bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    45c0:	bf 04 00 00 00       	mov    $0x4,%edi
    45c5:	e8 d6 c0 00 00       	callq  106a0 <_DkRaiseFailure>
    45ca:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    45ce:	4c 39 f0             	cmp    %r14,%rax
    45d1:	75 8a                	jne    455d <DkVirtualMemoryProtect+0xbd>
    45d3:	90                   	nop
    45d4:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
    45db:	00 
    45dc:	e9 7c ff ff ff       	jmpq   455d <DkVirtualMemoryProtect+0xbd>
    45e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    45e8:	4c 89 ee             	mov    %r13,%rsi
    45eb:	4c 89 e7             	mov    %r12,%rdi
    45ee:	e8 4d 95 00 00       	callq  db40 <_DkVirtualMemoryProtect>
    45f3:	85 c0                	test   %eax,%eax
    45f5:	78 14                	js     460b <DkVirtualMemoryProtect+0x16b>
    45f7:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    45fb:	bb 01 00 00 00       	mov    $0x1,%ebx
    4600:	4c 39 f0             	cmp    %r14,%rax
    4603:	0f 85 56 ff ff ff    	jne    455f <DkVirtualMemoryProtect+0xbf>
    4609:	eb 98                	jmp    45a3 <DkVirtualMemoryProtect+0x103>
    460b:	f7 d8                	neg    %eax
    460d:	89 c7                	mov    %eax,%edi
    460f:	e8 8c c0 00 00       	callq  106a0 <_DkRaiseFailure>
    4614:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    4618:	4c 39 f0             	cmp    %r14,%rax
    461b:	0f 85 3c ff ff ff    	jne    455d <DkVirtualMemoryProtect+0xbd>
    4621:	eb 80                	jmp    45a3 <DkVirtualMemoryProtect+0x103>
    4623:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    462a:	00 00 00 
    462d:	0f 1f 00             	nopl   (%rax)

0000000000004630 <DkThreadCreate>:
    4630:	55                   	push   %rbp
    4631:	48 89 f8             	mov    %rdi,%rax
    4634:	48 89 e5             	mov    %rsp,%rbp
    4637:	48 83 ec 70          	sub    $0x70,%rsp
    463b:	48 89 e1             	mov    %rsp,%rcx
    463e:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    4642:	48 89 e9             	mov    %rbp,%rcx
    4645:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    4649:	48 89 d9             	mov    %rbx,%rcx
    464c:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
    4650:	48 89 f1             	mov    %rsi,%rcx
    4653:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    4657:	48 89 f9             	mov    %rdi,%rcx
    465a:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    465e:	4c 89 e1             	mov    %r12,%rcx
    4661:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    4665:	4c 89 e9             	mov    %r13,%rcx
    4668:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    466c:	4c 89 f1             	mov    %r14,%rcx
    466f:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
    4673:	4c 89 f9             	mov    %r15,%rcx
    4676:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
    467a:	48 8b 0d 87 5e 22 00 	mov    0x225e87(%rip),%rcx        # 22a508 <data_start+0x50>
    4681:	48 8d 3d 60 38 02 00 	lea    0x23860(%rip),%rdi        # 27ee8 <section_rodata+0x2e8>
    4688:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
    468c:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
    4690:	90                   	nop
    4691:	48 bf ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rdi
    4698:	de ad de 
    469b:	89 d1                	mov    %edx,%ecx
    469d:	48 89 f2             	mov    %rsi,%rdx
    46a0:	48 89 7d a0          	mov    %rdi,-0x60(%rbp)
    46a4:	48 8d 7d 98          	lea    -0x68(%rbp),%rdi
    46a8:	48 89 c6             	mov    %rax,%rsi
    46ab:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    46b2:	00 
    46b3:	e8 b8 95 00 00       	callq  dc70 <_DkThreadCreate>
    46b8:	85 c0                	test   %eax,%eax
    46ba:	78 24                	js     46e0 <DkThreadCreate+0xb0>
    46bc:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    46c0:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    46c7:	de ad de 
    46ca:	48 39 c2             	cmp    %rax,%rdx
    46cd:	75 09                	jne    46d8 <DkThreadCreate+0xa8>
    46cf:	90                   	nop
    46d0:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    46d7:	00 
    46d8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    46dc:	c9                   	leaveq 
    46dd:	c3                   	retq   
    46de:	66 90                	xchg   %ax,%ax
    46e0:	f7 d8                	neg    %eax
    46e2:	89 c7                	mov    %eax,%edi
    46e4:	e8 b7 bf 00 00       	callq  106a0 <_DkRaiseFailure>
    46e9:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    46f0:	00 
    46f1:	eb c9                	jmp    46bc <DkThreadCreate+0x8c>
    46f3:	0f 1f 00             	nopl   (%rax)
    46f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    46fd:	00 00 00 

0000000000004700 <DkThreadDelayExecution>:
    4700:	55                   	push   %rbp
    4701:	48 89 e5             	mov    %rsp,%rbp
    4704:	53                   	push   %rbx
    4705:	48 89 fb             	mov    %rdi,%rbx
    4708:	48 83 ec 78          	sub    $0x78,%rsp
    470c:	48 89 e0             	mov    %rsp,%rax
    470f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4713:	48 89 e8             	mov    %rbp,%rax
    4716:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    471a:	48 89 d8             	mov    %rbx,%rax
    471d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    4721:	48 89 f0             	mov    %rsi,%rax
    4724:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4728:	48 89 f8             	mov    %rdi,%rax
    472b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    472f:	4c 89 e0             	mov    %r12,%rax
    4732:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4736:	4c 89 e8             	mov    %r13,%rax
    4739:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    473d:	4c 89 f0             	mov    %r14,%rax
    4740:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4744:	4c 89 f8             	mov    %r15,%rax
    4747:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    474b:	48 8b 05 e6 5d 22 00 	mov    0x225de6(%rip),%rax        # 22a538 <data_start+0x80>
    4752:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    4756:	48 8d 05 9a 37 02 00 	lea    0x2379a(%rip),%rax        # 27ef7 <section_rodata+0x2f7>
    475d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    4761:	90                   	nop
    4762:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    4766:	48 8d 7d 88          	lea    -0x78(%rbp),%rdi
    476a:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4771:	de ad de 
    4774:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    4778:	e8 c3 95 00 00       	callq  dd40 <_DkThreadDelayExecution>
    477d:	85 c0                	test   %eax,%eax
    477f:	78 2f                	js     47b0 <DkThreadDelayExecution+0xb0>
    4781:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    4785:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    478c:	de ad de 
    478f:	48 39 c2             	cmp    %rax,%rdx
    4792:	75 09                	jne    479d <DkThreadDelayExecution+0x9d>
    4794:	90                   	nop
    4795:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    479c:	00 
    479d:	48 83 c4 78          	add    $0x78,%rsp
    47a1:	48 89 d8             	mov    %rbx,%rax
    47a4:	5b                   	pop    %rbx
    47a5:	5d                   	pop    %rbp
    47a6:	c3                   	retq   
    47a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    47ae:	00 00 
    47b0:	bf 0d 00 00 00       	mov    $0xd,%edi
    47b5:	e8 e6 be 00 00       	callq  106a0 <_DkRaiseFailure>
    47ba:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    47be:	eb c1                	jmp    4781 <DkThreadDelayExecution+0x81>

00000000000047c0 <DkThreadYieldExecution>:
    47c0:	55                   	push   %rbp
    47c1:	48 89 e5             	mov    %rsp,%rbp
    47c4:	53                   	push   %rbx
    47c5:	48 83 ec 68          	sub    $0x68,%rsp
    47c9:	48 89 e0             	mov    %rsp,%rax
    47cc:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    47d0:	48 89 e8             	mov    %rbp,%rax
    47d3:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    47d7:	48 89 d8             	mov    %rbx,%rax
    47da:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    47de:	48 89 f0             	mov    %rsi,%rax
    47e1:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    47e5:	48 89 f8             	mov    %rdi,%rax
    47e8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    47ec:	4c 89 e0             	mov    %r12,%rax
    47ef:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    47f3:	4c 89 e8             	mov    %r13,%rax
    47f6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    47fa:	4c 89 f0             	mov    %r14,%rax
    47fd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4801:	4c 89 f8             	mov    %r15,%rax
    4804:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4808:	48 8b 05 09 5d 22 00 	mov    0x225d09(%rip),%rax        # 22a518 <data_start+0x60>
    480f:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    4813:	48 8d 05 f4 36 02 00 	lea    0x236f4(%rip),%rax        # 27f0e <section_rodata+0x30e>
    481a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    481e:	90                   	nop
    481f:	48 bb ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rbx
    4826:	de ad de 
    4829:	48 89 5d 90          	mov    %rbx,-0x70(%rbp)
    482d:	e8 1e 95 00 00       	callq  dd50 <_DkThreadYieldExecution>
    4832:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    4836:	48 39 d8             	cmp    %rbx,%rax
    4839:	75 09                	jne    4844 <DkThreadYieldExecution+0x84>
    483b:	90                   	nop
    483c:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    4843:	00 
    4844:	48 83 c4 68          	add    $0x68,%rsp
    4848:	5b                   	pop    %rbx
    4849:	5d                   	pop    %rbp
    484a:	c3                   	retq   
    484b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004850 <DkThreadExit>:
    4850:	55                   	push   %rbp
    4851:	48 89 e5             	mov    %rsp,%rbp
    4854:	53                   	push   %rbx
    4855:	48 83 ec 68          	sub    $0x68,%rsp
    4859:	48 89 e0             	mov    %rsp,%rax
    485c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4860:	48 89 e8             	mov    %rbp,%rax
    4863:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    4867:	48 89 d8             	mov    %rbx,%rax
    486a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    486e:	48 89 f0             	mov    %rsi,%rax
    4871:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4875:	48 89 f8             	mov    %rdi,%rax
    4878:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    487c:	4c 89 e0             	mov    %r12,%rax
    487f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4883:	4c 89 e8             	mov    %r13,%rax
    4886:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    488a:	4c 89 f0             	mov    %r14,%rax
    488d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4891:	4c 89 f8             	mov    %r15,%rax
    4894:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4898:	48 8b 05 21 5d 22 00 	mov    0x225d21(%rip),%rax        # 22a5c0 <data_start+0x108>
    489f:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    48a3:	48 8d 05 7b 36 02 00 	lea    0x2367b(%rip),%rax        # 27f25 <section_rodata+0x325>
    48aa:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    48ae:	90                   	nop
    48af:	48 bb ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rbx
    48b6:	de ad de 
    48b9:	48 89 5d 90          	mov    %rbx,-0x70(%rbp)
    48bd:	e8 9e 94 00 00       	callq  dd60 <_DkThreadExit>
    48c2:	bf 11 00 00 00       	mov    $0x11,%edi
    48c7:	e8 d4 bd 00 00       	callq  106a0 <_DkRaiseFailure>
    48cc:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    48d0:	48 39 d8             	cmp    %rbx,%rax
    48d3:	75 09                	jne    48de <DkThreadExit+0x8e>
    48d5:	90                   	nop
    48d6:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    48dd:	00 
    48de:	48 83 c4 68          	add    $0x68,%rsp
    48e2:	5b                   	pop    %rbx
    48e3:	5d                   	pop    %rbp
    48e4:	c3                   	retq   
    48e5:	90                   	nop
    48e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    48ed:	00 00 00 

00000000000048f0 <DkThreadResume>:
    48f0:	55                   	push   %rbp
    48f1:	48 89 e5             	mov    %rsp,%rbp
    48f4:	53                   	push   %rbx
    48f5:	48 83 ec 68          	sub    $0x68,%rsp
    48f9:	48 89 e0             	mov    %rsp,%rax
    48fc:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4900:	48 89 e8             	mov    %rbp,%rax
    4903:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    4907:	48 89 d8             	mov    %rbx,%rax
    490a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    490e:	48 89 f0             	mov    %rsi,%rax
    4911:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4915:	48 89 f8             	mov    %rdi,%rax
    4918:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    491c:	4c 89 e0             	mov    %r12,%rax
    491f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4923:	4c 89 e8             	mov    %r13,%rax
    4926:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    492a:	4c 89 f0             	mov    %r14,%rax
    492d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4931:	4c 89 f8             	mov    %r15,%rax
    4934:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4938:	48 8b 05 91 5c 22 00 	mov    0x225c91(%rip),%rax        # 22a5d0 <data_start+0x118>
    493f:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    4943:	48 8d 05 e8 35 02 00 	lea    0x235e8(%rip),%rax        # 27f32 <section_rodata+0x332>
    494a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    494e:	90                   	nop
    494f:	48 bb ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rbx
    4956:	de ad de 
    4959:	48 85 ff             	test   %rdi,%rdi
    495c:	48 89 5d 90          	mov    %rbx,-0x70(%rbp)
    4960:	74 05                	je     4967 <DkThreadResume+0x77>
    4962:	83 3f 0e             	cmpl   $0xe,(%rdi)
    4965:	74 51                	je     49b8 <DkThreadResume+0xc8>
    4967:	bf 04 00 00 00       	mov    $0x4,%edi
    496c:	e8 2f bd 00 00       	callq  106a0 <_DkRaiseFailure>
    4971:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    4975:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    497c:	de ad de 
    497f:	48 39 c2             	cmp    %rax,%rdx
    4982:	74 24                	je     49a8 <DkThreadResume+0xb8>
    4984:	31 c0                	xor    %eax,%eax
    4986:	48 83 c4 68          	add    $0x68,%rsp
    498a:	5b                   	pop    %rbx
    498b:	5d                   	pop    %rbp
    498c:	c3                   	retq   
    498d:	0f 1f 00             	nopl   (%rax)
    4990:	bf 06 00 00 00       	mov    $0x6,%edi
    4995:	e8 06 bd 00 00       	callq  106a0 <_DkRaiseFailure>
    499a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    499e:	48 39 d8             	cmp    %rbx,%rax
    49a1:	75 e1                	jne    4984 <DkThreadResume+0x94>
    49a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    49a8:	90                   	nop
    49a9:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    49b0:	00 
    49b1:	eb d1                	jmp    4984 <DkThreadResume+0x94>
    49b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    49b8:	e8 b3 93 00 00       	callq  dd70 <_DkThreadResume>
    49bd:	85 c0                	test   %eax,%eax
    49bf:	78 cf                	js     4990 <DkThreadResume+0xa0>
    49c1:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    49c5:	b8 01 00 00 00       	mov    $0x1,%eax
    49ca:	48 39 da             	cmp    %rbx,%rdx
    49cd:	75 b7                	jne    4986 <DkThreadResume+0x96>
    49cf:	90                   	nop
    49d0:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    49d7:	00 
    49d8:	eb ac                	jmp    4986 <DkThreadResume+0x96>
    49da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000049e0 <DkMutexCreate>:
    49e0:	55                   	push   %rbp
    49e1:	48 89 e5             	mov    %rsp,%rbp
    49e4:	48 83 ec 70          	sub    $0x70,%rsp
    49e8:	48 89 e0             	mov    %rsp,%rax
    49eb:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    49ef:	48 89 e8             	mov    %rbp,%rax
    49f2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    49f6:	48 89 d8             	mov    %rbx,%rax
    49f9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    49fd:	48 89 f0             	mov    %rsi,%rax
    4a00:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4a04:	48 89 f8             	mov    %rdi,%rax
    4a07:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4a0b:	4c 89 e0             	mov    %r12,%rax
    4a0e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4a12:	4c 89 e8             	mov    %r13,%rax
    4a15:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4a19:	4c 89 f0             	mov    %r14,%rax
    4a1c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4a20:	4c 89 f8             	mov    %r15,%rax
    4a23:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4a27:	48 8b 05 d2 5b 22 00 	mov    0x225bd2(%rip),%rax        # 22a600 <data_start+0x148>
    4a2e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4a32:	48 8d 05 08 35 02 00 	lea    0x23508(%rip),%rax        # 27f41 <section_rodata+0x341>
    4a39:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    4a3d:	90                   	nop
    4a3e:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4a45:	de ad de 
    4a48:	89 fe                	mov    %edi,%esi
    4a4a:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    4a51:	00 
    4a52:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    4a56:	48 8d 45 98          	lea    -0x68(%rbp),%rax
    4a5a:	48 89 c7             	mov    %rax,%rdi
    4a5d:	e8 5e 93 00 00       	callq  ddc0 <_DkMutexCreate>
    4a62:	85 c0                	test   %eax,%eax
    4a64:	78 2a                	js     4a90 <DkMutexCreate+0xb0>
    4a66:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    4a6a:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4a71:	de ad de 
    4a74:	48 39 c2             	cmp    %rax,%rdx
    4a77:	75 09                	jne    4a82 <DkMutexCreate+0xa2>
    4a79:	90                   	nop
    4a7a:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    4a81:	00 
    4a82:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4a86:	c9                   	leaveq 
    4a87:	c3                   	retq   
    4a88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    4a8f:	00 
    4a90:	f7 d8                	neg    %eax
    4a92:	89 c7                	mov    %eax,%edi
    4a94:	e8 07 bc 00 00       	callq  106a0 <_DkRaiseFailure>
    4a99:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    4aa0:	00 
    4aa1:	eb c3                	jmp    4a66 <DkMutexCreate+0x86>
    4aa3:	0f 1f 00             	nopl   (%rax)
    4aa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4aad:	00 00 00 

0000000000004ab0 <DkMutexRelease>:
    4ab0:	55                   	push   %rbp
    4ab1:	48 89 e5             	mov    %rsp,%rbp
    4ab4:	53                   	push   %rbx
    4ab5:	48 89 fb             	mov    %rdi,%rbx
    4ab8:	48 83 ec 68          	sub    $0x68,%rsp
    4abc:	48 89 e0             	mov    %rsp,%rax
    4abf:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4ac3:	48 89 e8             	mov    %rbp,%rax
    4ac6:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    4aca:	48 89 d8             	mov    %rbx,%rax
    4acd:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    4ad1:	48 89 f0             	mov    %rsi,%rax
    4ad4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4ad8:	48 89 f8             	mov    %rdi,%rax
    4adb:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    4adf:	4c 89 e0             	mov    %r12,%rax
    4ae2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4ae6:	4c 89 e8             	mov    %r13,%rax
    4ae9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4aed:	4c 89 f0             	mov    %r14,%rax
    4af0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4af4:	4c 89 f8             	mov    %r15,%rax
    4af7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4afb:	48 8b 05 f6 59 22 00 	mov    0x2259f6(%rip),%rax        # 22a4f8 <data_start+0x40>
    4b02:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    4b06:	48 8d 05 42 34 02 00 	lea    0x23442(%rip),%rax        # 27f4f <section_rodata+0x34f>
    4b0d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    4b11:	90                   	nop
    4b12:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4b19:	de ad de 
    4b1c:	48 85 ff             	test   %rdi,%rdi
    4b1f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    4b23:	74 05                	je     4b2a <DkMutexRelease+0x7a>
    4b25:	83 3f 0f             	cmpl   $0xf,(%rdi)
    4b28:	74 1d                	je     4b47 <DkMutexRelease+0x97>
    4b2a:	bf 04 00 00 00       	mov    $0x4,%edi
    4b2f:	e8 6c bb 00 00       	callq  106a0 <_DkRaiseFailure>
    4b34:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    4b38:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4b3f:	de ad de 
    4b42:	48 39 c2             	cmp    %rax,%rdx
    4b45:	74 31                	je     4b78 <DkMutexRelease+0xc8>
    4b47:	48 89 df             	mov    %rbx,%rdi
    4b4a:	e8 a1 94 00 00       	callq  dff0 <_DkMutexRelease>
    4b4f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    4b53:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4b5a:	de ad de 
    4b5d:	48 39 c2             	cmp    %rax,%rdx
    4b60:	75 09                	jne    4b6b <DkMutexRelease+0xbb>
    4b62:	90                   	nop
    4b63:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    4b6a:	00 
    4b6b:	48 83 c4 68          	add    $0x68,%rsp
    4b6f:	5b                   	pop    %rbx
    4b70:	5d                   	pop    %rbp
    4b71:	c3                   	retq   
    4b72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4b78:	90                   	nop
    4b79:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    4b80:	00 
    4b81:	eb c4                	jmp    4b47 <DkMutexRelease+0x97>
    4b83:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4b8a:	00 00 00 
    4b8d:	0f 1f 00             	nopl   (%rax)

0000000000004b90 <DkNotificationEventCreate>:
    4b90:	55                   	push   %rbp
    4b91:	48 89 e5             	mov    %rsp,%rbp
    4b94:	48 83 ec 70          	sub    $0x70,%rsp
    4b98:	48 89 e0             	mov    %rsp,%rax
    4b9b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    4b9f:	48 89 e8             	mov    %rbp,%rax
    4ba2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4ba6:	48 89 d8             	mov    %rbx,%rax
    4ba9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    4bad:	48 89 f0             	mov    %rsi,%rax
    4bb0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4bb4:	48 89 f8             	mov    %rdi,%rax
    4bb7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4bbb:	4c 89 e0             	mov    %r12,%rax
    4bbe:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4bc2:	4c 89 e8             	mov    %r13,%rax
    4bc5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4bc9:	4c 89 f0             	mov    %r14,%rax
    4bcc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4bd0:	4c 89 f8             	mov    %r15,%rax
    4bd3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4bd7:	48 8b 05 32 5a 22 00 	mov    0x225a32(%rip),%rax        # 22a610 <data_start+0x158>
    4bde:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4be2:	48 8d 05 75 33 02 00 	lea    0x23375(%rip),%rax        # 27f5e <section_rodata+0x35e>
    4be9:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    4bed:	90                   	nop
    4bee:	40 0f b6 f7          	movzbl %dil,%esi
    4bf2:	48 8d 7d 98          	lea    -0x68(%rbp),%rdi
    4bf6:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4bfd:	de ad de 
    4c00:	ba 01 00 00 00       	mov    $0x1,%edx
    4c05:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    4c09:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    4c10:	00 
    4c11:	e8 fa 93 00 00       	callq  e010 <_DkEventCreate>
    4c16:	85 c0                	test   %eax,%eax
    4c18:	78 26                	js     4c40 <DkNotificationEventCreate+0xb0>
    4c1a:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    4c1e:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4c25:	de ad de 
    4c28:	48 39 c2             	cmp    %rax,%rdx
    4c2b:	75 09                	jne    4c36 <DkNotificationEventCreate+0xa6>
    4c2d:	90                   	nop
    4c2e:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    4c35:	00 
    4c36:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4c3a:	c9                   	leaveq 
    4c3b:	c3                   	retq   
    4c3c:	0f 1f 40 00          	nopl   0x0(%rax)
    4c40:	f7 d8                	neg    %eax
    4c42:	89 c7                	mov    %eax,%edi
    4c44:	e8 57 ba 00 00       	callq  106a0 <_DkRaiseFailure>
    4c49:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    4c50:	00 
    4c51:	eb c7                	jmp    4c1a <DkNotificationEventCreate+0x8a>
    4c53:	0f 1f 00             	nopl   (%rax)
    4c56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4c5d:	00 00 00 

0000000000004c60 <DkSynchronizationEventCreate>:
    4c60:	55                   	push   %rbp
    4c61:	48 89 e5             	mov    %rsp,%rbp
    4c64:	48 83 ec 70          	sub    $0x70,%rsp
    4c68:	48 89 e0             	mov    %rsp,%rax
    4c6b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    4c6f:	48 89 e8             	mov    %rbp,%rax
    4c72:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4c76:	48 89 d8             	mov    %rbx,%rax
    4c79:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    4c7d:	48 89 f0             	mov    %rsi,%rax
    4c80:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4c84:	48 89 f8             	mov    %rdi,%rax
    4c87:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4c8b:	4c 89 e0             	mov    %r12,%rax
    4c8e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4c92:	4c 89 e8             	mov    %r13,%rax
    4c95:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4c99:	4c 89 f0             	mov    %r14,%rax
    4c9c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4ca0:	4c 89 f8             	mov    %r15,%rax
    4ca3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4ca7:	48 8b 05 ea 58 22 00 	mov    0x2258ea(%rip),%rax        # 22a598 <data_start+0xe0>
    4cae:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4cb2:	48 8d 05 bf 32 02 00 	lea    0x232bf(%rip),%rax        # 27f78 <section_rodata+0x378>
    4cb9:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    4cbd:	90                   	nop
    4cbe:	40 0f b6 f7          	movzbl %dil,%esi
    4cc2:	48 8d 7d 98          	lea    -0x68(%rbp),%rdi
    4cc6:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4ccd:	de ad de 
    4cd0:	31 d2                	xor    %edx,%edx
    4cd2:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    4cd6:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    4cdd:	00 
    4cde:	e8 2d 93 00 00       	callq  e010 <_DkEventCreate>
    4ce3:	85 c0                	test   %eax,%eax
    4ce5:	78 29                	js     4d10 <DkSynchronizationEventCreate+0xb0>
    4ce7:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    4ceb:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4cf2:	de ad de 
    4cf5:	48 39 c2             	cmp    %rax,%rdx
    4cf8:	75 09                	jne    4d03 <DkSynchronizationEventCreate+0xa3>
    4cfa:	90                   	nop
    4cfb:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    4d02:	00 
    4d03:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4d07:	c9                   	leaveq 
    4d08:	c3                   	retq   
    4d09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4d10:	f7 d8                	neg    %eax
    4d12:	89 c7                	mov    %eax,%edi
    4d14:	e8 87 b9 00 00       	callq  106a0 <_DkRaiseFailure>
    4d19:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    4d20:	00 
    4d21:	eb c4                	jmp    4ce7 <DkSynchronizationEventCreate+0x87>
    4d23:	0f 1f 00             	nopl   (%rax)
    4d26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4d2d:	00 00 00 

0000000000004d30 <DkEventSet>:
    4d30:	55                   	push   %rbp
    4d31:	48 89 e5             	mov    %rsp,%rbp
    4d34:	53                   	push   %rbx
    4d35:	48 89 fb             	mov    %rdi,%rbx
    4d38:	48 83 ec 68          	sub    $0x68,%rsp
    4d3c:	48 89 e0             	mov    %rsp,%rax
    4d3f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4d43:	48 89 e8             	mov    %rbp,%rax
    4d46:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    4d4a:	48 89 d8             	mov    %rbx,%rax
    4d4d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    4d51:	48 89 f0             	mov    %rsi,%rax
    4d54:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4d58:	48 89 f8             	mov    %rdi,%rax
    4d5b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    4d5f:	4c 89 e0             	mov    %r12,%rax
    4d62:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4d66:	4c 89 e8             	mov    %r13,%rax
    4d69:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4d6d:	4c 89 f0             	mov    %r14,%rax
    4d70:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4d74:	4c 89 f8             	mov    %r15,%rax
    4d77:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4d7b:	48 8b 05 f6 57 22 00 	mov    0x2257f6(%rip),%rax        # 22a578 <data_start+0xc0>
    4d82:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    4d86:	48 8d 05 08 32 02 00 	lea    0x23208(%rip),%rax        # 27f95 <section_rodata+0x395>
    4d8d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    4d91:	90                   	nop
    4d92:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4d99:	de ad de 
    4d9c:	48 85 ff             	test   %rdi,%rdi
    4d9f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    4da3:	74 05                	je     4daa <DkEventSet+0x7a>
    4da5:	83 3f 10             	cmpl   $0x10,(%rdi)
    4da8:	74 1d                	je     4dc7 <DkEventSet+0x97>
    4daa:	bf 04 00 00 00       	mov    $0x4,%edi
    4daf:	e8 ec b8 00 00       	callq  106a0 <_DkRaiseFailure>
    4db4:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    4db8:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4dbf:	de ad de 
    4dc2:	48 39 c2             	cmp    %rax,%rdx
    4dc5:	74 39                	je     4e00 <DkEventSet+0xd0>
    4dc7:	be ff ff ff ff       	mov    $0xffffffff,%esi
    4dcc:	48 89 df             	mov    %rbx,%rdi
    4dcf:	e8 ac 92 00 00       	callq  e080 <_DkEventSet>
    4dd4:	85 c0                	test   %eax,%eax
    4dd6:	78 38                	js     4e10 <DkEventSet+0xe0>
    4dd8:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    4ddc:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4de3:	de ad de 
    4de6:	48 39 c2             	cmp    %rax,%rdx
    4de9:	75 09                	jne    4df4 <DkEventSet+0xc4>
    4deb:	90                   	nop
    4dec:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    4df3:	00 
    4df4:	48 83 c4 68          	add    $0x68,%rsp
    4df8:	5b                   	pop    %rbx
    4df9:	5d                   	pop    %rbp
    4dfa:	c3                   	retq   
    4dfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4e00:	90                   	nop
    4e01:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    4e08:	00 
    4e09:	eb bc                	jmp    4dc7 <DkEventSet+0x97>
    4e0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4e10:	f7 d8                	neg    %eax
    4e12:	89 c7                	mov    %eax,%edi
    4e14:	e8 87 b8 00 00       	callq  106a0 <_DkRaiseFailure>
    4e19:	eb bd                	jmp    4dd8 <DkEventSet+0xa8>
    4e1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004e20 <DkEventWait>:
    4e20:	55                   	push   %rbp
    4e21:	48 89 e5             	mov    %rsp,%rbp
    4e24:	53                   	push   %rbx
    4e25:	48 89 fb             	mov    %rdi,%rbx
    4e28:	48 83 ec 68          	sub    $0x68,%rsp
    4e2c:	48 89 e0             	mov    %rsp,%rax
    4e2f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4e33:	48 89 e8             	mov    %rbp,%rax
    4e36:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    4e3a:	48 89 d8             	mov    %rbx,%rax
    4e3d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    4e41:	48 89 f0             	mov    %rsi,%rax
    4e44:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4e48:	48 89 f8             	mov    %rdi,%rax
    4e4b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    4e4f:	4c 89 e0             	mov    %r12,%rax
    4e52:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4e56:	4c 89 e8             	mov    %r13,%rax
    4e59:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4e5d:	4c 89 f0             	mov    %r14,%rax
    4e60:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4e64:	4c 89 f8             	mov    %r15,%rax
    4e67:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4e6b:	48 8d 05 ae ff ff ff 	lea    -0x52(%rip),%rax        # 4e20 <DkEventWait>
    4e72:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    4e76:	48 8d 05 23 31 02 00 	lea    0x23123(%rip),%rax        # 27fa0 <section_rodata+0x3a0>
    4e7d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    4e81:	90                   	nop
    4e82:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4e89:	de ad de 
    4e8c:	48 85 ff             	test   %rdi,%rdi
    4e8f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    4e93:	74 05                	je     4e9a <DkEventWait+0x7a>
    4e95:	83 3f 10             	cmpl   $0x10,(%rdi)
    4e98:	74 1d                	je     4eb7 <DkEventWait+0x97>
    4e9a:	bf 04 00 00 00       	mov    $0x4,%edi
    4e9f:	e8 fc b7 00 00       	callq  106a0 <_DkRaiseFailure>
    4ea4:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    4ea8:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4eaf:	de ad de 
    4eb2:	48 39 c2             	cmp    %rax,%rdx
    4eb5:	74 39                	je     4ef0 <DkEventWait+0xd0>
    4eb7:	48 89 df             	mov    %rbx,%rdi
    4eba:	e8 21 93 00 00       	callq  e1e0 <_DkEventWait>
    4ebf:	85 c0                	test   %eax,%eax
    4ec1:	78 42                	js     4f05 <DkEventWait+0xe5>
    4ec3:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    4ec7:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4ece:	de ad de 
    4ed1:	48 39 c2             	cmp    %rax,%rdx
    4ed4:	75 09                	jne    4edf <DkEventWait+0xbf>
    4ed6:	90                   	nop
    4ed7:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    4ede:	00 
    4edf:	48 83 c4 68          	add    $0x68,%rsp
    4ee3:	5b                   	pop    %rbx
    4ee4:	5d                   	pop    %rbp
    4ee5:	c3                   	retq   
    4ee6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4eed:	00 00 00 
    4ef0:	90                   	nop
    4ef1:	48 89 df             	mov    %rbx,%rdi
    4ef4:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    4efb:	00 
    4efc:	e8 df 92 00 00       	callq  e1e0 <_DkEventWait>
    4f01:	85 c0                	test   %eax,%eax
    4f03:	79 be                	jns    4ec3 <DkEventWait+0xa3>
    4f05:	f7 d8                	neg    %eax
    4f07:	89 c7                	mov    %eax,%edi
    4f09:	e8 92 b7 00 00       	callq  106a0 <_DkRaiseFailure>
    4f0e:	eb b3                	jmp    4ec3 <DkEventWait+0xa3>

0000000000004f10 <DkEventClear>:
    4f10:	55                   	push   %rbp
    4f11:	48 89 e5             	mov    %rsp,%rbp
    4f14:	53                   	push   %rbx
    4f15:	48 89 fb             	mov    %rdi,%rbx
    4f18:	48 83 ec 68          	sub    $0x68,%rsp
    4f1c:	48 89 e0             	mov    %rsp,%rax
    4f1f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4f23:	48 89 e8             	mov    %rbp,%rax
    4f26:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    4f2a:	48 89 d8             	mov    %rbx,%rax
    4f2d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    4f31:	48 89 f0             	mov    %rsi,%rax
    4f34:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4f38:	48 89 f8             	mov    %rdi,%rax
    4f3b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    4f3f:	4c 89 e0             	mov    %r12,%rax
    4f42:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4f46:	4c 89 e8             	mov    %r13,%rax
    4f49:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4f4d:	4c 89 f0             	mov    %r14,%rax
    4f50:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4f54:	4c 89 f8             	mov    %r15,%rax
    4f57:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4f5b:	48 8b 05 86 56 22 00 	mov    0x225686(%rip),%rax        # 22a5e8 <data_start+0x130>
    4f62:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    4f66:	48 8d 05 3f 30 02 00 	lea    0x2303f(%rip),%rax        # 27fac <section_rodata+0x3ac>
    4f6d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    4f71:	90                   	nop
    4f72:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4f79:	de ad de 
    4f7c:	48 85 ff             	test   %rdi,%rdi
    4f7f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    4f83:	74 05                	je     4f8a <DkEventClear+0x7a>
    4f85:	83 3f 10             	cmpl   $0x10,(%rdi)
    4f88:	74 1d                	je     4fa7 <DkEventClear+0x97>
    4f8a:	bf 04 00 00 00       	mov    $0x4,%edi
    4f8f:	e8 0c b7 00 00       	callq  106a0 <_DkRaiseFailure>
    4f94:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    4f98:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4f9f:	de ad de 
    4fa2:	48 39 c2             	cmp    %rax,%rdx
    4fa5:	74 39                	je     4fe0 <DkEventClear+0xd0>
    4fa7:	48 89 df             	mov    %rbx,%rdi
    4faa:	e8 d1 92 00 00       	callq  e280 <_DkEventClear>
    4faf:	85 c0                	test   %eax,%eax
    4fb1:	78 42                	js     4ff5 <DkEventClear+0xe5>
    4fb3:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    4fb7:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    4fbe:	de ad de 
    4fc1:	48 39 c2             	cmp    %rax,%rdx
    4fc4:	75 09                	jne    4fcf <DkEventClear+0xbf>
    4fc6:	90                   	nop
    4fc7:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    4fce:	00 
    4fcf:	48 83 c4 68          	add    $0x68,%rsp
    4fd3:	5b                   	pop    %rbx
    4fd4:	5d                   	pop    %rbp
    4fd5:	c3                   	retq   
    4fd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4fdd:	00 00 00 
    4fe0:	90                   	nop
    4fe1:	48 89 df             	mov    %rbx,%rdi
    4fe4:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    4feb:	00 
    4fec:	e8 8f 92 00 00       	callq  e280 <_DkEventClear>
    4ff1:	85 c0                	test   %eax,%eax
    4ff3:	79 be                	jns    4fb3 <DkEventClear+0xa3>
    4ff5:	f7 d8                	neg    %eax
    4ff7:	89 c7                	mov    %eax,%edi
    4ff9:	e8 a2 b6 00 00       	callq  106a0 <_DkRaiseFailure>
    4ffe:	eb b3                	jmp    4fb3 <DkEventClear+0xa3>

0000000000005000 <DkProcessCreate>:
    5000:	55                   	push   %rbp
    5001:	48 89 e5             	mov    %rsp,%rbp
    5004:	41 55                	push   %r13
    5006:	41 54                	push   %r12
    5008:	53                   	push   %rbx
    5009:	41 89 f4             	mov    %esi,%r12d
    500c:	49 89 d5             	mov    %rdx,%r13
    500f:	48 83 ec 78          	sub    $0x78,%rsp
    5013:	48 89 e0             	mov    %rsp,%rax
    5016:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    501a:	48 89 e8             	mov    %rbp,%rax
    501d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    5021:	48 89 d8             	mov    %rbx,%rax
    5024:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    5028:	48 89 f0             	mov    %rsi,%rax
    502b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    502f:	48 89 f8             	mov    %rdi,%rax
    5032:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    5036:	4c 89 e0             	mov    %r12,%rax
    5039:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    503d:	4c 89 e8             	mov    %r13,%rax
    5040:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    5044:	4c 89 f0             	mov    %r14,%rax
    5047:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    504b:	4c 89 f8             	mov    %r15,%rax
    504e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    5052:	48 8b 05 d7 54 22 00 	mov    0x2254d7(%rip),%rax        # 22a530 <data_start+0x78>
    5059:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    505d:	48 8d 05 55 2f 02 00 	lea    0x22f55(%rip),%rax        # 27fb9 <section_rodata+0x3b9>
    5064:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    5068:	90                   	nop
    5069:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    5070:	de ad de 
    5073:	48 85 ff             	test   %rdi,%rdi
    5076:	48 89 fb             	mov    %rdi,%rbx
    5079:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    507d:	0f 84 4d 01 00 00    	je     51d0 <DkProcessCreate+0x1d0>
    5083:	48 8d 05 56 96 22 04 	lea    0x4229656(%rip),%rax        # 422e6e0 <pal_state>
    508a:	48 83 78 30 00       	cmpq   $0x0,0x30(%rax)
    508f:	74 21                	je     50b2 <DkProcessCreate+0xb2>
    5091:	8b 40 38             	mov    0x38(%rax),%eax
    5094:	a8 01                	test   $0x1,%al
    5096:	74 09                	je     50a1 <DkProcessCreate+0xa1>
    5098:	80 3b 66             	cmpb   $0x66,(%rbx)
    509b:	0f 84 ef 00 00 00    	je     5190 <DkProcessCreate+0x190>
    50a1:	a8 02                	test   $0x2,%al
    50a3:	74 09                	je     50ae <DkProcessCreate+0xae>
    50a5:	80 3b 70             	cmpb   $0x70,(%rbx)
    50a8:	0f 84 c2 00 00 00    	je     5170 <DkProcessCreate+0x170>
    50ae:	a8 04                	test   $0x4,%al
    50b0:	75 5e                	jne    5110 <DkProcessCreate+0x110>
    50b2:	48 8d bd 78 ff ff ff 	lea    -0x88(%rbp),%rdi
    50b9:	4c 89 e9             	mov    %r13,%rcx
    50bc:	44 89 e2             	mov    %r12d,%edx
    50bf:	48 89 de             	mov    %rbx,%rsi
    50c2:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    50c9:	00 00 00 00 
    50cd:	e8 ee 98 00 00       	callq  e9c0 <_DkProcessCreate>
    50d2:	85 c0                	test   %eax,%eax
    50d4:	0f 88 d6 00 00 00    	js     51b0 <DkProcessCreate+0x1b0>
    50da:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    50de:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    50e5:	de ad de 
    50e8:	48 39 c2             	cmp    %rax,%rdx
    50eb:	75 09                	jne    50f6 <DkProcessCreate+0xf6>
    50ed:	90                   	nop
    50ee:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
    50f5:	00 
    50f6:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    50fd:	48 83 c4 78          	add    $0x78,%rsp
    5101:	5b                   	pop    %rbx
    5102:	41 5c                	pop    %r12
    5104:	41 5d                	pop    %r13
    5106:	5d                   	pop    %rbp
    5107:	c3                   	retq   
    5108:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    510f:	00 
    5110:	0f b6 03             	movzbl (%rbx),%eax
    5113:	3c 74                	cmp    $0x74,%al
    5115:	74 39                	je     5150 <DkProcessCreate+0x150>
    5117:	31 d2                	xor    %edx,%edx
    5119:	3c 75                	cmp    $0x75,%al
    511b:	75 95                	jne    50b2 <DkProcessCreate+0xb2>
    511d:	80 7b 01 64          	cmpb   $0x64,0x1(%rbx)
    5121:	0f 84 c9 00 00 00    	je     51f0 <DkProcessCreate+0x1f0>
    5127:	84 d2                	test   %dl,%dl
    5129:	74 87                	je     50b2 <DkProcessCreate+0xb2>
    512b:	48 8d 15 a4 37 02 00 	lea    0x237a4(%rip),%rdx        # 288d6 <__FUNCTION__.2860+0x43e>
    5132:	48 89 de             	mov    %rbx,%rsi
    5135:	bf 02 00 00 00       	mov    $0x2,%edi
    513a:	31 c0                	xor    %eax,%eax
    513c:	e8 af 14 00 00       	callq  65f0 <write_log>
    5141:	e9 6c ff ff ff       	jmpq   50b2 <DkProcessCreate+0xb2>
    5146:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    514d:	00 00 00 
    5150:	80 7b 01 63          	cmpb   $0x63,0x1(%rbx)
    5154:	0f 85 58 ff ff ff    	jne    50b2 <DkProcessCreate+0xb2>
    515a:	80 7b 02 70          	cmpb   $0x70,0x2(%rbx)
    515e:	0f 85 4e ff ff ff    	jne    50b2 <DkProcessCreate+0xb2>
    5164:	eb c5                	jmp    512b <DkProcessCreate+0x12b>
    5166:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    516d:	00 00 00 
    5170:	80 7b 01 69          	cmpb   $0x69,0x1(%rbx)
    5174:	0f 85 38 ff ff ff    	jne    50b2 <DkProcessCreate+0xb2>
    517a:	80 7b 02 70          	cmpb   $0x70,0x2(%rbx)
    517e:	0f 85 2e ff ff ff    	jne    50b2 <DkProcessCreate+0xb2>
    5184:	80 7b 03 65          	cmpb   $0x65,0x3(%rbx)
    5188:	0f 94 c2             	sete   %dl
    518b:	eb 9a                	jmp    5127 <DkProcessCreate+0x127>
    518d:	0f 1f 00             	nopl   (%rax)
    5190:	31 d2                	xor    %edx,%edx
    5192:	80 7b 01 69          	cmpb   $0x69,0x1(%rbx)
    5196:	74 68                	je     5200 <DkProcessCreate+0x200>
    5198:	a8 04                	test   $0x4,%al
    519a:	74 8b                	je     5127 <DkProcessCreate+0x127>
    519c:	80 3b 75             	cmpb   $0x75,(%rbx)
    519f:	75 86                	jne    5127 <DkProcessCreate+0x127>
    51a1:	e9 77 ff ff ff       	jmpq   511d <DkProcessCreate+0x11d>
    51a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    51ad:	00 00 00 
    51b0:	f7 d8                	neg    %eax
    51b2:	89 c7                	mov    %eax,%edi
    51b4:	e8 e7 b4 00 00       	callq  106a0 <_DkRaiseFailure>
    51b9:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    51c0:	00 00 00 00 
    51c4:	e9 11 ff ff ff       	jmpq   50da <DkProcessCreate+0xda>
    51c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    51d0:	e8 9b d3 ff ff       	callq  2570 <pal_control_addr@plt>
    51d5:	48 8b 58 20          	mov    0x20(%rax),%rbx
    51d9:	48 85 db             	test   %rbx,%rbx
    51dc:	0f 84 d0 fe ff ff    	je     50b2 <DkProcessCreate+0xb2>
    51e2:	e9 9c fe ff ff       	jmpq   5083 <DkProcessCreate+0x83>
    51e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    51ee:	00 00 
    51f0:	80 7b 02 70          	cmpb   $0x70,0x2(%rbx)
    51f4:	0f 85 2d ff ff ff    	jne    5127 <DkProcessCreate+0x127>
    51fa:	e9 2c ff ff ff       	jmpq   512b <DkProcessCreate+0x12b>
    51ff:	90                   	nop
    5200:	80 7b 02 6c          	cmpb   $0x6c,0x2(%rbx)
    5204:	75 92                	jne    5198 <DkProcessCreate+0x198>
    5206:	80 7b 03 65          	cmpb   $0x65,0x3(%rbx)
    520a:	0f 94 c2             	sete   %dl
    520d:	eb 89                	jmp    5198 <DkProcessCreate+0x198>
    520f:	90                   	nop

0000000000005210 <DkProcessExit>:
    5210:	55                   	push   %rbp
    5211:	48 89 e5             	mov    %rsp,%rbp
    5214:	53                   	push   %rbx
    5215:	48 83 ec 68          	sub    $0x68,%rsp
    5219:	48 89 e0             	mov    %rsp,%rax
    521c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    5220:	48 89 e8             	mov    %rbp,%rax
    5223:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    5227:	48 89 d8             	mov    %rbx,%rax
    522a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    522e:	48 89 f0             	mov    %rsi,%rax
    5231:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    5235:	48 89 f8             	mov    %rdi,%rax
    5238:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    523c:	4c 89 e0             	mov    %r12,%rax
    523f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    5243:	4c 89 e8             	mov    %r13,%rax
    5246:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    524a:	4c 89 f0             	mov    %r14,%rax
    524d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    5251:	4c 89 f8             	mov    %r15,%rax
    5254:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    5258:	48 8b 05 89 52 22 00 	mov    0x225289(%rip),%rax        # 22a4e8 <data_start+0x30>
    525f:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    5263:	48 8d 05 5f 2d 02 00 	lea    0x22d5f(%rip),%rax        # 27fc9 <section_rodata+0x3c9>
    526a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    526e:	90                   	nop
    526f:	48 bb ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rbx
    5276:	de ad de 
    5279:	48 89 5d 90          	mov    %rbx,-0x70(%rbp)
    527d:	e8 de 99 00 00       	callq  ec60 <_DkProcessExit>
    5282:	bf 11 00 00 00       	mov    $0x11,%edi
    5287:	e8 14 b4 00 00       	callq  106a0 <_DkRaiseFailure>
    528c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    5290:	48 39 d8             	cmp    %rbx,%rax
    5293:	75 09                	jne    529e <DkProcessExit+0x8e>
    5295:	90                   	nop
    5296:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    529d:	00 
    529e:	48 83 c4 68          	add    $0x68,%rsp
    52a2:	5b                   	pop    %rbx
    52a3:	5d                   	pop    %rbp
    52a4:	c3                   	retq   
    52a5:	90                   	nop
    52a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    52ad:	00 00 00 

00000000000052b0 <DkProcessSandboxCreate>:
    52b0:	55                   	push   %rbp
    52b1:	48 89 e5             	mov    %rsp,%rbp
    52b4:	53                   	push   %rbx
    52b5:	48 83 ec 68          	sub    $0x68,%rsp
    52b9:	48 89 e0             	mov    %rsp,%rax
    52bc:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    52c0:	48 89 e8             	mov    %rbp,%rax
    52c3:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    52c7:	48 89 d8             	mov    %rbx,%rax
    52ca:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    52ce:	48 89 f0             	mov    %rsi,%rax
    52d1:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    52d5:	48 89 f8             	mov    %rdi,%rax
    52d8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    52dc:	4c 89 e0             	mov    %r12,%rax
    52df:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    52e3:	4c 89 e8             	mov    %r13,%rax
    52e6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    52ea:	4c 89 f0             	mov    %r14,%rax
    52ed:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    52f1:	4c 89 f8             	mov    %r15,%rax
    52f4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    52f8:	48 8b 05 11 52 22 00 	mov    0x225211(%rip),%rax        # 22a510 <data_start+0x58>
    52ff:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    5303:	48 8d 05 cd 2c 02 00 	lea    0x22ccd(%rip),%rax        # 27fd7 <section_rodata+0x3d7>
    530a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    530e:	90                   	nop
    530f:	48 bb ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rbx
    5316:	de ad de 
    5319:	48 89 5d 90          	mov    %rbx,-0x70(%rbp)
    531d:	e8 4e 99 00 00       	callq  ec70 <_DkProcessSandboxCreate>
    5322:	85 c0                	test   %eax,%eax
    5324:	78 1a                	js     5340 <DkProcessSandboxCreate+0x90>
    5326:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    532a:	b8 01 00 00 00       	mov    $0x1,%eax
    532f:	48 39 da             	cmp    %rbx,%rdx
    5332:	74 20                	je     5354 <DkProcessSandboxCreate+0xa4>
    5334:	48 83 c4 68          	add    $0x68,%rsp
    5338:	5b                   	pop    %rbx
    5339:	5d                   	pop    %rbp
    533a:	c3                   	retq   
    533b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5340:	f7 d8                	neg    %eax
    5342:	89 c7                	mov    %eax,%edi
    5344:	e8 57 b3 00 00       	callq  106a0 <_DkRaiseFailure>
    5349:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    534d:	31 c0                	xor    %eax,%eax
    534f:	48 39 da             	cmp    %rbx,%rdx
    5352:	75 e0                	jne    5334 <DkProcessSandboxCreate+0x84>
    5354:	90                   	nop
    5355:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    535c:	00 
    535d:	48 83 c4 68          	add    $0x68,%rsp
    5361:	5b                   	pop    %rbx
    5362:	5d                   	pop    %rbp
    5363:	c3                   	retq   
    5364:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    536b:	00 00 00 
    536e:	66 90                	xchg   %ax,%ax

0000000000005370 <DkObjectsWaitAny>:
    5370:	55                   	push   %rbp
    5371:	48 89 e5             	mov    %rsp,%rbp
    5374:	48 83 ec 70          	sub    $0x70,%rsp
    5378:	48 89 e0             	mov    %rsp,%rax
    537b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    537f:	48 89 e8             	mov    %rbp,%rax
    5382:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    5386:	48 89 d8             	mov    %rbx,%rax
    5389:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    538d:	48 89 f0             	mov    %rsi,%rax
    5390:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    5394:	48 89 f8             	mov    %rdi,%rax
    5397:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    539b:	4c 89 e0             	mov    %r12,%rax
    539e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    53a2:	4c 89 e8             	mov    %r13,%rax
    53a5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    53a9:	4c 89 f0             	mov    %r14,%rax
    53ac:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    53b0:	4c 89 f8             	mov    %r15,%rax
    53b3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    53b7:	48 8b 05 02 51 22 00 	mov    0x225102(%rip),%rax        # 22a4c0 <data_start+0x8>
    53be:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    53c2:	48 8d 05 25 2c 02 00 	lea    0x22c25(%rip),%rax        # 27fee <section_rodata+0x3ee>
    53c9:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    53cd:	90                   	nop
    53ce:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    53d5:	de ad de 
    53d8:	48 85 ff             	test   %rdi,%rdi
    53db:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    53df:	74 5f                	je     5440 <DkObjectsWaitAny+0xd0>
    53e1:	48 85 f6             	test   %rsi,%rsi
    53e4:	48 89 f0             	mov    %rsi,%rax
    53e7:	4c 8d 04 fe          	lea    (%rsi,%rdi,8),%r8
    53eb:	74 53                	je     5440 <DkObjectsWaitAny+0xd0>
    53ed:	0f 1f 00             	nopl   (%rax)
    53f0:	48 8b 08             	mov    (%rax),%rcx
    53f3:	8b 09                	mov    (%rcx),%ecx
    53f5:	83 e9 01             	sub    $0x1,%ecx
    53f8:	83 f9 10             	cmp    $0x10,%ecx
    53fb:	76 07                	jbe    5404 <DkObjectsWaitAny+0x94>
    53fd:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5404:	48 83 c0 08          	add    $0x8,%rax
    5408:	49 39 c0             	cmp    %rax,%r8
    540b:	75 e3                	jne    53f0 <DkObjectsWaitAny+0x80>
    540d:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
    5411:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    5418:	00 
    5419:	e8 62 98 00 00       	callq  ec80 <_DkObjectsWaitAny>
    541e:	85 c0                	test   %eax,%eax
    5420:	78 5e                	js     5480 <DkObjectsWaitAny+0x110>
    5422:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    5426:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    542d:	de ad de 
    5430:	48 39 c2             	cmp    %rax,%rdx
    5433:	74 3b                	je     5470 <DkObjectsWaitAny+0x100>
    5435:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    5439:	c9                   	leaveq 
    543a:	c3                   	retq   
    543b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5440:	bf 04 00 00 00       	mov    $0x4,%edi
    5445:	e8 56 b2 00 00       	callq  106a0 <_DkRaiseFailure>
    544a:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    544e:	48 ba ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rdx
    5455:	de ad de 
    5458:	31 c0                	xor    %eax,%eax
    545a:	48 39 d1             	cmp    %rdx,%rcx
    545d:	75 da                	jne    5439 <DkObjectsWaitAny+0xc9>
    545f:	90                   	nop
    5460:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    5467:	00 
    5468:	c9                   	leaveq 
    5469:	c3                   	retq   
    546a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5470:	90                   	nop
    5471:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    5478:	00 
    5479:	eb ba                	jmp    5435 <DkObjectsWaitAny+0xc5>
    547b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5480:	f7 d8                	neg    %eax
    5482:	89 c7                	mov    %eax,%edi
    5484:	e8 17 b2 00 00       	callq  106a0 <_DkRaiseFailure>
    5489:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    5490:	00 
    5491:	eb 8f                	jmp    5422 <DkObjectsWaitAny+0xb2>
    5493:	0f 1f 00             	nopl   (%rax)
    5496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    549d:	00 00 00 

00000000000054a0 <_DkObjectClose>:
    54a0:	55                   	push   %rbp
    54a1:	48 89 e5             	mov    %rsp,%rbp
    54a4:	53                   	push   %rbx
    54a5:	48 89 fb             	mov    %rdi,%rbx
    54a8:	48 83 ec 08          	sub    $0x8,%rsp
    54ac:	48 63 07             	movslq (%rdi),%rax
    54af:	8d 50 ff             	lea    -0x1(%rax),%edx
    54b2:	83 fa 10             	cmp    $0x10,%edx
    54b5:	77 29                	ja     54e0 <_DkObjectClose+0x40>
    54b7:	48 8d 15 c2 51 22 00 	lea    0x2251c2(%rip),%rdx        # 22a680 <pal_handle_ops>
    54be:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
    54c2:	48 85 c0             	test   %rax,%rax
    54c5:	74 19                	je     54e0 <_DkObjectClose+0x40>
    54c7:	48 8b 40 38          	mov    0x38(%rax),%rax
    54cb:	48 85 c0             	test   %rax,%rax
    54ce:	74 10                	je     54e0 <_DkObjectClose+0x40>
    54d0:	ff d0                	callq  *%rax
    54d2:	85 c0                	test   %eax,%eax
    54d4:	74 0a                	je     54e0 <_DkObjectClose+0x40>
    54d6:	48 83 c4 08          	add    $0x8,%rsp
    54da:	5b                   	pop    %rbx
    54db:	5d                   	pop    %rbp
    54dc:	c3                   	retq   
    54dd:	0f 1f 00             	nopl   (%rax)
    54e0:	48 89 df             	mov    %rbx,%rdi
    54e3:	e8 78 3f 00 00       	callq  9460 <free>
    54e8:	48 83 c4 08          	add    $0x8,%rsp
    54ec:	31 c0                	xor    %eax,%eax
    54ee:	5b                   	pop    %rbx
    54ef:	5d                   	pop    %rbp
    54f0:	c3                   	retq   
    54f1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    54f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    54fd:	00 00 00 

0000000000005500 <DkObjectClose>:
    5500:	55                   	push   %rbp
    5501:	48 89 e5             	mov    %rsp,%rbp
    5504:	53                   	push   %rbx
    5505:	48 89 fb             	mov    %rdi,%rbx
    5508:	48 83 ec 68          	sub    $0x68,%rsp
    550c:	48 89 e0             	mov    %rsp,%rax
    550f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    5513:	48 89 e8             	mov    %rbp,%rax
    5516:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    551a:	48 89 d8             	mov    %rbx,%rax
    551d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    5521:	48 89 f0             	mov    %rsi,%rax
    5524:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    5528:	48 89 f8             	mov    %rdi,%rax
    552b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    552f:	4c 89 e0             	mov    %r12,%rax
    5532:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    5536:	4c 89 e8             	mov    %r13,%rax
    5539:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    553d:	4c 89 f0             	mov    %r14,%rax
    5540:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    5544:	4c 89 f8             	mov    %r15,%rax
    5547:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    554b:	48 8b 05 c6 50 22 00 	mov    0x2250c6(%rip),%rax        # 22a618 <data_start+0x160>
    5552:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    5556:	48 8d 05 a2 2a 02 00 	lea    0x22aa2(%rip),%rax        # 27fff <section_rodata+0x3ff>
    555d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    5561:	90                   	nop
    5562:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    5569:	de ad de 
    556c:	48 85 ff             	test   %rdi,%rdi
    556f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    5573:	74 3b                	je     55b0 <DkObjectClose+0xb0>
    5575:	8b 07                	mov    (%rdi),%eax
    5577:	83 e8 01             	sub    $0x1,%eax
    557a:	83 f8 10             	cmp    $0x10,%eax
    557d:	77 31                	ja     55b0 <DkObjectClose+0xb0>
    557f:	48 89 df             	mov    %rbx,%rdi
    5582:	e8 19 ff ff ff       	callq  54a0 <_DkObjectClose>
    5587:	85 c0                	test   %eax,%eax
    5589:	78 5d                	js     55e8 <DkObjectClose+0xe8>
    558b:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    558f:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    5596:	de ad de 
    5599:	48 39 c2             	cmp    %rax,%rdx
    559c:	75 09                	jne    55a7 <DkObjectClose+0xa7>
    559e:	90                   	nop
    559f:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    55a6:	00 
    55a7:	48 83 c4 68          	add    $0x68,%rsp
    55ab:	5b                   	pop    %rbx
    55ac:	5d                   	pop    %rbp
    55ad:	c3                   	retq   
    55ae:	66 90                	xchg   %ax,%ax
    55b0:	bf 04 00 00 00       	mov    $0x4,%edi
    55b5:	e8 e6 b0 00 00       	callq  106a0 <_DkRaiseFailure>
    55ba:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    55be:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    55c5:	de ad de 
    55c8:	48 39 c2             	cmp    %rax,%rdx
    55cb:	75 b2                	jne    557f <DkObjectClose+0x7f>
    55cd:	90                   	nop
    55ce:	48 89 df             	mov    %rbx,%rdi
    55d1:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    55d8:	00 
    55d9:	e8 c2 fe ff ff       	callq  54a0 <_DkObjectClose>
    55de:	85 c0                	test   %eax,%eax
    55e0:	79 a9                	jns    558b <DkObjectClose+0x8b>
    55e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    55e8:	f7 d8                	neg    %eax
    55ea:	89 c7                	mov    %eax,%edi
    55ec:	e8 af b0 00 00       	callq  106a0 <_DkRaiseFailure>
    55f1:	eb 98                	jmp    558b <DkObjectClose+0x8b>
    55f3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    55fa:	00 00 00 
    55fd:	0f 1f 00             	nopl   (%rax)

0000000000005600 <read_environments>:
    5600:	55                   	push   %rbp
    5601:	48 89 e5             	mov    %rsp,%rbp
    5604:	41 57                	push   %r15
    5606:	41 56                	push   %r14
    5608:	41 55                	push   %r13
    560a:	41 54                	push   %r12
    560c:	53                   	push   %rbx
    560d:	48 81 ec 58 10 00 00 	sub    $0x1058,%rsp
    5614:	48 8d 05 c5 90 22 04 	lea    0x42290c5(%rip),%rax        # 422e6e0 <pal_state>
    561b:	48 8b 40 40          	mov    0x40(%rax),%rax
    561f:	48 85 c0             	test   %rax,%rax
    5622:	48 89 85 c0 ef ff ff 	mov    %rax,-0x1040(%rbp)
    5629:	0f 84 47 03 00 00    	je     5976 <read_environments+0x376>
    562f:	48 8b 0f             	mov    (%rdi),%rcx
    5632:	48 8d 35 d4 29 02 00 	lea    0x229d4(%rip),%rsi        # 2800d <section_rodata+0x40d>
    5639:	48 89 bd 80 ef ff ff 	mov    %rdi,-0x1080(%rbp)
    5640:	48 89 c7             	mov    %rax,%rdi
    5643:	48 89 8d 98 ef ff ff 	mov    %rcx,-0x1068(%rbp)
    564a:	e8 71 29 01 00       	callq  17fc0 <get_config_entries_size>
    564f:	48 85 c0             	test   %rax,%rax
    5652:	48 89 c3             	mov    %rax,%rbx
    5655:	0f 88 1b 03 00 00    	js     5976 <read_environments+0x376>
    565b:	48 89 c7             	mov    %rax,%rdi
    565e:	e8 bd 39 00 00       	callq  9020 <malloc>
    5663:	48 85 c0             	test   %rax,%rax
    5666:	48 89 85 a0 ef ff ff 	mov    %rax,-0x1060(%rbp)
    566d:	0f 84 79 03 00 00    	je     59ec <read_environments+0x3ec>
    5673:	48 8b 95 a0 ef ff ff 	mov    -0x1060(%rbp),%rdx
    567a:	48 8b bd c0 ef ff ff 	mov    -0x1040(%rbp),%rdi
    5681:	48 8d 35 85 29 02 00 	lea    0x22985(%rip),%rsi        # 2800d <section_rodata+0x40d>
    5688:	48 89 d9             	mov    %rbx,%rcx
    568b:	e8 70 28 01 00       	callq  17f00 <get_config_entries>
    5690:	85 c0                	test   %eax,%eax
    5692:	89 85 b0 ef ff ff    	mov    %eax,-0x1050(%rbp)
    5698:	0f 8e 6b 03 00 00    	jle    5a09 <read_environments+0x409>
    569e:	8b 8d b0 ef ff ff    	mov    -0x1050(%rbp),%ecx
    56a4:	4c 8b ad a0 ef ff ff 	mov    -0x1060(%rbp),%r13
    56ab:	48 63 c1             	movslq %ecx,%rax
    56ae:	8d 59 ff             	lea    -0x1(%rcx),%ebx
    56b1:	48 c1 e0 04          	shl    $0x4,%rax
    56b5:	48 83 c0 10          	add    $0x10,%rax
    56b9:	48 89 9d b8 ef ff ff 	mov    %rbx,-0x1048(%rbp)
    56c0:	48 29 c4             	sub    %rax,%rsp
    56c3:	48 8d 43 01          	lea    0x1(%rbx),%rax
    56c7:	4c 8d 74 24 0f       	lea    0xf(%rsp),%r14
    56cc:	48 c1 e0 04          	shl    $0x4,%rax
    56d0:	49 83 e6 f0          	and    $0xfffffffffffffff0,%r14
    56d4:	4c 01 f0             	add    %r14,%rax
    56d7:	4d 89 f7             	mov    %r14,%r15
    56da:	4c 89 b5 c8 ef ff ff 	mov    %r14,-0x1038(%rbp)
    56e1:	4d 89 f4             	mov    %r14,%r12
    56e4:	48 89 85 a8 ef ff ff 	mov    %rax,-0x1058(%rbp)
    56eb:	49 89 c6             	mov    %rax,%r14
    56ee:	66 90                	xchg   %ax,%ax
    56f0:	4c 89 ef             	mov    %r13,%rdi
    56f3:	49 83 c7 10          	add    $0x10,%r15
    56f7:	e8 74 ff 00 00       	callq  15670 <strlen>
    56fc:	48 8d 50 1f          	lea    0x1f(%rax),%rdx
    5700:	48 8d 58 01          	lea    0x1(%rax),%rbx
    5704:	41 89 47 f8          	mov    %eax,-0x8(%r15)
    5708:	41 c7 47 fc ff ff ff 	movl   $0xffffffff,-0x4(%r15)
    570f:	ff 
    5710:	4c 89 ee             	mov    %r13,%rsi
    5713:	48 83 e2 f0          	and    $0xfffffffffffffff0,%rdx
    5717:	49 01 dd             	add    %rbx,%r13
    571a:	48 29 d4             	sub    %rdx,%rsp
    571d:	48 89 da             	mov    %rbx,%rdx
    5720:	48 8d 7c 24 0f       	lea    0xf(%rsp),%rdi
    5725:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
    5729:	49 89 7f f0          	mov    %rdi,-0x10(%r15)
    572d:	e8 be 04 01 00       	callq  15bf0 <memcpy>
    5732:	4d 39 fe             	cmp    %r15,%r14
    5735:	75 b9                	jne    56f0 <read_environments+0xf0>
    5737:	48 8b 85 98 ef ff ff 	mov    -0x1068(%rbp),%rax
    573e:	48 8b 9d b8 ef ff ff 	mov    -0x1048(%rbp),%rbx
    5745:	48 8b 30             	mov    (%rax),%rsi
    5748:	48 85 f6             	test   %rsi,%rsi
    574b:	0f 84 d3 02 00 00    	je     5a24 <read_environments+0x424>
    5751:	48 c1 e3 04          	shl    $0x4,%rbx
    5755:	48 03 9d c8 ef ff ff 	add    -0x1038(%rbp),%rbx
    575c:	4c 89 a5 88 ef ff ff 	mov    %r12,-0x1078(%rbp)
    5763:	c7 85 b8 ef ff ff 00 	movl   $0x0,-0x1048(%rbp)
    576a:	00 00 00 
    576d:	45 31 ed             	xor    %r13d,%r13d
    5770:	49 89 c4             	mov    %rax,%r12
    5773:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5778:	4c 8b bd c8 ef ff ff 	mov    -0x1038(%rbp),%r15
    577f:	eb 0f                	jmp    5790 <read_environments+0x190>
    5781:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5788:	49 8b 34 24          	mov    (%r12),%rsi
    578c:	49 83 c7 10          	add    $0x10,%r15
    5790:	4d 63 77 08          	movslq 0x8(%r15),%r14
    5794:	49 8b 3f             	mov    (%r15),%rdi
    5797:	4c 89 f2             	mov    %r14,%rdx
    579a:	e8 f1 fe 00 00       	callq  15690 <memcmp>
    579f:	85 c0                	test   %eax,%eax
    57a1:	75 0f                	jne    57b2 <read_environments+0x1b2>
    57a3:	49 8b 04 24          	mov    (%r12),%rax
    57a7:	42 80 3c 30 3d       	cmpb   $0x3d,(%rax,%r14,1)
    57ac:	0f 84 d6 01 00 00    	je     5988 <read_environments+0x388>
    57b2:	4c 39 fb             	cmp    %r15,%rbx
    57b5:	75 d1                	jne    5788 <read_environments+0x188>
    57b7:	49 83 c4 08          	add    $0x8,%r12
    57bb:	49 8b 34 24          	mov    (%r12),%rsi
    57bf:	41 83 c5 01          	add    $0x1,%r13d
    57c3:	48 85 f6             	test   %rsi,%rsi
    57c6:	75 b0                	jne    5778 <read_environments+0x178>
    57c8:	4c 8b a5 88 ef ff ff 	mov    -0x1078(%rbp),%r12
    57cf:	49 63 dd             	movslq %r13d,%rbx
    57d2:	89 9d 94 ef ff ff    	mov    %ebx,-0x106c(%rbp)
    57d8:	48 c1 e3 03          	shl    $0x3,%rbx
    57dc:	8b 85 94 ef ff ff    	mov    -0x106c(%rbp),%eax
    57e2:	2b 85 b8 ef ff ff    	sub    -0x1048(%rbp),%eax
    57e8:	be 08 00 00 00       	mov    $0x8,%esi
    57ed:	8b 8d b0 ef ff ff    	mov    -0x1050(%rbp),%ecx
    57f3:	8d 7c 08 01          	lea    0x1(%rax,%rcx,1),%edi
    57f7:	48 63 ff             	movslq %edi,%rdi
    57fa:	e8 21 3c 00 00       	callq  9420 <calloc>
    57ff:	48 8b b5 98 ef ff ff 	mov    -0x1068(%rbp),%rsi
    5806:	48 89 da             	mov    %rbx,%rdx
    5809:	48 89 c7             	mov    %rax,%rdi
    580c:	48 89 85 b0 ef ff ff 	mov    %rax,-0x1050(%rbp)
    5813:	e8 d8 03 01 00       	callq  15bf0 <memcpy>
    5818:	48 b8 6c 6f 61 64 65 	movabs $0x652e726564616f6c,%rax
    581f:	72 2e 65 
    5822:	48 8d bd e0 ef ff ff 	lea    -0x1020(%rbp),%rdi
    5829:	b9 fe 01 00 00       	mov    $0x1fe,%ecx
    582e:	48 89 85 d0 ef ff ff 	mov    %rax,-0x1030(%rbp)
    5835:	31 c0                	xor    %eax,%eax
    5837:	48 c7 85 d8 ef ff ff 	movq   $0x2e766e,-0x1028(%rbp)
    583e:	6e 76 2e 00 
    5842:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    5845:	48 8b bd a0 ef ff ff 	mov    -0x1060(%rbp),%rdi
    584c:	e8 0f 3c 00 00       	callq  9460 <free>
    5851:	48 81 ec 10 10 00 00 	sub    $0x1010,%rsp
    5858:	48 8d 85 d0 ef ff ff 	lea    -0x1030(%rbp),%rax
    585f:	4c 8d 7c 24 0f       	lea    0xf(%rsp),%r15
    5864:	48 89 85 a0 ef ff ff 	mov    %rax,-0x1060(%rbp)
    586b:	48 83 c0 0b          	add    $0xb,%rax
    586f:	49 83 e7 f0          	and    $0xfffffffffffffff0,%r15
    5873:	48 89 85 98 ef ff ff 	mov    %rax,-0x1068(%rbp)
    587a:	4c 89 bd c8 ef ff ff 	mov    %r15,-0x1038(%rbp)
    5881:	e9 a5 00 00 00       	jmpq   592b <read_environments+0x32b>
    5886:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    588d:	00 00 00 
    5890:	48 8b bd 98 ef ff ff 	mov    -0x1068(%rbp),%rdi
    5897:	41 8d 57 01          	lea    0x1(%r15),%edx
    589b:	4c 89 f6             	mov    %r14,%rsi
    589e:	48 03 9d b0 ef ff ff 	add    -0x1050(%rbp),%rbx
    58a5:	48 63 d2             	movslq %edx,%rdx
    58a8:	e8 43 03 01 00       	callq  15bf0 <memcpy>
    58ad:	48 8b 95 c8 ef ff ff 	mov    -0x1038(%rbp),%rdx
    58b4:	48 8b b5 a0 ef ff ff 	mov    -0x1060(%rbp),%rsi
    58bb:	b9 00 10 00 00       	mov    $0x1000,%ecx
    58c0:	48 8b bd c0 ef ff ff 	mov    -0x1040(%rbp),%rdi
    58c7:	e8 c4 25 01 00       	callq  17e90 <get_config>
    58cc:	48 85 c0             	test   %rax,%rax
    58cf:	0f 8e cb 00 00 00    	jle    59a0 <read_environments+0x3a0>
    58d5:	4d 63 ef             	movslq %r15d,%r13
    58d8:	48 89 85 b8 ef ff ff 	mov    %rax,-0x1048(%rbp)
    58df:	4a 8d 7c 28 02       	lea    0x2(%rax,%r13,1),%rdi
    58e4:	e8 37 37 00 00       	callq  9020 <malloc>
    58e9:	4c 89 ea             	mov    %r13,%rdx
    58ec:	4c 89 f6             	mov    %r14,%rsi
    58ef:	48 89 c7             	mov    %rax,%rdi
    58f2:	49 89 c7             	mov    %rax,%r15
    58f5:	e8 f6 02 01 00       	callq  15bf0 <memcpy>
    58fa:	48 8b 8d b8 ef ff ff 	mov    -0x1048(%rbp),%rcx
    5901:	48 8b b5 c8 ef ff ff 	mov    -0x1038(%rbp),%rsi
    5908:	4b 8d 7c 2f 01       	lea    0x1(%r15,%r13,1),%rdi
    590d:	43 c6 04 2f 3d       	movb   $0x3d,(%r15,%r13,1)
    5912:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    5916:	e8 d5 02 01 00       	callq  15bf0 <memcpy>
    591b:	4c 89 3b             	mov    %r15,(%rbx)
    591e:	49 83 c4 10          	add    $0x10,%r12
    5922:	4c 39 a5 a8 ef ff ff 	cmp    %r12,-0x1058(%rbp)
    5929:	74 3a                	je     5965 <read_environments+0x365>
    592b:	49 63 5c 24 0c       	movslq 0xc(%r12),%rbx
    5930:	4d 8b 34 24          	mov    (%r12),%r14
    5934:	45 8b 7c 24 08       	mov    0x8(%r12),%r15d
    5939:	48 89 d8             	mov    %rbx,%rax
    593c:	48 c1 e3 03          	shl    $0x3,%rbx
    5940:	83 f8 ff             	cmp    $0xffffffff,%eax
    5943:	0f 85 47 ff ff ff    	jne    5890 <read_environments+0x290>
    5949:	48 63 9d 94 ef ff ff 	movslq -0x106c(%rbp),%rbx
    5950:	48 89 d8             	mov    %rbx,%rax
    5953:	48 c1 e3 03          	shl    $0x3,%rbx
    5957:	83 c0 01             	add    $0x1,%eax
    595a:	89 85 94 ef ff ff    	mov    %eax,-0x106c(%rbp)
    5960:	e9 2b ff ff ff       	jmpq   5890 <read_environments+0x290>
    5965:	48 8b 85 80 ef ff ff 	mov    -0x1080(%rbp),%rax
    596c:	48 8b 8d b0 ef ff ff 	mov    -0x1050(%rbp),%rcx
    5973:	48 89 08             	mov    %rcx,(%rax)
    5976:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    597a:	5b                   	pop    %rbx
    597b:	41 5c                	pop    %r12
    597d:	41 5d                	pop    %r13
    597f:	41 5e                	pop    %r14
    5981:	41 5f                	pop    %r15
    5983:	5d                   	pop    %rbp
    5984:	c3                   	retq   
    5985:	0f 1f 00             	nopl   (%rax)
    5988:	45 89 6f 0c          	mov    %r13d,0xc(%r15)
    598c:	83 85 b8 ef ff ff 01 	addl   $0x1,-0x1048(%rbp)
    5993:	e9 1f fe ff ff       	jmpq   57b7 <read_environments+0x1b7>
    5998:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    599f:	00 
    59a0:	41 8d 7f 02          	lea    0x2(%r15),%edi
    59a4:	48 63 ff             	movslq %edi,%rdi
    59a7:	e8 74 36 00 00       	callq  9020 <malloc>
    59ac:	4d 63 c7             	movslq %r15d,%r8
    59af:	4c 89 f6             	mov    %r14,%rsi
    59b2:	48 89 c7             	mov    %rax,%rdi
    59b5:	4c 89 c2             	mov    %r8,%rdx
    59b8:	4c 89 85 88 ef ff ff 	mov    %r8,-0x1078(%rbp)
    59bf:	48 89 85 b8 ef ff ff 	mov    %rax,-0x1048(%rbp)
    59c6:	e8 25 02 01 00       	callq  15bf0 <memcpy>
    59cb:	48 8b 8d b8 ef ff ff 	mov    -0x1048(%rbp),%rcx
    59d2:	4c 8b 85 88 ef ff ff 	mov    -0x1078(%rbp),%r8
    59d9:	42 c6 04 01 3d       	movb   $0x3d,(%rcx,%r8,1)
    59de:	42 c6 44 01 01 00    	movb   $0x0,0x1(%rcx,%r8,1)
    59e4:	48 89 0b             	mov    %rcx,(%rbx)
    59e7:	e9 32 ff ff ff       	jmpq   591e <read_environments+0x31e>
    59ec:	48 8d 3d 7d 29 02 00 	lea    0x2297d(%rip),%rdi        # 28370 <section_rodata+0x770>
    59f3:	31 d2                	xor    %edx,%edx
    59f5:	be 6a 00 00 00       	mov    $0x6a,%esi
    59fa:	e8 51 17 00 00       	callq  7150 <warn>
    59ff:	e8 3c 17 00 00       	callq  7140 <__abort>
    5a04:	e9 6a fc ff ff       	jmpq   5673 <read_environments+0x73>
    5a09:	48 8b bd a0 ef ff ff 	mov    -0x1060(%rbp),%rdi
    5a10:	e8 4b 3a 00 00       	callq  9460 <free>
    5a15:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    5a19:	5b                   	pop    %rbx
    5a1a:	41 5c                	pop    %r12
    5a1c:	41 5d                	pop    %r13
    5a1e:	41 5e                	pop    %r14
    5a20:	41 5f                	pop    %r15
    5a22:	5d                   	pop    %rbp
    5a23:	c3                   	retq   
    5a24:	31 db                	xor    %ebx,%ebx
    5a26:	c7 85 b8 ef ff ff 00 	movl   $0x0,-0x1048(%rbp)
    5a2d:	00 00 00 
    5a30:	c7 85 94 ef ff ff 00 	movl   $0x0,-0x106c(%rbp)
    5a37:	00 00 00 
    5a3a:	e9 9d fd ff ff       	jmpq   57dc <read_environments+0x1dc>
    5a3f:	90                   	nop

0000000000005a40 <loader_filter>:
    5a40:	80 3f 6c             	cmpb   $0x6c,(%rdi)
    5a43:	55                   	push   %rbp
    5a44:	b8 01 00 00 00       	mov    $0x1,%eax
    5a49:	48 89 e5             	mov    %rsp,%rbp
    5a4c:	74 02                	je     5a50 <loader_filter+0x10>
    5a4e:	5d                   	pop    %rbp
    5a4f:	c3                   	retq   
    5a50:	80 7f 01 6f          	cmpb   $0x6f,0x1(%rdi)
    5a54:	75 f8                	jne    5a4e <loader_filter+0xe>
    5a56:	80 7f 02 61          	cmpb   $0x61,0x2(%rdi)
    5a5a:	75 f2                	jne    5a4e <loader_filter+0xe>
    5a5c:	80 7f 03 64          	cmpb   $0x64,0x3(%rdi)
    5a60:	75 ec                	jne    5a4e <loader_filter+0xe>
    5a62:	80 7f 04 65          	cmpb   $0x65,0x4(%rdi)
    5a66:	75 e6                	jne    5a4e <loader_filter+0xe>
    5a68:	80 7f 05 72          	cmpb   $0x72,0x5(%rdi)
    5a6c:	75 e0                	jne    5a4e <loader_filter+0xe>
    5a6e:	31 c0                	xor    %eax,%eax
    5a70:	80 7f 06 2e          	cmpb   $0x2e,0x6(%rdi)
    5a74:	5d                   	pop    %rbp
    5a75:	0f 95 c0             	setne  %al
    5a78:	c3                   	retq   
    5a79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005a80 <pal_control_addr>:
    5a80:	55                   	push   %rbp
    5a81:	48 8d 05 d8 8c 22 04 	lea    0x4228cd8(%rip),%rax        # 422e760 <__pal_control>
    5a88:	48 89 e5             	mov    %rsp,%rbp
    5a8b:	5d                   	pop    %rbp
    5a8c:	c3                   	retq   
    5a8d:	0f 1f 00             	nopl   (%rax)

0000000000005a90 <pal_main>:
    5a90:	55                   	push   %rbp
    5a91:	48 89 e5             	mov    %rsp,%rbp
    5a94:	41 57                	push   %r15
    5a96:	41 56                	push   %r14
    5a98:	41 55                	push   %r13
    5a9a:	41 54                	push   %r12
    5a9c:	4d 89 c7             	mov    %r8,%r15
    5a9f:	53                   	push   %rbx
    5aa0:	48 81 ec 58 11 00 00 	sub    $0x1158,%rsp
    5aa7:	48 8d 1d 32 8c 22 04 	lea    0x4228c32(%rip),%rbx        # 422e6e0 <pal_state>
    5aae:	48 89 b5 b8 ee ff ff 	mov    %rsi,-0x1148(%rbp)
    5ab5:	48 89 95 b0 ee ff ff 	mov    %rdx,-0x1150(%rbp)
    5abc:	48 89 8d 90 ee ff ff 	mov    %rcx,-0x1170(%rbp)
    5ac3:	4c 89 85 a8 ee ff ff 	mov    %r8,-0x1158(%rbp)
    5aca:	4c 89 8d 98 ee ff ff 	mov    %r9,-0x1168(%rbp)
    5ad1:	48 89 3b             	mov    %rdi,(%rbx)
    5ad4:	e8 87 97 00 00       	callq  f260 <_DkGetPagesize>
    5ad9:	48 89 43 48          	mov    %rax,0x48(%rbx)
    5add:	e8 8e 97 00 00       	callq  f270 <_DkGetAllocationAlignment>
    5ae2:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    5ae6:	89 c7                	mov    %eax,%edi
    5ae8:	48 89 43 50          	mov    %rax,0x50(%rbx)
    5aec:	48 89 53 58          	mov    %rdx,0x58(%rbx)
    5af0:	48 f7 d2             	not    %rdx
    5af3:	48 89 53 60          	mov    %rdx,0x60(%rbx)
    5af7:	e8 d4 33 00 00       	callq  8ed0 <init_slab_mgr>
    5afc:	48 8b bd b0 ee ff ff 	mov    -0x1150(%rbp),%rdi
    5b03:	4c 89 7b 08          	mov    %r15,0x8(%rbx)
    5b07:	48 85 ff             	test   %rdi,%rdi
    5b0a:	0f 84 30 06 00 00    	je     6140 <pal_main+0x6b0>
    5b10:	4c 8d ad d0 ee ff ff 	lea    -0x1130(%rbp),%r13
    5b17:	ba 00 01 00 00       	mov    $0x100,%edx
    5b1c:	4c 89 ee             	mov    %r13,%rsi
    5b1f:	e8 2c e0 ff ff       	callq  3b50 <_DkStreamGetName>
    5b24:	4c 63 e0             	movslq %eax,%r12
    5b27:	4d 85 e4             	test   %r12,%r12
    5b2a:	0f 88 31 08 00 00    	js     6361 <pal_main+0x8d1>
    5b30:	49 8d 74 24 01       	lea    0x1(%r12),%rsi
    5b35:	4c 89 ef             	mov    %r13,%rdi
    5b38:	e8 53 38 00 00       	callq  9390 <remalloc>
    5b3d:	48 8b bd b8 ee ff ff 	mov    -0x1148(%rbp),%rdi
    5b44:	49 89 c4             	mov    %rax,%r12
    5b47:	48 85 ff             	test   %rdi,%rdi
    5b4a:	0f 84 10 05 00 00    	je     6060 <pal_main+0x5d0>
    5b50:	ba 00 01 00 00       	mov    $0x100,%edx
    5b55:	4c 89 ee             	mov    %r13,%rsi
    5b58:	e8 f3 df ff ff       	callq  3b50 <_DkStreamGetName>
    5b5d:	4c 63 f0             	movslq %eax,%r14
    5b60:	4d 85 f6             	test   %r14,%r14
    5b63:	0f 88 7e 08 00 00    	js     63e7 <pal_main+0x957>
    5b69:	49 8d 76 01          	lea    0x1(%r14),%rsi
    5b6d:	4c 89 ef             	mov    %r13,%rdi
    5b70:	e8 1b 38 00 00       	callq  9390 <remalloc>
    5b75:	49 89 c7             	mov    %rax,%r15
    5b78:	4c 8b 4b 40          	mov    0x40(%rbx),%r9
    5b7c:	4d 85 c9             	test   %r9,%r9
    5b7f:	0f 84 3b 06 00 00    	je     61c0 <pal_main+0x730>
    5b85:	48 8b bd b0 ee ff ff 	mov    -0x1150(%rbp),%rdi
    5b8c:	48 85 ff             	test   %rdi,%rdi
    5b8f:	0f 84 6c 03 00 00    	je     5f01 <pal_main+0x471>
    5b95:	4d 85 e4             	test   %r12,%r12
    5b98:	41 0f 94 c6          	sete   %r14b
    5b9c:	48 83 bd a8 ee ff ff 	cmpq   $0x0,-0x1158(%rbp)
    5ba3:	00 
    5ba4:	0f 95 c0             	setne  %al
    5ba7:	41 09 c6             	or     %eax,%r14d
    5baa:	e8 31 20 00 00       	callq  7be0 <check_elf_object>
    5baf:	85 c0                	test   %eax,%eax
    5bb1:	0f 88 65 08 00 00    	js     641c <pal_main+0x98c>
    5bb7:	48 8b bd b0 ee ff ff 	mov    -0x1150(%rbp),%rdi
    5bbe:	4c 8b 4b 40          	mov    0x40(%rbx),%r9
    5bc2:	48 8b 85 b8 ee ff ff 	mov    -0x1148(%rbp),%rax
    5bc9:	45 84 f6             	test   %r14b,%r14b
    5bcc:	4c 89 7b 10          	mov    %r15,0x10(%rbx)
    5bd0:	4c 89 63 20          	mov    %r12,0x20(%rbx)
    5bd4:	48 89 7b 28          	mov    %rdi,0x28(%rbx)
    5bd8:	4d 89 e5             	mov    %r12,%r13
    5bdb:	48 89 43 18          	mov    %rax,0x18(%rbx)
    5bdf:	0f 85 6b 04 00 00    	jne    6050 <pal_main+0x5c0>
    5be5:	48 8b 45 10          	mov    0x10(%rbp),%rax
    5be9:	48 83 c0 08          	add    $0x8,%rax
    5bed:	4d 85 c9             	test   %r9,%r9
    5bf0:	48 89 85 a0 ee ff ff 	mov    %rax,-0x1160(%rbp)
    5bf7:	74 32                	je     5c2b <pal_main+0x19b>
    5bf9:	4c 8d b5 d0 ef ff ff 	lea    -0x1030(%rbp),%r14
    5c00:	48 8d 35 ce 24 02 00 	lea    0x224ce(%rip),%rsi        # 280d5 <section_rodata+0x4d5>
    5c07:	b9 00 10 00 00       	mov    $0x1000,%ecx
    5c0c:	4c 89 cf             	mov    %r9,%rdi
    5c0f:	4c 89 f2             	mov    %r14,%rdx
    5c12:	e8 79 22 01 00       	callq  17e90 <get_config>
    5c17:	48 85 c0             	test   %rax,%rax
    5c1a:	7e 0f                	jle    5c2b <pal_main+0x19b>
    5c1c:	48 8d 70 01          	lea    0x1(%rax),%rsi
    5c20:	4c 89 f7             	mov    %r14,%rdi
    5c23:	e8 68 37 00 00       	callq  9390 <remalloc>
    5c28:	49 89 c4             	mov    %rax,%r12
    5c2b:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
    5c2f:	e8 cc f9 ff ff       	callq  5600 <read_environments>
    5c34:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    5c38:	48 85 ff             	test   %rdi,%rdi
    5c3b:	0f 84 cf 01 00 00    	je     5e10 <pal_main+0x380>
    5c41:	4c 8d b5 d0 ef ff ff 	lea    -0x1030(%rbp),%r14
    5c48:	48 8d 35 96 24 02 00 	lea    0x22496(%rip),%rsi        # 280e5 <section_rodata+0x4e5>
    5c4f:	b9 00 10 00 00       	mov    $0x1000,%ecx
    5c54:	4c 89 f2             	mov    %r14,%rdx
    5c57:	e8 34 22 01 00       	callq  17e90 <get_config>
    5c5c:	48 85 c0             	test   %rax,%rax
    5c5f:	0f 8e 93 00 00 00    	jle    5cf8 <pal_main+0x268>
    5c65:	4d 8d 3c 06          	lea    (%r14,%rax,1),%r15
    5c69:	4c 89 f7             	mov    %r14,%rdi
    5c6c:	eb 0d                	jmp    5c7b <pal_main+0x1eb>
    5c6e:	66 90                	xchg   %ax,%ax
    5c70:	84 c0                	test   %al,%al
    5c72:	49 8d 56 01          	lea    0x1(%r14),%rdx
    5c76:	74 0b                	je     5c83 <pal_main+0x1f3>
    5c78:	49 89 d6             	mov    %rdx,%r14
    5c7b:	41 0f b6 06          	movzbl (%r14),%eax
    5c7f:	3c 2c                	cmp    $0x2c,%al
    5c81:	75 ed                	jne    5c70 <pal_main+0x1e0>
    5c83:	49 39 fe             	cmp    %rdi,%r14
    5c86:	77 18                	ja     5ca0 <pal_main+0x210>
    5c88:	4d 39 fe             	cmp    %r15,%r14
    5c8b:	74 6b                	je     5cf8 <pal_main+0x268>
    5c8d:	49 8d 56 01          	lea    0x1(%r14),%rdx
    5c91:	48 89 d7             	mov    %rdx,%rdi
    5c94:	eb e2                	jmp    5c78 <pal_main+0x1e8>
    5c96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    5c9d:	00 00 00 
    5ca0:	41 c6 06 00          	movb   $0x0,(%r14)
    5ca4:	be 02 00 00 00       	mov    $0x2,%esi
    5ca9:	e8 d2 2e 00 00       	callq  8b80 <load_elf_object>
    5cae:	85 c0                	test   %eax,%eax
    5cb0:	79 d6                	jns    5c88 <pal_main+0x1f8>
    5cb2:	f7 d8                	neg    %eax
    5cb4:	4c 8d 05 9d 27 02 00 	lea    0x2279d(%rip),%r8        # 28458 <section_rodata+0x858>
    5cbb:	48 8d 35 c6 27 02 00 	lea    0x227c6(%rip),%rsi        # 28488 <__FUNCTION__.2781>
    5cc2:	48 8d 3d d7 26 02 00 	lea    0x226d7(%rip),%rdi        # 283a0 <section_rodata+0x7a0>
    5cc9:	89 c1                	mov    %eax,%ecx
    5ccb:	89 85 88 ee ff ff    	mov    %eax,-0x1178(%rbp)
    5cd1:	ba 46 00 00 00       	mov    $0x46,%edx
    5cd6:	31 c0                	xor    %eax,%eax
    5cd8:	e8 53 39 00 00       	callq  9630 <pal_printf>
    5cdd:	44 8b 8d 88 ee ff ff 	mov    -0x1178(%rbp),%r9d
    5ce4:	44 89 cf             	mov    %r9d,%edi
    5ce7:	e8 74 8f 00 00       	callq  ec60 <_DkProcessExit>
    5cec:	4d 39 fe             	cmp    %r15,%r14
    5cef:	75 9c                	jne    5c8d <pal_main+0x1fd>
    5cf1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5cf8:	48 8b bd b0 ee ff ff 	mov    -0x1150(%rbp),%rdi
    5cff:	48 85 ff             	test   %rdi,%rdi
    5d02:	74 2c                	je     5d30 <pal_main+0x2a0>
    5d04:	48 8b 85 90 ee ff ff 	mov    -0x1170(%rbp),%rax
    5d0b:	48 85 c0             	test   %rax,%rax
    5d0e:	0f 84 ec 05 00 00    	je     6300 <pal_main+0x870>
    5d14:	48 89 fe             	mov    %rdi,%rsi
    5d17:	ba 01 00 00 00       	mov    $0x1,%edx
    5d1c:	48 89 c7             	mov    %rax,%rdi
    5d1f:	e8 cc 26 00 00       	callq  83f0 <add_elf_object>
    5d24:	48 63 c8             	movslq %eax,%rcx
    5d27:	48 85 c9             	test   %rcx,%rcx
    5d2a:	0f 88 c8 03 00 00    	js     60f8 <pal_main+0x668>
    5d30:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    5d34:	48 85 ff             	test   %rdi,%rdi
    5d37:	0f 84 e3 00 00 00    	je     5e20 <pal_main+0x390>
    5d3d:	4c 8d b5 d0 ef ff ff 	lea    -0x1030(%rbp),%r14
    5d44:	48 8d 35 a9 23 02 00 	lea    0x223a9(%rip),%rsi        # 280f4 <section_rodata+0x4f4>
    5d4b:	b9 00 10 00 00       	mov    $0x1000,%ecx
    5d50:	4c 89 f2             	mov    %r14,%rdx
    5d53:	e8 38 21 01 00       	callq  17e90 <get_config>
    5d58:	48 85 c0             	test   %rax,%rax
    5d5b:	0f 8e bf 00 00 00    	jle    5e20 <pal_main+0x390>
    5d61:	48 8d 35 9e 23 02 00 	lea    0x2239e(%rip),%rsi        # 28106 <section_rodata+0x506>
    5d68:	ba 07 00 00 00       	mov    $0x7,%edx
    5d6d:	4c 89 f7             	mov    %r14,%rdi
    5d70:	48 c7 85 c8 ee ff ff 	movq   $0x0,-0x1138(%rbp)
    5d77:	00 00 00 00 
    5d7b:	e8 10 f9 00 00       	callq  15690 <memcmp>
    5d80:	85 c0                	test   %eax,%eax
    5d82:	0f 84 08 04 00 00    	je     6190 <pal_main+0x700>
    5d88:	48 8d 35 f8 22 02 00 	lea    0x222f8(%rip),%rsi        # 28087 <section_rodata+0x487>
    5d8f:	ba 05 00 00 00       	mov    $0x5,%edx
    5d94:	4c 89 f7             	mov    %r14,%rdi
    5d97:	e8 f4 f8 00 00       	callq  15690 <memcmp>
    5d9c:	85 c0                	test   %eax,%eax
    5d9e:	0f 85 f2 05 00 00    	jne    6396 <pal_main+0x906>
    5da4:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    5da8:	48 8d 35 66 23 02 00 	lea    0x22366(%rip),%rsi        # 28115 <section_rodata+0x515>
    5daf:	b9 00 10 00 00       	mov    $0x1000,%ecx
    5db4:	4c 89 f2             	mov    %r14,%rdx
    5db7:	e8 d4 20 01 00       	callq  17e90 <get_config>
    5dbc:	48 85 c0             	test   %rax,%rax
    5dbf:	0f 8e bf 07 00 00    	jle    6584 <pal_main+0xaf4>
    5dc5:	48 8d bd c8 ee ff ff 	lea    -0x1138(%rbp),%rdi
    5dcc:	45 31 c9             	xor    %r9d,%r9d
    5dcf:	41 b8 40 00 00 00    	mov    $0x40,%r8d
    5dd5:	b9 80 01 00 00       	mov    $0x180,%ecx
    5dda:	ba 02 00 00 00       	mov    $0x2,%edx
    5ddf:	4c 89 f6             	mov    %r14,%rsi
    5de2:	e8 b9 d0 ff ff       	callq  2ea0 <_DkStreamOpen>
    5de7:	48 63 f8             	movslq %eax,%rdi
    5dea:	48 85 ff             	test   %rdi,%rdi
    5ded:	0f 88 79 06 00 00    	js     646c <pal_main+0x9dc>
    5df3:	4c 8d 35 66 89 22 04 	lea    0x4228966(%rip),%r14        # 422e760 <__pal_control>
    5dfa:	48 8b 85 c8 ee ff ff 	mov    -0x1138(%rbp),%rax
    5e01:	49 89 46 38          	mov    %rax,0x38(%r14)
    5e05:	eb 20                	jmp    5e27 <pal_main+0x397>
    5e07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5e0e:	00 00 
    5e10:	48 8b bd b0 ee ff ff 	mov    -0x1150(%rbp),%rdi
    5e17:	48 85 ff             	test   %rdi,%rdi
    5e1a:	0f 85 e4 fe ff ff    	jne    5d04 <pal_main+0x274>
    5e20:	4c 8d 35 39 89 22 04 	lea    0x4228939(%rip),%r14        # 422e760 <__pal_control>
    5e27:	48 8d 05 43 23 02 00 	lea    0x22343(%rip),%rax        # 28171 <section_rodata+0x571>
    5e2e:	49 89 06             	mov    %rax,(%r14)
    5e31:	e8 8a 94 00 00       	callq  f2c0 <_DkGetProcessId>
    5e36:	49 89 46 08          	mov    %rax,0x8(%r14)
    5e3a:	e8 a1 94 00 00       	callq  f2e0 <_DkGetHostId>
    5e3f:	49 89 46 10          	mov    %rax,0x10(%r14)
    5e43:	48 8b 85 b8 ee ff ff 	mov    -0x1148(%rbp),%rax
    5e4a:	49 8d 76 50          	lea    0x50(%r14),%rsi
    5e4e:	49 8d 7e 48          	lea    0x48(%r14),%rdi
    5e52:	4d 89 6e 20          	mov    %r13,0x20(%r14)
    5e56:	49 89 46 18          	mov    %rax,0x18(%r14)
    5e5a:	48 8b 85 a8 ee ff ff 	mov    -0x1158(%rbp),%rax
    5e61:	49 89 46 28          	mov    %rax,0x28(%r14)
    5e65:	48 8b 85 98 ee ff ff 	mov    -0x1168(%rbp),%rax
    5e6c:	49 89 46 30          	mov    %rax,0x30(%r14)
    5e70:	e8 0b 94 00 00       	callq  f280 <_DkGetAvailableUserAddressRange>
    5e75:	48 8b 43 48          	mov    0x48(%rbx),%rax
    5e79:	49 89 46 78          	mov    %rax,0x78(%r14)
    5e7d:	48 8b 43 50          	mov    0x50(%rbx),%rax
    5e81:	49 89 86 80 00 00 00 	mov    %rax,0x80(%r14)
    5e88:	e8 e3 71 00 00       	callq  d070 <_DkBroadcastStreamOpen>
    5e8d:	49 8d be 88 00 00 00 	lea    0x88(%r14),%rdi
    5e94:	49 89 46 40          	mov    %rax,0x40(%r14)
    5e98:	e8 d3 9a 00 00       	callq  f970 <_DkGetCPUInfo>
    5e9d:	e8 ae 7c 00 00       	callq  db50 <_DkMemoryQuota>
    5ea2:	48 8b 55 18          	mov    0x18(%rbp),%rdx
    5ea6:	48 8b b5 a0 ee ff ff 	mov    -0x1160(%rbp),%rsi
    5ead:	4c 89 e7             	mov    %r12,%rdi
    5eb0:	49 89 86 c0 00 00 00 	mov    %rax,0xc0(%r14)
    5eb7:	e8 34 2d 00 00       	callq  8bf0 <start_execution>
    5ebc:	4c 8d 05 b8 22 02 00 	lea    0x222b8(%rip),%r8        # 2817b <section_rodata+0x57b>
    5ec3:	48 8d 35 ce 25 02 00 	lea    0x225ce(%rip),%rsi        # 28498 <__FUNCTION__.2860>
    5eca:	48 8d 3d cf 24 02 00 	lea    0x224cf(%rip),%rdi        # 283a0 <section_rodata+0x7a0>
    5ed1:	b9 06 00 00 00       	mov    $0x6,%ecx
    5ed6:	ba e2 01 00 00       	mov    $0x1e2,%edx
    5edb:	31 c0                	xor    %eax,%eax
    5edd:	e8 4e 37 00 00       	callq  9630 <pal_printf>
    5ee2:	bf 06 00 00 00       	mov    $0x6,%edi
    5ee7:	e8 74 8d 00 00       	callq  ec60 <_DkProcessExit>
    5eec:	48 81 c4 58 11 00 00 	add    $0x1158,%rsp
    5ef3:	5b                   	pop    %rbx
    5ef4:	41 5c                	pop    %r12
    5ef6:	41 5d                	pop    %r13
    5ef8:	41 5e                	pop    %r14
    5efa:	41 5f                	pop    %r15
    5efc:	5d                   	pop    %rbp
    5efd:	c3                   	retq   
    5efe:	4d 89 d1             	mov    %r10,%r9
    5f01:	48 8d 35 84 21 02 00 	lea    0x22184(%rip),%rsi        # 2808c <section_rodata+0x48c>
    5f08:	b9 00 01 00 00       	mov    $0x100,%ecx
    5f0d:	4c 89 ea             	mov    %r13,%rdx
    5f10:	4c 89 cf             	mov    %r9,%rdi
    5f13:	e8 78 1f 01 00       	callq  17e90 <get_config>
    5f18:	48 85 c0             	test   %rax,%rax
    5f1b:	7e 5c                	jle    5f79 <pal_main+0x4e9>
    5f1d:	48 8d 70 01          	lea    0x1(%rax),%rsi
    5f21:	4c 89 ef             	mov    %r13,%rdi
    5f24:	e8 67 34 00 00       	callq  9390 <remalloc>
    5f29:	48 8d bd b0 ee ff ff 	lea    -0x1150(%rbp),%rdi
    5f30:	45 31 c9             	xor    %r9d,%r9d
    5f33:	45 31 c0             	xor    %r8d,%r8d
    5f36:	31 c9                	xor    %ecx,%ecx
    5f38:	31 d2                	xor    %edx,%edx
    5f3a:	48 89 c6             	mov    %rax,%rsi
    5f3d:	49 89 c4             	mov    %rax,%r12
    5f40:	e8 5b cf ff ff       	callq  2ea0 <_DkStreamOpen>
    5f45:	85 c0                	test   %eax,%eax
    5f47:	79 30                	jns    5f79 <pal_main+0x4e9>
    5f49:	f7 d8                	neg    %eax
    5f4b:	48 8d 3d 4e 24 02 00 	lea    0x2244e(%rip),%rdi        # 283a0 <section_rodata+0x7a0>
    5f52:	4c 8d 05 3f 21 02 00 	lea    0x2213f(%rip),%r8        # 28098 <section_rodata+0x498>
    5f59:	48 8d 35 38 25 02 00 	lea    0x22538(%rip),%rsi        # 28498 <__FUNCTION__.2860>
    5f60:	41 89 c5             	mov    %eax,%r13d
    5f63:	89 c1                	mov    %eax,%ecx
    5f65:	ba 67 01 00 00       	mov    $0x167,%edx
    5f6a:	31 c0                	xor    %eax,%eax
    5f6c:	e8 bf 36 00 00       	callq  9630 <pal_printf>
    5f71:	44 89 ef             	mov    %r13d,%edi
    5f74:	e8 e7 8c 00 00       	callq  ec60 <_DkProcessExit>
    5f79:	4d 85 ff             	test   %r15,%r15
    5f7c:	48 8b bd b0 ee ff ff 	mov    -0x1150(%rbp),%rdi
    5f83:	0f 84 b1 03 00 00    	je     633a <pal_main+0x8aa>
    5f89:	48 85 ff             	test   %rdi,%rdi
    5f8c:	0f 85 a8 03 00 00    	jne    633a <pal_main+0x8aa>
    5f92:	4c 89 ff             	mov    %r15,%rdi
    5f95:	e8 d6 f6 00 00       	callq  15670 <strlen>
    5f9a:	4c 8d 68 f7          	lea    -0x9(%rax),%r13
    5f9e:	48 8d 35 c3 20 02 00 	lea    0x220c3(%rip),%rsi        # 28068 <section_rodata+0x468>
    5fa5:	ba 0a 00 00 00       	mov    $0xa,%edx
    5faa:	49 89 c6             	mov    %rax,%r14
    5fad:	4b 8d 3c 2f          	lea    (%r15,%r13,1),%rdi
    5fb1:	e8 da f6 00 00       	callq  15690 <memcmp>
    5fb6:	85 c0                	test   %eax,%eax
    5fb8:	0f 85 54 03 00 00    	jne    6312 <pal_main+0x882>
    5fbe:	49 8d 7d 01          	lea    0x1(%r13),%rdi
    5fc2:	e8 59 30 00 00       	callq  9020 <malloc>
    5fc7:	48 85 c0             	test   %rax,%rax
    5fca:	49 89 c4             	mov    %rax,%r12
    5fcd:	0f 84 e6 05 00 00    	je     65b9 <pal_main+0xb29>
    5fd3:	4c 89 ea             	mov    %r13,%rdx
    5fd6:	4c 89 fe             	mov    %r15,%rsi
    5fd9:	4c 89 e7             	mov    %r12,%rdi
    5fdc:	e8 0f fc 00 00       	callq  15bf0 <memcpy>
    5fe1:	48 8d bd b0 ee ff ff 	lea    -0x1150(%rbp),%rdi
    5fe8:	45 31 c9             	xor    %r9d,%r9d
    5feb:	45 31 c0             	xor    %r8d,%r8d
    5fee:	31 c9                	xor    %ecx,%ecx
    5ff0:	31 d2                	xor    %edx,%edx
    5ff2:	43 c6 04 2c 00       	movb   $0x0,(%r12,%r13,1)
    5ff7:	4c 89 e6             	mov    %r12,%rsi
    5ffa:	e8 a1 ce ff ff       	callq  2ea0 <_DkStreamOpen>
    5fff:	85 c0                	test   %eax,%eax
    6001:	0f 89 2c 03 00 00    	jns    6333 <pal_main+0x8a3>
    6007:	4c 89 e7             	mov    %r12,%rdi
    600a:	45 31 e4             	xor    %r12d,%r12d
    600d:	41 be 01 00 00 00    	mov    $0x1,%r14d
    6013:	e8 48 34 00 00       	callq  9460 <free>
    6018:	48 8b bd b0 ee ff ff 	mov    -0x1150(%rbp),%rdi
    601f:	48 85 ff             	test   %rdi,%rdi
    6022:	0f 85 82 fb ff ff    	jne    5baa <pal_main+0x11a>
    6028:	48 8b 85 b8 ee ff ff 	mov    -0x1148(%rbp),%rax
    602f:	4c 8b 4b 40          	mov    0x40(%rbx),%r9
    6033:	4c 89 7b 10          	mov    %r15,0x10(%rbx)
    6037:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    603e:	00 
    603f:	48 c7 43 28 00 00 00 	movq   $0x0,0x28(%rbx)
    6046:	00 
    6047:	48 89 43 18          	mov    %rax,0x18(%rbx)
    604b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6050:	48 8b 45 10          	mov    0x10(%rbp),%rax
    6054:	4d 89 e5             	mov    %r12,%r13
    6057:	4c 8b 20             	mov    (%rax),%r12
    605a:	e9 86 fb ff ff       	jmpq   5be5 <pal_main+0x155>
    605f:	90                   	nop
    6060:	48 83 bd b0 ee ff ff 	cmpq   $0x0,-0x1150(%rbp)
    6067:	00 
    6068:	0f 84 ec 00 00 00    	je     615a <pal_main+0x6ca>
    606e:	ba 00 01 00 00       	mov    $0x100,%edx
    6073:	4c 89 ee             	mov    %r13,%rsi
    6076:	4c 89 e7             	mov    %r12,%rdi
    6079:	e8 e2 27 01 00       	callq  18860 <get_base_name>
    607e:	ba 00 01 00 00       	mov    $0x100,%edx
    6083:	48 98                	cltq   
    6085:	48 29 c2             	sub    %rax,%rdx
    6088:	48 83 fa 09          	cmp    $0x9,%rdx
    608c:	0f 87 bf 03 00 00    	ja     6451 <pal_main+0x9c1>
    6092:	4c 8d b5 b8 ee ff ff 	lea    -0x1148(%rbp),%r14
    6099:	45 31 c9             	xor    %r9d,%r9d
    609c:	45 31 c0             	xor    %r8d,%r8d
    609f:	31 c9                	xor    %ecx,%ecx
    60a1:	31 d2                	xor    %edx,%edx
    60a3:	4c 89 ee             	mov    %r13,%rsi
    60a6:	4c 89 f7             	mov    %r14,%rdi
    60a9:	45 31 ff             	xor    %r15d,%r15d
    60ac:	e8 ef cd ff ff       	callq  2ea0 <_DkStreamOpen>
    60b1:	85 c0                	test   %eax,%eax
    60b3:	0f 84 bf fa ff ff    	je     5b78 <pal_main+0xe8>
    60b9:	48 8d 35 58 1f 02 00 	lea    0x21f58(%rip),%rsi        # 28018 <section_rodata+0x418>
    60c0:	45 31 c9             	xor    %r9d,%r9d
    60c3:	45 31 c0             	xor    %r8d,%r8d
    60c6:	31 c9                	xor    %ecx,%ecx
    60c8:	31 d2                	xor    %edx,%edx
    60ca:	4c 89 f7             	mov    %r14,%rdi
    60cd:	e8 ce cd ff ff       	callq  2ea0 <_DkStreamOpen>
    60d2:	85 c0                	test   %eax,%eax
    60d4:	4c 8d 3d 3d 1f 02 00 	lea    0x21f3d(%rip),%r15        # 28018 <section_rodata+0x418>
    60db:	0f 84 97 fa ff ff    	je     5b78 <pal_main+0xe8>
    60e1:	48 8d 3d 20 23 02 00 	lea    0x22320(%rip),%rdi        # 28408 <section_rodata+0x808>
    60e8:	31 c0                	xor    %eax,%eax
    60ea:	e8 41 35 00 00       	callq  9630 <pal_printf>
    60ef:	e9 84 fa ff ff       	jmpq   5b78 <pal_main+0xe8>
    60f4:	0f 1f 40 00          	nopl   0x0(%rax)
    60f8:	89 c8                	mov    %ecx,%eax
    60fa:	41 89 ce             	mov    %ecx,%r14d
    60fd:	4c 8d 05 22 1f 02 00 	lea    0x21f22(%rip),%r8        # 28026 <section_rodata+0x426>
    6104:	f7 d8                	neg    %eax
    6106:	83 f8 19             	cmp    $0x19,%eax
    6109:	7f 0d                	jg     6118 <pal_main+0x688>
    610b:	48 8d 15 0e 46 22 00 	lea    0x22460e(%rip),%rdx        # 22a720 <pal_errstring>
    6112:	48 98                	cltq   
    6114:	4c 8b 04 c2          	mov    (%rdx,%rax,8),%r8
    6118:	48 8d 35 79 23 02 00 	lea    0x22379(%rip),%rsi        # 28498 <__FUNCTION__.2860>
    611f:	48 8d 3d 7a 22 02 00 	lea    0x2227a(%rip),%rdi        # 283a0 <section_rodata+0x7a0>
    6126:	ba b3 01 00 00       	mov    $0x1b3,%edx
    612b:	31 c0                	xor    %eax,%eax
    612d:	e8 fe 34 00 00       	callq  9630 <pal_printf>
    6132:	44 89 f7             	mov    %r14d,%edi
    6135:	e8 26 8b 00 00       	callq  ec60 <_DkProcessExit>
    613a:	e9 f1 fb ff ff       	jmpq   5d30 <pal_main+0x2a0>
    613f:	90                   	nop
    6140:	48 8b bd b8 ee ff ff 	mov    -0x1148(%rbp),%rdi
    6147:	45 31 e4             	xor    %r12d,%r12d
    614a:	4c 8d ad d0 ee ff ff 	lea    -0x1130(%rbp),%r13
    6151:	48 85 ff             	test   %rdi,%rdi
    6154:	0f 85 f6 f9 ff ff    	jne    5b50 <pal_main+0xc0>
    615a:	4c 8d 05 7f 22 02 00 	lea    0x2227f(%rip),%r8        # 283e0 <section_rodata+0x7e0>
    6161:	48 8d 35 30 23 02 00 	lea    0x22330(%rip),%rsi        # 28498 <__FUNCTION__.2860>
    6168:	48 8d 3d 31 22 02 00 	lea    0x22231(%rip),%rdi        # 283a0 <section_rodata+0x7a0>
    616f:	b9 04 00 00 00       	mov    $0x4,%ecx
    6174:	ba 19 01 00 00       	mov    $0x119,%edx
    6179:	31 c0                	xor    %eax,%eax
    617b:	e8 b0 34 00 00       	callq  9630 <pal_printf>
    6180:	bf 04 00 00 00       	mov    $0x4,%edi
    6185:	e8 d6 8a 00 00       	callq  ec60 <_DkProcessExit>
    618a:	e9 df fe ff ff       	jmpq   606e <pal_main+0x5de>
    618f:	90                   	nop
    6190:	48 8d bd c8 ee ff ff 	lea    -0x1138(%rbp),%rdi
    6197:	48 8d 35 6f 1f 02 00 	lea    0x21f6f(%rip),%rsi        # 2810d <section_rodata+0x50d>
    619e:	45 31 c9             	xor    %r9d,%r9d
    61a1:	45 31 c0             	xor    %r8d,%r8d
    61a4:	31 c9                	xor    %ecx,%ecx
    61a6:	ba 02 00 00 00       	mov    $0x2,%edx
    61ab:	e8 f0 cc ff ff       	callq  2ea0 <_DkStreamOpen>
    61b0:	48 63 f8             	movslq %eax,%rdi
    61b3:	e9 32 fc ff ff       	jmpq   5dea <pal_main+0x35a>
    61b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    61bf:	00 
    61c0:	48 8b bd b8 ee ff ff 	mov    -0x1148(%rbp),%rdi
    61c7:	48 85 ff             	test   %rdi,%rdi
    61ca:	0f 84 d3 02 00 00    	je     64a3 <pal_main+0xa13>
    61d0:	48 8d b5 d0 ef ff ff 	lea    -0x1030(%rbp),%rsi
    61d7:	4c 89 8d a0 ee ff ff 	mov    %r9,-0x1160(%rbp)
    61de:	e8 ed d7 ff ff       	callq  39d0 <_DkStreamAttributesQuerybyHandle>
    61e3:	85 c0                	test   %eax,%eax
    61e5:	4c 8b 8d a0 ee ff ff 	mov    -0x1160(%rbp),%r9
    61ec:	0f 88 13 03 00 00    	js     6505 <pal_main+0xa75>
    61f2:	4c 8b b5 e0 ef ff ff 	mov    -0x1020(%rbp),%r14
    61f9:	48 8b bd b8 ee ff ff 	mov    -0x1148(%rbp),%rdi
    6200:	48 8d b5 c0 ee ff ff 	lea    -0x1140(%rbp),%rsi
    6207:	31 c9                	xor    %ecx,%ecx
    6209:	ba 01 00 00 00       	mov    $0x1,%edx
    620e:	4c 89 8d a0 ee ff ff 	mov    %r9,-0x1160(%rbp)
    6215:	48 c7 85 c0 ee ff ff 	movq   $0x0,-0x1140(%rbp)
    621c:	00 00 00 00 
    6220:	4d 63 c6             	movslq %r14d,%r8
    6223:	4c 03 43 58          	add    0x58(%rbx),%r8
    6227:	4c 23 43 60          	and    0x60(%rbx),%r8
    622b:	e8 c0 da ff ff       	callq  3cf0 <_DkStreamMap>
    6230:	85 c0                	test   %eax,%eax
    6232:	4c 8b 8d a0 ee ff ff 	mov    -0x1160(%rbp),%r9
    6239:	0f 88 79 02 00 00    	js     64b8 <pal_main+0xa28>
    623f:	bf 30 00 00 00       	mov    $0x30,%edi
    6244:	4c 89 8d 88 ee ff ff 	mov    %r9,-0x1178(%rbp)
    624b:	e8 d0 2d 00 00       	callq  9020 <malloc>
    6250:	49 89 c2             	mov    %rax,%r10
    6253:	48 8b 85 c0 ee ff ff 	mov    -0x1140(%rbp),%rax
    625a:	48 8d 95 c8 ee ff ff 	lea    -0x1138(%rbp),%rdx
    6261:	48 8d 35 d8 f7 ff ff 	lea    -0x828(%rip),%rsi        # 5a40 <loader_filter>
    6268:	45 89 72 18          	mov    %r14d,0x18(%r10)
    626c:	4c 89 d7             	mov    %r10,%rdi
    626f:	4c 89 95 a0 ee ff ff 	mov    %r10,-0x1160(%rbp)
    6276:	49 89 42 10          	mov    %rax,0x10(%r10)
    627a:	48 8d 05 9f 2d 00 00 	lea    0x2d9f(%rip),%rax        # 9020 <malloc>
    6281:	49 89 42 20          	mov    %rax,0x20(%r10)
    6285:	48 8d 05 d4 31 00 00 	lea    0x31d4(%rip),%rax        # 9460 <free>
    628c:	49 89 42 28          	mov    %rax,0x28(%r10)
    6290:	48 c7 85 c8 ee ff ff 	movq   $0x0,-0x1138(%rbp)
    6297:	00 00 00 00 
    629b:	e8 a0 1e 01 00       	callq  18140 <read_config>
    62a0:	85 c0                	test   %eax,%eax
    62a2:	4c 8b 95 a0 ee ff ff 	mov    -0x1160(%rbp),%r10
    62a9:	4c 8b 8d 88 ee ff ff 	mov    -0x1178(%rbp),%r9
    62b0:	0f 88 8b 02 00 00    	js     6541 <pal_main+0xab1>
    62b6:	48 8b bd b0 ee ff ff 	mov    -0x1150(%rbp),%rdi
    62bd:	4c 89 53 40          	mov    %r10,0x40(%rbx)
    62c1:	48 85 ff             	test   %rdi,%rdi
    62c4:	0f 85 cb f8 ff ff    	jne    5b95 <pal_main+0x105>
    62ca:	4d 85 d2             	test   %r10,%r10
    62cd:	0f 85 2b fc ff ff    	jne    5efe <pal_main+0x46e>
    62d3:	4d 85 ff             	test   %r15,%r15
    62d6:	0f 85 b6 fc ff ff    	jne    5f92 <pal_main+0x502>
    62dc:	4d 85 e4             	test   %r12,%r12
    62df:	41 0f 94 c6          	sete   %r14b
    62e3:	48 83 bd a8 ee ff ff 	cmpq   $0x0,-0x1158(%rbp)
    62ea:	00 
    62eb:	0f 95 c0             	setne  %al
    62ee:	31 ff                	xor    %edi,%edi
    62f0:	41 09 c6             	or     %eax,%r14d
    62f3:	e9 ca f8 ff ff       	jmpq   5bc2 <pal_main+0x132>
    62f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    62ff:	00 
    6300:	be 01 00 00 00       	mov    $0x1,%esi
    6305:	e8 56 24 00 00       	callq  8760 <load_elf_object_by_handle>
    630a:	48 63 c8             	movslq %eax,%rcx
    630d:	e9 15 fa ff ff       	jmpq   5d27 <pal_main+0x297>
    6312:	4d 8d 6e f3          	lea    -0xd(%r14),%r13
    6316:	48 8d 35 92 1d 02 00 	lea    0x21d92(%rip),%rsi        # 280af <section_rodata+0x4af>
    631d:	ba 0e 00 00 00       	mov    $0xe,%edx
    6322:	4b 8d 3c 2f          	lea    (%r15,%r13,1),%rdi
    6326:	e8 65 f3 00 00       	callq  15690 <memcmp>
    632b:	85 c0                	test   %eax,%eax
    632d:	0f 84 8b fc ff ff    	je     5fbe <pal_main+0x52e>
    6333:	48 8b bd b0 ee ff ff 	mov    -0x1150(%rbp),%rdi
    633a:	48 85 ff             	test   %rdi,%rdi
    633d:	0f 85 52 f8 ff ff    	jne    5b95 <pal_main+0x105>
    6343:	4d 85 e4             	test   %r12,%r12
    6346:	4c 8b 4b 40          	mov    0x40(%rbx),%r9
    634a:	41 0f 94 c6          	sete   %r14b
    634e:	48 83 bd a8 ee ff ff 	cmpq   $0x0,-0x1158(%rbp)
    6355:	00 
    6356:	0f 95 c0             	setne  %al
    6359:	41 09 c6             	or     %eax,%r14d
    635c:	e9 61 f8 ff ff       	jmpq   5bc2 <pal_main+0x132>
    6361:	f7 d8                	neg    %eax
    6363:	4c 8d 05 ca 1c 02 00 	lea    0x21cca(%rip),%r8        # 28034 <section_rodata+0x434>
    636a:	48 8d 35 27 21 02 00 	lea    0x22127(%rip),%rsi        # 28498 <__FUNCTION__.2860>
    6371:	48 8d 3d 28 20 02 00 	lea    0x22028(%rip),%rdi        # 283a0 <section_rodata+0x7a0>
    6378:	41 89 c6             	mov    %eax,%r14d
    637b:	89 c1                	mov    %eax,%ecx
    637d:	ba 0a 01 00 00       	mov    $0x10a,%edx
    6382:	31 c0                	xor    %eax,%eax
    6384:	e8 a7 32 00 00       	callq  9630 <pal_printf>
    6389:	44 89 f7             	mov    %r14d,%edi
    638c:	e8 cf 88 00 00       	callq  ec60 <_DkProcessExit>
    6391:	e9 9a f7 ff ff       	jmpq   5b30 <pal_main+0xa0>
    6396:	48 8d 35 a3 1d 02 00 	lea    0x21da3(%rip),%rsi        # 28140 <section_rodata+0x540>
    639d:	ba 05 00 00 00       	mov    $0x5,%edx
    63a2:	4c 89 f7             	mov    %r14,%rdi
    63a5:	e8 e6 f2 00 00       	callq  15690 <memcmp>
    63aa:	85 c0                	test   %eax,%eax
    63ac:	0f 84 41 fa ff ff    	je     5df3 <pal_main+0x363>
    63b2:	4c 8d 05 8c 1d 02 00 	lea    0x21d8c(%rip),%r8        # 28145 <section_rodata+0x545>
    63b9:	48 8d 35 b8 20 02 00 	lea    0x220b8(%rip),%rsi        # 28478 <__FUNCTION__.2836>
    63c0:	48 8d 3d d9 1f 02 00 	lea    0x21fd9(%rip),%rdi        # 283a0 <section_rodata+0x7a0>
    63c7:	b9 04 00 00 00       	mov    $0x4,%ecx
    63cc:	ba d3 00 00 00       	mov    $0xd3,%edx
    63d1:	31 c0                	xor    %eax,%eax
    63d3:	e8 58 32 00 00       	callq  9630 <pal_printf>
    63d8:	bf 04 00 00 00       	mov    $0x4,%edi
    63dd:	e8 7e 88 00 00       	callq  ec60 <_DkProcessExit>
    63e2:	e9 0c fa ff ff       	jmpq   5df3 <pal_main+0x363>
    63e7:	f7 d8                	neg    %eax
    63e9:	4c 8d 05 5f 1c 02 00 	lea    0x21c5f(%rip),%r8        # 2804f <section_rodata+0x44f>
    63f0:	48 8d 35 a1 20 02 00 	lea    0x220a1(%rip),%rsi        # 28498 <__FUNCTION__.2860>
    63f7:	48 8d 3d a2 1f 02 00 	lea    0x21fa2(%rip),%rdi        # 283a0 <section_rodata+0x7a0>
    63fe:	41 89 c7             	mov    %eax,%r15d
    6401:	89 c1                	mov    %eax,%ecx
    6403:	ba 12 01 00 00       	mov    $0x112,%edx
    6408:	31 c0                	xor    %eax,%eax
    640a:	e8 21 32 00 00       	callq  9630 <pal_printf>
    640f:	44 89 ff             	mov    %r15d,%edi
    6412:	e8 49 88 00 00       	callq  ec60 <_DkProcessExit>
    6417:	e9 4d f7 ff ff       	jmpq   5b69 <pal_main+0xd9>
    641c:	4c 8d 05 15 20 02 00 	lea    0x22015(%rip),%r8        # 28438 <section_rodata+0x838>
    6423:	48 8d 35 6e 20 02 00 	lea    0x2206e(%rip),%rsi        # 28498 <__FUNCTION__.2860>
    642a:	48 8d 3d 6f 1f 02 00 	lea    0x21f6f(%rip),%rdi        # 283a0 <section_rodata+0x7a0>
    6431:	b9 04 00 00 00       	mov    $0x4,%ecx
    6436:	ba 8f 01 00 00       	mov    $0x18f,%edx
    643b:	31 c0                	xor    %eax,%eax
    643d:	e8 ee 31 00 00       	callq  9630 <pal_printf>
    6442:	bf 04 00 00 00       	mov    $0x4,%edi
    6447:	e8 14 88 00 00       	callq  ec60 <_DkProcessExit>
    644c:	e9 66 f7 ff ff       	jmpq   5bb7 <pal_main+0x127>
    6451:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    6456:	48 8d 35 0b 1c 02 00 	lea    0x21c0b(%rip),%rsi        # 28068 <section_rodata+0x468>
    645d:	ba 0a 00 00 00       	mov    $0xa,%edx
    6462:	e8 89 f7 00 00       	callq  15bf0 <memcpy>
    6467:	e9 26 fc ff ff       	jmpq   6092 <pal_main+0x602>
    646c:	41 89 fe             	mov    %edi,%r14d
    646f:	4c 8d 05 e2 1c 02 00 	lea    0x21ce2(%rip),%r8        # 28158 <section_rodata+0x558>
    6476:	48 8d 35 fb 1f 02 00 	lea    0x21ffb(%rip),%rsi        # 28478 <__FUNCTION__.2836>
    647d:	41 f7 de             	neg    %r14d
    6480:	48 8d 3d 19 1f 02 00 	lea    0x21f19(%rip),%rdi        # 283a0 <section_rodata+0x7a0>
    6487:	ba d7 00 00 00       	mov    $0xd7,%edx
    648c:	44 89 f1             	mov    %r14d,%ecx
    648f:	31 c0                	xor    %eax,%eax
    6491:	e8 9a 31 00 00       	callq  9630 <pal_printf>
    6496:	44 89 f7             	mov    %r14d,%edi
    6499:	e8 c2 87 00 00       	callq  ec60 <_DkProcessExit>
    649e:	e9 50 f9 ff ff       	jmpq   5df3 <pal_main+0x363>
    64a3:	48 8b bd b0 ee ff ff 	mov    -0x1150(%rbp),%rdi
    64aa:	48 85 ff             	test   %rdi,%rdi
    64ad:	0f 85 e2 f6 ff ff    	jne    5b95 <pal_main+0x105>
    64b3:	e9 1b fe ff ff       	jmpq   62d3 <pal_main+0x843>
    64b8:	f7 d8                	neg    %eax
    64ba:	4c 8d 05 b1 1b 02 00 	lea    0x21bb1(%rip),%r8        # 28072 <section_rodata+0x472>
    64c1:	48 8d 35 d0 1f 02 00 	lea    0x21fd0(%rip),%rsi        # 28498 <__FUNCTION__.2860>
    64c8:	48 8d 3d d1 1e 02 00 	lea    0x21ed1(%rip),%rdi        # 283a0 <section_rodata+0x7a0>
    64cf:	89 c1                	mov    %eax,%ecx
    64d1:	89 85 a0 ee ff ff    	mov    %eax,-0x1160(%rbp)
    64d7:	ba 4a 01 00 00       	mov    $0x14a,%edx
    64dc:	31 c0                	xor    %eax,%eax
    64de:	4c 89 8d 88 ee ff ff 	mov    %r9,-0x1178(%rbp)
    64e5:	e8 46 31 00 00       	callq  9630 <pal_printf>
    64ea:	44 8b 95 a0 ee ff ff 	mov    -0x1160(%rbp),%r10d
    64f1:	44 89 d7             	mov    %r10d,%edi
    64f4:	e8 67 87 00 00       	callq  ec60 <_DkProcessExit>
    64f9:	4c 8b 8d 88 ee ff ff 	mov    -0x1178(%rbp),%r9
    6500:	e9 3a fd ff ff       	jmpq   623f <pal_main+0x7af>
    6505:	f7 d8                	neg    %eax
    6507:	4c 8d 05 64 1b 02 00 	lea    0x21b64(%rip),%r8        # 28072 <section_rodata+0x472>
    650e:	48 8d 35 83 1f 02 00 	lea    0x21f83(%rip),%rsi        # 28498 <__FUNCTION__.2860>
    6515:	48 8d 3d 84 1e 02 00 	lea    0x21e84(%rip),%rdi        # 283a0 <section_rodata+0x7a0>
    651c:	89 c1                	mov    %eax,%ecx
    651e:	41 89 c6             	mov    %eax,%r14d
    6521:	ba 41 01 00 00       	mov    $0x141,%edx
    6526:	31 c0                	xor    %eax,%eax
    6528:	e8 03 31 00 00       	callq  9630 <pal_printf>
    652d:	44 89 f7             	mov    %r14d,%edi
    6530:	e8 2b 87 00 00       	callq  ec60 <_DkProcessExit>
    6535:	4c 8b 8d a0 ee ff ff 	mov    -0x1160(%rbp),%r9
    653c:	e9 b1 fc ff ff       	jmpq   61f2 <pal_main+0x762>
    6541:	4c 8b 85 c8 ee ff ff 	mov    -0x1138(%rbp),%r8
    6548:	f7 d8                	neg    %eax
    654a:	48 8d 35 47 1f 02 00 	lea    0x21f47(%rip),%rsi        # 28498 <__FUNCTION__.2860>
    6551:	48 8d 3d 48 1e 02 00 	lea    0x21e48(%rip),%rdi        # 283a0 <section_rodata+0x7a0>
    6558:	89 c1                	mov    %eax,%ecx
    655a:	41 89 c6             	mov    %eax,%r14d
    655d:	ba 54 01 00 00       	mov    $0x154,%edx
    6562:	31 c0                	xor    %eax,%eax
    6564:	e8 c7 30 00 00       	callq  9630 <pal_printf>
    6569:	44 89 f7             	mov    %r14d,%edi
    656c:	e8 ef 86 00 00       	callq  ec60 <_DkProcessExit>
    6571:	4c 8b 8d 88 ee ff ff 	mov    -0x1178(%rbp),%r9
    6578:	4c 8b 95 a0 ee ff ff 	mov    -0x1160(%rbp),%r10
    657f:	e9 32 fd ff ff       	jmpq   62b6 <pal_main+0x826>
    6584:	4c 8d 05 9c 1b 02 00 	lea    0x21b9c(%rip),%r8        # 28127 <section_rodata+0x527>
    658b:	48 8d 35 e6 1e 02 00 	lea    0x21ee6(%rip),%rsi        # 28478 <__FUNCTION__.2836>
    6592:	48 8d 3d 07 1e 02 00 	lea    0x21e07(%rip),%rdi        # 283a0 <section_rodata+0x7a0>
    6599:	b9 04 00 00 00       	mov    $0x4,%ecx
    659e:	ba c7 00 00 00       	mov    $0xc7,%edx
    65a3:	31 c0                	xor    %eax,%eax
    65a5:	e8 86 30 00 00       	callq  9630 <pal_printf>
    65aa:	bf 04 00 00 00       	mov    $0x4,%edi
    65af:	e8 ac 86 00 00       	callq  ec60 <_DkProcessExit>
    65b4:	e9 0c f8 ff ff       	jmpq   5dc5 <pal_main+0x335>
    65b9:	4c 8d 05 fd 1a 02 00 	lea    0x21afd(%rip),%r8        # 280bd <section_rodata+0x4bd>
    65c0:	48 8d 35 d1 1e 02 00 	lea    0x21ed1(%rip),%rsi        # 28498 <__FUNCTION__.2860>
    65c7:	48 8d 3d d2 1d 02 00 	lea    0x21dd2(%rip),%rdi        # 283a0 <section_rodata+0x7a0>
    65ce:	b9 f0 ff ff ff       	mov    $0xfffffff0,%ecx
    65d3:	ba 7e 01 00 00       	mov    $0x17e,%edx
    65d8:	31 c0                	xor    %eax,%eax
    65da:	e8 51 30 00 00       	callq  9630 <pal_printf>
    65df:	bf f0 ff ff ff       	mov    $0xfffffff0,%edi
    65e4:	e8 77 86 00 00       	callq  ec60 <_DkProcessExit>
    65e9:	e9 e5 f9 ff ff       	jmpq   5fd3 <pal_main+0x543>
    65ee:	66 90                	xchg   %ax,%ax

00000000000065f0 <write_log>:
    65f0:	55                   	push   %rbp
    65f1:	48 63 c7             	movslq %edi,%rax
    65f4:	48 8d 04 c5 1e 00 00 	lea    0x1e(,%rax,8),%rax
    65fb:	00 
    65fc:	48 89 e5             	mov    %rsp,%rbp
    65ff:	41 57                	push   %r15
    6601:	41 56                	push   %r14
    6603:	41 55                	push   %r13
    6605:	41 54                	push   %r12
    6607:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    660b:	53                   	push   %rbx
    660c:	48 83 ec 68          	sub    $0x68,%rsp
    6610:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
    6614:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
    6618:	48 29 c4             	sub    %rax,%rsp
    661b:	48 8d 45 10          	lea    0x10(%rbp),%rax
    661f:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    6623:	48 8d 5c 24 0f       	lea    0xf(%rsp),%rbx
    6628:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
    662c:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
    6630:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    6634:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    6638:	c7 45 88 08 00 00 00 	movl   $0x8,-0x78(%rbp)
    663f:	48 83 e3 f0          	and    $0xfffffffffffffff0,%rbx
    6643:	85 ff                	test   %edi,%edi
    6645:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    6649:	0f 8e e1 00 00 00    	jle    6730 <write_log+0x140>
    664f:	8d 47 ff             	lea    -0x1(%rdi),%eax
    6652:	49 89 dc             	mov    %rbx,%r12
    6655:	45 31 f6             	xor    %r14d,%r14d
    6658:	4c 8d 6c c3 08       	lea    0x8(%rbx,%rax,8),%r13
    665d:	eb 26                	jmp    6685 <write_log+0x95>
    665f:	90                   	nop
    6660:	89 c2                	mov    %eax,%edx
    6662:	48 03 55 98          	add    -0x68(%rbp),%rdx
    6666:	83 c0 08             	add    $0x8,%eax
    6669:	89 45 88             	mov    %eax,-0x78(%rbp)
    666c:	48 8b 3a             	mov    (%rdx),%rdi
    666f:	49 83 c4 08          	add    $0x8,%r12
    6673:	49 89 7c 24 f8       	mov    %rdi,-0x8(%r12)
    6678:	e8 f3 ef 00 00       	callq  15670 <strlen>
    667d:	41 01 c6             	add    %eax,%r14d
    6680:	4d 39 ec             	cmp    %r13,%r12
    6683:	74 1b                	je     66a0 <write_log+0xb0>
    6685:	8b 45 88             	mov    -0x78(%rbp),%eax
    6688:	83 f8 2f             	cmp    $0x2f,%eax
    668b:	76 d3                	jbe    6660 <write_log+0x70>
    668d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    6691:	48 8d 42 08          	lea    0x8(%rdx),%rax
    6695:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    6699:	eb d1                	jmp    666c <write_log+0x7c>
    669b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    66a0:	4d 63 f6             	movslq %r14d,%r14
    66a3:	45 31 e4             	xor    %r12d,%r12d
    66a6:	49 83 c6 1e          	add    $0x1e,%r14
    66aa:	49 83 e6 f0          	and    $0xfffffffffffffff0,%r14
    66ae:	4c 29 f4             	sub    %r14,%rsp
    66b1:	4c 8d 74 24 0f       	lea    0xf(%rsp),%r14
    66b6:	49 83 e6 f0          	and    $0xfffffffffffffff0,%r14
    66ba:	4c 89 b5 78 ff ff ff 	mov    %r14,-0x88(%rbp)
    66c1:	4c 89 b5 70 ff ff ff 	mov    %r14,-0x90(%rbp)
    66c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    66cf:	00 
    66d0:	4c 8b 33             	mov    (%rbx),%r14
    66d3:	48 83 c3 08          	add    $0x8,%rbx
    66d7:	4c 89 f7             	mov    %r14,%rdi
    66da:	e8 91 ef 00 00       	callq  15670 <strlen>
    66df:	49 63 fc             	movslq %r12d,%rdi
    66e2:	48 03 bd 78 ff ff ff 	add    -0x88(%rbp),%rdi
    66e9:	49 89 c7             	mov    %rax,%r15
    66ec:	48 63 d0             	movslq %eax,%rdx
    66ef:	4c 89 f6             	mov    %r14,%rsi
    66f2:	45 01 fc             	add    %r15d,%r12d
    66f5:	e8 f6 f4 00 00       	callq  15bf0 <memcpy>
    66fa:	4c 39 eb             	cmp    %r13,%rbx
    66fd:	75 d1                	jne    66d0 <write_log+0xe0>
    66ff:	49 63 d4             	movslq %r12d,%rdx
    6702:	48 8d 05 d7 7f 22 04 	lea    0x4227fd7(%rip),%rax        # 422e6e0 <pal_state>
    6709:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
    6710:	45 31 c9             	xor    %r9d,%r9d
    6713:	45 31 c0             	xor    %r8d,%r8d
    6716:	31 f6                	xor    %esi,%esi
    6718:	48 8b 78 30          	mov    0x30(%rax),%rdi
    671c:	e8 2f ce ff ff       	callq  3550 <_DkStreamWrite>
    6721:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    6725:	5b                   	pop    %rbx
    6726:	41 5c                	pop    %r12
    6728:	41 5d                	pop    %r13
    672a:	41 5e                	pop    %r14
    672c:	41 5f                	pop    %r15
    672e:	5d                   	pop    %rbp
    672f:	c3                   	retq   
    6730:	48 89 a5 70 ff ff ff 	mov    %rsp,-0x90(%rbp)
    6737:	31 d2                	xor    %edx,%edx
    6739:	eb c7                	jmp    6702 <write_log+0x112>
    673b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006740 <DkSystemTimeQuery>:
    6740:	55                   	push   %rbp
    6741:	48 89 e5             	mov    %rsp,%rbp
    6744:	48 89 e0             	mov    %rsp,%rax
    6747:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    674b:	48 89 e8             	mov    %rbp,%rax
    674e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6752:	48 89 d8             	mov    %rbx,%rax
    6755:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6759:	48 89 f0             	mov    %rsi,%rax
    675c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6760:	48 89 f8             	mov    %rdi,%rax
    6763:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    6767:	4c 89 e0             	mov    %r12,%rax
    676a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    676e:	4c 89 e8             	mov    %r13,%rax
    6771:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6775:	4c 89 f0             	mov    %r14,%rax
    6778:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    677c:	4c 89 f8             	mov    %r15,%rax
    677f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6783:	48 8b 05 6e 3e 22 00 	mov    0x223e6e(%rip),%rax        # 22a5f8 <data_start+0x140>
    678a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    678e:	48 8d 05 0c 1d 02 00 	lea    0x21d0c(%rip),%rax        # 284a1 <__FUNCTION__.2860+0x9>
    6795:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6799:	90                   	nop
    679a:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    67a1:	de ad de 
    67a4:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    67a8:	5d                   	pop    %rbp
    67a9:	e9 92 a0 00 00       	jmpq   10840 <_DkSystemTimeQuery>
    67ae:	66 90                	xchg   %ax,%ax

00000000000067b0 <DkRandomBitsRead>:
    67b0:	55                   	push   %rbp
    67b1:	48 89 e5             	mov    %rsp,%rbp
    67b4:	48 83 ec 60          	sub    $0x60,%rsp
    67b8:	48 89 e0             	mov    %rsp,%rax
    67bb:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    67bf:	48 89 e8             	mov    %rbp,%rax
    67c2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    67c6:	48 89 d8             	mov    %rbx,%rax
    67c9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    67cd:	48 89 f0             	mov    %rsi,%rax
    67d0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    67d4:	48 89 f8             	mov    %rdi,%rax
    67d7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    67db:	4c 89 e0             	mov    %r12,%rax
    67de:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    67e2:	4c 89 e8             	mov    %r13,%rax
    67e5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    67e9:	4c 89 f0             	mov    %r14,%rax
    67ec:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    67f0:	4c 89 f8             	mov    %r15,%rax
    67f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    67f7:	48 8b 05 2a 3e 22 00 	mov    0x223e2a(%rip),%rax        # 22a628 <data_start+0x170>
    67fe:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    6802:	48 8d 05 aa 1c 02 00 	lea    0x21caa(%rip),%rax        # 284b3 <__FUNCTION__.2860+0x1b>
    6809:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    680d:	90                   	nop
    680e:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    6815:	de ad de 
    6818:	48 85 ff             	test   %rdi,%rdi
    681b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    681f:	74 2f                	je     6850 <DkRandomBitsRead+0xa0>
    6821:	48 85 f6             	test   %rsi,%rsi
    6824:	74 2a                	je     6850 <DkRandomBitsRead+0xa0>
    6826:	e8 55 a0 00 00       	callq  10880 <_DkRandomBitsRead>
    682b:	85 c0                	test   %eax,%eax
    682d:	78 51                	js     6880 <DkRandomBitsRead+0xd0>
    682f:	48 98                	cltq   
    6831:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    6835:	48 ba ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rdx
    683c:	de ad de 
    683f:	48 39 d1             	cmp    %rdx,%rcx
    6842:	74 2b                	je     686f <DkRandomBitsRead+0xbf>
    6844:	c9                   	leaveq 
    6845:	c3                   	retq   
    6846:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    684d:	00 00 00 
    6850:	bf 04 00 00 00       	mov    $0x4,%edi
    6855:	e8 46 9e 00 00       	callq  106a0 <_DkRaiseFailure>
    685a:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    685e:	48 ba ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rdx
    6865:	de ad de 
    6868:	31 c0                	xor    %eax,%eax
    686a:	48 39 d1             	cmp    %rdx,%rcx
    686d:	75 d5                	jne    6844 <DkRandomBitsRead+0x94>
    686f:	90                   	nop
    6870:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    6877:	00 
    6878:	c9                   	leaveq 
    6879:	c3                   	retq   
    687a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6880:	f7 d8                	neg    %eax
    6882:	89 c7                	mov    %eax,%edi
    6884:	e8 17 9e 00 00       	callq  106a0 <_DkRaiseFailure>
    6889:	31 c0                	xor    %eax,%eax
    688b:	eb a4                	jmp    6831 <DkRandomBitsRead+0x81>
    688d:	0f 1f 00             	nopl   (%rax)

0000000000006890 <DkSegmentRegister>:
    6890:	55                   	push   %rbp
    6891:	48 89 e5             	mov    %rsp,%rbp
    6894:	48 83 ec 70          	sub    $0x70,%rsp
    6898:	48 89 e0             	mov    %rsp,%rax
    689b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    689f:	48 89 e8             	mov    %rbp,%rax
    68a2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    68a6:	48 89 d8             	mov    %rbx,%rax
    68a9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    68ad:	48 89 f0             	mov    %rsi,%rax
    68b0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    68b4:	48 89 f8             	mov    %rdi,%rax
    68b7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    68bb:	4c 89 e0             	mov    %r12,%rax
    68be:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    68c2:	4c 89 e8             	mov    %r13,%rax
    68c5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    68c9:	4c 89 f0             	mov    %r14,%rax
    68cc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    68d0:	4c 89 f8             	mov    %r15,%rax
    68d3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    68d7:	48 8b 05 22 3c 22 00 	mov    0x223c22(%rip),%rax        # 22a500 <data_start+0x48>
    68de:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    68e2:	48 8d 05 db 1b 02 00 	lea    0x21bdb(%rip),%rax        # 284c4 <__FUNCTION__.2860+0x2c>
    68e9:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    68ed:	90                   	nop
    68ee:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    68f5:	de ad de 
    68f8:	48 85 f6             	test   %rsi,%rsi
    68fb:	48 89 75 98          	mov    %rsi,-0x68(%rbp)
    68ff:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    6903:	74 2b                	je     6930 <DkSegmentRegister+0xa0>
    6905:	e8 56 a0 00 00       	callq  10960 <_DkSegmentRegisterSet>
    690a:	85 c0                	test   %eax,%eax
    690c:	78 32                	js     6940 <DkSegmentRegister+0xb0>
    690e:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    6912:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    6919:	de ad de 
    691c:	48 39 c2             	cmp    %rax,%rdx
    691f:	75 09                	jne    692a <DkSegmentRegister+0x9a>
    6921:	90                   	nop
    6922:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    6929:	00 
    692a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    692e:	c9                   	leaveq 
    692f:	c3                   	retq   
    6930:	48 8d 75 98          	lea    -0x68(%rbp),%rsi
    6934:	e8 57 a0 00 00       	callq  10990 <_DkSegmentRegisterGet>
    6939:	85 c0                	test   %eax,%eax
    693b:	79 d1                	jns    690e <DkSegmentRegister+0x7e>
    693d:	0f 1f 00             	nopl   (%rax)
    6940:	f7 d8                	neg    %eax
    6942:	89 c7                	mov    %eax,%edi
    6944:	e8 57 9d 00 00       	callq  106a0 <_DkRaiseFailure>
    6949:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    6950:	00 
    6951:	eb bb                	jmp    690e <DkSegmentRegister+0x7e>
    6953:	0f 1f 00             	nopl   (%rax)
    6956:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    695d:	00 00 00 

0000000000006960 <DkInstructionCacheFlush>:
    6960:	55                   	push   %rbp
    6961:	48 89 e5             	mov    %rsp,%rbp
    6964:	41 54                	push   %r12
    6966:	53                   	push   %rbx
    6967:	48 83 ec 60          	sub    $0x60,%rsp
    696b:	48 89 e0             	mov    %rsp,%rax
    696e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    6972:	48 89 e8             	mov    %rbp,%rax
    6975:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6979:	48 89 d8             	mov    %rbx,%rax
    697c:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    6980:	48 89 f0             	mov    %rsi,%rax
    6983:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6987:	48 89 f8             	mov    %rdi,%rax
    698a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    698e:	4c 89 e0             	mov    %r12,%rax
    6991:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6995:	4c 89 e8             	mov    %r13,%rax
    6998:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    699c:	4c 89 f0             	mov    %r14,%rax
    699f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    69a3:	4c 89 f8             	mov    %r15,%rax
    69a6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    69aa:	48 8b 05 ff 3b 22 00 	mov    0x223bff(%rip),%rax        # 22a5b0 <data_start+0xf8>
    69b1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    69b5:	48 8d 05 1a 1b 02 00 	lea    0x21b1a(%rip),%rax        # 284d6 <__FUNCTION__.2860+0x3e>
    69bc:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    69c0:	90                   	nop
    69c1:	48 85 ff             	test   %rdi,%rdi
    69c4:	49 bc ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%r12
    69cb:	de ad de 
    69ce:	0f 94 c3             	sete   %bl
    69d1:	48 85 f6             	test   %rsi,%rsi
    69d4:	4c 89 65 90          	mov    %r12,-0x70(%rbp)
    69d8:	0f 94 c0             	sete   %al
    69db:	08 c3                	or     %al,%bl
    69dd:	74 21                	je     6a00 <DkInstructionCacheFlush+0xa0>
    69df:	bf 04 00 00 00       	mov    $0x4,%edi
    69e4:	e8 b7 9c 00 00       	callq  106a0 <_DkRaiseFailure>
    69e9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    69ed:	4c 39 e0             	cmp    %r12,%rax
    69f0:	74 3e                	je     6a30 <DkInstructionCacheFlush+0xd0>
    69f2:	31 db                	xor    %ebx,%ebx
    69f4:	48 83 c4 60          	add    $0x60,%rsp
    69f8:	89 d8                	mov    %ebx,%eax
    69fa:	5b                   	pop    %rbx
    69fb:	41 5c                	pop    %r12
    69fd:	5d                   	pop    %rbp
    69fe:	c3                   	retq   
    69ff:	90                   	nop
    6a00:	e8 4b 9f 00 00       	callq  10950 <_DkInstructionCacheFlush>
    6a05:	85 c0                	test   %eax,%eax
    6a07:	78 37                	js     6a40 <DkInstructionCacheFlush+0xe0>
    6a09:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6a0d:	bb 01 00 00 00       	mov    $0x1,%ebx
    6a12:	4c 39 e0             	cmp    %r12,%rax
    6a15:	75 dd                	jne    69f4 <DkInstructionCacheFlush+0x94>
    6a17:	90                   	nop
    6a18:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    6a1f:	00 
    6a20:	48 83 c4 60          	add    $0x60,%rsp
    6a24:	89 d8                	mov    %ebx,%eax
    6a26:	5b                   	pop    %rbx
    6a27:	41 5c                	pop    %r12
    6a29:	5d                   	pop    %rbp
    6a2a:	c3                   	retq   
    6a2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6a30:	90                   	nop
    6a31:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    6a38:	00 
    6a39:	eb b7                	jmp    69f2 <DkInstructionCacheFlush+0x92>
    6a3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6a40:	f7 d8                	neg    %eax
    6a42:	89 c7                	mov    %eax,%edi
    6a44:	e8 57 9c 00 00       	callq  106a0 <_DkRaiseFailure>
    6a49:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6a4d:	4c 39 e0             	cmp    %r12,%rax
    6a50:	75 a0                	jne    69f2 <DkInstructionCacheFlush+0x92>
    6a52:	eb c3                	jmp    6a17 <DkInstructionCacheFlush+0xb7>
    6a54:	66 90                	xchg   %ax,%ax
    6a56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6a5d:	00 00 00 

0000000000006a60 <DkMemoryAvailableQuota>:
    6a60:	55                   	push   %rbp
    6a61:	48 89 e5             	mov    %rsp,%rbp
    6a64:	53                   	push   %rbx
    6a65:	48 83 ec 68          	sub    $0x68,%rsp
    6a69:	48 89 e0             	mov    %rsp,%rax
    6a6c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    6a70:	48 89 e8             	mov    %rbp,%rax
    6a73:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6a77:	48 89 d8             	mov    %rbx,%rax
    6a7a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    6a7e:	48 89 f0             	mov    %rsi,%rax
    6a81:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6a85:	48 89 f8             	mov    %rdi,%rax
    6a88:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6a8c:	4c 89 e0             	mov    %r12,%rax
    6a8f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6a93:	4c 89 e8             	mov    %r13,%rax
    6a96:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    6a9a:	4c 89 f0             	mov    %r14,%rax
    6a9d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6aa1:	4c 89 f8             	mov    %r15,%rax
    6aa4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6aa8:	48 8b 05 d1 3a 22 00 	mov    0x223ad1(%rip),%rax        # 22a580 <data_start+0xc8>
    6aaf:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    6ab3:	48 8d 05 34 1a 02 00 	lea    0x21a34(%rip),%rax        # 284ee <__FUNCTION__.2860+0x56>
    6aba:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    6abe:	90                   	nop
    6abf:	48 bb ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rbx
    6ac6:	de ad de 
    6ac9:	48 89 5d 90          	mov    %rbx,-0x70(%rbp)
    6acd:	e8 9e 70 00 00       	callq  db70 <_DkMemoryAvailableQuota>
    6ad2:	ba 00 00 00 00       	mov    $0x0,%edx
    6ad7:	48 85 c0             	test   %rax,%rax
    6ada:	48 0f 48 c2          	cmovs  %rdx,%rax
    6ade:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    6ae2:	48 39 da             	cmp    %rbx,%rdx
    6ae5:	75 09                	jne    6af0 <DkMemoryAvailableQuota+0x90>
    6ae7:	90                   	nop
    6ae8:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    6aef:	00 
    6af0:	48 83 c4 68          	add    $0x68,%rsp
    6af4:	5b                   	pop    %rbx
    6af5:	5d                   	pop    %rbp
    6af6:	c3                   	retq   
    6af7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6afe:	00 00 

0000000000006b00 <DkCpuIdRetrieve>:
    6b00:	55                   	push   %rbp
    6b01:	48 89 e5             	mov    %rsp,%rbp
    6b04:	41 54                	push   %r12
    6b06:	53                   	push   %rbx
    6b07:	48 89 d3             	mov    %rdx,%rbx
    6b0a:	48 83 ec 70          	sub    $0x70,%rsp
    6b0e:	48 89 e0             	mov    %rsp,%rax
    6b11:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    6b15:	48 89 e8             	mov    %rbp,%rax
    6b18:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6b1c:	48 89 d8             	mov    %rbx,%rax
    6b1f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    6b23:	48 89 f0             	mov    %rsi,%rax
    6b26:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6b2a:	48 89 f8             	mov    %rdi,%rax
    6b2d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6b31:	4c 89 e0             	mov    %r12,%rax
    6b34:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6b38:	4c 89 e8             	mov    %r13,%rax
    6b3b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    6b3f:	4c 89 f0             	mov    %r14,%rax
    6b42:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6b46:	4c 89 f8             	mov    %r15,%rax
    6b49:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6b4d:	48 8b 05 e4 3a 22 00 	mov    0x223ae4(%rip),%rax        # 22a638 <data_start+0x180>
    6b54:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    6b58:	48 8d 05 a6 19 02 00 	lea    0x219a6(%rip),%rax        # 28505 <__FUNCTION__.2860+0x6d>
    6b5f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    6b63:	90                   	nop
    6b64:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    6b68:	49 bc ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%r12
    6b6f:	de ad de 
    6b72:	4c 89 65 90          	mov    %r12,-0x70(%rbp)
    6b76:	e8 85 a0 00 00       	callq  10c00 <_DkCpuIdRetrieve>
    6b7b:	85 c0                	test   %eax,%eax
    6b7d:	78 31                	js     6bb0 <DkCpuIdRetrieve+0xb0>
    6b7f:	8b 45 80             	mov    -0x80(%rbp),%eax
    6b82:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    6b86:	89 03                	mov    %eax,(%rbx)
    6b88:	8b 45 84             	mov    -0x7c(%rbp),%eax
    6b8b:	4c 39 e2             	cmp    %r12,%rdx
    6b8e:	89 43 04             	mov    %eax,0x4(%rbx)
    6b91:	8b 45 88             	mov    -0x78(%rbp),%eax
    6b94:	89 43 08             	mov    %eax,0x8(%rbx)
    6b97:	8b 45 8c             	mov    -0x74(%rbp),%eax
    6b9a:	89 43 0c             	mov    %eax,0xc(%rbx)
    6b9d:	b8 01 00 00 00       	mov    $0x1,%eax
    6ba2:	74 20                	je     6bc4 <DkCpuIdRetrieve+0xc4>
    6ba4:	48 83 c4 70          	add    $0x70,%rsp
    6ba8:	5b                   	pop    %rbx
    6ba9:	41 5c                	pop    %r12
    6bab:	5d                   	pop    %rbp
    6bac:	c3                   	retq   
    6bad:	0f 1f 00             	nopl   (%rax)
    6bb0:	f7 d8                	neg    %eax
    6bb2:	89 c7                	mov    %eax,%edi
    6bb4:	e8 e7 9a 00 00       	callq  106a0 <_DkRaiseFailure>
    6bb9:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    6bbd:	31 c0                	xor    %eax,%eax
    6bbf:	4c 39 e2             	cmp    %r12,%rdx
    6bc2:	75 e0                	jne    6ba4 <DkCpuIdRetrieve+0xa4>
    6bc4:	90                   	nop
    6bc5:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    6bcc:	00 
    6bcd:	48 83 c4 70          	add    $0x70,%rsp
    6bd1:	5b                   	pop    %rbx
    6bd2:	41 5c                	pop    %r12
    6bd4:	5d                   	pop    %rbp
    6bd5:	c3                   	retq   
    6bd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6bdd:	00 00 00 

0000000000006be0 <_DkFastRandomBitsRead>:
    6be0:	55                   	push   %rbp
    6be1:	48 89 e5             	mov    %rsp,%rbp
    6be4:	41 55                	push   %r13
    6be6:	41 54                	push   %r12
    6be8:	53                   	push   %rbx
    6be9:	49 89 fc             	mov    %rdi,%r12
    6bec:	48 8d 3d 15 48 22 00 	lea    0x224815(%rip),%rdi        # 22b408 <lock>
    6bf3:	89 f3                	mov    %esi,%ebx
    6bf5:	48 83 ec 18          	sub    $0x18,%rsp
    6bf9:	e8 e2 a0 00 00       	callq  10ce0 <_DkSpinLock>
    6bfe:	48 8b 0d fb 47 22 00 	mov    0x2247fb(%rip),%rcx        # 22b400 <section_bss>
    6c05:	48 85 c9             	test   %rcx,%rcx
    6c08:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    6c0c:	75 54                	jne    6c62 <_DkFastRandomBitsRead+0x82>
    6c0e:	4c 8d 6d d8          	lea    -0x28(%rbp),%r13
    6c12:	eb 20                	jmp    6c34 <_DkFastRandomBitsRead+0x54>
    6c14:	0f 1f 40 00          	nopl   0x0(%rax)
    6c18:	48 8d 3d e9 47 22 00 	lea    0x2247e9(%rip),%rdi        # 22b408 <lock>
    6c1f:	e8 bc a0 00 00       	callq  10ce0 <_DkSpinLock>
    6c24:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    6c28:	48 85 c9             	test   %rcx,%rcx
    6c2b:	48 89 0d ce 47 22 00 	mov    %rcx,0x2247ce(%rip)        # 22b400 <section_bss>
    6c32:	75 2e                	jne    6c62 <_DkFastRandomBitsRead+0x82>
    6c34:	48 8d 3d cd 47 22 00 	lea    0x2247cd(%rip),%rdi        # 22b408 <lock>
    6c3b:	e8 d0 a0 00 00       	callq  10d10 <_DkSpinUnlock>
    6c40:	be 08 00 00 00       	mov    $0x8,%esi
    6c45:	4c 89 ef             	mov    %r13,%rdi
    6c48:	e8 33 9c 00 00       	callq  10880 <_DkRandomBitsRead>
    6c4d:	83 f8 07             	cmp    $0x7,%eax
    6c50:	77 c6                	ja     6c18 <_DkFastRandomBitsRead+0x38>
    6c52:	48 83 c4 18          	add    $0x18,%rsp
    6c56:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
    6c5b:	5b                   	pop    %rbx
    6c5c:	41 5c                	pop    %r12
    6c5e:	41 5d                	pop    %r13
    6c60:	5d                   	pop    %rbp
    6c61:	c3                   	retq   
    6c62:	48 63 f3             	movslq %ebx,%rsi
    6c65:	45 31 ed             	xor    %r13d,%r13d
    6c68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    6c6f:	00 
    6c70:	49 63 d5             	movslq %r13d,%rdx
    6c73:	48 8d 42 08          	lea    0x8(%rdx),%rax
    6c77:	48 39 f0             	cmp    %rsi,%rax
    6c7a:	0f 86 c0 00 00 00    	jbe    6d40 <_DkFastRandomBitsRead+0x160>
    6c80:	89 df                	mov    %ebx,%edi
    6c82:	44 29 ef             	sub    %r13d,%edi
    6c85:	85 ff                	test   %edi,%edi
    6c87:	7e 21                	jle    6caa <_DkFastRandomBitsRead+0xca>
    6c89:	4c 8d 6d d8          	lea    -0x28(%rbp),%r13
    6c8d:	4d 8d 04 14          	lea    (%r12,%rdx,1),%r8
    6c91:	31 c0                	xor    %eax,%eax
    6c93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6c98:	41 0f b6 54 05 00    	movzbl 0x0(%r13,%rax,1),%edx
    6c9e:	41 88 14 00          	mov    %dl,(%r8,%rax,1)
    6ca2:	48 83 c0 01          	add    $0x1,%rax
    6ca6:	39 c7                	cmp    %eax,%edi
    6ca8:	7f ee                	jg     6c98 <_DkFastRandomBitsRead+0xb8>
    6caa:	41 89 dd             	mov    %ebx,%r13d
    6cad:	0f 1f 00             	nopl   (%rax)
    6cb0:	48 89 ca             	mov    %rcx,%rdx
    6cb3:	48 c1 e2 15          	shl    $0x15,%rdx
    6cb7:	48 29 ca             	sub    %rcx,%rdx
    6cba:	48 83 ea 01          	sub    $0x1,%rdx
    6cbe:	48 89 d0             	mov    %rdx,%rax
    6cc1:	48 c1 e8 18          	shr    $0x18,%rax
    6cc5:	48 31 c2             	xor    %rax,%rdx
    6cc8:	48 89 d0             	mov    %rdx,%rax
    6ccb:	48 c1 e0 08          	shl    $0x8,%rax
    6ccf:	48 8d 04 d0          	lea    (%rax,%rdx,8),%rax
    6cd3:	48 01 d0             	add    %rdx,%rax
    6cd6:	48 89 c2             	mov    %rax,%rdx
    6cd9:	48 c1 ea 0e          	shr    $0xe,%rdx
    6cdd:	48 31 c2             	xor    %rax,%rdx
    6ce0:	48 89 d0             	mov    %rdx,%rax
    6ce3:	48 c1 e0 04          	shl    $0x4,%rax
    6ce7:	48 8d 04 90          	lea    (%rax,%rdx,4),%rax
    6ceb:	48 01 c2             	add    %rax,%rdx
    6cee:	48 89 d1             	mov    %rdx,%rcx
    6cf1:	48 c1 e9 1c          	shr    $0x1c,%rcx
    6cf5:	48 31 ca             	xor    %rcx,%rdx
    6cf8:	31 c9                	xor    %ecx,%ecx
    6cfa:	48 89 d0             	mov    %rdx,%rax
    6cfd:	48 c1 e0 1f          	shl    $0x1f,%rax
    6d01:	48 01 c2             	add    %rax,%rdx
    6d04:	74 aa                	je     6cb0 <_DkFastRandomBitsRead+0xd0>
    6d06:	44 39 eb             	cmp    %r13d,%ebx
    6d09:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    6d0d:	48 89 d1             	mov    %rdx,%rcx
    6d10:	0f 8f 5a ff ff ff    	jg     6c70 <_DkFastRandomBitsRead+0x90>
    6d16:	48 8d 3d eb 46 22 00 	lea    0x2246eb(%rip),%rdi        # 22b408 <lock>
    6d1d:	48 89 15 dc 46 22 00 	mov    %rdx,0x2246dc(%rip)        # 22b400 <section_bss>
    6d24:	e8 e7 9f 00 00       	callq  10d10 <_DkSpinUnlock>
    6d29:	48 83 c4 18          	add    $0x18,%rsp
    6d2d:	44 89 e8             	mov    %r13d,%eax
    6d30:	5b                   	pop    %rbx
    6d31:	41 5c                	pop    %r12
    6d33:	41 5d                	pop    %r13
    6d35:	5d                   	pop    %rbp
    6d36:	c3                   	retq   
    6d37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6d3e:	00 00 
    6d40:	49 89 0c 14          	mov    %rcx,(%r12,%rdx,1)
    6d44:	41 83 c5 08          	add    $0x8,%r13d
    6d48:	e9 63 ff ff ff       	jmpq   6cb0 <_DkFastRandomBitsRead+0xd0>
    6d4d:	0f 1f 00             	nopl   (%rax)

0000000000006d50 <DkCreatePhysicalMemoryChannel>:
    6d50:	55                   	push   %rbp
    6d51:	48 89 fe             	mov    %rdi,%rsi
    6d54:	48 89 e5             	mov    %rsp,%rbp
    6d57:	48 83 ec 70          	sub    $0x70,%rsp
    6d5b:	48 89 e0             	mov    %rsp,%rax
    6d5e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    6d62:	48 89 e8             	mov    %rbp,%rax
    6d65:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6d69:	48 89 d8             	mov    %rbx,%rax
    6d6c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6d70:	48 89 f0             	mov    %rsi,%rax
    6d73:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6d77:	48 89 f8             	mov    %rdi,%rax
    6d7a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    6d7e:	4c 89 e0             	mov    %r12,%rax
    6d81:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6d85:	4c 89 e8             	mov    %r13,%rax
    6d88:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6d8c:	4c 89 f0             	mov    %r14,%rax
    6d8f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6d93:	4c 89 f8             	mov    %r15,%rax
    6d96:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6d9a:	48 8b 05 87 37 22 00 	mov    0x223787(%rip),%rax        # 22a528 <data_start+0x70>
    6da1:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    6da5:	48 8d 05 69 17 02 00 	lea    0x21769(%rip),%rax        # 28515 <__FUNCTION__.2860+0x7d>
    6dac:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6db0:	90                   	nop
    6db1:	48 8d 7d 98          	lea    -0x68(%rbp),%rdi
    6db5:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    6dbc:	de ad de 
    6dbf:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    6dc6:	00 
    6dc7:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    6dcb:	e8 e0 9e 00 00       	callq  10cb0 <_DkCreatePhysicalMemoryChannel>
    6dd0:	85 c0                	test   %eax,%eax
    6dd2:	78 2c                	js     6e00 <DkCreatePhysicalMemoryChannel+0xb0>
    6dd4:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    6dd8:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    6ddf:	de ad de 
    6de2:	48 39 c2             	cmp    %rax,%rdx
    6de5:	75 09                	jne    6df0 <DkCreatePhysicalMemoryChannel+0xa0>
    6de7:	90                   	nop
    6de8:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    6def:	00 
    6df0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6df4:	c9                   	leaveq 
    6df5:	c3                   	retq   
    6df6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6dfd:	00 00 00 
    6e00:	f7 d8                	neg    %eax
    6e02:	89 c7                	mov    %eax,%edi
    6e04:	e8 97 98 00 00       	callq  106a0 <_DkRaiseFailure>
    6e09:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    6e10:	00 
    6e11:	eb c1                	jmp    6dd4 <DkCreatePhysicalMemoryChannel+0x84>
    6e13:	0f 1f 00             	nopl   (%rax)
    6e16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6e1d:	00 00 00 

0000000000006e20 <DkPhysicalMemoryCommit>:
    6e20:	55                   	push   %rbp
    6e21:	48 89 e5             	mov    %rsp,%rbp
    6e24:	48 83 ec 60          	sub    $0x60,%rsp
    6e28:	48 89 e0             	mov    %rsp,%rax
    6e2b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    6e2f:	48 89 e8             	mov    %rbp,%rax
    6e32:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6e36:	48 89 d8             	mov    %rbx,%rax
    6e39:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6e3d:	48 89 f0             	mov    %rsi,%rax
    6e40:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6e44:	48 89 f8             	mov    %rdi,%rax
    6e47:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    6e4b:	4c 89 e0             	mov    %r12,%rax
    6e4e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6e52:	4c 89 e8             	mov    %r13,%rax
    6e55:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6e59:	4c 89 f0             	mov    %r14,%rax
    6e5c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6e60:	4c 89 f8             	mov    %r15,%rax
    6e63:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6e67:	48 8b 05 ea 36 22 00 	mov    0x2236ea(%rip),%rax        # 22a558 <data_start+0xa0>
    6e6e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    6e72:	48 8d 05 ba 16 02 00 	lea    0x216ba(%rip),%rax        # 28533 <__FUNCTION__.2860+0x9b>
    6e79:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6e7d:	90                   	nop
    6e7e:	48 85 c9             	test   %rcx,%rcx
    6e81:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    6e88:	de ad de 
    6e8b:	41 0f 94 c1          	sete   %r9b
    6e8f:	48 85 ff             	test   %rdi,%rdi
    6e92:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    6e96:	0f 94 c0             	sete   %al
    6e99:	41 08 c1             	or     %al,%r9b
    6e9c:	75 0a                	jne    6ea8 <DkPhysicalMemoryCommit+0x88>
    6e9e:	48 85 d2             	test   %rdx,%rdx
    6ea1:	74 05                	je     6ea8 <DkPhysicalMemoryCommit+0x88>
    6ea3:	83 3f 11             	cmpl   $0x11,(%rdi)
    6ea6:	74 28                	je     6ed0 <DkPhysicalMemoryCommit+0xb0>
    6ea8:	bf 04 00 00 00       	mov    $0x4,%edi
    6ead:	e8 ee 97 00 00       	callq  106a0 <_DkRaiseFailure>
    6eb2:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    6eb6:	48 ba ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rdx
    6ebd:	de ad de 
    6ec0:	31 c0                	xor    %eax,%eax
    6ec2:	48 39 d1             	cmp    %rdx,%rcx
    6ec5:	74 27                	je     6eee <DkPhysicalMemoryCommit+0xce>
    6ec7:	c9                   	leaveq 
    6ec8:	c3                   	retq   
    6ec9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6ed0:	e8 eb 9d 00 00       	callq  10cc0 <_DkPhysicalMemoryCommit>
    6ed5:	85 c0                	test   %eax,%eax
    6ed7:	78 27                	js     6f00 <DkPhysicalMemoryCommit+0xe0>
    6ed9:	48 98                	cltq   
    6edb:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    6edf:	48 ba ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rdx
    6ee6:	de ad de 
    6ee9:	48 39 d1             	cmp    %rdx,%rcx
    6eec:	75 d9                	jne    6ec7 <DkPhysicalMemoryCommit+0xa7>
    6eee:	90                   	nop
    6eef:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    6ef6:	00 
    6ef7:	c9                   	leaveq 
    6ef8:	c3                   	retq   
    6ef9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6f00:	f7 d8                	neg    %eax
    6f02:	89 c7                	mov    %eax,%edi
    6f04:	e8 97 97 00 00       	callq  106a0 <_DkRaiseFailure>
    6f09:	31 c0                	xor    %eax,%eax
    6f0b:	eb ce                	jmp    6edb <DkPhysicalMemoryCommit+0xbb>
    6f0d:	0f 1f 00             	nopl   (%rax)

0000000000006f10 <DkPhysicalMemoryMap>:
    6f10:	55                   	push   %rbp
    6f11:	48 89 e5             	mov    %rsp,%rbp
    6f14:	48 83 ec 60          	sub    $0x60,%rsp
    6f18:	48 89 e0             	mov    %rsp,%rax
    6f1b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    6f1f:	48 89 e8             	mov    %rbp,%rax
    6f22:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6f26:	48 89 d8             	mov    %rbx,%rax
    6f29:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6f2d:	48 89 f0             	mov    %rsi,%rax
    6f30:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6f34:	48 89 f8             	mov    %rdi,%rax
    6f37:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    6f3b:	4c 89 e0             	mov    %r12,%rax
    6f3e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6f42:	4c 89 e8             	mov    %r13,%rax
    6f45:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6f49:	4c 89 f0             	mov    %r14,%rax
    6f4c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6f50:	4c 89 f8             	mov    %r15,%rax
    6f53:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6f57:	48 8b 05 92 36 22 00 	mov    0x223692(%rip),%rax        # 22a5f0 <data_start+0x138>
    6f5e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    6f62:	48 8d 05 e1 15 02 00 	lea    0x215e1(%rip),%rax        # 2854a <__FUNCTION__.2860+0xb2>
    6f69:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6f6d:	90                   	nop
    6f6e:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
    6f75:	de ad de 
    6f78:	48 85 c9             	test   %rcx,%rcx
    6f7b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    6f7f:	74 0a                	je     6f8b <DkPhysicalMemoryMap+0x7b>
    6f81:	48 85 ff             	test   %rdi,%rdi
    6f84:	74 05                	je     6f8b <DkPhysicalMemoryMap+0x7b>
    6f86:	83 3f 11             	cmpl   $0x11,(%rdi)
    6f89:	74 25                	je     6fb0 <DkPhysicalMemoryMap+0xa0>
    6f8b:	bf 04 00 00 00       	mov    $0x4,%edi
    6f90:	e8 0b 97 00 00       	callq  106a0 <_DkRaiseFailure>
    6f95:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    6f99:	48 ba ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rdx
    6fa0:	de ad de 
    6fa3:	31 c0                	xor    %eax,%eax
    6fa5:	48 39 d1             	cmp    %rdx,%rcx
    6fa8:	74 24                	je     6fce <DkPhysicalMemoryMap+0xbe>
    6faa:	c9                   	leaveq 
    6fab:	c3                   	retq   
    6fac:	0f 1f 40 00          	nopl   0x0(%rax)
    6fb0:	e8 1b 9d 00 00       	callq  10cd0 <_DkPhysicalMemoryMap>
    6fb5:	85 c0                	test   %eax,%eax
    6fb7:	78 27                	js     6fe0 <DkPhysicalMemoryMap+0xd0>
    6fb9:	48 98                	cltq   
    6fbb:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    6fbf:	48 ba ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rdx
    6fc6:	de ad de 
    6fc9:	48 39 d1             	cmp    %rdx,%rcx
    6fcc:	75 dc                	jne    6faa <DkPhysicalMemoryMap+0x9a>
    6fce:	90                   	nop
    6fcf:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    6fd6:	00 
    6fd7:	c9                   	leaveq 
    6fd8:	c3                   	retq   
    6fd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6fe0:	f7 d8                	neg    %eax
    6fe2:	89 c7                	mov    %eax,%edi
    6fe4:	e8 b7 96 00 00       	callq  106a0 <_DkRaiseFailure>
    6fe9:	31 c0                	xor    %eax,%eax
    6feb:	eb ce                	jmp    6fbb <DkPhysicalMemoryMap+0xab>
    6fed:	0f 1f 00             	nopl   (%rax)

0000000000006ff0 <DkSetExceptionHandler>:
    6ff0:	55                   	push   %rbp
    6ff1:	48 89 e5             	mov    %rsp,%rbp
    6ff4:	41 55                	push   %r13
    6ff6:	41 54                	push   %r12
    6ff8:	53                   	push   %rbx
    6ff9:	48 83 ec 68          	sub    $0x68,%rsp
    6ffd:	48 89 e0             	mov    %rsp,%rax
    7000:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    7004:	48 89 e8             	mov    %rbp,%rax
    7007:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    700b:	48 89 d8             	mov    %rbx,%rax
    700e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7012:	48 89 f0             	mov    %rsi,%rax
    7015:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    7019:	48 89 f8             	mov    %rdi,%rax
    701c:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    7020:	4c 89 e0             	mov    %r12,%rax
    7023:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    7027:	4c 89 e8             	mov    %r13,%rax
    702a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    702e:	4c 89 f0             	mov    %r14,%rax
    7031:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    7035:	4c 89 f8             	mov    %r15,%rax
    7038:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    703c:	48 8b 05 1d 35 22 00 	mov    0x22351d(%rip),%rax        # 22a560 <data_start+0xa8>
    7043:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    7047:	48 8d 05 10 15 02 00 	lea    0x21510(%rip),%rax        # 2855e <__FUNCTION__.2860+0xc6>
    704e:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    7052:	90                   	nop
    7053:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
    7057:	49 bc ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%r12
    705e:	de ad de 
    7061:	4c 89 65 80          	mov    %r12,-0x80(%rbp)
    7065:	48 83 f8 07          	cmp    $0x7,%rax
    7069:	77 08                	ja     7073 <DkSetExceptionHandler+0x83>
    706b:	48 85 ff             	test   %rdi,%rdi
    706e:	49 89 fd             	mov    %rdi,%r13
    7071:	75 2d                	jne    70a0 <DkSetExceptionHandler+0xb0>
    7073:	bf 04 00 00 00       	mov    $0x4,%edi
    7078:	e8 23 96 00 00       	callq  106a0 <_DkRaiseFailure>
    707d:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
    7081:	48 ba ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rdx
    7088:	de ad de 
    708b:	31 c0                	xor    %eax,%eax
    708d:	48 39 d1             	cmp    %rdx,%rcx
    7090:	74 3e                	je     70d0 <DkSetExceptionHandler+0xe0>
    7092:	48 83 c4 68          	add    $0x68,%rsp
    7096:	5b                   	pop    %rbx
    7097:	41 5c                	pop    %r12
    7099:	41 5d                	pop    %r13
    709b:	5d                   	pop    %rbp
    709c:	c3                   	retq   
    709d:	0f 1f 00             	nopl   (%rax)
    70a0:	48 c1 e6 04          	shl    $0x4,%rsi
    70a4:	48 89 f3             	mov    %rsi,%rbx
    70a7:	48 03 1d f2 34 22 00 	add    0x2234f2(%rip),%rbx        # 22a5a0 <data_start+0xe8>
    70ae:	48 89 df             	mov    %rbx,%rdi
    70b1:	e8 2a 9c 00 00       	callq  10ce0 <_DkSpinLock>
    70b6:	4c 89 6b 08          	mov    %r13,0x8(%rbx)
    70ba:	48 89 df             	mov    %rbx,%rdi
    70bd:	e8 4e 9c 00 00       	callq  10d10 <_DkSpinUnlock>
    70c2:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    70c6:	b8 01 00 00 00       	mov    $0x1,%eax
    70cb:	4c 39 e2             	cmp    %r12,%rdx
    70ce:	75 c2                	jne    7092 <DkSetExceptionHandler+0xa2>
    70d0:	90                   	nop
    70d1:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
    70d8:	00 
    70d9:	48 83 c4 68          	add    $0x68,%rsp
    70dd:	5b                   	pop    %rbx
    70de:	41 5c                	pop    %r12
    70e0:	41 5d                	pop    %r13
    70e2:	5d                   	pop    %rbp
    70e3:	c3                   	retq   
    70e4:	66 90                	xchg   %ax,%ax
    70e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    70ed:	00 00 00 

00000000000070f0 <_DkGetExceptionHandler>:
    70f0:	55                   	push   %rbp
    70f1:	48 c1 e7 04          	shl    $0x4,%rdi
    70f5:	48 89 e5             	mov    %rsp,%rbp
    70f8:	41 54                	push   %r12
    70fa:	53                   	push   %rbx
    70fb:	48 89 fb             	mov    %rdi,%rbx
    70fe:	48 03 1d 9b 34 22 00 	add    0x22349b(%rip),%rbx        # 22a5a0 <data_start+0xe8>
    7105:	48 89 df             	mov    %rbx,%rdi
    7108:	e8 d3 9b 00 00       	callq  10ce0 <_DkSpinLock>
    710d:	4c 8b 63 08          	mov    0x8(%rbx),%r12
    7111:	48 89 df             	mov    %rbx,%rdi
    7114:	e8 f7 9b 00 00       	callq  10d10 <_DkSpinUnlock>
    7119:	5b                   	pop    %rbx
    711a:	4c 89 e0             	mov    %r12,%rax
    711d:	41 5c                	pop    %r12
    711f:	5d                   	pop    %rbp
    7120:	c3                   	retq   
    7121:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7126:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    712d:	00 00 00 

0000000000007130 <DkExceptionReturn>:
    7130:	55                   	push   %rbp
    7131:	48 89 e5             	mov    %rsp,%rbp
    7134:	5d                   	pop    %rbp
    7135:	e9 b6 95 00 00       	jmpq   106f0 <_DkExceptionReturn>
    713a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000007140 <__abort>:
    7140:	55                   	push   %rbp
    7141:	bf 01 00 00 00       	mov    $0x1,%edi
    7146:	48 89 e5             	mov    %rsp,%rbp
    7149:	5d                   	pop    %rbp
    714a:	e9 11 7b 00 00       	jmpq   ec60 <_DkProcessExit>
    714f:	90                   	nop

0000000000007150 <warn>:
    7150:	55                   	push   %rbp
    7151:	48 89 e5             	mov    %rsp,%rbp
    7154:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    715b:	84 c0                	test   %al,%al
    715d:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
    7164:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    716b:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    7172:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    7179:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    7180:	74 20                	je     71a2 <warn+0x52>
    7182:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    7186:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    718a:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    718e:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    7192:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    7196:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    719a:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    719e:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    71a2:	48 8d 45 10          	lea    0x10(%rbp),%rax
    71a6:	48 8d b5 38 ff ff ff 	lea    -0xc8(%rbp),%rsi
    71ad:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    71b4:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    71bb:	c7 85 38 ff ff ff 08 	movl   $0x8,-0xc8(%rbp)
    71c2:	00 00 00 
    71c5:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
    71cc:	00 00 00 
    71cf:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    71d6:	e8 f5 23 00 00       	callq  95d0 <vprintf>
    71db:	c9                   	leaveq 
    71dc:	c3                   	retq   
    71dd:	0f 1f 00             	nopl   (%rax)

00000000000071e0 <__assert>:
    71e0:	55                   	push   %rbp
    71e1:	48 89 e5             	mov    %rsp,%rbp
    71e4:	cc                   	int3   
    71e5:	5d                   	pop    %rbp
    71e6:	c3                   	retq   
    71e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    71ee:	00 00 

00000000000071f0 <new_elf_object>:
    71f0:	55                   	push   %rbp
    71f1:	48 89 e5             	mov    %rsp,%rbp
    71f4:	41 55                	push   %r13
    71f6:	41 54                	push   %r12
    71f8:	53                   	push   %rbx
    71f9:	49 89 fc             	mov    %rdi,%r12
    71fc:	bf 00 03 00 00       	mov    $0x300,%edi
    7201:	41 89 f5             	mov    %esi,%r13d
    7204:	48 83 ec 08          	sub    $0x8,%rsp
    7208:	e8 13 1e 00 00       	callq  9020 <malloc>
    720d:	48 85 c0             	test   %rax,%rax
    7210:	74 46                	je     7258 <new_elf_object+0x68>
    7212:	31 f6                	xor    %esi,%esi
    7214:	ba 00 03 00 00       	mov    $0x300,%edx
    7219:	48 89 c7             	mov    %rax,%rdi
    721c:	48 89 c3             	mov    %rax,%rbx
    721f:	e8 3c f2 00 00       	callq  16460 <memset>
    7224:	31 c0                	xor    %eax,%eax
    7226:	4d 85 e4             	test   %r12,%r12
    7229:	74 14                	je     723f <new_elf_object+0x4f>
    722b:	4c 89 e7             	mov    %r12,%rdi
    722e:	e8 3d e4 00 00       	callq  15670 <strlen>
    7233:	48 8d 70 01          	lea    0x1(%rax),%rsi
    7237:	4c 89 e7             	mov    %r12,%rdi
    723a:	e8 51 21 00 00       	callq  9390 <remalloc>
    723f:	48 89 43 08          	mov    %rax,0x8(%rbx)
    7243:	44 89 6b 28          	mov    %r13d,0x28(%rbx)
    7247:	48 89 d8             	mov    %rbx,%rax
    724a:	48 83 c4 08          	add    $0x8,%rsp
    724e:	5b                   	pop    %rbx
    724f:	41 5c                	pop    %r12
    7251:	41 5d                	pop    %r13
    7253:	5d                   	pop    %rbp
    7254:	c3                   	retq   
    7255:	0f 1f 00             	nopl   (%rax)
    7258:	31 c0                	xor    %eax,%eax
    725a:	eb ee                	jmp    724a <new_elf_object+0x5a>
    725c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007260 <setup_elf_hash>:
    7260:	48 8b 87 90 02 00 00 	mov    0x290(%rdi),%rax
    7267:	48 85 c0             	test   %rax,%rax
    726a:	0f 84 a0 00 00 00    	je     7310 <setup_elf_hash+0xb0>
    7270:	55                   	push   %rbp
    7271:	48 89 e5             	mov    %rsp,%rbp
    7274:	41 57                	push   %r15
    7276:	41 56                	push   %r14
    7278:	41 55                	push   %r13
    727a:	41 54                	push   %r12
    727c:	53                   	push   %rbx
    727d:	48 89 fb             	mov    %rdi,%rbx
    7280:	48 83 ec 08          	sub    $0x8,%rsp
    7284:	4c 8b 68 08          	mov    0x8(%rax),%r13
    7288:	41 8b 45 00          	mov    0x0(%r13),%eax
    728c:	89 87 cc 02 00 00    	mov    %eax,0x2cc(%rdi)
    7292:	45 8b 65 08          	mov    0x8(%r13),%r12d
    7296:	45 8b 75 04          	mov    0x4(%r13),%r14d
    729a:	45 8d 7c 24 ff       	lea    -0x1(%r12),%r15d
    729f:	45 85 fc             	test   %r15d,%r12d
    72a2:	74 20                	je     72c4 <setup_elf_hash+0x64>
    72a4:	48 8d 3d cd 12 02 00 	lea    0x212cd(%rip),%rdi        # 28578 <__FUNCTION__.2860+0xe0>
    72ab:	31 c0                	xor    %eax,%eax
    72ad:	31 d2                	xor    %edx,%edx
    72af:	be 72 00 00 00       	mov    $0x72,%esi
    72b4:	e8 97 fe ff ff       	callq  7150 <warn>
    72b9:	e8 82 fe ff ff       	callq  7140 <__abort>
    72be:	8b 83 cc 02 00 00    	mov    0x2cc(%rbx),%eax
    72c4:	49 8d 55 10          	lea    0x10(%r13),%rdx
    72c8:	45 01 e4             	add    %r12d,%r12d
    72cb:	44 89 bb e0 02 00 00 	mov    %r15d,0x2e0(%rbx)
    72d2:	41 8b 4d 0c          	mov    0xc(%r13),%ecx
    72d6:	4c 29 f0             	sub    %r14,%rax
    72d9:	48 89 93 e8 02 00 00 	mov    %rdx,0x2e8(%rbx)
    72e0:	4a 8d 14 a2          	lea    (%rdx,%r12,4),%rdx
    72e4:	48 8d 04 82          	lea    (%rdx,%rax,4),%rax
    72e8:	89 8b e4 02 00 00    	mov    %ecx,0x2e4(%rbx)
    72ee:	48 89 93 f0 02 00 00 	mov    %rdx,0x2f0(%rbx)
    72f5:	48 89 83 f8 02 00 00 	mov    %rax,0x2f8(%rbx)
    72fc:	48 83 c4 08          	add    $0x8,%rsp
    7300:	5b                   	pop    %rbx
    7301:	41 5c                	pop    %r12
    7303:	41 5d                	pop    %r13
    7305:	41 5e                	pop    %r14
    7307:	41 5f                	pop    %r15
    7309:	5d                   	pop    %rbp
    730a:	f3 c3                	repz retq 
    730c:	0f 1f 40 00          	nopl   0x0(%rax)
    7310:	48 8b 47 58          	mov    0x58(%rdi),%rax
    7314:	48 85 c0             	test   %rax,%rax
    7317:	74 f1                	je     730a <setup_elf_hash+0xaa>
    7319:	48 8b 40 08          	mov    0x8(%rax),%rax
    731d:	8b 10                	mov    (%rax),%edx
    731f:	48 83 c0 08          	add    $0x8,%rax
    7323:	48 89 87 d0 02 00 00 	mov    %rax,0x2d0(%rdi)
    732a:	48 8d 04 90          	lea    (%rax,%rdx,4),%rax
    732e:	89 97 cc 02 00 00    	mov    %edx,0x2cc(%rdi)
    7334:	48 89 87 d8 02 00 00 	mov    %rax,0x2d8(%rdi)
    733b:	c3                   	retq   
    733c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007340 <map_elf_object_by_handle>:
    7340:	55                   	push   %rbp
    7341:	48 89 e5             	mov    %rsp,%rbp
    7344:	41 57                	push   %r15
    7346:	41 56                	push   %r14
    7348:	41 55                	push   %r13
    734a:	41 54                	push   %r12
    734c:	49 89 fe             	mov    %rdi,%r14
    734f:	53                   	push   %rbx
    7350:	89 f3                	mov    %esi,%ebx
    7352:	49 89 d5             	mov    %rdx,%r13
    7355:	4c 63 e1             	movslq %ecx,%r12
    7358:	48 83 ec 58          	sub    $0x58,%rsp
    735c:	48 89 7d a0          	mov    %rdi,-0x60(%rbp)
    7360:	44 89 45 98          	mov    %r8d,-0x68(%rbp)
    7364:	e8 e7 cd ff ff       	callq  4150 <_DkStreamRealpath>
    7369:	89 de                	mov    %ebx,%esi
    736b:	48 89 c7             	mov    %rax,%rdi
    736e:	e8 7d fe ff ff       	callq  71f0 <new_elf_object>
    7373:	4d 85 f6             	test   %r14,%r14
    7376:	48 89 c3             	mov    %rax,%rbx
    7379:	0f 84 42 07 00 00    	je     7ac1 <map_elf_object_by_handle+0x781>
    737f:	41 0f b7 45 10       	movzwl 0x10(%r13),%eax
    7384:	45 0f b7 75 38       	movzwl 0x38(%r13),%r14d
    7389:	66 89 45 9e          	mov    %ax,-0x62(%rbp)
    738d:	49 8b 45 18          	mov    0x18(%r13),%rax
    7391:	4c 89 f1             	mov    %r14,%rcx
    7394:	66 44 89 b3 a8 02 00 	mov    %r14w,0x2a8(%rbx)
    739b:	00 
    739c:	45 6b f6 38          	imul   $0x38,%r14d,%r14d
    73a0:	48 89 83 a0 02 00 00 	mov    %rax,0x2a0(%rbx)
    73a7:	49 8b 45 20          	mov    0x20(%r13),%rax
    73ab:	4a 8d 14 30          	lea    (%rax,%r14,1),%rdx
    73af:	4c 39 e2             	cmp    %r12,%rdx
    73b2:	0f 87 98 04 00 00    	ja     7850 <map_elf_object_by_handle+0x510>
    73b8:	4c 01 e8             	add    %r13,%rax
    73bb:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    73bf:	48 8d 04 89          	lea    (%rcx,%rcx,4),%rax
    73c3:	48 8d 04 c5 1e 00 00 	lea    0x1e(,%rax,8),%rax
    73ca:	00 
    73cb:	25 f0 ff ff 01       	and    $0x1fffff0,%eax
    73d0:	48 29 c4             	sub    %rax,%rsp
    73d3:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    73da:	00 
    73db:	48 c1 e1 06          	shl    $0x6,%rcx
    73df:	4c 8d 64 24 0f       	lea    0xf(%rsp),%r12
    73e4:	48 29 c1             	sub    %rax,%rcx
    73e7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    73eb:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    73ef:	48 01 c1             	add    %rax,%rcx
    73f2:	48 39 c8             	cmp    %rcx,%rax
    73f5:	0f 83 4b 06 00 00    	jae    7a46 <map_elf_object_by_handle+0x706>
    73fb:	48 8d 3d de 72 22 04 	lea    0x42272de(%rip),%rdi        # 422e6e0 <pal_state>
    7402:	48 89 c2             	mov    %rax,%rdx
    7405:	45 31 f6             	xor    %r14d,%r14d
    7408:	45 31 c9             	xor    %r9d,%r9d
    740b:	4c 8b 47 60          	mov    0x60(%rdi),%r8
    740f:	48 8b 7f 58          	mov    0x58(%rdi),%rdi
    7413:	44 89 45 b0          	mov    %r8d,-0x50(%rbp)
    7417:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    741b:	eb 35                	jmp    7452 <map_elf_object_by_handle+0x112>
    741d:	0f 1f 00             	nopl   (%rax)
    7420:	83 f8 06             	cmp    $0x6,%eax
    7423:	0f 84 f7 03 00 00    	je     7820 <map_elf_object_by_handle+0x4e0>
    7429:	3d 52 e5 74 64       	cmp    $0x6474e552,%eax
    742e:	75 15                	jne    7445 <map_elf_object_by_handle+0x105>
    7430:	48 8b 42 10          	mov    0x10(%rdx),%rax
    7434:	48 89 83 c0 02 00 00 	mov    %rax,0x2c0(%rbx)
    743b:	48 8b 42 28          	mov    0x28(%rdx),%rax
    743f:	89 83 c8 02 00 00    	mov    %eax,0x2c8(%rbx)
    7445:	48 83 c2 38          	add    $0x38,%rdx
    7449:	48 39 ca             	cmp    %rcx,%rdx
    744c:	0f 83 ce 00 00 00    	jae    7520 <map_elf_object_by_handle+0x1e0>
    7452:	8b 02                	mov    (%rdx),%eax
    7454:	83 f8 02             	cmp    $0x2,%eax
    7457:	0f 84 d3 03 00 00    	je     7830 <map_elf_object_by_handle+0x4f0>
    745d:	77 c1                	ja     7420 <map_elf_object_by_handle+0xe0>
    745f:	83 f8 01             	cmp    $0x1,%eax
    7462:	75 e1                	jne    7445 <map_elf_object_by_handle+0x105>
    7464:	48 8b 42 30          	mov    0x30(%rdx),%rax
    7468:	48 89 c6             	mov    %rax,%rsi
    746b:	4c 21 c6             	and    %r8,%rsi
    746e:	48 39 f0             	cmp    %rsi,%rax
    7471:	0f 85 19 04 00 00    	jne    7890 <map_elf_object_by_handle+0x550>
    7477:	48 8b 72 10          	mov    0x10(%rdx),%rsi
    747b:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
    747f:	48 83 e8 01          	sub    $0x1,%rax
    7483:	49 89 f2             	mov    %rsi,%r10
    7486:	49 29 fa             	sub    %rdi,%r10
    7489:	49 85 c2             	test   %rax,%r10
    748c:	0f 85 2e 04 00 00    	jne    78c0 <map_elf_object_by_handle+0x580>
    7492:	49 89 f3             	mov    %rsi,%r11
    7495:	4c 03 5a 20          	add    0x20(%rdx),%r11
    7499:	45 8d 51 01          	lea    0x1(%r9),%r10d
    749d:	4b 8d 04 89          	lea    (%r9,%r9,4),%rax
    74a1:	4d 89 c7             	mov    %r8,%r15
    74a4:	4c 8b 4d b8          	mov    -0x48(%rbp),%r9
    74a8:	49 21 f7             	and    %rsi,%r15
    74ab:	23 7d b0             	and    -0x50(%rbp),%edi
    74ae:	48 03 72 28          	add    0x28(%rdx),%rsi
    74b2:	49 8d 04 c4          	lea    (%r12,%rax,8),%rax
    74b6:	4d 01 d9             	add    %r11,%r9
    74b9:	4d 21 c1             	and    %r8,%r9
    74bc:	41 83 fa 01          	cmp    $0x1,%r10d
    74c0:	4c 89 38             	mov    %r15,(%rax)
    74c3:	4c 89 48 08          	mov    %r9,0x8(%rax)
    74c7:	4c 89 58 10          	mov    %r11,0x10(%rax)
    74cb:	48 89 70 18          	mov    %rsi,0x18(%rax)
    74cf:	89 78 20             	mov    %edi,0x20(%rax)
    74d2:	74 0d                	je     74e1 <map_elf_object_by_handle+0x1a1>
    74d4:	4c 3b 78 e0          	cmp    -0x20(%rax),%r15
    74d8:	bf 01 00 00 00       	mov    $0x1,%edi
    74dd:	44 0f 45 f7          	cmovne %edi,%r14d
    74e1:	8b 72 04             	mov    0x4(%rdx),%esi
    74e4:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%rax)
    74eb:	40 f6 c6 04          	test   $0x4,%sil
    74ef:	74 07                	je     74f8 <map_elf_object_by_handle+0x1b8>
    74f1:	c7 40 24 01 00 00 00 	movl   $0x1,0x24(%rax)
    74f8:	40 f6 c6 02          	test   $0x2,%sil
    74fc:	74 04                	je     7502 <map_elf_object_by_handle+0x1c2>
    74fe:	83 48 24 02          	orl    $0x2,0x24(%rax)
    7502:	83 e6 01             	and    $0x1,%esi
    7505:	4d 63 ca             	movslq %r10d,%r9
    7508:	0f 84 37 ff ff ff    	je     7445 <map_elf_object_by_handle+0x105>
    750e:	48 83 c2 38          	add    $0x38,%rdx
    7512:	83 48 24 04          	orl    $0x4,0x24(%rax)
    7516:	48 39 ca             	cmp    %rcx,%rdx
    7519:	0f 82 33 ff ff ff    	jb     7452 <map_elf_object_by_handle+0x112>
    751f:	90                   	nop
    7520:	45 85 c9             	test   %r9d,%r9d
    7523:	0f 84 1d 05 00 00    	je     7a46 <map_elf_object_by_handle+0x706>
    7529:	4b 8d 04 89          	lea    (%r9,%r9,4),%rax
    752d:	4d 8b 0c 24          	mov    (%r12),%r9
    7531:	48 c1 e0 03          	shl    $0x3,%rax
    7535:	4d 8d 54 04 d8       	lea    -0x28(%r12,%rax,1),%r10
    753a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    753e:	45 8b 7a 18          	mov    0x18(%r10),%r15d
    7542:	4c 89 55 b0          	mov    %r10,-0x50(%rbp)
    7546:	45 29 cf             	sub    %r9d,%r15d
    7549:	66 83 7d 9e 03       	cmpw   $0x3,-0x62(%rbp)
    754e:	0f 85 2c 05 00 00    	jne    7a80 <map_elf_object_by_handle+0x740>
    7554:	41 8b 54 24 24       	mov    0x24(%r12),%edx
    7559:	41 8b 4c 24 20       	mov    0x20(%r12),%ecx
    755e:	4d 63 ff             	movslq %r15d,%r15
    7561:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
    7565:	48 8d 75 c8          	lea    -0x38(%rbp),%rsi
    7569:	4d 89 f8             	mov    %r15,%r8
    756c:	4c 89 4d 90          	mov    %r9,-0x70(%rbp)
    7570:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    7577:	00 
    7578:	83 ca 08             	or     $0x8,%edx
    757b:	e8 70 c7 ff ff       	callq  3cf0 <_DkStreamMap>
    7580:	85 c0                	test   %eax,%eax
    7582:	41 89 c3             	mov    %eax,%r11d
    7585:	4c 8b 4d 90          	mov    -0x70(%rbp),%r9
    7589:	4c 8b 55 b0          	mov    -0x50(%rbp),%r10
    758d:	0f 88 0f 05 00 00    	js     7aa2 <map_elf_object_by_handle+0x762>
    7593:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7597:	49 01 c7             	add    %rax,%r15
    759a:	48 89 83 b0 02 00 00 	mov    %rax,0x2b0(%rbx)
    75a1:	4c 29 c8             	sub    %r9,%rax
    75a4:	45 84 f6             	test   %r14b,%r14b
    75a7:	4c 89 bb b8 02 00 00 	mov    %r15,0x2b8(%rbx)
    75ae:	48 89 03             	mov    %rax,(%rbx)
    75b1:	0f 85 cf 03 00 00    	jne    7986 <map_elf_object_by_handle+0x646>
    75b7:	4d 89 e6             	mov    %r12,%r14
    75ba:	48 83 bb 98 02 00 00 	cmpq   $0x0,0x298(%rbx)
    75c1:	00 
    75c2:	0f 84 2c 04 00 00    	je     79f4 <map_elf_object_by_handle+0x6b4>
    75c8:	4d 8b 46 18          	mov    0x18(%r14),%r8
    75cc:	49 8b 4e 10          	mov    0x10(%r14),%rcx
    75d0:	49 39 c8             	cmp    %rcx,%r8
    75d3:	76 6f                	jbe    7644 <map_elf_object_by_handle+0x304>
    75d5:	48 8d 05 04 71 22 04 	lea    0x4227104(%rip),%rax        # 422e6e0 <pal_state>
    75dc:	48 8b 13             	mov    (%rbx),%rdx
    75df:	48 8d 3d fa 70 22 04 	lea    0x42270fa(%rip),%rdi        # 422e6e0 <pal_state>
    75e6:	48 8b 40 58          	mov    0x58(%rax),%rax
    75ea:	48 01 d1             	add    %rdx,%rcx
    75ed:	49 01 d0             	add    %rdx,%r8
    75f0:	48 8b 7f 60          	mov    0x60(%rdi),%rdi
    75f4:	4c 8d 3c 01          	lea    (%rcx,%rax,1),%r15
    75f8:	49 01 c0             	add    %rax,%r8
    75fb:	49 21 f8             	and    %rdi,%r8
    75fe:	49 21 ff             	and    %rdi,%r15
    7601:	4d 39 f8             	cmp    %r15,%r8
    7604:	4d 0f 46 f8          	cmovbe %r8,%r15
    7608:	49 39 cf             	cmp    %rcx,%r15
    760b:	76 2e                	jbe    763b <map_elf_object_by_handle+0x2fb>
    760d:	45 8b 4e 24          	mov    0x24(%r14),%r9d
    7611:	41 f6 c1 02          	test   $0x2,%r9b
    7615:	0f 84 1a 05 00 00    	je     7b35 <map_elf_object_by_handle+0x7f5>
    761b:	4c 89 fa             	mov    %r15,%rdx
    761e:	31 f6                	xor    %esi,%esi
    7620:	48 89 cf             	mov    %rcx,%rdi
    7623:	48 29 ca             	sub    %rcx,%rdx
    7626:	4c 89 45 90          	mov    %r8,-0x70(%rbp)
    762a:	44 89 5d b0          	mov    %r11d,-0x50(%rbp)
    762e:	e8 2d ee 00 00       	callq  16460 <memset>
    7633:	44 8b 5d b0          	mov    -0x50(%rbp),%r11d
    7637:	4c 8b 45 90          	mov    -0x70(%rbp),%r8
    763b:	4d 39 c7             	cmp    %r8,%r15
    763e:	0f 82 65 03 00 00    	jb     79a9 <map_elf_object_by_handle+0x669>
    7644:	49 83 c6 28          	add    $0x28,%r14
    7648:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    764c:	4c 01 e0             	add    %r12,%rax
    764f:	49 39 c6             	cmp    %rax,%r14
    7652:	0f 82 78 02 00 00    	jb     78d0 <map_elf_object_by_handle+0x590>
    7658:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
    765c:	48 85 ff             	test   %rdi,%rdi
    765f:	0f 84 45 04 00 00    	je     7aaa <map_elf_object_by_handle+0x76a>
    7665:	48 8b 33             	mov    (%rbx),%rsi
    7668:	48 01 f7             	add    %rsi,%rdi
    766b:	80 7d 98 00          	cmpb   $0x0,-0x68(%rbp)
    766f:	48 89 7b 30          	mov    %rdi,0x30(%rbx)
    7673:	48 89 7b 10          	mov    %rdi,0x10(%rbx)
    7677:	0f 85 dc 03 00 00    	jne    7a59 <map_elf_object_by_handle+0x719>
    767d:	48 85 ff             	test   %rdi,%rdi
    7680:	48 8d 4b 38          	lea    0x38(%rbx),%rcx
    7684:	0f 84 54 01 00 00    	je     77de <map_elf_object_by_handle+0x49e>
    768a:	48 8b 17             	mov    (%rdi),%rdx
    768d:	48 85 d2             	test   %rdx,%rdx
    7690:	74 6a                	je     76fc <map_elf_object_by_handle+0x3bc>
    7692:	41 b8 ff ff ff 6f    	mov    $0x6fffffff,%r8d
    7698:	41 bc ff fd ff 6f    	mov    $0x6ffffdff,%r12d
    769e:	41 bf ff fe ff 6f    	mov    $0x6ffffeff,%r15d
    76a4:	49 be a0 f1 ff 7f 03 	movabs $0x37ffff1a0,%r14
    76ab:	00 00 00 
    76ae:	41 ba 31 00 00 00    	mov    $0x31,%r10d
    76b4:	41 b9 21 00 00 70    	mov    $0x70000021,%r9d
    76ba:	eb 14                	jmp    76d0 <map_elf_object_by_handle+0x390>
    76bc:	0f 1f 40 00          	nopl   0x0(%rax)
    76c0:	48 89 3c d1          	mov    %rdi,(%rcx,%rdx,8)
    76c4:	48 83 c7 10          	add    $0x10,%rdi
    76c8:	48 8b 17             	mov    (%rdi),%rdx
    76cb:	48 85 d2             	test   %rdx,%rdx
    76ce:	74 2c                	je     76fc <map_elf_object_by_handle+0x3bc>
    76d0:	48 83 fa 21          	cmp    $0x21,%rdx
    76d4:	76 ea                	jbe    76c0 <map_elf_object_by_handle+0x380>
    76d6:	4c 89 c0             	mov    %r8,%rax
    76d9:	48 29 d0             	sub    %rdx,%rax
    76dc:	48 83 f8 0f          	cmp    $0xf,%rax
    76e0:	0f 87 42 02 00 00    	ja     7928 <map_elf_object_by_handle+0x5e8>
    76e6:	4c 89 c8             	mov    %r9,%rax
    76e9:	48 29 d0             	sub    %rdx,%rax
    76ec:	48 89 3c c1          	mov    %rdi,(%rcx,%rax,8)
    76f0:	48 83 c7 10          	add    $0x10,%rdi
    76f4:	48 8b 17             	mov    (%rdi),%rdx
    76f7:	48 85 d2             	test   %rdx,%rdx
    76fa:	75 d4                	jne    76d0 <map_elf_object_by_handle+0x390>
    76fc:	48 85 f6             	test   %rsi,%rsi
    76ff:	74 71                	je     7772 <map_elf_object_by_handle+0x432>
    7701:	48 8b 43 58          	mov    0x58(%rbx),%rax
    7705:	48 85 c0             	test   %rax,%rax
    7708:	74 04                	je     770e <map_elf_object_by_handle+0x3ce>
    770a:	48 01 70 08          	add    %rsi,0x8(%rax)
    770e:	48 8b 43 50          	mov    0x50(%rbx),%rax
    7712:	48 85 c0             	test   %rax,%rax
    7715:	74 04                	je     771b <map_elf_object_by_handle+0x3db>
    7717:	48 01 70 08          	add    %rsi,0x8(%rax)
    771b:	48 8b 43 60          	mov    0x60(%rbx),%rax
    771f:	48 85 c0             	test   %rax,%rax
    7722:	74 04                	je     7728 <map_elf_object_by_handle+0x3e8>
    7724:	48 01 70 08          	add    %rsi,0x8(%rax)
    7728:	48 8b 43 68          	mov    0x68(%rbx),%rax
    772c:	48 85 c0             	test   %rax,%rax
    772f:	74 04                	je     7735 <map_elf_object_by_handle+0x3f5>
    7731:	48 01 70 08          	add    %rsi,0x8(%rax)
    7735:	48 8b 43 70          	mov    0x70(%rbx),%rax
    7739:	48 85 c0             	test   %rax,%rax
    773c:	74 04                	je     7742 <map_elf_object_by_handle+0x402>
    773e:	48 01 70 08          	add    %rsi,0x8(%rax)
    7742:	48 8b 83 f0 00 00 00 	mov    0xf0(%rbx),%rax
    7749:	48 85 c0             	test   %rax,%rax
    774c:	74 04                	je     7752 <map_elf_object_by_handle+0x412>
    774e:	48 01 70 08          	add    %rsi,0x8(%rax)
    7752:	48 8b 83 c0 01 00 00 	mov    0x1c0(%rbx),%rax
    7759:	48 85 c0             	test   %rax,%rax
    775c:	74 04                	je     7762 <map_elf_object_by_handle+0x422>
    775e:	48 01 70 08          	add    %rsi,0x8(%rax)
    7762:	48 8b 83 90 02 00 00 	mov    0x290(%rbx),%rax
    7769:	48 85 c0             	test   %rax,%rax
    776c:	74 04                	je     7772 <map_elf_object_by_handle+0x432>
    776e:	48 01 70 08          	add    %rsi,0x8(%rax)
    7772:	48 8b 83 d8 00 00 00 	mov    0xd8(%rbx),%rax
    7779:	48 85 c0             	test   %rax,%rax
    777c:	74 29                	je     77a7 <map_elf_object_by_handle+0x467>
    777e:	48 83 78 08 07       	cmpq   $0x7,0x8(%rax)
    7783:	74 22                	je     77a7 <map_elf_object_by_handle+0x467>
    7785:	48 8d 3d b4 0f 02 00 	lea    0x20fb4(%rip),%rdi        # 28740 <__FUNCTION__.2860+0x2a8>
    778c:	31 d2                	xor    %edx,%edx
    778e:	be 89 00 00 00       	mov    $0x89,%esi
    7793:	31 c0                	xor    %eax,%eax
    7795:	44 89 5d b8          	mov    %r11d,-0x48(%rbp)
    7799:	e8 b2 f9 ff ff       	callq  7150 <warn>
    779e:	e8 9d f9 ff ff       	callq  7140 <__abort>
    77a3:	44 8b 5d b8          	mov    -0x48(%rbp),%r11d
    77a7:	48 83 7b 70 00       	cmpq   $0x0,0x70(%rbx)
    77ac:	74 30                	je     77de <map_elf_object_by_handle+0x49e>
    77ae:	48 8b 83 80 00 00 00 	mov    0x80(%rbx),%rax
    77b5:	48 83 78 08 18       	cmpq   $0x18,0x8(%rax)
    77ba:	74 22                	je     77de <map_elf_object_by_handle+0x49e>
    77bc:	48 8d 3d d5 0f 02 00 	lea    0x20fd5(%rip),%rdi        # 28798 <__FUNCTION__.2860+0x300>
    77c3:	31 d2                	xor    %edx,%edx
    77c5:	be 93 00 00 00       	mov    $0x93,%esi
    77ca:	31 c0                	xor    %eax,%eax
    77cc:	44 89 5d b8          	mov    %r11d,-0x48(%rbp)
    77d0:	e8 7b f9 ff ff       	callq  7150 <warn>
    77d5:	e8 66 f9 ff ff       	callq  7140 <__abort>
    77da:	44 8b 5d b8          	mov    -0x48(%rbp),%r11d
    77de:	48 8b 83 98 02 00 00 	mov    0x298(%rbx),%rax
    77e5:	48 85 c0             	test   %rax,%rax
    77e8:	0f 84 eb 02 00 00    	je     7ad9 <map_elf_object_by_handle+0x799>
    77ee:	48 8b 13             	mov    (%rbx),%rdx
    77f1:	48 01 d0             	add    %rdx,%rax
    77f4:	48 89 83 98 02 00 00 	mov    %rax,0x298(%rbx)
    77fb:	48 01 93 a0 02 00 00 	add    %rdx,0x2a0(%rbx)
    7802:	48 89 df             	mov    %rbx,%rdi
    7805:	e8 56 fa ff ff       	callq  7260 <setup_elf_hash>
    780a:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    780e:	48 89 d8             	mov    %rbx,%rax
    7811:	5b                   	pop    %rbx
    7812:	41 5c                	pop    %r12
    7814:	41 5d                	pop    %r13
    7816:	41 5e                	pop    %r14
    7818:	41 5f                	pop    %r15
    781a:	5d                   	pop    %rbp
    781b:	c3                   	retq   
    781c:	0f 1f 40 00          	nopl   0x0(%rax)
    7820:	48 8b 42 10          	mov    0x10(%rdx),%rax
    7824:	48 89 83 98 02 00 00 	mov    %rax,0x298(%rbx)
    782b:	e9 15 fc ff ff       	jmpq   7445 <map_elf_object_by_handle+0x105>
    7830:	48 8b 42 10          	mov    0x10(%rdx),%rax
    7834:	48 89 43 30          	mov    %rax,0x30(%rbx)
    7838:	48 8b 42 28          	mov    0x28(%rdx),%rax
    783c:	48 c1 e8 04          	shr    $0x4,%rax
    7840:	66 89 83 aa 02 00 00 	mov    %ax,0x2aa(%rbx)
    7847:	e9 f9 fb ff ff       	jmpq   7445 <map_elf_object_by_handle+0x105>
    784c:	0f 1f 40 00          	nopl   0x0(%rax)
    7850:	4c 89 f7             	mov    %r14,%rdi
    7853:	e8 c8 17 00 00       	callq  9020 <malloc>
    7858:	49 8b 75 20          	mov    0x20(%r13),%rsi
    785c:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
    7860:	45 31 c9             	xor    %r9d,%r9d
    7863:	45 31 c0             	xor    %r8d,%r8d
    7866:	48 89 c1             	mov    %rax,%rcx
    7869:	4c 89 f2             	mov    %r14,%rdx
    786c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7870:	e8 4b bb ff ff       	callq  33c0 <_DkStreamRead>
    7875:	85 c0                	test   %eax,%eax
    7877:	41 89 c3             	mov    %eax,%r11d
    787a:	0f 88 4d 02 00 00    	js     7acd <map_elf_object_by_handle+0x78d>
    7880:	0f b7 8b a8 02 00 00 	movzwl 0x2a8(%rbx),%ecx
    7887:	e9 33 fb ff ff       	jmpq   73bf <map_elf_object_by_handle+0x7f>
    788c:	0f 1f 40 00          	nopl   0x0(%rax)
    7890:	48 8d 35 81 0e 02 00 	lea    0x20e81(%rip),%rsi        # 28718 <__FUNCTION__.2860+0x280>
    7897:	48 8d 15 88 07 02 00 	lea    0x20788(%rip),%rdx        # 28026 <section_rodata+0x426>
    789e:	48 8d 3d 2a 10 02 00 	lea    0x2102a(%rip),%rdi        # 288cf <__FUNCTION__.2860+0x437>
    78a5:	31 c0                	xor    %eax,%eax
    78a7:	e8 84 1d 00 00       	callq  9630 <pal_printf>
    78ac:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    78b0:	31 c0                	xor    %eax,%eax
    78b2:	5b                   	pop    %rbx
    78b3:	41 5c                	pop    %r12
    78b5:	41 5d                	pop    %r13
    78b7:	41 5e                	pop    %r14
    78b9:	41 5f                	pop    %r15
    78bb:	5d                   	pop    %rbp
    78bc:	c3                   	retq   
    78bd:	0f 1f 00             	nopl   (%rax)
    78c0:	48 8d 35 01 0e 02 00 	lea    0x20e01(%rip),%rsi        # 286c8 <__FUNCTION__.2860+0x230>
    78c7:	eb ce                	jmp    7897 <map_elf_object_by_handle+0x557>
    78c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    78d0:	4d 8b 46 08          	mov    0x8(%r14),%r8
    78d4:	49 8b 06             	mov    (%r14),%rax
    78d7:	49 39 c0             	cmp    %rax,%r8
    78da:	0f 86 da fc ff ff    	jbe    75ba <map_elf_object_by_handle+0x27a>
    78e0:	48 89 c2             	mov    %rax,%rdx
    78e3:	48 03 13             	add    (%rbx),%rdx
    78e6:	41 8b 4e 20          	mov    0x20(%r14),%ecx
    78ea:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
    78ee:	48 8d 75 c8          	lea    -0x38(%rbp),%rsi
    78f2:	49 29 c0             	sub    %rax,%r8
    78f5:	44 89 5d b0          	mov    %r11d,-0x50(%rbp)
    78f9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    78fd:	41 8b 56 24          	mov    0x24(%r14),%edx
    7901:	83 ca 08             	or     $0x8,%edx
    7904:	e8 e7 c3 ff ff       	callq  3cf0 <_DkStreamMap>
    7909:	85 c0                	test   %eax,%eax
    790b:	44 8b 5d b0          	mov    -0x50(%rbp),%r11d
    790f:	0f 89 a5 fc ff ff    	jns    75ba <map_elf_object_by_handle+0x27a>
    7915:	48 8d 35 54 0d 02 00 	lea    0x20d54(%rip),%rsi        # 28670 <__FUNCTION__.2860+0x1d8>
    791c:	e9 b3 00 00 00       	jmpq   79d4 <map_elf_object_by_handle+0x694>
    7921:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7928:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
    792b:	d1 f8                	sar    %eax
    792d:	83 f8 fc             	cmp    $0xfffffffc,%eax
    7930:	76 0e                	jbe    7940 <map_elf_object_by_handle+0x600>
    7932:	44 89 d2             	mov    %r10d,%edx
    7935:	29 c2                	sub    %eax,%edx
    7937:	48 89 3c d1          	mov    %rdi,(%rcx,%rdx,8)
    793b:	e9 84 fd ff ff       	jmpq   76c4 <map_elf_object_by_handle+0x384>
    7940:	4c 89 e0             	mov    %r12,%rax
    7943:	48 29 d0             	sub    %rdx,%rax
    7946:	48 83 f8 0b          	cmp    $0xb,%rax
    794a:	77 10                	ja     795c <map_elf_object_by_handle+0x61c>
    794c:	48 f7 da             	neg    %rdx
    794f:	48 8d 04 d1          	lea    (%rcx,%rdx,8),%rax
    7953:	4a 89 3c 30          	mov    %rdi,(%rax,%r14,1)
    7957:	e9 68 fd ff ff       	jmpq   76c4 <map_elf_object_by_handle+0x384>
    795c:	4c 89 f8             	mov    %r15,%rax
    795f:	48 29 d0             	sub    %rdx,%rax
    7962:	48 83 f8 0a          	cmp    $0xa,%rax
    7966:	0f 87 58 fd ff ff    	ja     76c4 <map_elf_object_by_handle+0x384>
    796c:	48 f7 da             	neg    %rdx
    796f:	48 8d 04 d1          	lea    (%rcx,%rdx,8),%rax
    7973:	48 ba 00 fa ff 7f 03 	movabs $0x37ffffa00,%rdx
    797a:	00 00 00 
    797d:	48 89 3c 10          	mov    %rdi,(%rax,%rdx,1)
    7981:	e9 3e fd ff ff       	jmpq   76c4 <map_elf_object_by_handle+0x384>
    7986:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
    798b:	49 8b 32             	mov    (%r10),%rsi
    798e:	44 89 5d b0          	mov    %r11d,-0x50(%rbp)
    7992:	48 8d 3c 10          	lea    (%rax,%rdx,1),%rdi
    7996:	48 29 d6             	sub    %rdx,%rsi
    7999:	31 d2                	xor    %edx,%edx
    799b:	e8 a0 61 00 00       	callq  db40 <_DkVirtualMemoryProtect>
    79a0:	44 8b 5d b0          	mov    -0x50(%rbp),%r11d
    79a4:	e9 0e fc ff ff       	jmpq   75b7 <map_elf_object_by_handle+0x277>
    79a9:	41 8b 4e 24          	mov    0x24(%r14),%ecx
    79ad:	4c 89 c6             	mov    %r8,%rsi
    79b0:	48 8d 7d c8          	lea    -0x38(%rbp),%rdi
    79b4:	4c 29 fe             	sub    %r15,%rsi
    79b7:	31 d2                	xor    %edx,%edx
    79b9:	4c 89 7d c8          	mov    %r15,-0x38(%rbp)
    79bd:	e8 2e 60 00 00       	callq  d9f0 <_DkVirtualMemoryAlloc>
    79c2:	85 c0                	test   %eax,%eax
    79c4:	41 89 c3             	mov    %eax,%r11d
    79c7:	48 8d 35 2a 0c 02 00 	lea    0x20c2a(%rip),%rsi        # 285f8 <__FUNCTION__.2860+0x160>
    79ce:	0f 89 70 fc ff ff    	jns    7644 <map_elf_object_by_handle+0x304>
    79d4:	41 f7 db             	neg    %r11d
    79d7:	41 83 fb 19          	cmp    $0x19,%r11d
    79db:	0f 87 b6 fe ff ff    	ja     7897 <map_elf_object_by_handle+0x557>
    79e1:	48 8d 05 18 2e 22 00 	lea    0x222e18(%rip),%rax        # 22a800 <pal_errstring>
    79e8:	4d 63 db             	movslq %r11d,%r11
    79eb:	4a 8b 14 d8          	mov    (%rax,%r11,8),%rdx
    79ef:	e9 aa fe ff ff       	jmpq   789e <map_elf_object_by_handle+0x55e>
    79f4:	41 8b 76 20          	mov    0x20(%r14),%esi
    79f8:	49 8b 55 20          	mov    0x20(%r13),%rdx
    79fc:	48 39 d6             	cmp    %rdx,%rsi
    79ff:	48 89 f0             	mov    %rsi,%rax
    7a02:	0f 87 c0 fb ff ff    	ja     75c8 <map_elf_object_by_handle+0x288>
    7a08:	41 0f b7 7d 38       	movzwl 0x38(%r13),%edi
    7a0d:	41 03 46 08          	add    0x8(%r14),%eax
    7a11:	49 8b 0e             	mov    (%r14),%rcx
    7a14:	4c 8d 04 fd 00 00 00 	lea    0x0(,%rdi,8),%r8
    7a1b:	00 
    7a1c:	48 c1 e7 06          	shl    $0x6,%rdi
    7a20:	29 c8                	sub    %ecx,%eax
    7a22:	48 98                	cltq   
    7a24:	4c 29 c7             	sub    %r8,%rdi
    7a27:	48 01 d7             	add    %rdx,%rdi
    7a2a:	48 39 f8             	cmp    %rdi,%rax
    7a2d:	0f 82 95 fb ff ff    	jb     75c8 <map_elf_object_by_handle+0x288>
    7a33:	48 8d 04 0a          	lea    (%rdx,%rcx,1),%rax
    7a37:	48 29 f0             	sub    %rsi,%rax
    7a3a:	48 89 83 98 02 00 00 	mov    %rax,0x298(%rbx)
    7a41:	e9 82 fb ff ff       	jmpq   75c8 <map_elf_object_by_handle+0x288>
    7a46:	48 8d 15 45 07 02 00 	lea    0x20745(%rip),%rdx        # 28192 <section_rodata+0x592>
    7a4d:	48 8d 35 4c 0c 02 00 	lea    0x20c4c(%rip),%rsi        # 286a0 <__FUNCTION__.2860+0x208>
    7a54:	e9 45 fe ff ff       	jmpq   789e <map_elf_object_by_handle+0x55e>
    7a59:	0f b7 b3 aa 02 00 00 	movzwl 0x2aa(%rbx),%esi
    7a60:	44 89 5d b8          	mov    %r11d,-0x48(%rbp)
    7a64:	48 c1 e6 04          	shl    $0x4,%rsi
    7a68:	e8 23 19 00 00       	callq  9390 <remalloc>
    7a6d:	48 8b 33             	mov    (%rbx),%rsi
    7a70:	48 89 43 30          	mov    %rax,0x30(%rbx)
    7a74:	48 89 c7             	mov    %rax,%rdi
    7a77:	44 8b 5d b8          	mov    -0x48(%rbp),%r11d
    7a7b:	e9 fd fb ff ff       	jmpq   767d <map_elf_object_by_handle+0x33d>
    7a80:	4c 03 0b             	add    (%rbx),%r9
    7a83:	4d 63 ff             	movslq %r15d,%r15
    7a86:	4d 89 e6             	mov    %r12,%r14
    7a89:	45 31 db             	xor    %r11d,%r11d
    7a8c:	4c 89 8b b0 02 00 00 	mov    %r9,0x2b0(%rbx)
    7a93:	4d 01 f9             	add    %r15,%r9
    7a96:	4c 89 8b b8 02 00 00 	mov    %r9,0x2b8(%rbx)
    7a9d:	e9 a6 fb ff ff       	jmpq   7648 <map_elf_object_by_handle+0x308>
    7aa2:	41 f7 db             	neg    %r11d
    7aa5:	e9 6b fe ff ff       	jmpq   7915 <map_elf_object_by_handle+0x5d5>
    7aaa:	66 83 7d 9e 03       	cmpw   $0x3,-0x62(%rbp)
    7aaf:	0f 85 29 fd ff ff    	jne    77de <map_elf_object_by_handle+0x49e>
    7ab5:	48 8d 35 5c 0b 02 00 	lea    0x20b5c(%rip),%rsi        # 28618 <__FUNCTION__.2860+0x180>
    7abc:	e9 13 ff ff ff       	jmpq   79d4 <map_elf_object_by_handle+0x694>
    7ac1:	48 8d 35 ed 0d 02 00 	lea    0x20ded(%rip),%rsi        # 288b5 <__FUNCTION__.2860+0x41d>
    7ac8:	e9 ca fd ff ff       	jmpq   7897 <map_elf_object_by_handle+0x557>
    7acd:	48 8d 35 cb 0d 02 00 	lea    0x20dcb(%rip),%rsi        # 2889f <__FUNCTION__.2860+0x407>
    7ad4:	e9 fb fe ff ff       	jmpq   79d4 <map_elf_object_by_handle+0x694>
    7ad9:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
    7ade:	44 89 5d b8          	mov    %r11d,-0x48(%rbp)
    7ae2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7ae9:	00 
    7aea:	48 c1 e0 06          	shl    $0x6,%rax
    7aee:	48 29 d0             	sub    %rdx,%rax
    7af1:	48 89 c7             	mov    %rax,%rdi
    7af4:	e8 27 15 00 00       	callq  9020 <malloc>
    7af9:	48 85 c0             	test   %rax,%rax
    7afc:	44 8b 5d b8          	mov    -0x48(%rbp),%r11d
    7b00:	0f 84 bb 00 00 00    	je     7bc1 <map_elf_object_by_handle+0x881>
    7b06:	41 0f b7 55 38       	movzwl 0x38(%r13),%edx
    7b0b:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    7b0f:	48 89 c7             	mov    %rax,%rdi
    7b12:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
    7b19:	00 
    7b1a:	48 c1 e2 06          	shl    $0x6,%rdx
    7b1e:	48 29 ca             	sub    %rcx,%rdx
    7b21:	e8 ca e0 00 00       	callq  15bf0 <memcpy>
    7b26:	48 8b 13             	mov    (%rbx),%rdx
    7b29:	48 89 83 98 02 00 00 	mov    %rax,0x298(%rbx)
    7b30:	e9 c6 fc ff ff       	jmpq   77fb <map_elf_object_by_handle+0x4bb>
    7b35:	48 8d 05 a4 6b 22 04 	lea    0x4226ba4(%rip),%rax        # 422e6e0 <pal_state>
    7b3c:	44 89 ca             	mov    %r9d,%edx
    7b3f:	48 21 cf             	and    %rcx,%rdi
    7b42:	83 ca 02             	or     $0x2,%edx
    7b45:	4c 89 45 80          	mov    %r8,-0x80(%rbp)
    7b49:	44 89 5d 88          	mov    %r11d,-0x78(%rbp)
    7b4d:	44 89 4d 90          	mov    %r9d,-0x70(%rbp)
    7b51:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    7b55:	48 8b 70 50          	mov    0x50(%rax),%rsi
    7b59:	e8 e2 5f 00 00       	callq  db40 <_DkVirtualMemoryProtect>
    7b5e:	85 c0                	test   %eax,%eax
    7b60:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    7b64:	44 8b 4d 90          	mov    -0x70(%rbp),%r9d
    7b68:	44 8b 5d 88          	mov    -0x78(%rbp),%r11d
    7b6c:	4c 8b 45 80          	mov    -0x80(%rbp),%r8
    7b70:	78 5b                	js     7bcd <map_elf_object_by_handle+0x88d>
    7b72:	4c 89 fa             	mov    %r15,%rdx
    7b75:	48 89 cf             	mov    %rcx,%rdi
    7b78:	31 f6                	xor    %esi,%esi
    7b7a:	48 29 ca             	sub    %rcx,%rdx
    7b7d:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
    7b81:	44 89 5d 90          	mov    %r11d,-0x70(%rbp)
    7b85:	44 89 4d 80          	mov    %r9d,-0x80(%rbp)
    7b89:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    7b8d:	e8 ce e8 00 00       	callq  16460 <memset>
    7b92:	48 8d 05 47 6b 22 04 	lea    0x4226b47(%rip),%rax        # 422e6e0 <pal_state>
    7b99:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    7b9d:	44 8b 4d 80          	mov    -0x80(%rbp),%r9d
    7ba1:	48 23 48 60          	and    0x60(%rax),%rcx
    7ba5:	48 8b 70 50          	mov    0x50(%rax),%rsi
    7ba9:	44 89 ca             	mov    %r9d,%edx
    7bac:	48 89 cf             	mov    %rcx,%rdi
    7baf:	e8 8c 5f 00 00       	callq  db40 <_DkVirtualMemoryProtect>
    7bb4:	44 8b 5d 90          	mov    -0x70(%rbp),%r11d
    7bb8:	4c 8b 45 88          	mov    -0x78(%rbp),%r8
    7bbc:	e9 7a fa ff ff       	jmpq   763b <map_elf_object_by_handle+0x2fb>
    7bc1:	48 8d 35 78 0a 02 00 	lea    0x20a78(%rip),%rsi        # 28640 <__FUNCTION__.2860+0x1a8>
    7bc8:	e9 07 fe ff ff       	jmpq   79d4 <map_elf_object_by_handle+0x694>
    7bcd:	48 8d 35 fc 09 02 00 	lea    0x209fc(%rip),%rsi        # 285d0 <__FUNCTION__.2860+0x138>
    7bd4:	e9 fb fd ff ff       	jmpq   79d4 <map_elf_object_by_handle+0x694>
    7bd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007be0 <check_elf_object>:
    7be0:	55                   	push   %rbp
    7be1:	45 31 c9             	xor    %r9d,%r9d
    7be4:	45 31 c0             	xor    %r8d,%r8d
    7be7:	31 f6                	xor    %esi,%esi
    7be9:	ba 04 00 00 00       	mov    $0x4,%edx
    7bee:	48 89 e5             	mov    %rsp,%rbp
    7bf1:	53                   	push   %rbx
    7bf2:	48 8d 5d e0          	lea    -0x20(%rbp),%rbx
    7bf6:	48 83 ec 18          	sub    $0x18,%rsp
    7bfa:	48 89 d9             	mov    %rbx,%rcx
    7bfd:	e8 be b7 ff ff       	callq  33c0 <_DkStreamRead>
    7c02:	85 c0                	test   %eax,%eax
    7c04:	78 3a                	js     7c40 <check_elf_object+0x60>
    7c06:	83 f8 03             	cmp    $0x3,%eax
    7c09:	7e 25                	jle    7c30 <check_elf_object+0x50>
    7c0b:	48 8d 35 ce 0d 02 00 	lea    0x20dce(%rip),%rsi        # 289e0 <expected.3010>
    7c12:	ba 04 00 00 00       	mov    $0x4,%edx
    7c17:	48 89 df             	mov    %rbx,%rdi
    7c1a:	e8 71 da 00 00       	callq  15690 <memcmp>
    7c1f:	85 c0                	test   %eax,%eax
    7c21:	75 0d                	jne    7c30 <check_elf_object+0x50>
    7c23:	48 83 c4 18          	add    $0x18,%rsp
    7c27:	5b                   	pop    %rbx
    7c28:	5d                   	pop    %rbp
    7c29:	c3                   	retq   
    7c2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7c30:	48 83 c4 18          	add    $0x18,%rsp
    7c34:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    7c39:	5b                   	pop    %rbx
    7c3a:	5d                   	pop    %rbp
    7c3b:	c3                   	retq   
    7c3c:	0f 1f 40 00          	nopl   0x0(%rax)
    7c40:	48 83 c4 18          	add    $0x18,%rsp
    7c44:	f7 d8                	neg    %eax
    7c46:	5b                   	pop    %rbx
    7c47:	5d                   	pop    %rbp
    7c48:	c3                   	retq   
    7c49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007c50 <free_elf_object>:
    7c50:	55                   	push   %rbp
    7c51:	48 89 e5             	mov    %rsp,%rbp
    7c54:	53                   	push   %rbx
    7c55:	48 89 fb             	mov    %rdi,%rbx
    7c58:	48 83 ec 08          	sub    $0x8,%rsp
    7c5c:	48 8b bf b0 02 00 00 	mov    0x2b0(%rdi),%rdi
    7c63:	48 8b b3 b8 02 00 00 	mov    0x2b8(%rbx),%rsi
    7c6a:	48 29 fe             	sub    %rdi,%rsi
    7c6d:	e8 8e 5e 00 00       	callq  db00 <_DkVirtualMemoryFree>
    7c72:	48 8b 43 20          	mov    0x20(%rbx),%rax
    7c76:	48 85 c0             	test   %rax,%rax
    7c79:	74 08                	je     7c83 <free_elf_object+0x33>
    7c7b:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    7c7f:	48 89 50 18          	mov    %rdx,0x18(%rax)
    7c83:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    7c87:	48 85 d2             	test   %rdx,%rdx
    7c8a:	74 04                	je     7c90 <free_elf_object+0x40>
    7c8c:	48 89 42 20          	mov    %rax,0x20(%rdx)
    7c90:	48 8d 05 19 38 22 00 	lea    0x223819(%rip),%rax        # 22b4b0 <loaded_maps>
    7c97:	48 3b 18             	cmp    (%rax),%rbx
    7c9a:	74 14                	je     7cb0 <free_elf_object+0x60>
    7c9c:	48 83 c4 08          	add    $0x8,%rsp
    7ca0:	48 89 df             	mov    %rbx,%rdi
    7ca3:	5b                   	pop    %rbx
    7ca4:	5d                   	pop    %rbp
    7ca5:	e9 b6 17 00 00       	jmpq   9460 <free>
    7caa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7cb0:	48 89 10             	mov    %rdx,(%rax)
    7cb3:	48 83 c4 08          	add    $0x8,%rsp
    7cb7:	48 89 df             	mov    %rbx,%rdi
    7cba:	5b                   	pop    %rbx
    7cbb:	5d                   	pop    %rbp
    7cbc:	e9 9f 17 00 00       	jmpq   9460 <free>
    7cc1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7cc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7ccd:	00 00 00 

0000000000007cd0 <elf_hash>:
    7cd0:	0f b6 17             	movzbl (%rdi),%edx
    7cd3:	55                   	push   %rbp
    7cd4:	31 c0                	xor    %eax,%eax
    7cd6:	48 89 e5             	mov    %rsp,%rbp
    7cd9:	84 d2                	test   %dl,%dl
    7cdb:	74 78                	je     7d55 <elf_hash+0x85>
    7cdd:	0f b6 4f 01          	movzbl 0x1(%rdi),%ecx
    7ce1:	0f b6 c2             	movzbl %dl,%eax
    7ce4:	84 c9                	test   %cl,%cl
    7ce6:	74 6d                	je     7d55 <elf_hash+0x85>
    7ce8:	0f b6 57 02          	movzbl 0x2(%rdi),%edx
    7cec:	48 c1 e0 04          	shl    $0x4,%rax
    7cf0:	48 01 c8             	add    %rcx,%rax
    7cf3:	84 d2                	test   %dl,%dl
    7cf5:	74 5e                	je     7d55 <elf_hash+0x85>
    7cf7:	0f b6 4f 03          	movzbl 0x3(%rdi),%ecx
    7cfb:	48 c1 e0 04          	shl    $0x4,%rax
    7cff:	48 01 d0             	add    %rdx,%rax
    7d02:	84 c9                	test   %cl,%cl
    7d04:	74 4f                	je     7d55 <elf_hash+0x85>
    7d06:	0f b6 57 04          	movzbl 0x4(%rdi),%edx
    7d0a:	48 c1 e0 04          	shl    $0x4,%rax
    7d0e:	48 01 c8             	add    %rcx,%rax
    7d11:	84 d2                	test   %dl,%dl
    7d13:	74 40                	je     7d55 <elf_hash+0x85>
    7d15:	48 c1 e0 04          	shl    $0x4,%rax
    7d19:	48 8d 4f 05          	lea    0x5(%rdi),%rcx
    7d1d:	48 01 d0             	add    %rdx,%rax
    7d20:	0f b6 57 05          	movzbl 0x5(%rdi),%edx
    7d24:	84 d2                	test   %dl,%dl
    7d26:	74 2d                	je     7d55 <elf_hash+0x85>
    7d28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7d2f:	00 
    7d30:	48 c1 e0 04          	shl    $0x4,%rax
    7d34:	48 83 c1 01          	add    $0x1,%rcx
    7d38:	48 01 d0             	add    %rdx,%rax
    7d3b:	48 89 c2             	mov    %rax,%rdx
    7d3e:	81 e2 00 00 00 f0    	and    $0xf0000000,%edx
    7d44:	48 31 d0             	xor    %rdx,%rax
    7d47:	48 c1 ea 18          	shr    $0x18,%rdx
    7d4b:	48 31 d0             	xor    %rdx,%rax
    7d4e:	0f b6 11             	movzbl (%rcx),%edx
    7d51:	84 d2                	test   %dl,%dl
    7d53:	75 db                	jne    7d30 <elf_hash+0x60>
    7d55:	5d                   	pop    %rbp
    7d56:	c3                   	retq   
    7d57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7d5e:	00 00 

0000000000007d60 <do_lookup_map>:
    7d60:	55                   	push   %rbp
    7d61:	49 89 f9             	mov    %rdi,%r9
    7d64:	48 89 e5             	mov    %rsp,%rbp
    7d67:	41 57                	push   %r15
    7d69:	41 56                	push   %r14
    7d6b:	41 55                	push   %r13
    7d6d:	41 54                	push   %r12
    7d6f:	49 89 f4             	mov    %rsi,%r12
    7d72:	53                   	push   %rbx
    7d73:	48 83 ec 28          	sub    $0x28,%rsp
    7d77:	49 8b 70 68          	mov    0x68(%r8),%rsi
    7d7b:	4c 8b 56 08          	mov    0x8(%rsi),%r10
    7d7f:	49 8b 70 60          	mov    0x60(%r8),%rsi
    7d83:	4c 8b 6e 08          	mov    0x8(%rsi),%r13
    7d87:	49 8b b0 e8 02 00 00 	mov    0x2e8(%r8),%rsi
    7d8e:	48 85 f6             	test   %rsi,%rsi
    7d91:	0f 84 31 01 00 00    	je     7ec8 <do_lookup_map+0x168>
    7d97:	48 89 d0             	mov    %rdx,%rax
    7d9a:	41 8b 88 e4 02 00 00 	mov    0x2e4(%r8),%ecx
    7da1:	48 89 d7             	mov    %rdx,%rdi
    7da4:	48 c1 e8 06          	shr    $0x6,%rax
    7da8:	41 23 80 e0 02 00 00 	and    0x2e0(%r8),%eax
    7daf:	49 89 d6             	mov    %rdx,%r14
    7db2:	48 d3 ef             	shr    %cl,%rdi
    7db5:	48 89 f9             	mov    %rdi,%rcx
    7db8:	48 8b 04 c6          	mov    (%rsi,%rax,8),%rax
    7dbc:	48 89 c2             	mov    %rax,%rdx
    7dbf:	48 d3 ea             	shr    %cl,%rdx
    7dc2:	44 89 f1             	mov    %r14d,%ecx
    7dc5:	48 d3 e8             	shr    %cl,%rax
    7dc8:	48 21 d0             	and    %rdx,%rax
    7dcb:	a8 01                	test   $0x1,%al
    7dcd:	75 19                	jne    7de8 <do_lookup_map+0x88>
    7dcf:	31 db                	xor    %ebx,%ebx
    7dd1:	48 83 c4 28          	add    $0x28,%rsp
    7dd5:	48 89 d8             	mov    %rbx,%rax
    7dd8:	5b                   	pop    %rbx
    7dd9:	41 5c                	pop    %r12
    7ddb:	41 5d                	pop    %r13
    7ddd:	41 5e                	pop    %r14
    7ddf:	41 5f                	pop    %r15
    7de1:	5d                   	pop    %rbp
    7de2:	c3                   	retq   
    7de3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7de8:	41 8b 88 cc 02 00 00 	mov    0x2cc(%r8),%ecx
    7def:	31 d2                	xor    %edx,%edx
    7df1:	4c 89 f0             	mov    %r14,%rax
    7df4:	48 f7 f1             	div    %rcx
    7df7:	49 8b 80 f0 02 00 00 	mov    0x2f0(%r8),%rax
    7dfe:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    7e01:	85 c0                	test   %eax,%eax
    7e03:	74 ca                	je     7dcf <do_lookup_map+0x6f>
    7e05:	49 8b 90 f8 02 00 00 	mov    0x2f8(%r8),%rdx
    7e0c:	b9 67 04 00 00       	mov    $0x467,%ecx
    7e11:	4c 8d 3c 82          	lea    (%rdx,%rax,4),%r15
    7e15:	0f 1f 00             	nopl   (%rax)
    7e18:	41 8b 07             	mov    (%r15),%eax
    7e1b:	48 89 c2             	mov    %rax,%rdx
    7e1e:	4c 31 f0             	xor    %r14,%rax
    7e21:	48 d1 e8             	shr    %rax
    7e24:	0f 85 86 00 00 00    	jne    7eb0 <do_lookup_map+0x150>
    7e2a:	4c 89 f8             	mov    %r15,%rax
    7e2d:	49 2b 80 f8 02 00 00 	sub    0x2f8(%r8),%rax
    7e34:	48 c1 f8 02          	sar    $0x2,%rax
    7e38:	89 c0                	mov    %eax,%eax
    7e3a:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    7e3e:	49 8d 1c c2          	lea    (%r10,%rax,8),%rbx
    7e42:	0f b6 43 04          	movzbl 0x4(%rbx),%eax
    7e46:	83 e0 0f             	and    $0xf,%eax
    7e49:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
    7e4e:	75 04                	jne    7e54 <do_lookup_map+0xf4>
    7e50:	3c 06                	cmp    $0x6,%al
    7e52:	75 5c                	jne    7eb0 <do_lookup_map+0x150>
    7e54:	66 83 7b 06 00       	cmpw   $0x0,0x6(%rbx)
    7e59:	74 55                	je     7eb0 <do_lookup_map+0x150>
    7e5b:	0f a3 c1             	bt     %eax,%ecx
    7e5e:	73 50                	jae    7eb0 <do_lookup_map+0x150>
    7e60:	4c 39 cb             	cmp    %r9,%rbx
    7e63:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
    7e66:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    7e6a:	4c 89 55 c0          	mov    %r10,-0x40(%rbp)
    7e6e:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
    7e72:	0f 84 59 ff ff ff    	je     7dd1 <do_lookup_map+0x71>
    7e78:	4c 89 e7             	mov    %r12,%rdi
    7e7b:	e8 f0 d7 00 00       	callq  15670 <strlen>
    7e80:	8b 3b                	mov    (%rbx),%edi
    7e82:	48 89 c2             	mov    %rax,%rdx
    7e85:	4c 89 e6             	mov    %r12,%rsi
    7e88:	4c 01 ef             	add    %r13,%rdi
    7e8b:	e8 00 d8 00 00       	callq  15690 <memcmp>
    7e90:	85 c0                	test   %eax,%eax
    7e92:	0f 84 39 ff ff ff    	je     7dd1 <do_lookup_map+0x71>
    7e98:	41 8b 17             	mov    (%r15),%edx
    7e9b:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    7e9e:	4c 8b 45 b8          	mov    -0x48(%rbp),%r8
    7ea2:	4c 8b 55 c0          	mov    -0x40(%rbp),%r10
    7ea6:	4c 8b 4d c8          	mov    -0x38(%rbp),%r9
    7eaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7eb0:	49 83 c7 04          	add    $0x4,%r15
    7eb4:	83 e2 01             	and    $0x1,%edx
    7eb7:	0f 84 5b ff ff ff    	je     7e18 <do_lookup_map+0xb8>
    7ebd:	e9 0d ff ff ff       	jmpq   7dcf <do_lookup_map+0x6f>
    7ec2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7ec8:	41 8b b0 cc 02 00 00 	mov    0x2cc(%r8),%esi
    7ecf:	31 d2                	xor    %edx,%edx
    7ed1:	48 89 c8             	mov    %rcx,%rax
    7ed4:	48 f7 f6             	div    %rsi
    7ed7:	49 8b 80 d0 02 00 00 	mov    0x2d0(%r8),%rax
    7ede:	44 8b 3c 90          	mov    (%rax,%rdx,4),%r15d
    7ee2:	45 85 ff             	test   %r15d,%r15d
    7ee5:	0f 84 e4 fe ff ff    	je     7dcf <do_lookup_map+0x6f>
    7eeb:	41 be 67 04 00 00    	mov    $0x467,%r14d
    7ef1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7ef8:	4b 8d 04 7f          	lea    (%r15,%r15,2),%rax
    7efc:	49 8d 1c c2          	lea    (%r10,%rax,8),%rbx
    7f00:	0f b6 43 04          	movzbl 0x4(%rbx),%eax
    7f04:	83 e0 0f             	and    $0xf,%eax
    7f07:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
    7f0c:	75 04                	jne    7f12 <do_lookup_map+0x1b2>
    7f0e:	3c 06                	cmp    $0x6,%al
    7f10:	75 4e                	jne    7f60 <do_lookup_map+0x200>
    7f12:	66 83 7b 06 00       	cmpw   $0x0,0x6(%rbx)
    7f17:	74 47                	je     7f60 <do_lookup_map+0x200>
    7f19:	41 0f a3 c6          	bt     %eax,%r14d
    7f1d:	73 41                	jae    7f60 <do_lookup_map+0x200>
    7f1f:	49 39 d9             	cmp    %rbx,%r9
    7f22:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    7f26:	4c 89 55 c0          	mov    %r10,-0x40(%rbp)
    7f2a:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
    7f2e:	0f 84 9d fe ff ff    	je     7dd1 <do_lookup_map+0x71>
    7f34:	4c 89 e7             	mov    %r12,%rdi
    7f37:	e8 34 d7 00 00       	callq  15670 <strlen>
    7f3c:	8b 3b                	mov    (%rbx),%edi
    7f3e:	48 89 c2             	mov    %rax,%rdx
    7f41:	4c 89 e6             	mov    %r12,%rsi
    7f44:	4c 01 ef             	add    %r13,%rdi
    7f47:	e8 44 d7 00 00       	callq  15690 <memcmp>
    7f4c:	85 c0                	test   %eax,%eax
    7f4e:	4c 8b 4d c8          	mov    -0x38(%rbp),%r9
    7f52:	4c 8b 55 c0          	mov    -0x40(%rbp),%r10
    7f56:	4c 8b 45 b8          	mov    -0x48(%rbp),%r8
    7f5a:	0f 84 71 fe ff ff    	je     7dd1 <do_lookup_map+0x71>
    7f60:	49 8b 80 d8 02 00 00 	mov    0x2d8(%r8),%rax
    7f67:	46 8b 3c b8          	mov    (%rax,%r15,4),%r15d
    7f6b:	45 85 ff             	test   %r15d,%r15d
    7f6e:	75 88                	jne    7ef8 <do_lookup_map+0x198>
    7f70:	e9 5a fe ff ff       	jmpq   7dcf <do_lookup_map+0x6f>
    7f75:	90                   	nop
    7f76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7f7d:	00 00 00 

0000000000007f80 <lookup_symbol>:
    7f80:	55                   	push   %rbp
    7f81:	48 89 e5             	mov    %rsp,%rbp
    7f84:	41 57                	push   %r15
    7f86:	41 56                	push   %r14
    7f88:	41 55                	push   %r13
    7f8a:	41 54                	push   %r12
    7f8c:	49 89 fc             	mov    %rdi,%r12
    7f8f:	53                   	push   %rbx
    7f90:	48 83 ec 28          	sub    $0x28,%rsp
    7f94:	0f b6 07             	movzbl (%rdi),%eax
    7f97:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
    7f9b:	4c 8b 36             	mov    (%rsi),%r14
    7f9e:	84 c0                	test   %al,%al
    7fa0:	0f 84 df 00 00 00    	je     8085 <lookup_symbol+0x105>
    7fa6:	48 89 fa             	mov    %rdi,%rdx
    7fa9:	bb 05 15 00 00       	mov    $0x1505,%ebx
    7fae:	66 90                	xchg   %ax,%ax
    7fb0:	48 89 d9             	mov    %rbx,%rcx
    7fb3:	48 83 c2 01          	add    $0x1,%rdx
    7fb7:	48 c1 e1 05          	shl    $0x5,%rcx
    7fbb:	48 01 cb             	add    %rcx,%rbx
    7fbe:	48 01 c3             	add    %rax,%rbx
    7fc1:	0f b6 02             	movzbl (%rdx),%eax
    7fc4:	84 c0                	test   %al,%al
    7fc6:	75 e8                	jne    7fb0 <lookup_symbol+0x30>
    7fc8:	89 db                	mov    %ebx,%ebx
    7fca:	4c 89 e7             	mov    %r12,%rdi
    7fcd:	e8 fe fc ff ff       	callq  7cd0 <elf_hash>
    7fd2:	49 89 c5             	mov    %rax,%r13
    7fd5:	48 8d 05 d4 34 22 00 	lea    0x2234d4(%rip),%rax        # 22b4b0 <loaded_maps>
    7fdc:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    7fe3:	00 
    7fe4:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    7feb:	00 
    7fec:	4c 8b 38             	mov    (%rax),%r15
    7fef:	4d 85 ff             	test   %r15,%r15
    7ff2:	74 75                	je     8069 <lookup_symbol+0xe9>
    7ff4:	4d 89 f8             	mov    %r15,%r8
    7ff7:	4c 89 e9             	mov    %r13,%rcx
    7ffa:	48 89 da             	mov    %rbx,%rdx
    7ffd:	4c 89 e6             	mov    %r12,%rsi
    8000:	4c 89 f7             	mov    %r14,%rdi
    8003:	e8 58 fd ff ff       	callq  7d60 <do_lookup_map>
    8008:	48 85 c0             	test   %rax,%rax
    800b:	74 16                	je     8023 <lookup_symbol+0xa3>
    800d:	0f b6 50 04          	movzbl 0x4(%rax),%edx
    8011:	c0 ea 04             	shr    $0x4,%dl
    8014:	80 fa 02             	cmp    $0x2,%dl
    8017:	74 3f                	je     8058 <lookup_symbol+0xd8>
    8019:	80 fa 0a             	cmp    $0xa,%dl
    801c:	74 1b                	je     8039 <lookup_symbol+0xb9>
    801e:	80 fa 01             	cmp    $0x1,%dl
    8021:	74 16                	je     8039 <lookup_symbol+0xb9>
    8023:	4d 8b 7f 18          	mov    0x18(%r15),%r15
    8027:	4d 85 ff             	test   %r15,%r15
    802a:	75 c8                	jne    7ff4 <lookup_symbol+0x74>
    802c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    8030:	48 85 c0             	test   %rax,%rax
    8033:	74 34                	je     8069 <lookup_symbol+0xe9>
    8035:	4c 8b 7d b8          	mov    -0x48(%rbp),%r15
    8039:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    803d:	48 89 06             	mov    %rax,(%rsi)
    8040:	48 83 c4 28          	add    $0x28,%rsp
    8044:	4c 89 f8             	mov    %r15,%rax
    8047:	5b                   	pop    %rbx
    8048:	41 5c                	pop    %r12
    804a:	41 5d                	pop    %r13
    804c:	41 5e                	pop    %r14
    804e:	41 5f                	pop    %r15
    8050:	5d                   	pop    %rbp
    8051:	c3                   	retq   
    8052:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8058:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    805d:	75 c4                	jne    8023 <lookup_symbol+0xa3>
    805f:	4c 89 7d b8          	mov    %r15,-0x48(%rbp)
    8063:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    8067:	eb ba                	jmp    8023 <lookup_symbol+0xa3>
    8069:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    806d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    8074:	48 83 c4 28          	add    $0x28,%rsp
    8078:	31 c0                	xor    %eax,%eax
    807a:	5b                   	pop    %rbx
    807b:	41 5c                	pop    %r12
    807d:	41 5d                	pop    %r13
    807f:	41 5e                	pop    %r14
    8081:	41 5f                	pop    %r15
    8083:	5d                   	pop    %rbp
    8084:	c3                   	retq   
    8085:	bb 05 15 00 00       	mov    $0x1505,%ebx
    808a:	e9 3b ff ff ff       	jmpq   7fca <lookup_symbol+0x4a>
    808f:	90                   	nop

0000000000008090 <elf_dynamic_do_rela>:
    8090:	48 8b 47 68          	mov    0x68(%rdi),%rax
    8094:	48 85 c0             	test   %rax,%rax
    8097:	0f 84 67 01 00 00    	je     8204 <elf_dynamic_do_rela+0x174>
    809d:	55                   	push   %rbp
    809e:	48 63 d2             	movslq %edx,%rdx
    80a1:	48 8d 0c 16          	lea    (%rsi,%rdx,1),%rcx
    80a5:	48 89 e5             	mov    %rsp,%rbp
    80a8:	41 57                	push   %r15
    80aa:	41 56                	push   %r14
    80ac:	41 55                	push   %r13
    80ae:	41 54                	push   %r12
    80b0:	49 89 f5             	mov    %rsi,%r13
    80b3:	53                   	push   %rbx
    80b4:	48 89 fb             	mov    %rdi,%rbx
    80b7:	48 83 ec 38          	sub    $0x38,%rsp
    80bb:	4c 8b 60 08          	mov    0x8(%rax),%r12
    80bf:	48 8b 87 78 01 00 00 	mov    0x178(%rdi),%rax
    80c6:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    80ca:	48 85 c0             	test   %rax,%rax
    80cd:	0f 84 6d 02 00 00    	je     8340 <elf_dynamic_do_rela+0x2b0>
    80d3:	8b 78 08             	mov    0x8(%rax),%edi
    80d6:	48 b9 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rcx
    80dd:	aa aa aa 
    80e0:	48 89 d0             	mov    %rdx,%rax
    80e3:	48 f7 e1             	mul    %rcx
    80e6:	48 c1 ea 04          	shr    $0x4,%rdx
    80ea:	48 39 d7             	cmp    %rdx,%rdi
    80ed:	48 0f 46 d7          	cmovbe %rdi,%rdx
    80f1:	48 83 3b 00          	cmpq   $0x0,(%rbx)
    80f5:	48 8d 04 52          	lea    (%rdx,%rdx,2),%rax
    80f9:	4c 8d 3c c6          	lea    (%rsi,%rax,8),%r15
    80fd:	0f 84 2d 01 00 00    	je     8230 <elf_dynamic_do_rela+0x1a0>
    8103:	4c 39 fe             	cmp    %r15,%rsi
    8106:	73 46                	jae    814e <elf_dynamic_do_rela+0xbe>
    8108:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    810f:	00 
    8110:	48 8b 03             	mov    (%rbx),%rax
    8113:	49 89 c6             	mov    %rax,%r14
    8116:	4d 03 75 00          	add    0x0(%r13),%r14
    811a:	41 83 7d 08 08       	cmpl   $0x8,0x8(%r13)
    811f:	74 1d                	je     813e <elf_dynamic_do_rela+0xae>
    8121:	48 8d 3d d8 06 02 00 	lea    0x206d8(%rip),%rdi        # 28800 <__FUNCTION__.2860+0x368>
    8128:	31 c0                	xor    %eax,%eax
    812a:	31 d2                	xor    %edx,%edx
    812c:	be aa 00 00 00       	mov    $0xaa,%esi
    8131:	e8 1a f0 ff ff       	callq  7150 <warn>
    8136:	e8 05 f0 ff ff       	callq  7140 <__abort>
    813b:	48 8b 03             	mov    (%rbx),%rax
    813e:	49 03 45 10          	add    0x10(%r13),%rax
    8142:	49 83 c5 18          	add    $0x18,%r13
    8146:	4d 39 ef             	cmp    %r13,%r15
    8149:	49 89 06             	mov    %rax,(%r14)
    814c:	77 c2                	ja     8110 <elf_dynamic_do_rela+0x80>
    814e:	4c 39 7d b8          	cmp    %r15,-0x48(%rbp)
    8152:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    8156:	4c 8d 2d d3 07 02 00 	lea    0x207d3(%rip),%r13        # 28930 <__FUNCTION__.2860+0x498>
    815d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    8161:	0f 86 8f 00 00 00    	jbe    81f6 <elf_dynamic_do_rela+0x166>
    8167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    816e:	00 00 
    8170:	49 8b 77 08          	mov    0x8(%r15),%rsi
    8174:	48 8b 03             	mov    (%rbx),%rax
    8177:	48 89 f2             	mov    %rsi,%rdx
    817a:	49 89 c2             	mov    %rax,%r10
    817d:	4d 03 17             	add    (%r15),%r10
    8180:	48 c1 ea 20          	shr    $0x20,%rdx
    8184:	f7 c6 f7 ff ff ff    	test   $0xfffffff7,%esi
    818a:	41 89 f1             	mov    %esi,%r9d
    818d:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
    8191:	49 8d 14 d4          	lea    (%r12,%rdx,8),%rdx
    8195:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    8199:	74 4d                	je     81e8 <elf_dynamic_do_rela+0x158>
    819b:	66 83 7a 06 00       	cmpw   $0x0,0x6(%rdx)
    81a0:	0f 84 a2 00 00 00    	je     8248 <elf_dynamic_do_rela+0x1b8>
    81a6:	48 03 42 08          	add    0x8(%rdx),%rax
    81aa:	0f b6 52 04          	movzbl 0x4(%rdx),%edx
    81ae:	45 31 f6             	xor    %r14d,%r14d
    81b1:	83 e2 0f             	and    $0xf,%edx
    81b4:	80 fa 0a             	cmp    $0xa,%dl
    81b7:	0f 84 d4 00 00 00    	je     8291 <elf_dynamic_do_rela+0x201>
    81bd:	49 83 f9 25          	cmp    $0x25,%r9
    81c1:	77 25                	ja     81e8 <elf_dynamic_do_rela+0x158>
    81c3:	4b 63 54 8d 00       	movslq 0x0(%r13,%r9,4),%rdx
    81c8:	4c 01 ea             	add    %r13,%rdx
    81cb:	ff e2                	jmpq   *%rdx
    81cd:	0f 1f 00             	nopl   (%rax)
    81d0:	4c 29 d0             	sub    %r10,%rax
    81d3:	49 03 47 10          	add    0x10(%r15),%rax
    81d7:	49 89 02             	mov    %rax,(%r10)
    81da:	48 b8 00 00 00 00 ff 	movabs $0xffffffff00000000,%rax
    81e1:	ff ff ff 
    81e4:	49 21 47 08          	and    %rax,0x8(%r15)
    81e8:	49 83 c7 18          	add    $0x18,%r15
    81ec:	4c 39 7d b8          	cmp    %r15,-0x48(%rbp)
    81f0:	0f 87 7a ff ff ff    	ja     8170 <elf_dynamic_do_rela+0xe0>
    81f6:	48 83 c4 38          	add    $0x38,%rsp
    81fa:	5b                   	pop    %rbx
    81fb:	41 5c                	pop    %r12
    81fd:	41 5d                	pop    %r13
    81ff:	41 5e                	pop    %r14
    8201:	41 5f                	pop    %r15
    8203:	5d                   	pop    %rbp
    8204:	f3 c3                	repz retq 
    8206:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    820d:	00 00 00 
    8210:	49 8b 47 10          	mov    0x10(%r15),%rax
    8214:	49 03 06             	add    (%r14),%rax
    8217:	4c 89 55 b0          	mov    %r10,-0x50(%rbp)
    821b:	ff d0                	callq  *%rax
    821d:	4c 8b 55 b0          	mov    -0x50(%rbp),%r10
    8221:	49 89 02             	mov    %rax,(%r10)
    8224:	eb b4                	jmp    81da <elf_dynamic_do_rela+0x14a>
    8226:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    822d:	00 00 00 
    8230:	48 83 bb 30 02 00 00 	cmpq   $0x0,0x230(%rbx)
    8237:	00 
    8238:	0f 85 10 ff ff ff    	jne    814e <elf_dynamic_do_rela+0xbe>
    823e:	e9 c0 fe ff ff       	jmpq   8103 <elf_dynamic_do_rela+0x73>
    8243:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8248:	48 8b 43 60          	mov    0x60(%rbx),%rax
    824c:	8b 3a                	mov    (%rdx),%edi
    824e:	4c 89 4d a8          	mov    %r9,-0x58(%rbp)
    8252:	4c 89 55 b0          	mov    %r10,-0x50(%rbp)
    8256:	4c 8b 70 08          	mov    0x8(%rax),%r14
    825a:	4c 01 f7             	add    %r14,%rdi
    825d:	e8 ce 7e 00 00       	callq  10130 <resolve_rtld>
    8262:	48 85 c0             	test   %rax,%rax
    8265:	4c 8b 55 b0          	mov    -0x50(%rbp),%r10
    8269:	4c 8b 4d a8          	mov    -0x58(%rbp),%r9
    826d:	74 41                	je     82b0 <elf_dynamic_do_rela+0x220>
    826f:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    8273:	45 31 f6             	xor    %r14d,%r14d
    8276:	0f b6 56 04          	movzbl 0x4(%rsi),%edx
    827a:	83 e2 0f             	and    $0xf,%edx
    827d:	80 fa 0a             	cmp    $0xa,%dl
    8280:	0f 85 37 ff ff ff    	jne    81bd <elf_dynamic_do_rela+0x12d>
    8286:	66 83 7e 06 00       	cmpw   $0x0,0x6(%rsi)
    828b:	0f 84 2c ff ff ff    	je     81bd <elf_dynamic_do_rela+0x12d>
    8291:	4c 89 4d a8          	mov    %r9,-0x58(%rbp)
    8295:	4c 89 55 b0          	mov    %r10,-0x50(%rbp)
    8299:	ff d0                	callq  *%rax
    829b:	4c 8b 4d a8          	mov    -0x58(%rbp),%r9
    829f:	4c 8b 55 b0          	mov    -0x50(%rbp),%r10
    82a3:	e9 15 ff ff ff       	jmpq   81bd <elf_dynamic_do_rela+0x12d>
    82a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    82af:	00 
    82b0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    82b4:	4c 89 4d a8          	mov    %r9,-0x58(%rbp)
    82b8:	4c 89 55 b0          	mov    %r10,-0x50(%rbp)
    82bc:	0f b6 42 04          	movzbl 0x4(%rdx),%eax
    82c0:	c0 e8 04             	shr    $0x4,%al
    82c3:	84 c0                	test   %al,%al
    82c5:	0f 84 1d ff ff ff    	je     81e8 <elf_dynamic_do_rela+0x158>
    82cb:	8b 3a                	mov    (%rdx),%edi
    82cd:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    82d1:	4c 01 f7             	add    %r14,%rdi
    82d4:	e8 a7 fc ff ff       	callq  7f80 <lookup_symbol>
    82d9:	48 85 c0             	test   %rax,%rax
    82dc:	49 89 c6             	mov    %rax,%r14
    82df:	4c 8b 55 b0          	mov    -0x50(%rbp),%r10
    82e3:	4c 8b 4d a8          	mov    -0x58(%rbp),%r9
    82e7:	0f 84 fb fe ff ff    	je     81e8 <elf_dynamic_do_rela+0x158>
    82ed:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    82f1:	48 85 f6             	test   %rsi,%rsi
    82f4:	74 12                	je     8308 <elf_dynamic_do_rela+0x278>
    82f6:	48 8b 46 08          	mov    0x8(%rsi),%rax
    82fa:	49 03 06             	add    (%r14),%rax
    82fd:	e9 74 ff ff ff       	jmpq   8276 <elf_dynamic_do_rela+0x1e6>
    8302:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8308:	48 8d 3d 59 05 02 00 	lea    0x20559(%rip),%rdi        # 28868 <__FUNCTION__.2860+0x3d0>
    830f:	be 60 00 00 00       	mov    $0x60,%esi
    8314:	31 d2                	xor    %edx,%edx
    8316:	31 c0                	xor    %eax,%eax
    8318:	4c 89 4d a8          	mov    %r9,-0x58(%rbp)
    831c:	4c 89 55 b0          	mov    %r10,-0x50(%rbp)
    8320:	e8 2b ee ff ff       	callq  7150 <warn>
    8325:	e8 16 ee ff ff       	callq  7140 <__abort>
    832a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    832e:	4c 8b 4d a8          	mov    -0x58(%rbp),%r9
    8332:	4c 8b 55 b0          	mov    -0x50(%rbp),%r10
    8336:	eb be                	jmp    82f6 <elf_dynamic_do_rela+0x266>
    8338:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    833f:	00 
    8340:	49 89 f7             	mov    %rsi,%r15
    8343:	e9 06 fe ff ff       	jmpq   814e <elf_dynamic_do_rela+0xbe>
    8348:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    834f:	00 

0000000000008350 <_elf_dynamic_do_reloc.constprop.1>:
    8350:	55                   	push   %rbp
    8351:	48 89 e5             	mov    %rsp,%rbp
    8354:	41 55                	push   %r13
    8356:	41 54                	push   %r12
    8358:	53                   	push   %rbx
    8359:	48 89 fb             	mov    %rdi,%rbx
    835c:	48 83 ec 08          	sub    $0x8,%rsp
    8360:	48 8b 47 70          	mov    0x70(%rdi),%rax
    8364:	48 85 c0             	test   %rax,%rax
    8367:	74 77                	je     83e0 <_elf_dynamic_do_reloc.constprop.1+0x90>
    8369:	48 8b 70 08          	mov    0x8(%rax),%rsi
    836d:	48 8b 47 78          	mov    0x78(%rdi),%rax
    8371:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8375:	48 8b 83 d8 00 00 00 	mov    0xd8(%rbx),%rax
    837c:	45 31 ed             	xor    %r13d,%r13d
    837f:	45 31 e4             	xor    %r12d,%r12d
    8382:	48 85 c0             	test   %rax,%rax
    8385:	74 07                	je     838e <_elf_dynamic_do_reloc.constprop.1+0x3e>
    8387:	48 83 78 08 07       	cmpq   $0x7,0x8(%rax)
    838c:	74 22                	je     83b0 <_elf_dynamic_do_reloc.constprop.1+0x60>
    838e:	48 89 df             	mov    %rbx,%rdi
    8391:	e8 fa fc ff ff       	callq  8090 <elf_dynamic_do_rela>
    8396:	48 83 c4 08          	add    $0x8,%rsp
    839a:	44 89 ea             	mov    %r13d,%edx
    839d:	4c 89 e6             	mov    %r12,%rsi
    83a0:	48 89 df             	mov    %rbx,%rdi
    83a3:	5b                   	pop    %rbx
    83a4:	41 5c                	pop    %r12
    83a6:	41 5d                	pop    %r13
    83a8:	5d                   	pop    %rbp
    83a9:	e9 e2 fc ff ff       	jmpq   8090 <elf_dynamic_do_rela>
    83ae:	66 90                	xchg   %ax,%ax
    83b0:	48 8b 83 f0 00 00 00 	mov    0xf0(%rbx),%rax
    83b7:	4c 8b 60 08          	mov    0x8(%rax),%r12
    83bb:	48 8d 04 32          	lea    (%rdx,%rsi,1),%rax
    83bf:	49 39 c4             	cmp    %rax,%r12
    83c2:	48 8b 43 48          	mov    0x48(%rbx),%rax
    83c6:	74 08                	je     83d0 <_elf_dynamic_do_reloc.constprop.1+0x80>
    83c8:	44 8b 68 08          	mov    0x8(%rax),%r13d
    83cc:	eb c0                	jmp    838e <_elf_dynamic_do_reloc.constprop.1+0x3e>
    83ce:	66 90                	xchg   %ax,%ax
    83d0:	48 03 50 08          	add    0x8(%rax),%rdx
    83d4:	45 31 e4             	xor    %r12d,%r12d
    83d7:	eb b5                	jmp    838e <_elf_dynamic_do_reloc.constprop.1+0x3e>
    83d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    83e0:	31 d2                	xor    %edx,%edx
    83e2:	31 f6                	xor    %esi,%esi
    83e4:	eb 8f                	jmp    8375 <_elf_dynamic_do_reloc.constprop.1+0x25>
    83e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    83ed:	00 00 00 

00000000000083f0 <add_elf_object>:
    83f0:	55                   	push   %rbp
    83f1:	48 89 e5             	mov    %rsp,%rbp
    83f4:	41 57                	push   %r15
    83f6:	41 56                	push   %r14
    83f8:	41 55                	push   %r13
    83fa:	41 54                	push   %r12
    83fc:	49 89 fd             	mov    %rdi,%r13
    83ff:	53                   	push   %rbx
    8400:	41 89 d4             	mov    %edx,%r12d
    8403:	48 89 f7             	mov    %rsi,%rdi
    8406:	48 83 ec 08          	sub    $0x8,%rsp
    840a:	e8 41 bd ff ff       	callq  4150 <_DkStreamRealpath>
    840f:	44 89 e6             	mov    %r12d,%esi
    8412:	48 89 c7             	mov    %rax,%rdi
    8415:	e8 d6 ed ff ff       	callq  71f0 <new_elf_object>
    841a:	41 0f b7 4d 38       	movzwl 0x38(%r13),%ecx
    841f:	49 8b 55 20          	mov    0x20(%r13),%rdx
    8423:	48 89 c3             	mov    %rax,%rbx
    8426:	48 89 93 98 02 00 00 	mov    %rdx,0x298(%rbx)
    842d:	49 8d 44 15 00       	lea    0x0(%r13,%rdx,1),%rax
    8432:	48 8d 14 cd 00 00 00 	lea    0x0(,%rcx,8),%rdx
    8439:	00 
    843a:	66 89 8b a8 02 00 00 	mov    %cx,0x2a8(%rbx)
    8441:	48 c1 e1 06          	shl    $0x6,%rcx
    8445:	48 29 d1             	sub    %rdx,%rcx
    8448:	48 01 c1             	add    %rax,%rcx
    844b:	48 39 c8             	cmp    %rcx,%rax
    844e:	0f 83 fc 02 00 00    	jae    8750 <add_elf_object+0x360>
    8454:	48 8d 15 85 62 22 04 	lea    0x4226285(%rip),%rdx        # 422e6e0 <pal_state>
    845b:	31 f6                	xor    %esi,%esi
    845d:	45 31 c0             	xor    %r8d,%r8d
    8460:	48 8b 7a 60          	mov    0x60(%rdx),%rdi
    8464:	4c 8b 4a 58          	mov    0x58(%rdx),%r9
    8468:	eb 2b                	jmp    8495 <add_elf_object+0xa5>
    846a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8470:	83 fa 02             	cmp    $0x2,%edx
    8473:	75 17                	jne    848c <add_elf_object+0x9c>
    8475:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8479:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    847d:	48 8b 50 28          	mov    0x28(%rax),%rdx
    8481:	48 c1 ea 04          	shr    $0x4,%rdx
    8485:	66 89 93 aa 02 00 00 	mov    %dx,0x2aa(%rbx)
    848c:	48 83 c0 38          	add    $0x38,%rax
    8490:	48 39 c8             	cmp    %rcx,%rax
    8493:	73 4b                	jae    84e0 <add_elf_object+0xf0>
    8495:	8b 10                	mov    (%rax),%edx
    8497:	83 fa 01             	cmp    $0x1,%edx
    849a:	75 d4                	jne    8470 <add_elf_object+0x80>
    849c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    84a0:	4d 89 cb             	mov    %r9,%r11
    84a3:	48 03 13             	add    (%rbx),%rdx
    84a6:	4c 03 58 28          	add    0x28(%rax),%r11
    84aa:	49 89 d2             	mov    %rdx,%r10
    84ad:	4c 01 da             	add    %r11,%rdx
    84b0:	49 21 fa             	and    %rdi,%r10
    84b3:	48 21 fa             	and    %rdi,%rdx
    84b6:	4d 85 c0             	test   %r8,%r8
    84b9:	0f 84 41 02 00 00    	je     8700 <add_elf_object+0x310>
    84bf:	4d 39 c2             	cmp    %r8,%r10
    84c2:	0f 82 38 02 00 00    	jb     8700 <add_elf_object+0x310>
    84c8:	48 85 f6             	test   %rsi,%rsi
    84cb:	74 05                	je     84d2 <add_elf_object+0xe2>
    84cd:	48 39 f2             	cmp    %rsi,%rdx
    84d0:	76 ba                	jbe    848c <add_elf_object+0x9c>
    84d2:	48 83 c0 38          	add    $0x38,%rax
    84d6:	48 89 d6             	mov    %rdx,%rsi
    84d9:	48 39 c8             	cmp    %rcx,%rax
    84dc:	72 b7                	jb     8495 <add_elf_object+0xa5>
    84de:	66 90                	xchg   %ax,%ax
    84e0:	4c 89 ef             	mov    %r13,%rdi
    84e3:	49 8b 45 18          	mov    0x18(%r13),%rax
    84e7:	4c 89 ab b0 02 00 00 	mov    %r13,0x2b0(%rbx)
    84ee:	4c 29 c7             	sub    %r8,%rdi
    84f1:	49 01 f5             	add    %rsi,%r13
    84f4:	0f b7 b3 aa 02 00 00 	movzwl 0x2aa(%rbx),%esi
    84fb:	48 89 3b             	mov    %rdi,(%rbx)
    84fe:	48 03 7b 30          	add    0x30(%rbx),%rdi
    8502:	4d 29 c5             	sub    %r8,%r13
    8505:	48 89 83 a0 02 00 00 	mov    %rax,0x2a0(%rbx)
    850c:	4c 89 ab b8 02 00 00 	mov    %r13,0x2b8(%rbx)
    8513:	48 c1 e6 04          	shl    $0x4,%rsi
    8517:	48 89 7b 10          	mov    %rdi,0x10(%rbx)
    851b:	e8 70 0e 00 00       	callq  9390 <remalloc>
    8520:	48 85 c0             	test   %rax,%rax
    8523:	48 89 43 30          	mov    %rax,0x30(%rbx)
    8527:	4c 8b 03             	mov    (%rbx),%r8
    852a:	48 8d 73 38          	lea    0x38(%rbx),%rsi
    852e:	0f 84 6e 01 00 00    	je     86a2 <add_elf_object+0x2b2>
    8534:	48 8b 10             	mov    (%rax),%rdx
    8537:	48 85 d2             	test   %rdx,%rdx
    853a:	0f 84 90 00 00 00    	je     85d0 <add_elf_object+0x1e0>
    8540:	bf ff ff ff 6f       	mov    $0x6fffffff,%edi
    8545:	41 bb ff fd ff 6f    	mov    $0x6ffffdff,%r11d
    854b:	41 be ff fe ff 6f    	mov    $0x6ffffeff,%r14d
    8551:	49 bf 00 fa ff 7f 03 	movabs $0x37ffffa00,%r15
    8558:	00 00 00 
    855b:	49 bd a0 f1 ff 7f 03 	movabs $0x37ffff1a0,%r13
    8562:	00 00 00 
    8565:	41 ba 31 00 00 00    	mov    $0x31,%r10d
    856b:	41 b9 21 00 00 70    	mov    $0x70000021,%r9d
    8571:	eb 1e                	jmp    8591 <add_elf_object+0x1a1>
    8573:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8578:	4c 89 c9             	mov    %r9,%rcx
    857b:	48 29 d1             	sub    %rdx,%rcx
    857e:	48 89 ca             	mov    %rcx,%rdx
    8581:	48 89 04 d6          	mov    %rax,(%rsi,%rdx,8)
    8585:	48 83 c0 10          	add    $0x10,%rax
    8589:	48 8b 10             	mov    (%rax),%rdx
    858c:	48 85 d2             	test   %rdx,%rdx
    858f:	74 3f                	je     85d0 <add_elf_object+0x1e0>
    8591:	48 83 fa 21          	cmp    $0x21,%rdx
    8595:	76 ea                	jbe    8581 <add_elf_object+0x191>
    8597:	48 89 f9             	mov    %rdi,%rcx
    859a:	48 29 d1             	sub    %rdx,%rcx
    859d:	48 83 f9 0f          	cmp    $0xf,%rcx
    85a1:	76 d5                	jbe    8578 <add_elf_object+0x188>
    85a3:	8d 0c 12             	lea    (%rdx,%rdx,1),%ecx
    85a6:	d1 f9                	sar    %ecx
    85a8:	83 f9 fc             	cmp    $0xfffffffc,%ecx
    85ab:	0f 86 5f 01 00 00    	jbe    8710 <add_elf_object+0x320>
    85b1:	44 89 d2             	mov    %r10d,%edx
    85b4:	29 ca                	sub    %ecx,%edx
    85b6:	48 89 04 d6          	mov    %rax,(%rsi,%rdx,8)
    85ba:	48 83 c0 10          	add    $0x10,%rax
    85be:	48 8b 10             	mov    (%rax),%rdx
    85c1:	48 85 d2             	test   %rdx,%rdx
    85c4:	75 cb                	jne    8591 <add_elf_object+0x1a1>
    85c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    85cd:	00 00 00 
    85d0:	4d 85 c0             	test   %r8,%r8
    85d3:	74 71                	je     8646 <add_elf_object+0x256>
    85d5:	48 8b 43 58          	mov    0x58(%rbx),%rax
    85d9:	48 85 c0             	test   %rax,%rax
    85dc:	74 04                	je     85e2 <add_elf_object+0x1f2>
    85de:	4c 01 40 08          	add    %r8,0x8(%rax)
    85e2:	48 8b 43 50          	mov    0x50(%rbx),%rax
    85e6:	48 85 c0             	test   %rax,%rax
    85e9:	74 04                	je     85ef <add_elf_object+0x1ff>
    85eb:	4c 01 40 08          	add    %r8,0x8(%rax)
    85ef:	48 8b 43 60          	mov    0x60(%rbx),%rax
    85f3:	48 85 c0             	test   %rax,%rax
    85f6:	74 04                	je     85fc <add_elf_object+0x20c>
    85f8:	4c 01 40 08          	add    %r8,0x8(%rax)
    85fc:	48 8b 43 68          	mov    0x68(%rbx),%rax
    8600:	48 85 c0             	test   %rax,%rax
    8603:	74 04                	je     8609 <add_elf_object+0x219>
    8605:	4c 01 40 08          	add    %r8,0x8(%rax)
    8609:	48 8b 43 70          	mov    0x70(%rbx),%rax
    860d:	48 85 c0             	test   %rax,%rax
    8610:	74 04                	je     8616 <add_elf_object+0x226>
    8612:	4c 01 40 08          	add    %r8,0x8(%rax)
    8616:	48 8b 83 f0 00 00 00 	mov    0xf0(%rbx),%rax
    861d:	48 85 c0             	test   %rax,%rax
    8620:	74 04                	je     8626 <add_elf_object+0x236>
    8622:	4c 01 40 08          	add    %r8,0x8(%rax)
    8626:	48 8b 83 c0 01 00 00 	mov    0x1c0(%rbx),%rax
    862d:	48 85 c0             	test   %rax,%rax
    8630:	74 04                	je     8636 <add_elf_object+0x246>
    8632:	4c 01 40 08          	add    %r8,0x8(%rax)
    8636:	48 8b 83 90 02 00 00 	mov    0x290(%rbx),%rax
    863d:	48 85 c0             	test   %rax,%rax
    8640:	74 04                	je     8646 <add_elf_object+0x256>
    8642:	4c 01 40 08          	add    %r8,0x8(%rax)
    8646:	48 8b 83 d8 00 00 00 	mov    0xd8(%rbx),%rax
    864d:	48 85 c0             	test   %rax,%rax
    8650:	74 21                	je     8673 <add_elf_object+0x283>
    8652:	48 83 78 08 07       	cmpq   $0x7,0x8(%rax)
    8657:	74 1a                	je     8673 <add_elf_object+0x283>
    8659:	48 8d 3d e0 00 02 00 	lea    0x200e0(%rip),%rdi        # 28740 <__FUNCTION__.2860+0x2a8>
    8660:	31 d2                	xor    %edx,%edx
    8662:	be 89 00 00 00       	mov    $0x89,%esi
    8667:	31 c0                	xor    %eax,%eax
    8669:	e8 e2 ea ff ff       	callq  7150 <warn>
    866e:	e8 cd ea ff ff       	callq  7140 <__abort>
    8673:	48 83 7b 70 00       	cmpq   $0x0,0x70(%rbx)
    8678:	74 28                	je     86a2 <add_elf_object+0x2b2>
    867a:	48 8b 83 80 00 00 00 	mov    0x80(%rbx),%rax
    8681:	48 83 78 08 18       	cmpq   $0x18,0x8(%rax)
    8686:	74 1a                	je     86a2 <add_elf_object+0x2b2>
    8688:	48 8d 3d 09 01 02 00 	lea    0x20109(%rip),%rdi        # 28798 <__FUNCTION__.2860+0x300>
    868f:	31 d2                	xor    %edx,%edx
    8691:	be 93 00 00 00       	mov    $0x93,%esi
    8696:	31 c0                	xor    %eax,%eax
    8698:	e8 b3 ea ff ff       	callq  7150 <warn>
    869d:	e8 9e ea ff ff       	callq  7140 <__abort>
    86a2:	48 89 df             	mov    %rbx,%rdi
    86a5:	e8 b6 eb ff ff       	callq  7260 <setup_elf_hash>
    86aa:	48 89 df             	mov    %rbx,%rdi
    86ad:	e8 9e fc ff ff       	callq  8350 <_elf_dynamic_do_reloc.constprop.1>
    86b2:	48 8d 05 f7 2d 22 00 	lea    0x222df7(%rip),%rax        # 22b4b0 <loaded_maps>
    86b9:	48 8b 10             	mov    (%rax),%rdx
    86bc:	eb 05                	jmp    86c3 <add_elf_object+0x2d3>
    86be:	66 90                	xchg   %ax,%ax
    86c0:	48 89 c2             	mov    %rax,%rdx
    86c3:	48 8b 42 18          	mov    0x18(%rdx),%rax
    86c7:	48 85 c0             	test   %rax,%rax
    86ca:	75 f4                	jne    86c0 <add_elf_object+0x2d0>
    86cc:	41 83 fc 01          	cmp    $0x1,%r12d
    86d0:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    86d4:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
    86db:	00 
    86dc:	48 89 5a 18          	mov    %rbx,0x18(%rdx)
    86e0:	75 0a                	jne    86ec <add_elf_object+0x2fc>
    86e2:	48 8d 05 bf 2d 22 00 	lea    0x222dbf(%rip),%rax        # 22b4a8 <exec_map>
    86e9:	48 89 18             	mov    %rbx,(%rax)
    86ec:	48 83 c4 08          	add    $0x8,%rsp
    86f0:	31 c0                	xor    %eax,%eax
    86f2:	5b                   	pop    %rbx
    86f3:	41 5c                	pop    %r12
    86f5:	41 5d                	pop    %r13
    86f7:	41 5e                	pop    %r14
    86f9:	41 5f                	pop    %r15
    86fb:	5d                   	pop    %rbp
    86fc:	c3                   	retq   
    86fd:	0f 1f 00             	nopl   (%rax)
    8700:	4d 89 d0             	mov    %r10,%r8
    8703:	e9 c0 fd ff ff       	jmpq   84c8 <add_elf_object+0xd8>
    8708:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    870f:	00 
    8710:	4c 89 d9             	mov    %r11,%rcx
    8713:	48 29 d1             	sub    %rdx,%rcx
    8716:	48 83 f9 0b          	cmp    $0xb,%rcx
    871a:	77 14                	ja     8730 <add_elf_object+0x340>
    871c:	48 f7 da             	neg    %rdx
    871f:	48 8d 14 d6          	lea    (%rsi,%rdx,8),%rdx
    8723:	4a 89 04 2a          	mov    %rax,(%rdx,%r13,1)
    8727:	e9 59 fe ff ff       	jmpq   8585 <add_elf_object+0x195>
    872c:	0f 1f 40 00          	nopl   0x0(%rax)
    8730:	4c 89 f1             	mov    %r14,%rcx
    8733:	48 29 d1             	sub    %rdx,%rcx
    8736:	48 83 f9 0a          	cmp    $0xa,%rcx
    873a:	0f 87 45 fe ff ff    	ja     8585 <add_elf_object+0x195>
    8740:	48 f7 da             	neg    %rdx
    8743:	48 8d 14 d6          	lea    (%rsi,%rdx,8),%rdx
    8747:	4a 89 04 3a          	mov    %rax,(%rdx,%r15,1)
    874b:	e9 35 fe ff ff       	jmpq   8585 <add_elf_object+0x195>
    8750:	31 f6                	xor    %esi,%esi
    8752:	45 31 c0             	xor    %r8d,%r8d
    8755:	e9 86 fd ff ff       	jmpq   84e0 <add_elf_object+0xf0>
    875a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000008760 <load_elf_object_by_handle>:
    8760:	55                   	push   %rbp
    8761:	45 31 c9             	xor    %r9d,%r9d
    8764:	45 31 c0             	xor    %r8d,%r8d
    8767:	ba 40 03 00 00       	mov    $0x340,%edx
    876c:	48 89 e5             	mov    %rsp,%rbp
    876f:	41 57                	push   %r15
    8771:	41 56                	push   %r14
    8773:	41 55                	push   %r13
    8775:	41 54                	push   %r12
    8777:	49 89 fd             	mov    %rdi,%r13
    877a:	53                   	push   %rbx
    877b:	48 8d 9d 90 fc ff ff 	lea    -0x370(%rbp),%rbx
    8782:	48 81 ec 68 03 00 00 	sub    $0x368,%rsp
    8789:	48 89 d9             	mov    %rbx,%rcx
    878c:	89 b5 88 fc ff ff    	mov    %esi,-0x378(%rbp)
    8792:	31 f6                	xor    %esi,%esi
    8794:	e8 27 ac ff ff       	callq  33c0 <_DkStreamRead>
    8799:	83 f8 3f             	cmp    $0x3f,%eax
    879c:	0f 86 8e 03 00 00    	jbe    8b30 <load_elf_object_by_handle+0x3d0>
    87a2:	48 8d 35 27 02 02 00 	lea    0x20227(%rip),%rsi        # 289d0 <expected.3058>
    87a9:	ba 07 00 00 00       	mov    $0x7,%edx
    87ae:	48 89 df             	mov    %rbx,%rdi
    87b1:	49 89 c6             	mov    %rax,%r14
    87b4:	e8 d7 ce 00 00       	callq  15690 <memcmp>
    87b9:	85 c0                	test   %eax,%eax
    87bb:	41 89 c4             	mov    %eax,%r12d
    87be:	0f 85 ac 02 00 00    	jne    8a70 <load_elf_object_by_handle+0x310>
    87c4:	0f b6 85 97 fc ff ff 	movzbl -0x369(%rbp),%eax
    87cb:	84 c0                	test   %al,%al
    87cd:	74 08                	je     87d7 <load_elf_object_by_handle+0x77>
    87cf:	3c 03                	cmp    $0x3,%al
    87d1:	0f 85 99 02 00 00    	jne    8a70 <load_elf_object_by_handle+0x310>
    87d7:	44 0f b7 9d c8 fc ff 	movzwl -0x338(%rbp),%r11d
    87de:	ff 
    87df:	49 63 c6             	movslq %r14d,%rax
    87e2:	45 6b fb 38          	imul   $0x38,%r11d,%r15d
    87e6:	4c 89 fa             	mov    %r15,%rdx
    87e9:	48 03 95 b0 fc ff ff 	add    -0x350(%rbp),%rdx
    87f0:	48 39 c2             	cmp    %rax,%rdx
    87f3:	0f 87 c7 01 00 00    	ja     89c0 <load_elf_object_by_handle+0x260>
    87f9:	8b b5 88 fc ff ff    	mov    -0x378(%rbp),%esi
    87ff:	48 89 da             	mov    %rbx,%rdx
    8802:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    8808:	44 89 f1             	mov    %r14d,%ecx
    880b:	4c 89 ef             	mov    %r13,%rdi
    880e:	e8 2d eb ff ff       	callq  7340 <map_elf_object_by_handle>
    8813:	48 85 c0             	test   %rax,%rax
    8816:	48 89 c3             	mov    %rax,%rbx
    8819:	0f 84 31 02 00 00    	je     8a50 <load_elf_object_by_handle+0x2f0>
    881f:	0f b7 93 a8 02 00 00 	movzwl 0x2a8(%rbx),%edx
    8826:	48 8b b3 98 02 00 00 	mov    0x298(%rbx),%rsi
    882d:	49 89 f5             	mov    %rsi,%r13
    8830:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
    8837:	00 
    8838:	48 89 d0             	mov    %rdx,%rax
    883b:	48 c1 e0 06          	shl    $0x6,%rax
    883f:	48 29 c8             	sub    %rcx,%rax
    8842:	48 01 f0             	add    %rsi,%rax
    8845:	48 39 c6             	cmp    %rax,%rsi
    8848:	0f 83 56 02 00 00    	jae    8aa4 <load_elf_object_by_handle+0x344>
    884e:	45 31 f6             	xor    %r14d,%r14d
    8851:	49 bf ff ff ff ff 02 	movabs $0x2ffffffff,%r15
    8858:	00 00 00 
    885b:	eb 25                	jmp    8882 <load_elf_object_by_handle+0x122>
    885d:	0f 1f 00             	nopl   (%rax)
    8860:	48 8d 0c d5 00 00 00 	lea    0x0(,%rdx,8),%rcx
    8867:	00 
    8868:	48 89 d0             	mov    %rdx,%rax
    886b:	49 83 c5 38          	add    $0x38,%r13
    886f:	48 c1 e0 06          	shl    $0x6,%rax
    8873:	48 29 c8             	sub    %rcx,%rax
    8876:	48 01 f0             	add    %rsi,%rax
    8879:	49 39 c5             	cmp    %rax,%r13
    887c:	0f 83 ae 00 00 00    	jae    8930 <load_elf_object_by_handle+0x1d0>
    8882:	4c 89 f8             	mov    %r15,%rax
    8885:	49 23 45 00          	and    0x0(%r13),%rax
    8889:	48 83 f8 01          	cmp    $0x1,%rax
    888d:	75 d1                	jne    8860 <load_elf_object_by_handle+0x100>
    888f:	bf 20 00 00 00       	mov    $0x20,%edi
    8894:	e8 87 07 00 00       	callq  9020 <malloc>
    8899:	4c 8d 05 40 5e 22 04 	lea    0x4225e40(%rip),%r8        # 422e6e0 <pal_state>
    88a0:	49 8b 75 10          	mov    0x10(%r13),%rsi
    88a4:	48 89 c1             	mov    %rax,%rcx
    88a7:	48 89 8d 88 fc ff ff 	mov    %rcx,-0x378(%rbp)
    88ae:	49 8b 40 60          	mov    0x60(%r8),%rax
    88b2:	48 89 f2             	mov    %rsi,%rdx
    88b5:	48 21 c2             	and    %rax,%rdx
    88b8:	48 89 d7             	mov    %rdx,%rdi
    88bb:	48 03 3b             	add    (%rbx),%rdi
    88be:	48 89 39             	mov    %rdi,(%rcx)
    88c1:	49 03 75 28          	add    0x28(%r13),%rsi
    88c5:	49 03 70 58          	add    0x58(%r8),%rsi
    88c9:	48 21 c6             	and    %rax,%rsi
    88cc:	48 29 d6             	sub    %rdx,%rsi
    88cf:	ba 03 00 00 00       	mov    $0x3,%edx
    88d4:	48 89 71 08          	mov    %rsi,0x8(%rcx)
    88d8:	e8 63 52 00 00       	callq  db40 <_DkVirtualMemoryProtect>
    88dd:	85 c0                	test   %eax,%eax
    88df:	48 8b 8d 88 fc ff ff 	mov    -0x378(%rbp),%rcx
    88e6:	0f 88 88 00 00 00    	js     8974 <load_elf_object_by_handle+0x214>
    88ec:	c7 41 10 00 00 00 00 	movl   $0x0,0x10(%rcx)
    88f3:	41 8b 45 04          	mov    0x4(%r13),%eax
    88f7:	a8 04                	test   $0x4,%al
    88f9:	74 07                	je     8902 <load_elf_object_by_handle+0x1a2>
    88fb:	c7 41 10 01 00 00 00 	movl   $0x1,0x10(%rcx)
    8902:	a8 02                	test   $0x2,%al
    8904:	74 04                	je     890a <load_elf_object_by_handle+0x1aa>
    8906:	83 49 10 02          	orl    $0x2,0x10(%rcx)
    890a:	a8 01                	test   $0x1,%al
    890c:	74 04                	je     8912 <load_elf_object_by_handle+0x1b2>
    890e:	83 49 10 04          	orl    $0x4,0x10(%rcx)
    8912:	4c 89 71 18          	mov    %r14,0x18(%rcx)
    8916:	49 89 ce             	mov    %rcx,%r14
    8919:	48 8b b3 98 02 00 00 	mov    0x298(%rbx),%rsi
    8920:	0f b7 93 a8 02 00 00 	movzwl 0x2a8(%rbx),%edx
    8927:	e9 34 ff ff ff       	jmpq   8860 <load_elf_object_by_handle+0x100>
    892c:	0f 1f 40 00          	nopl   0x0(%rax)
    8930:	48 89 df             	mov    %rbx,%rdi
    8933:	e8 18 fa ff ff       	callq  8350 <_elf_dynamic_do_reloc.constprop.1>
    8938:	4d 85 f6             	test   %r14,%r14
    893b:	75 23                	jne    8960 <load_elf_object_by_handle+0x200>
    893d:	e9 6e 01 00 00       	jmpq   8ab0 <load_elf_object_by_handle+0x350>
    8942:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8948:	4d 8b 6e 18          	mov    0x18(%r14),%r13
    894c:	4c 89 f7             	mov    %r14,%rdi
    894f:	e8 0c 0b 00 00       	callq  9460 <free>
    8954:	4d 85 ed             	test   %r13,%r13
    8957:	0f 84 53 01 00 00    	je     8ab0 <load_elf_object_by_handle+0x350>
    895d:	4d 89 ee             	mov    %r13,%r14
    8960:	41 8b 56 10          	mov    0x10(%r14),%edx
    8964:	49 8b 76 08          	mov    0x8(%r14),%rsi
    8968:	49 8b 3e             	mov    (%r14),%rdi
    896b:	e8 d0 51 00 00       	callq  db40 <_DkVirtualMemoryProtect>
    8970:	85 c0                	test   %eax,%eax
    8972:	79 d4                	jns    8948 <load_elf_object_by_handle+0x1e8>
    8974:	48 8d 15 35 2b 22 00 	lea    0x222b35(%rip),%rdx        # 22b4b0 <loaded_maps>
    897b:	8b 4b 28             	mov    0x28(%rbx),%ecx
    897e:	48 8b 02             	mov    (%rdx),%rax
    8981:	48 85 c0             	test   %rax,%rax
    8984:	74 04                	je     898a <load_elf_object_by_handle+0x22a>
    8986:	48 89 58 20          	mov    %rbx,0x20(%rax)
    898a:	83 f9 01             	cmp    $0x1,%ecx
    898d:	48 89 43 18          	mov    %rax,0x18(%rbx)
    8991:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    8998:	00 
    8999:	48 89 1a             	mov    %rbx,(%rdx)
    899c:	0f 84 76 01 00 00    	je     8b18 <load_elf_object_by_handle+0x3b8>
    89a2:	48 81 c4 68 03 00 00 	add    $0x368,%rsp
    89a9:	44 89 e0             	mov    %r12d,%eax
    89ac:	5b                   	pop    %rbx
    89ad:	41 5c                	pop    %r12
    89af:	41 5d                	pop    %r13
    89b1:	41 5e                	pop    %r14
    89b3:	41 5f                	pop    %r15
    89b5:	5d                   	pop    %rbp
    89b6:	c3                   	retq   
    89b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    89be:	00 00 
    89c0:	4c 89 ff             	mov    %r15,%rdi
    89c3:	44 89 bd 7c fc ff ff 	mov    %r15d,-0x384(%rbp)
    89ca:	e8 51 06 00 00       	callq  9020 <malloc>
    89cf:	48 8b b5 b0 fc ff ff 	mov    -0x350(%rbp),%rsi
    89d6:	4c 89 fa             	mov    %r15,%rdx
    89d9:	45 31 c9             	xor    %r9d,%r9d
    89dc:	45 31 c0             	xor    %r8d,%r8d
    89df:	48 89 c1             	mov    %rax,%rcx
    89e2:	4c 89 ef             	mov    %r13,%rdi
    89e5:	48 89 85 80 fc ff ff 	mov    %rax,-0x380(%rbp)
    89ec:	e8 cf a9 ff ff       	callq  33c0 <_DkStreamRead>
    89f1:	89 c2                	mov    %eax,%edx
    89f3:	41 89 c7             	mov    %eax,%r15d
    89f6:	4c 8b 95 80 fc ff ff 	mov    -0x380(%rbp),%r10
    89fd:	c1 ea 1f             	shr    $0x1f,%edx
    8a00:	84 d2                	test   %dl,%dl
    8a02:	75 7c                	jne    8a80 <load_elf_object_by_handle+0x320>
    8a04:	44 8b 9d 7c fc ff ff 	mov    -0x384(%rbp),%r11d
    8a0b:	41 39 c3             	cmp    %eax,%r11d
    8a0e:	75 70                	jne    8a80 <load_elf_object_by_handle+0x320>
    8a10:	8b b5 88 fc ff ff    	mov    -0x378(%rbp),%esi
    8a16:	48 89 da             	mov    %rbx,%rdx
    8a19:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    8a1f:	44 89 f1             	mov    %r14d,%ecx
    8a22:	4c 89 ef             	mov    %r13,%rdi
    8a25:	e8 16 e9 ff ff       	callq  7340 <map_elf_object_by_handle>
    8a2a:	48 85 c0             	test   %rax,%rax
    8a2d:	48 89 c3             	mov    %rax,%rbx
    8a30:	4c 8b 95 80 fc ff ff 	mov    -0x380(%rbp),%r10
    8a37:	0f 85 e2 fd ff ff    	jne    881f <load_elf_object_by_handle+0xbf>
    8a3d:	48 8d 35 94 fe 01 00 	lea    0x1fe94(%rip),%rsi        # 288d8 <__FUNCTION__.2860+0x440>
    8a44:	eb 41                	jmp    8a87 <load_elf_object_by_handle+0x327>
    8a46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8a4d:	00 00 00 
    8a50:	48 8d 35 81 fe 01 00 	lea    0x1fe81(%rip),%rsi        # 288d8 <__FUNCTION__.2860+0x440>
    8a57:	45 31 ff             	xor    %r15d,%r15d
    8a5a:	48 8d 3d da 06 02 00 	lea    0x206da(%rip),%rdi        # 2913b <slab_levels+0x5bb>
    8a61:	31 c0                	xor    %eax,%eax
    8a63:	45 89 fc             	mov    %r15d,%r12d
    8a66:	e8 c5 0b 00 00       	callq  9630 <pal_printf>
    8a6b:	e9 32 ff ff ff       	jmpq   89a2 <load_elf_object_by_handle+0x242>
    8a70:	48 8d 35 74 fe 01 00 	lea    0x1fe74(%rip),%rsi        # 288eb <__FUNCTION__.2860+0x453>
    8a77:	45 31 ff             	xor    %r15d,%r15d
    8a7a:	eb de                	jmp    8a5a <load_elf_object_by_handle+0x2fa>
    8a7c:	0f 1f 40 00          	nopl   0x0(%rax)
    8a80:	48 8d 35 18 fe 01 00 	lea    0x1fe18(%rip),%rsi        # 2889f <__FUNCTION__.2860+0x407>
    8a87:	4d 85 d2             	test   %r10,%r10
    8a8a:	74 ce                	je     8a5a <load_elf_object_by_handle+0x2fa>
    8a8c:	4c 89 d7             	mov    %r10,%rdi
    8a8f:	48 89 b5 88 fc ff ff 	mov    %rsi,-0x378(%rbp)
    8a96:	e8 c5 09 00 00       	callq  9460 <free>
    8a9b:	48 8b b5 88 fc ff ff 	mov    -0x378(%rbp),%rsi
    8aa2:	eb b6                	jmp    8a5a <load_elf_object_by_handle+0x2fa>
    8aa4:	48 89 df             	mov    %rbx,%rdi
    8aa7:	e8 a4 f8 ff ff       	callq  8350 <_elf_dynamic_do_reloc.constprop.1>
    8aac:	0f 1f 40 00          	nopl   0x0(%rax)
    8ab0:	8b 4b 28             	mov    0x28(%rbx),%ecx
    8ab3:	83 f9 01             	cmp    $0x1,%ecx
    8ab6:	74 36                	je     8aee <load_elf_object_by_handle+0x38e>
    8ab8:	48 63 93 c8 02 00 00 	movslq 0x2c8(%rbx),%rdx
    8abf:	85 d2                	test   %edx,%edx
    8ac1:	75 79                	jne    8b3c <load_elf_object_by_handle+0x3dc>
    8ac3:	48 8d 15 e6 29 22 00 	lea    0x2229e6(%rip),%rdx        # 22b4b0 <loaded_maps>
    8aca:	48 8b 02             	mov    (%rdx),%rax
    8acd:	48 85 c0             	test   %rax,%rax
    8ad0:	0f 85 b0 fe ff ff    	jne    8986 <load_elf_object_by_handle+0x226>
    8ad6:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
    8add:	00 
    8ade:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    8ae5:	00 
    8ae6:	48 89 1a             	mov    %rbx,(%rdx)
    8ae9:	e9 b4 fe ff ff       	jmpq   89a2 <load_elf_object_by_handle+0x242>
    8aee:	48 8d 15 bb 29 22 00 	lea    0x2229bb(%rip),%rdx        # 22b4b0 <loaded_maps>
    8af5:	48 8b 02             	mov    (%rdx),%rax
    8af8:	48 85 c0             	test   %rax,%rax
    8afb:	0f 85 85 fe ff ff    	jne    8986 <load_elf_object_by_handle+0x226>
    8b01:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
    8b08:	00 
    8b09:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    8b10:	00 
    8b11:	48 89 1a             	mov    %rbx,(%rdx)
    8b14:	0f 1f 40 00          	nopl   0x0(%rax)
    8b18:	48 8d 05 89 29 22 00 	lea    0x222989(%rip),%rax        # 22b4a8 <exec_map>
    8b1f:	48 89 18             	mov    %rbx,(%rax)
    8b22:	e9 7b fe ff ff       	jmpq   89a2 <load_elf_object_by_handle+0x242>
    8b27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8b2e:	00 00 
    8b30:	48 8d 35 d1 fd 01 00 	lea    0x1fdd1(%rip),%rsi        # 28908 <__FUNCTION__.2860+0x470>
    8b37:	e9 3b ff ff ff       	jmpq   8a77 <load_elf_object_by_handle+0x317>
    8b3c:	48 8b 83 c0 02 00 00 	mov    0x2c0(%rbx),%rax
    8b43:	48 03 03             	add    (%rbx),%rax
    8b46:	4c 8d 05 93 5b 22 04 	lea    0x4225b93(%rip),%r8        # 422e6e0 <pal_state>
    8b4d:	48 89 c7             	mov    %rax,%rdi
    8b50:	48 01 d0             	add    %rdx,%rax
    8b53:	49 03 40 58          	add    0x58(%r8),%rax
    8b57:	49 8b 70 60          	mov    0x60(%r8),%rsi
    8b5b:	48 21 f7             	and    %rsi,%rdi
    8b5e:	48 21 c6             	and    %rax,%rsi
    8b61:	48 39 f7             	cmp    %rsi,%rdi
    8b64:	0f 84 59 ff ff ff    	je     8ac3 <load_elf_object_by_handle+0x363>
    8b6a:	48 29 fe             	sub    %rdi,%rsi
    8b6d:	ba 01 00 00 00       	mov    $0x1,%edx
    8b72:	e8 c9 4f 00 00       	callq  db40 <_DkVirtualMemoryProtect>
    8b77:	e9 f8 fd ff ff       	jmpq   8974 <load_elf_object_by_handle+0x214>
    8b7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008b80 <load_elf_object>:
    8b80:	55                   	push   %rbp
    8b81:	48 89 f8             	mov    %rdi,%rax
    8b84:	45 31 c9             	xor    %r9d,%r9d
    8b87:	45 31 c0             	xor    %r8d,%r8d
    8b8a:	31 c9                	xor    %ecx,%ecx
    8b8c:	31 d2                	xor    %edx,%edx
    8b8e:	48 89 e5             	mov    %rsp,%rbp
    8b91:	53                   	push   %rbx
    8b92:	89 f3                	mov    %esi,%ebx
    8b94:	48 8d 7d e8          	lea    -0x18(%rbp),%rdi
    8b98:	48 89 c6             	mov    %rax,%rsi
    8b9b:	48 83 ec 18          	sub    $0x18,%rsp
    8b9f:	e8 fc a2 ff ff       	callq  2ea0 <_DkStreamOpen>
    8ba4:	85 c0                	test   %eax,%eax
    8ba6:	78 18                	js     8bc0 <load_elf_object+0x40>
    8ba8:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    8bac:	89 de                	mov    %ebx,%esi
    8bae:	e8 ad fb ff ff       	callq  8760 <load_elf_object_by_handle>
    8bb3:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    8bb7:	89 c3                	mov    %eax,%ebx
    8bb9:	e8 e2 c8 ff ff       	callq  54a0 <_DkObjectClose>
    8bbe:	89 d8                	mov    %ebx,%eax
    8bc0:	48 83 c4 18          	add    $0x18,%rsp
    8bc4:	5b                   	pop    %rbx
    8bc5:	5d                   	pop    %rbp
    8bc6:	c3                   	retq   
    8bc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8bce:	00 00 

0000000000008bd0 <DkDebugAttachBinary>:
    8bd0:	55                   	push   %rbp
    8bd1:	48 89 e5             	mov    %rsp,%rbp
    8bd4:	5d                   	pop    %rbp
    8bd5:	c3                   	retq   
    8bd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8bdd:	00 00 00 

0000000000008be0 <DkDebugDetachBinary>:
    8be0:	55                   	push   %rbp
    8be1:	48 89 e5             	mov    %rsp,%rbp
    8be4:	5d                   	pop    %rbp
    8be5:	c3                   	retq   
    8be6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8bed:	00 00 00 

0000000000008bf0 <start_execution>:
    8bf0:	55                   	push   %rbp
    8bf1:	4c 8d 1d 68 5b 22 04 	lea    0x4225b68(%rip),%r11        # 422e760 <__pal_control>
    8bf8:	48 89 e5             	mov    %rsp,%rbp
    8bfb:	41 56                	push   %r14
    8bfd:	41 55                	push   %r13
    8bff:	4c 8d 2d a2 28 22 00 	lea    0x2228a2(%rip),%r13        # 22b4a8 <exec_map>
    8c06:	41 54                	push   %r12
    8c08:	53                   	push   %rbx
    8c09:	4d 8b 55 00          	mov    0x0(%r13),%r10
    8c0d:	4d 85 d2             	test   %r10,%r10
    8c10:	74 16                	je     8c28 <start_execution+0x38>
    8c12:	49 8b 82 b0 02 00 00 	mov    0x2b0(%r10),%rax
    8c19:	49 89 43 58          	mov    %rax,0x58(%r11)
    8c1d:	49 8b 82 b8 02 00 00 	mov    0x2b8(%r10),%rax
    8c24:	49 89 43 60          	mov    %rax,0x60(%r11)
    8c28:	4c 8b 0e             	mov    (%rsi),%r9
    8c2b:	31 c9                	xor    %ecx,%ecx
    8c2d:	48 85 ff             	test   %rdi,%rdi
    8c30:	0f 95 c1             	setne  %cl
    8c33:	4d 85 c9             	test   %r9,%r9
    8c36:	74 15                	je     8c4d <start_execution+0x5d>
    8c38:	48 89 f0             	mov    %rsi,%rax
    8c3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8c40:	48 83 c0 08          	add    $0x8,%rax
    8c44:	83 c1 01             	add    $0x1,%ecx
    8c47:	48 83 38 00          	cmpq   $0x0,(%rax)
    8c4b:	75 f3                	jne    8c40 <start_execution+0x50>
    8c4d:	4c 8b 02             	mov    (%rdx),%r8
    8c50:	8d 59 03             	lea    0x3(%rcx),%ebx
    8c53:	4d 85 c0             	test   %r8,%r8
    8c56:	74 15                	je     8c6d <start_execution+0x7d>
    8c58:	48 89 d0             	mov    %rdx,%rax
    8c5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8c60:	48 83 c0 08          	add    $0x8,%rax
    8c64:	83 c3 01             	add    $0x1,%ebx
    8c67:	48 83 38 00          	cmpq   $0x0,(%rax)
    8c6b:	75 f3                	jne    8c60 <start_execution+0x70>
    8c6d:	8d 04 dd 98 00 00 00 	lea    0x98(,%rbx,8),%eax
    8c74:	48 63 c9             	movslq %ecx,%rcx
    8c77:	48 98                	cltq   
    8c79:	48 83 c0 1e          	add    $0x1e,%rax
    8c7d:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    8c81:	48 29 c4             	sub    %rax,%rsp
    8c84:	48 8d 5c 24 0f       	lea    0xf(%rsp),%rbx
    8c89:	48 83 e3 f0          	and    $0xfffffffffffffff0,%rbx
    8c8d:	48 85 ff             	test   %rdi,%rdi
    8c90:	48 89 0b             	mov    %rcx,(%rbx)
    8c93:	0f 84 c7 01 00 00    	je     8e60 <start_execution+0x270>
    8c99:	48 89 7b 08          	mov    %rdi,0x8(%rbx)
    8c9d:	41 bc 20 00 00 00    	mov    $0x20,%r12d
    8ca3:	41 be 18 00 00 00    	mov    $0x18,%r14d
    8ca9:	b8 10 00 00 00       	mov    $0x10,%eax
    8cae:	b9 03 00 00 00       	mov    $0x3,%ecx
    8cb3:	bf 02 00 00 00       	mov    $0x2,%edi
    8cb8:	4d 85 c9             	test   %r9,%r9
    8cbb:	0f 84 06 02 00 00    	je     8ec7 <start_execution+0x2d7>
    8cc1:	48 63 c7             	movslq %edi,%rax
    8cc4:	31 c9                	xor    %ecx,%ecx
    8cc6:	4c 8d 24 c3          	lea    (%rbx,%rax,8),%r12
    8cca:	eb 06                	jmp    8cd2 <start_execution+0xe2>
    8ccc:	0f 1f 40 00          	nopl   0x0(%rax)
    8cd0:	89 c7                	mov    %eax,%edi
    8cd2:	4d 89 0c 0c          	mov    %r9,(%r12,%rcx,1)
    8cd6:	48 83 c1 08          	add    $0x8,%rcx
    8cda:	8d 47 01             	lea    0x1(%rdi),%eax
    8cdd:	4c 8b 0c 0e          	mov    (%rsi,%rcx,1),%r9
    8ce1:	4d 85 c9             	test   %r9,%r9
    8ce4:	75 ea                	jne    8cd0 <start_execution+0xe0>
    8ce6:	48 98                	cltq   
    8ce8:	8d 77 02             	lea    0x2(%rdi),%esi
    8ceb:	48 c1 e0 03          	shl    $0x3,%rax
    8cef:	4c 8d 70 08          	lea    0x8(%rax),%r14
    8cf3:	4c 8d 60 10          	lea    0x10(%rax),%r12
    8cf7:	4d 85 c0             	test   %r8,%r8
    8cfa:	48 c7 04 03 00 00 00 	movq   $0x0,(%rbx,%rax,1)
    8d01:	00 
    8d02:	74 2f                	je     8d33 <start_execution+0x143>
    8d04:	48 63 c6             	movslq %esi,%rax
    8d07:	31 c9                	xor    %ecx,%ecx
    8d09:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
    8d0d:	0f 1f 00             	nopl   (%rax)
    8d10:	4c 89 04 08          	mov    %r8,(%rax,%rcx,1)
    8d14:	48 83 c1 08          	add    $0x8,%rcx
    8d18:	83 c6 01             	add    $0x1,%esi
    8d1b:	4c 8b 04 0a          	mov    (%rdx,%rcx,1),%r8
    8d1f:	4d 85 c0             	test   %r8,%r8
    8d22:	75 ec                	jne    8d10 <start_execution+0x120>
    8d24:	48 63 f6             	movslq %esi,%rsi
    8d27:	4c 8d 34 f5 00 00 00 	lea    0x0(,%rsi,8),%r14
    8d2e:	00 
    8d2f:	4d 8d 66 08          	lea    0x8(%r14),%r12
    8d33:	4a 8d 04 23          	lea    (%rbx,%r12,1),%rax
    8d37:	4d 85 d2             	test   %r10,%r10
    8d3a:	4a c7 04 33 00 00 00 	movq   $0x0,(%rbx,%r14,1)
    8d41:	00 
    8d42:	48 c7 00 03 00 00 00 	movq   $0x3,(%rax)
    8d49:	0f 84 31 01 00 00    	je     8e80 <start_execution+0x290>
    8d4f:	49 8b 92 98 02 00 00 	mov    0x298(%r10),%rdx
    8d56:	48 c7 40 10 05 00 00 	movq   $0x5,0x10(%rax)
    8d5d:	00 
    8d5e:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8d62:	41 0f b7 92 a8 02 00 	movzwl 0x2a8(%r10),%edx
    8d69:	00 
    8d6a:	48 c7 40 20 06 00 00 	movq   $0x6,0x20(%rax)
    8d71:	00 
    8d72:	48 c7 40 30 09 00 00 	movq   $0x9,0x30(%rax)
    8d79:	00 
    8d7a:	48 89 50 18          	mov    %rdx,0x18(%rax)
    8d7e:	49 8b 53 78          	mov    0x78(%r11),%rdx
    8d82:	48 89 50 28          	mov    %rdx,0x28(%rax)
    8d86:	49 8b 92 a0 02 00 00 	mov    0x2a0(%r10),%rdx
    8d8d:	48 c7 40 40 07 00 00 	movq   $0x7,0x40(%rax)
    8d94:	00 
    8d95:	48 89 50 38          	mov    %rdx,0x38(%rax)
    8d99:	49 8b 12             	mov    (%r10),%rdx
    8d9c:	48 89 50 48          	mov    %rdx,0x48(%rax)
    8da0:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    8da7:	00 
    8da8:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    8daf:	00 
    8db0:	48 8d 05 f9 26 22 00 	lea    0x2226f9(%rip),%rax        # 22b4b0 <loaded_maps>
    8db7:	4c 8b 20             	mov    (%rax),%r12
    8dba:	eb 07                	jmp    8dc3 <start_execution+0x1d3>
    8dbc:	0f 1f 40 00          	nopl   0x0(%rax)
    8dc0:	49 89 c4             	mov    %rax,%r12
    8dc3:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    8dc8:	48 85 c0             	test   %rax,%rax
    8dcb:	75 f3                	jne    8dc0 <start_execution+0x1d0>
    8dcd:	41 83 7c 24 28 02    	cmpl   $0x2,0x28(%r12)
    8dd3:	74 15                	je     8dea <start_execution+0x1fa>
    8dd5:	0f 1f 00             	nopl   (%rax)
    8dd8:	4d 8b 64 24 20       	mov    0x20(%r12),%r12
    8ddd:	4d 85 e4             	test   %r12,%r12
    8de0:	74 3e                	je     8e20 <start_execution+0x230>
    8de2:	41 83 7c 24 28 02    	cmpl   $0x2,0x28(%r12)
    8de8:	75 ee                	jne    8dd8 <start_execution+0x1e8>
    8dea:	49 8b 84 24 a0 02 00 	mov    0x2a0(%r12),%rax
    8df1:	00 
    8df2:	48 85 c0             	test   %rax,%rax
    8df5:	74 e1                	je     8dd8 <start_execution+0x1e8>
    8df7:	48 89 25 a2 26 22 00 	mov    %rsp,0x2226a2(%rip)        # 22b4a0 <stack_before_call>
    8dfe:	48 8d 15 05 00 00 00 	lea    0x5(%rip),%rdx        # 8e0a <start_execution+0x21a>
    8e05:	48 89 dc             	mov    %rbx,%rsp
    8e08:	ff e0                	jmpq   *%rax
    8e0a:	48 8b 25 8f 26 22 00 	mov    0x22268f(%rip),%rsp        # 22b4a0 <stack_before_call>
    8e11:	4d 8b 64 24 20       	mov    0x20(%r12),%r12
    8e16:	4d 85 e4             	test   %r12,%r12
    8e19:	75 c7                	jne    8de2 <start_execution+0x1f2>
    8e1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8e20:	49 8b 45 00          	mov    0x0(%r13),%rax
    8e24:	48 85 c0             	test   %rax,%rax
    8e27:	74 21                	je     8e4a <start_execution+0x25a>
    8e29:	48 8b 80 a0 02 00 00 	mov    0x2a0(%rax),%rax
    8e30:	48 89 25 69 26 22 00 	mov    %rsp,0x222669(%rip)        # 22b4a0 <stack_before_call>
    8e37:	48 8d 15 05 00 00 00 	lea    0x5(%rip),%rdx        # 8e43 <start_execution+0x253>
    8e3e:	48 89 dc             	mov    %rbx,%rsp
    8e41:	ff e0                	jmpq   *%rax
    8e43:	48 8b 25 56 26 22 00 	mov    0x222656(%rip),%rsp        # 22b4a0 <stack_before_call>
    8e4a:	e8 11 4f 00 00       	callq  dd60 <_DkThreadExit>
    8e4f:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    8e53:	5b                   	pop    %rbx
    8e54:	41 5c                	pop    %r12
    8e56:	41 5d                	pop    %r13
    8e58:	41 5e                	pop    %r14
    8e5a:	5d                   	pop    %rbp
    8e5b:	c3                   	retq   
    8e5c:	0f 1f 40 00          	nopl   0x0(%rax)
    8e60:	41 bc 18 00 00 00    	mov    $0x18,%r12d
    8e66:	41 be 10 00 00 00    	mov    $0x10,%r14d
    8e6c:	b8 08 00 00 00       	mov    $0x8,%eax
    8e71:	b9 02 00 00 00       	mov    $0x2,%ecx
    8e76:	bf 01 00 00 00       	mov    $0x1,%edi
    8e7b:	e9 38 fe ff ff       	jmpq   8cb8 <start_execution+0xc8>
    8e80:	49 8b 53 78          	mov    0x78(%r11),%rdx
    8e84:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    8e8b:	00 
    8e8c:	48 c7 40 10 05 00 00 	movq   $0x5,0x10(%rax)
    8e93:	00 
    8e94:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    8e9b:	00 
    8e9c:	48 c7 40 20 06 00 00 	movq   $0x6,0x20(%rax)
    8ea3:	00 
    8ea4:	48 c7 40 30 09 00 00 	movq   $0x9,0x30(%rax)
    8eab:	00 
    8eac:	48 89 50 28          	mov    %rdx,0x28(%rax)
    8eb0:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
    8eb7:	00 
    8eb8:	31 d2                	xor    %edx,%edx
    8eba:	48 c7 40 40 07 00 00 	movq   $0x7,0x40(%rax)
    8ec1:	00 
    8ec2:	e9 d5 fe ff ff       	jmpq   8d9c <start_execution+0x1ac>
    8ec7:	89 ce                	mov    %ecx,%esi
    8ec9:	e9 29 fe ff ff       	jmpq   8cf7 <start_execution+0x107>
    8ece:	66 90                	xchg   %ax,%ax

0000000000008ed0 <init_slab_mgr>:
    8ed0:	48 83 3d e8 25 22 00 	cmpq   $0x0,0x2225e8(%rip)        # 22b4c0 <slab_mgr>
    8ed7:	00 
    8ed8:	74 06                	je     8ee0 <init_slab_mgr+0x10>
    8eda:	c3                   	retq   
    8edb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8ee0:	55                   	push   %rbp
    8ee1:	48 8d 15 f8 25 22 00 	lea    0x2225f8(%rip),%rdx        # 22b4e0 <mem_pool>
    8ee8:	48 89 e5             	mov    %rsp,%rbp
    8eeb:	48 83 ec 10          	sub    $0x10,%rsp
    8eef:	4c 8b 0d da 19 22 00 	mov    0x2219da(%rip),%r9        # 22a8d0 <bump>
    8ef6:	48 81 c2 00 00 00 04 	add    $0x4000000,%rdx
    8efd:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    8f04:	00 
    8f05:	49 8d 81 60 22 00 00 	lea    0x2260(%r9),%rax
    8f0c:	48 39 d0             	cmp    %rdx,%rax
    8f0f:	0f 87 9b 00 00 00    	ja     8fb0 <init_slab_mgr+0xe0>
    8f15:	48 89 05 b4 19 22 00 	mov    %rax,0x2219b4(%rip)        # 22a8d0 <bump>
    8f1c:	4d 85 c9             	test   %r9,%r9
    8f1f:	0f 84 b3 00 00 00    	je     8fd8 <init_slab_mgr+0x108>
    8f25:	49 8d 81 20 01 00 00 	lea    0x120(%r9),%rax
    8f2c:	4c 89 ca             	mov    %r9,%rdx
    8f2f:	31 ff                	xor    %edi,%edi
    8f31:	be 10 00 00 00       	mov    $0x10,%esi
    8f36:	eb 13                	jmp    8f4b <init_slab_mgr+0x7b>
    8f38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8f3f:	00 
    8f40:	48 8d 0d 39 fc 01 00 	lea    0x1fc39(%rip),%rcx        # 28b80 <slab_levels>
    8f47:	48 63 34 39          	movslq (%rcx,%rdi,1),%rsi
    8f4b:	4c 8d 40 20          	lea    0x20(%rax),%r8
    8f4f:	8d 4c 36 20          	lea    0x20(%rsi,%rsi,1),%ecx
    8f53:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%rax)
    8f5a:	48 89 02             	mov    %rax,(%rdx)
    8f5d:	48 89 00             	mov    %rax,(%rax)
    8f60:	48 83 c2 08          	add    $0x8,%rdx
    8f64:	4c 01 c1             	add    %r8,%rcx
    8f67:	48 89 40 08          	mov    %rax,0x8(%rax)
    8f6b:	48 c7 42 38 00 00 00 	movq   $0x0,0x38(%rdx)
    8f72:	00 
    8f73:	4c 89 82 98 00 00 00 	mov    %r8,0x98(%rdx)
    8f7a:	48 89 8a d8 00 00 00 	mov    %rcx,0xd8(%rdx)
    8f81:	48 8d 44 70 40       	lea    0x40(%rax,%rsi,2),%rax
    8f86:	41 c7 84 39 80 00 00 	movl   $0x2,0x80(%r9,%rdi,1)
    8f8d:	00 02 00 00 00 
    8f92:	48 83 c7 04          	add    $0x4,%rdi
    8f96:	48 83 ff 20          	cmp    $0x20,%rdi
    8f9a:	75 a4                	jne    8f40 <init_slab_mgr+0x70>
    8f9c:	4c 89 0d 1d 25 22 00 	mov    %r9,0x22251d(%rip)        # 22b4c0 <slab_mgr>
    8fa3:	c9                   	leaveq 
    8fa4:	f3 c3                	repz retq 
    8fa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8fad:	00 00 00 
    8fb0:	48 8d 7d f8          	lea    -0x8(%rbp),%rdi
    8fb4:	b9 03 00 00 00       	mov    $0x3,%ecx
    8fb9:	ba 00 80 00 00       	mov    $0x8000,%edx
    8fbe:	be 60 22 00 00       	mov    $0x2260,%esi
    8fc3:	e8 28 4a 00 00       	callq  d9f0 <_DkVirtualMemoryAlloc>
    8fc8:	4c 8b 4d f8          	mov    -0x8(%rbp),%r9
    8fcc:	e9 4b ff ff ff       	jmpq   8f1c <init_slab_mgr+0x4c>
    8fd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8fd8:	4c 8d 05 09 fa 01 00 	lea    0x1fa09(%rip),%r8        # 289e8 <expected.3010+0x8>
    8fdf:	48 8d 35 7a fb 01 00 	lea    0x1fb7a(%rip),%rsi        # 28b60 <__FUNCTION__.2584>
    8fe6:	48 8d 3d 1b fa 01 00 	lea    0x1fa1b(%rip),%rdi        # 28a08 <expected.3010+0x28>
    8fed:	b9 10 00 00 00       	mov    $0x10,%ecx
    8ff2:	ba 63 00 00 00       	mov    $0x63,%edx
    8ff7:	31 c0                	xor    %eax,%eax
    8ff9:	48 c7 05 bc 24 22 00 	movq   $0x0,0x2224bc(%rip)        # 22b4c0 <slab_mgr>
    9000:	00 00 00 00 
    9004:	e8 27 06 00 00       	callq  9630 <pal_printf>
    9009:	bf 10 00 00 00       	mov    $0x10,%edi
    900e:	e8 4d 5c 00 00       	callq  ec60 <_DkProcessExit>
    9013:	c9                   	leaveq 
    9014:	eb 8e                	jmp    8fa4 <init_slab_mgr+0xd4>
    9016:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    901d:	00 00 00 

0000000000009020 <malloc>:
    9020:	55                   	push   %rbp
    9021:	89 fa                	mov    %edi,%edx
    9023:	48 89 e5             	mov    %rsp,%rbp
    9026:	41 57                	push   %r15
    9028:	41 56                	push   %r14
    902a:	41 55                	push   %r13
    902c:	41 54                	push   %r12
    902e:	49 89 fe             	mov    %rdi,%r14
    9031:	53                   	push   %rbx
    9032:	41 bc 10 00 00 00    	mov    $0x10,%r12d
    9038:	31 db                	xor    %ebx,%ebx
    903a:	48 83 ec 28          	sub    $0x28,%rsp
    903e:	eb 0b                	jmp    904b <malloc+0x2b>
    9040:	48 8d 05 39 fb 01 00 	lea    0x1fb39(%rip),%rax        # 28b80 <slab_levels>
    9047:	44 8b 24 98          	mov    (%rax,%rbx,4),%r12d
    904b:	44 39 e2             	cmp    %r12d,%edx
    904e:	7e 70                	jle    90c0 <malloc+0xa0>
    9050:	48 83 c3 01          	add    $0x1,%rbx
    9054:	48 83 fb 08          	cmp    $0x8,%rbx
    9058:	75 e6                	jne    9040 <malloc+0x20>
    905a:	48 8b 05 6f 18 22 00 	mov    0x22186f(%rip),%rax        # 22a8d0 <bump>
    9061:	41 8d 76 20          	lea    0x20(%r14),%esi
    9065:	48 8d 0d 74 24 22 00 	lea    0x222474(%rip),%rcx        # 22b4e0 <mem_pool>
    906c:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    9073:	00 
    9074:	48 63 f6             	movslq %esi,%rsi
    9077:	48 81 c1 00 00 00 04 	add    $0x4000000,%rcx
    907e:	48 8d 14 30          	lea    (%rax,%rsi,1),%rdx
    9082:	48 39 ca             	cmp    %rcx,%rdx
    9085:	0f 87 85 02 00 00    	ja     9310 <malloc+0x2f0>
    908b:	48 89 15 3e 18 22 00 	mov    %rdx,0x22183e(%rip)        # 22a8d0 <bump>
    9092:	48 85 c0             	test   %rax,%rax
    9095:	0f 84 b8 00 00 00    	je     9153 <malloc+0x133>
    909b:	4d 63 f6             	movslq %r14d,%r14
    909e:	c6 40 10 ff          	movb   $0xff,0x10(%rax)
    90a2:	48 83 c0 20          	add    $0x20,%rax
    90a6:	4c 89 70 e0          	mov    %r14,-0x20(%rax)
    90aa:	48 83 c4 28          	add    $0x28,%rsp
    90ae:	5b                   	pop    %rbx
    90af:	41 5c                	pop    %r12
    90b1:	41 5d                	pop    %r13
    90b3:	41 5e                	pop    %r14
    90b5:	41 5f                	pop    %r15
    90b7:	5d                   	pop    %rbp
    90b8:	c3                   	retq   
    90b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    90c0:	4c 8b 35 f9 23 22 00 	mov    0x2223f9(%rip),%r14        # 22b4c0 <slab_mgr>
    90c7:	48 8d 3d 12 24 22 04 	lea    0x4222412(%rip),%rdi        # 422b4e0 <slab_mgr_lock>
    90ce:	4c 63 fb             	movslq %ebx,%r15
    90d1:	e8 0a 7c 00 00       	callq  10ce0 <_DkSpinLock>
    90d6:	4f 8d 04 fe          	lea    (%r14,%r15,8),%r8
    90da:	49 8b 90 a0 00 00 00 	mov    0xa0(%r8),%rdx
    90e1:	49 8b 80 e0 00 00 00 	mov    0xe0(%r8),%rax
    90e8:	48 39 c2             	cmp    %rax,%rdx
    90eb:	0f 87 97 00 00 00    	ja     9188 <malloc+0x168>
    90f1:	48 39 c2             	cmp    %rax,%rdx
    90f4:	0f 84 c7 00 00 00    	je     91c1 <malloc+0x1a1>
    90fa:	4d 8b 68 40          	mov    0x40(%r8),%r13
    90fe:	4d 85 ed             	test   %r13,%r13
    9101:	0f 84 29 02 00 00    	je     9330 <malloc+0x310>
    9107:	49 8b 45 10          	mov    0x10(%r13),%rax
    910b:	ba 00 00 00 00       	mov    $0x0,%edx
    9110:	4c 39 e8             	cmp    %r13,%rax
    9113:	48 0f 44 c2          	cmove  %rdx,%rax
    9117:	49 89 40 40          	mov    %rax,0x40(%r8)
    911b:	49 8b 45 18          	mov    0x18(%r13),%rax
    911f:	49 8b 55 10          	mov    0x10(%r13),%rdx
    9123:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9127:	49 8b 55 10          	mov    0x10(%r13),%rdx
    912b:	48 89 42 18          	mov    %rax,0x18(%rdx)
    912f:	49 8b 80 a0 00 00 00 	mov    0xa0(%r8),%rax
    9136:	49 39 80 e0 00 00 00 	cmp    %rax,0xe0(%r8)
    913d:	72 29                	jb     9168 <malloc+0x148>
    913f:	48 8d 3d 9a 23 22 04 	lea    0x422239a(%rip),%rdi        # 422b4e0 <slab_mgr_lock>
    9146:	41 88 5d 00          	mov    %bl,0x0(%r13)
    914a:	e8 c1 7b 00 00       	callq  10d10 <_DkSpinUnlock>
    914f:	49 8d 45 10          	lea    0x10(%r13),%rax
    9153:	48 83 c4 28          	add    $0x28,%rsp
    9157:	5b                   	pop    %rbx
    9158:	41 5c                	pop    %r12
    915a:	41 5d                	pop    %r13
    915c:	41 5e                	pop    %r14
    915e:	41 5f                	pop    %r15
    9160:	5d                   	pop    %rbp
    9161:	c3                   	retq   
    9162:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9168:	48 8d 3d d1 f8 01 00 	lea    0x1f8d1(%rip),%rdi        # 28a40 <expected.3010+0x60>
    916f:	31 d2                	xor    %edx,%edx
    9171:	be 6e 01 00 00       	mov    $0x16e,%esi
    9176:	31 c0                	xor    %eax,%eax
    9178:	e8 d3 df ff ff       	callq  7150 <warn>
    917d:	e8 be df ff ff       	callq  7140 <__abort>
    9182:	eb bb                	jmp    913f <malloc+0x11f>
    9184:	0f 1f 40 00          	nopl   0x0(%rax)
    9188:	48 8d 3d b1 f8 01 00 	lea    0x1f8b1(%rip),%rdi        # 28a40 <expected.3010+0x60>
    918f:	31 d2                	xor    %edx,%edx
    9191:	31 c0                	xor    %eax,%eax
    9193:	be 5f 01 00 00       	mov    $0x15f,%esi
    9198:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    919c:	e8 af df ff ff       	callq  7150 <warn>
    91a1:	e8 9a df ff ff       	callq  7140 <__abort>
    91a6:	4c 8b 45 b8          	mov    -0x48(%rbp),%r8
    91aa:	49 8b 90 a0 00 00 00 	mov    0xa0(%r8),%rdx
    91b1:	49 8b 80 e0 00 00 00 	mov    0xe0(%r8),%rax
    91b8:	48 39 c2             	cmp    %rax,%rdx
    91bb:	0f 85 39 ff ff ff    	jne    90fa <malloc+0xda>
    91c1:	4d 8b 68 40          	mov    0x40(%r8),%r13
    91c5:	4d 85 ed             	test   %r13,%r13
    91c8:	0f 85 39 ff ff ff    	jne    9107 <malloc+0xe7>
    91ce:	48 8d 3d 0b 23 22 04 	lea    0x422230b(%rip),%rdi        # 422b4e0 <slab_mgr_lock>
    91d5:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    91d9:	e8 32 7b 00 00       	callq  10d10 <_DkSpinUnlock>
    91de:	4c 8b 45 b8          	mov    -0x48(%rbp),%r8
    91e2:	49 8b 80 e0 00 00 00 	mov    0xe0(%r8),%rax
    91e9:	49 39 80 a0 00 00 00 	cmp    %rax,0xa0(%r8)
    91f0:	74 1e                	je     9210 <malloc+0x1f0>
    91f2:	48 8d 3d 9f f8 01 00 	lea    0x1f89f(%rip),%rdi        # 28a98 <expected.3010+0xb8>
    91f9:	31 d2                	xor    %edx,%edx
    91fb:	be 35 01 00 00       	mov    $0x135,%esi
    9200:	31 c0                	xor    %eax,%eax
    9202:	e8 49 df ff ff       	callq  7150 <warn>
    9207:	e8 34 df ff ff       	callq  7140 <__abort>
    920c:	4c 8b 45 b8          	mov    -0x48(%rbp),%r8
    9210:	4f 8d 0c be          	lea    (%r14,%r15,4),%r9
    9214:	41 8d 74 24 10       	lea    0x10(%r12),%esi
    9219:	4c 8b 2d b0 16 22 00 	mov    0x2216b0(%rip),%r13        # 22a8d0 <bump>
    9220:	48 8d 15 b9 22 22 00 	lea    0x2222b9(%rip),%rdx        # 22b4e0 <mem_pool>
    9227:	45 8b b1 80 00 00 00 	mov    0x80(%r9),%r14d
    922e:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    9235:	00 
    9236:	48 81 c2 00 00 00 04 	add    $0x4000000,%rdx
    923d:	41 0f af f6          	imul   %r14d,%esi
    9241:	83 c6 20             	add    $0x20,%esi
    9244:	48 63 f6             	movslq %esi,%rsi
    9247:	49 8d 44 35 00       	lea    0x0(%r13,%rsi,1),%rax
    924c:	48 39 d0             	cmp    %rdx,%rax
    924f:	0f 87 fe 00 00 00    	ja     9353 <malloc+0x333>
    9255:	48 89 05 74 16 22 00 	mov    %rax,0x221674(%rip)        # 22a8d0 <bump>
    925c:	4d 85 ed             	test   %r13,%r13
    925f:	4c 89 4d b0          	mov    %r9,-0x50(%rbp)
    9263:	0f 84 87 00 00 00    	je     92f0 <malloc+0x2d0>
    9269:	48 8d 3d 70 22 22 04 	lea    0x4222270(%rip),%rdi        # 422b4e0 <slab_mgr_lock>
    9270:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    9274:	e8 67 7a 00 00       	callq  10ce0 <_DkSpinLock>
    9279:	4c 8b 45 b8          	mov    -0x48(%rbp),%r8
    927d:	45 89 75 10          	mov    %r14d,0x10(%r13)
    9281:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
    9288:	00 
    9289:	49 c7 45 08 00 00 00 	movq   $0x0,0x8(%r13)
    9290:	00 
    9291:	4c 8b 4d b0          	mov    -0x50(%rbp),%r9
    9295:	49 8b 00             	mov    (%r8),%rax
    9298:	48 85 c0             	test   %rax,%rax
    929b:	0f 84 de 00 00 00    	je     937f <malloc+0x35f>
    92a1:	48 8b 50 08          	mov    0x8(%rax),%rdx
    92a5:	4c 89 2a             	mov    %r13,(%rdx)
    92a8:	4c 89 68 08          	mov    %r13,0x8(%rax)
    92ac:	49 89 45 00          	mov    %rax,0x0(%r13)
    92b0:	49 89 55 08          	mov    %rdx,0x8(%r13)
    92b4:	4d 89 28             	mov    %r13,(%r8)
    92b7:	41 8d 44 24 10       	lea    0x10(%r12),%eax
    92bc:	49 83 c5 20          	add    $0x20,%r13
    92c0:	48 8d 3d 19 22 22 04 	lea    0x4222219(%rip),%rdi        # 422b4e0 <slab_mgr_lock>
    92c7:	4d 89 a8 a0 00 00 00 	mov    %r13,0xa0(%r8)
    92ce:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    92d2:	41 0f af c6          	imul   %r14d,%eax
    92d6:	49 01 c5             	add    %rax,%r13
    92d9:	4d 89 a8 e0 00 00 00 	mov    %r13,0xe0(%r8)
    92e0:	45 01 b1 80 00 00 00 	add    %r14d,0x80(%r9)
    92e7:	e8 24 7a 00 00       	callq  10d10 <_DkSpinUnlock>
    92ec:	4c 8b 45 b8          	mov    -0x48(%rbp),%r8
    92f0:	48 8d 3d e9 21 22 04 	lea    0x42221e9(%rip),%rdi        # 422b4e0 <slab_mgr_lock>
    92f7:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    92fb:	e8 e0 79 00 00       	callq  10ce0 <_DkSpinLock>
    9300:	4c 8b 45 b8          	mov    -0x48(%rbp),%r8
    9304:	e9 f1 fd ff ff       	jmpq   90fa <malloc+0xda>
    9309:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9310:	48 8d 7d c8          	lea    -0x38(%rbp),%rdi
    9314:	b9 03 00 00 00       	mov    $0x3,%ecx
    9319:	ba 00 80 00 00       	mov    $0x8000,%edx
    931e:	e8 cd 46 00 00       	callq  d9f0 <_DkVirtualMemoryAlloc>
    9323:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9327:	e9 66 fd ff ff       	jmpq   9092 <malloc+0x72>
    932c:	0f 1f 40 00          	nopl   0x0(%rax)
    9330:	48 8d 05 49 f8 01 00 	lea    0x1f849(%rip),%rax        # 28b80 <slab_levels>
    9337:	4d 8b a8 a0 00 00 00 	mov    0xa0(%r8),%r13
    933e:	4a 63 04 b8          	movslq (%rax,%r15,4),%rax
    9342:	49 8d 44 05 10       	lea    0x10(%r13,%rax,1),%rax
    9347:	49 89 80 a0 00 00 00 	mov    %rax,0xa0(%r8)
    934e:	e9 e3 fd ff ff       	jmpq   9136 <malloc+0x116>
    9353:	48 8d 7d c8          	lea    -0x38(%rbp),%rdi
    9357:	b9 03 00 00 00       	mov    $0x3,%ecx
    935c:	ba 00 80 00 00       	mov    $0x8000,%edx
    9361:	4c 89 4d b0          	mov    %r9,-0x50(%rbp)
    9365:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    9369:	e8 82 46 00 00       	callq  d9f0 <_DkVirtualMemoryAlloc>
    936e:	4c 8b 6d c8          	mov    -0x38(%rbp),%r13
    9372:	4c 8b 4d b0          	mov    -0x50(%rbp),%r9
    9376:	4c 8b 45 b8          	mov    -0x48(%rbp),%r8
    937a:	e9 dd fe ff ff       	jmpq   925c <malloc+0x23c>
    937f:	4d 89 28             	mov    %r13,(%r8)
    9382:	4d 89 6d 00          	mov    %r13,0x0(%r13)
    9386:	4d 89 6d 08          	mov    %r13,0x8(%r13)
    938a:	e9 28 ff ff ff       	jmpq   92b7 <malloc+0x297>
    938f:	90                   	nop

0000000000009390 <remalloc>:
    9390:	55                   	push   %rbp
    9391:	48 89 e5             	mov    %rsp,%rbp
    9394:	41 55                	push   %r13
    9396:	41 54                	push   %r12
    9398:	53                   	push   %rbx
    9399:	49 89 fd             	mov    %rdi,%r13
    939c:	48 89 f7             	mov    %rsi,%rdi
    939f:	49 89 f4             	mov    %rsi,%r12
    93a2:	48 83 ec 08          	sub    $0x8,%rsp
    93a6:	e8 75 fc ff ff       	callq  9020 <malloc>
    93ab:	48 85 c0             	test   %rax,%rax
    93ae:	48 89 c3             	mov    %rax,%rbx
    93b1:	74 0e                	je     93c1 <remalloc+0x31>
    93b3:	4c 89 e2             	mov    %r12,%rdx
    93b6:	4c 89 ee             	mov    %r13,%rsi
    93b9:	48 89 c7             	mov    %rax,%rdi
    93bc:	e8 2f c8 00 00       	callq  15bf0 <memcpy>
    93c1:	48 83 c4 08          	add    $0x8,%rsp
    93c5:	48 89 d8             	mov    %rbx,%rax
    93c8:	5b                   	pop    %rbx
    93c9:	41 5c                	pop    %r12
    93cb:	41 5d                	pop    %r13
    93cd:	5d                   	pop    %rbp
    93ce:	c3                   	retq   
    93cf:	90                   	nop

00000000000093d0 <strdup>:
    93d0:	55                   	push   %rbp
    93d1:	48 89 e5             	mov    %rsp,%rbp
    93d4:	41 55                	push   %r13
    93d6:	41 54                	push   %r12
    93d8:	53                   	push   %rbx
    93d9:	49 89 fd             	mov    %rdi,%r13
    93dc:	48 83 ec 08          	sub    $0x8,%rsp
    93e0:	e8 8b c2 00 00       	callq  15670 <strlen>
    93e5:	48 8d 58 01          	lea    0x1(%rax),%rbx
    93e9:	48 89 df             	mov    %rbx,%rdi
    93ec:	e8 2f fc ff ff       	callq  9020 <malloc>
    93f1:	48 85 c0             	test   %rax,%rax
    93f4:	49 89 c4             	mov    %rax,%r12
    93f7:	74 0e                	je     9407 <strdup+0x37>
    93f9:	48 89 da             	mov    %rbx,%rdx
    93fc:	4c 89 ee             	mov    %r13,%rsi
    93ff:	48 89 c7             	mov    %rax,%rdi
    9402:	e8 e9 c7 00 00       	callq  15bf0 <memcpy>
    9407:	48 83 c4 08          	add    $0x8,%rsp
    940b:	4c 89 e0             	mov    %r12,%rax
    940e:	5b                   	pop    %rbx
    940f:	41 5c                	pop    %r12
    9411:	41 5d                	pop    %r13
    9413:	5d                   	pop    %rbp
    9414:	c3                   	retq   
    9415:	90                   	nop
    9416:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    941d:	00 00 00 

0000000000009420 <calloc>:
    9420:	55                   	push   %rbp
    9421:	48 89 e5             	mov    %rsp,%rbp
    9424:	41 54                	push   %r12
    9426:	53                   	push   %rbx
    9427:	48 89 fb             	mov    %rdi,%rbx
    942a:	48 0f af de          	imul   %rsi,%rbx
    942e:	48 89 df             	mov    %rbx,%rdi
    9431:	e8 ea fb ff ff       	callq  9020 <malloc>
    9436:	48 85 c0             	test   %rax,%rax
    9439:	49 89 c4             	mov    %rax,%r12
    943c:	74 0d                	je     944b <calloc+0x2b>
    943e:	48 89 da             	mov    %rbx,%rdx
    9441:	31 f6                	xor    %esi,%esi
    9443:	48 89 c7             	mov    %rax,%rdi
    9446:	e8 15 d0 00 00       	callq  16460 <memset>
    944b:	4c 89 e0             	mov    %r12,%rax
    944e:	5b                   	pop    %rbx
    944f:	41 5c                	pop    %r12
    9451:	5d                   	pop    %rbp
    9452:	c3                   	retq   
    9453:	0f 1f 00             	nopl   (%rax)
    9456:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    945d:	00 00 00 

0000000000009460 <free>:
    9460:	48 85 ff             	test   %rdi,%rdi
    9463:	0f 84 c7 00 00 00    	je     9530 <free+0xd0>
    9469:	0f b6 77 f0          	movzbl -0x10(%rdi),%esi
    946d:	40 80 fe ff          	cmp    $0xff,%sil
    9471:	0f 84 81 00 00 00    	je     94f8 <free+0x98>
    9477:	55                   	push   %rbp
    9478:	40 80 fe 07          	cmp    $0x7,%sil
    947c:	48 89 e5             	mov    %rsp,%rbp
    947f:	41 56                	push   %r14
    9481:	41 55                	push   %r13
    9483:	4c 8b 2d 36 20 22 00 	mov    0x222036(%rip),%r13        # 22b4c0 <slab_mgr>
    948a:	41 54                	push   %r12
    948c:	44 0f b6 e6          	movzbl %sil,%r12d
    9490:	53                   	push   %rbx
    9491:	48 89 fb             	mov    %rdi,%rbx
    9494:	0f 87 9e 00 00 00    	ja     9538 <free+0xd8>
    949a:	48 8d 3d 3f 20 22 04 	lea    0x422203f(%rip),%rdi        # 422b4e0 <slab_mgr_lock>
    94a1:	4c 8d 73 f0          	lea    -0x10(%rbx),%r14
    94a5:	e8 36 78 00 00       	callq  10ce0 <_DkSpinLock>
    94aa:	49 63 f4             	movslq %r12d,%rsi
    94ad:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    94b4:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    94bb:	00 
    94bc:	49 8d 54 f5 00       	lea    0x0(%r13,%rsi,8),%rdx
    94c1:	48 8b 42 40          	mov    0x40(%rdx),%rax
    94c5:	48 85 c0             	test   %rax,%rax
    94c8:	0f 84 a2 00 00 00    	je     9570 <free+0x110>
    94ce:	48 8b 50 18          	mov    0x18(%rax),%rdx
    94d2:	4c 89 72 10          	mov    %r14,0x10(%rdx)
    94d6:	4c 89 70 18          	mov    %r14,0x18(%rax)
    94da:	48 89 03             	mov    %rax,(%rbx)
    94dd:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    94e1:	5b                   	pop    %rbx
    94e2:	41 5c                	pop    %r12
    94e4:	41 5d                	pop    %r13
    94e6:	41 5e                	pop    %r14
    94e8:	5d                   	pop    %rbp
    94e9:	48 8d 3d f0 1f 22 04 	lea    0x4221ff0(%rip),%rdi        # 422b4e0 <slab_mgr_lock>
    94f0:	e9 1b 78 00 00       	jmpq   10d10 <_DkSpinUnlock>
    94f5:	0f 1f 00             	nopl   (%rax)
    94f8:	48 8b 77 e0          	mov    -0x20(%rdi),%rsi
    94fc:	48 8d 47 e0          	lea    -0x20(%rdi),%rax
    9500:	48 8d 15 d9 1f 22 00 	lea    0x221fd9(%rip),%rdx        # 22b4e0 <mem_pool>
    9507:	83 c6 20             	add    $0x20,%esi
    950a:	48 39 d0             	cmp    %rdx,%rax
    950d:	48 63 f6             	movslq %esi,%rsi
    9510:	72 10                	jb     9522 <free+0xc2>
    9512:	48 8d 0c 30          	lea    (%rax,%rsi,1),%rcx
    9516:	48 81 c2 00 00 00 04 	add    $0x4000000,%rdx
    951d:	48 39 d1             	cmp    %rdx,%rcx
    9520:	76 0e                	jbe    9530 <free+0xd0>
    9522:	48 89 c7             	mov    %rax,%rdi
    9525:	e9 d6 45 00 00       	jmpq   db00 <_DkVirtualMemoryFree>
    952a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9530:	f3 c3                	repz retq 
    9532:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9538:	48 8d 3d b1 f5 01 00 	lea    0x1f5b1(%rip),%rdi        # 28af0 <expected.3010+0x110>
    953f:	44 89 e6             	mov    %r12d,%esi
    9542:	31 c0                	xor    %eax,%eax
    9544:	e8 17 90 ff ff       	callq  2560 <pal_printf@plt>
    9549:	48 8d 3d d8 f5 01 00 	lea    0x1f5d8(%rip),%rdi        # 28b28 <expected.3010+0x148>
    9550:	31 d2                	xor    %edx,%edx
    9552:	be ae 01 00 00       	mov    $0x1ae,%esi
    9557:	31 c0                	xor    %eax,%eax
    9559:	e8 f2 db ff ff       	callq  7150 <warn>
    955e:	e8 dd db ff ff       	callq  7140 <__abort>
    9563:	e9 32 ff ff ff       	jmpq   949a <free+0x3a>
    9568:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    956f:	00 
    9570:	4c 89 72 40          	mov    %r14,0x40(%rdx)
    9574:	4c 89 33             	mov    %r14,(%rbx)
    9577:	4c 89 73 08          	mov    %r14,0x8(%rbx)
    957b:	e9 61 ff ff ff       	jmpq   94e1 <free+0x81>

0000000000009580 <fputch>:
    9580:	48 63 02             	movslq (%rdx),%rax
    9583:	8d 48 01             	lea    0x1(%rax),%ecx
    9586:	81 f9 ff 00 00 00    	cmp    $0xff,%ecx
    958c:	89 0a                	mov    %ecx,(%rdx)
    958e:	40 88 74 02 08       	mov    %sil,0x8(%rdx,%rax,1)
    9593:	74 0b                	je     95a0 <fputch+0x20>
    9595:	83 42 04 01          	addl   $0x1,0x4(%rdx)
    9599:	31 c0                	xor    %eax,%eax
    959b:	c3                   	retq   
    959c:	0f 1f 40 00          	nopl   0x0(%rax)
    95a0:	55                   	push   %rbp
    95a1:	48 8d 7a 08          	lea    0x8(%rdx),%rdi
    95a5:	be ff 00 00 00       	mov    $0xff,%esi
    95aa:	48 89 e5             	mov    %rsp,%rbp
    95ad:	48 83 ec 10          	sub    $0x10,%rsp
    95b1:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    95b5:	e8 f6 3a 00 00       	callq  d0b0 <_DkPrintConsole>
    95ba:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    95be:	31 c0                	xor    %eax,%eax
    95c0:	83 42 04 01          	addl   $0x1,0x4(%rdx)
    95c4:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
    95ca:	c9                   	leaveq 
    95cb:	c3                   	retq   
    95cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000095d0 <vprintf>:
    95d0:	55                   	push   %rbp
    95d1:	48 89 f9             	mov    %rdi,%rcx
    95d4:	48 8d 3d a5 ff ff ff 	lea    -0x5b(%rip),%rdi        # 9580 <fputch>
    95db:	49 89 f0             	mov    %rsi,%r8
    95de:	31 f6                	xor    %esi,%esi
    95e0:	48 89 e5             	mov    %rsp,%rbp
    95e3:	53                   	push   %rbx
    95e4:	48 8d 9d e0 fe ff ff 	lea    -0x120(%rbp),%rbx
    95eb:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    95f2:	c7 85 e0 fe ff ff 00 	movl   $0x0,-0x120(%rbp)
    95f9:	00 00 00 
    95fc:	c7 85 e4 fe ff ff 00 	movl   $0x0,-0x11c(%rbp)
    9603:	00 00 00 
    9606:	48 89 da             	mov    %rbx,%rdx
    9609:	e8 a2 d2 00 00       	callq  168b0 <vfprintfmt>
    960e:	8b b5 e0 fe ff ff    	mov    -0x120(%rbp),%esi
    9614:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
    9618:	e8 93 3a 00 00       	callq  d0b0 <_DkPrintConsole>
    961d:	8b 85 e4 fe ff ff    	mov    -0x11c(%rbp),%eax
    9623:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
    962a:	5b                   	pop    %rbx
    962b:	5d                   	pop    %rbp
    962c:	c3                   	retq   
    962d:	0f 1f 00             	nopl   (%rax)

0000000000009630 <pal_printf>:
    9630:	55                   	push   %rbp
    9631:	48 89 e5             	mov    %rsp,%rbp
    9634:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    963b:	84 c0                	test   %al,%al
    963d:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
    9644:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    964b:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    9652:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    9659:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    9660:	74 20                	je     9682 <pal_printf+0x52>
    9662:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    9666:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    966a:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    966e:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    9672:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    9676:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    967a:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    967e:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    9682:	48 8d 45 10          	lea    0x10(%rbp),%rax
    9686:	48 8d b5 38 ff ff ff 	lea    -0xc8(%rbp),%rsi
    968d:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    9694:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    969b:	c7 85 38 ff ff ff 08 	movl   $0x8,-0xc8(%rbp)
    96a2:	00 00 00 
    96a5:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
    96ac:	00 00 00 
    96af:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    96b6:	e8 15 ff ff ff       	callq  95d0 <vprintf>
    96bb:	c9                   	leaveq 
    96bc:	c3                   	retq   
    96bd:	0f 1f 00             	nopl   (%rax)

00000000000096c0 <file_getrealpath>:
    96c0:	55                   	push   %rbp
    96c1:	48 8b 47 10          	mov    0x10(%rdi),%rax
    96c5:	48 89 e5             	mov    %rsp,%rbp
    96c8:	5d                   	pop    %rbp
    96c9:	c3                   	retq   
    96ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000096d0 <dir_getrealpath>:
    96d0:	55                   	push   %rbp
    96d1:	48 8b 47 10          	mov    0x10(%rdi),%rax
    96d5:	48 89 e5             	mov    %rsp,%rbp
    96d8:	5d                   	pop    %rbp
    96d9:	c3                   	retq   
    96da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000096e0 <file_rename>:
    96e0:	55                   	push   %rbp
    96e1:	48 89 d6             	mov    %rdx,%rsi
    96e4:	48 89 e5             	mov    %rsp,%rbp
    96e7:	41 54                	push   %r12
    96e9:	53                   	push   %rbx
    96ea:	48 89 fb             	mov    %rdi,%rbx
    96ed:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    96f1:	49 89 d4             	mov    %rdx,%r12
    96f4:	e8 57 91 00 00       	callq  12850 <ocall_rename>
    96f9:	85 c0                	test   %eax,%eax
    96fb:	78 0e                	js     970b <file_rename+0x2b>
    96fd:	4c 89 e7             	mov    %r12,%rdi
    9700:	e8 cb fc ff ff       	callq  93d0 <strdup>
    9705:	48 89 43 10          	mov    %rax,0x10(%rbx)
    9709:	31 c0                	xor    %eax,%eax
    970b:	5b                   	pop    %rbx
    970c:	41 5c                	pop    %r12
    970e:	5d                   	pop    %rbp
    970f:	c3                   	retq   

0000000000009710 <dir_rename>:
    9710:	55                   	push   %rbp
    9711:	48 89 d6             	mov    %rdx,%rsi
    9714:	48 89 e5             	mov    %rsp,%rbp
    9717:	41 54                	push   %r12
    9719:	53                   	push   %rbx
    971a:	48 89 fb             	mov    %rdi,%rbx
    971d:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    9721:	49 89 d4             	mov    %rdx,%r12
    9724:	e8 27 91 00 00       	callq  12850 <ocall_rename>
    9729:	85 c0                	test   %eax,%eax
    972b:	78 0e                	js     973b <dir_rename+0x2b>
    972d:	4c 89 e7             	mov    %r12,%rdi
    9730:	e8 9b fc ff ff       	callq  93d0 <strdup>
    9735:	48 89 43 10          	mov    %rax,0x10(%rbx)
    9739:	31 c0                	xor    %eax,%eax
    973b:	5b                   	pop    %rbx
    973c:	41 5c                	pop    %r12
    973e:	5d                   	pop    %rbp
    973f:	c3                   	retq   

0000000000009740 <file_attrsetbyhdl>:
    9740:	55                   	push   %rbp
    9741:	8b 76 0c             	mov    0xc(%rsi),%esi
    9744:	8b 7f 08             	mov    0x8(%rdi),%edi
    9747:	48 89 e5             	mov    %rsp,%rbp
    974a:	66 81 ce 80 01       	or     $0x180,%si
    974f:	0f b7 f6             	movzwl %si,%esi
    9752:	e8 f9 7c 00 00       	callq  11450 <ocall_fchmod>
    9757:	ba 00 00 00 00       	mov    $0x0,%edx
    975c:	85 c0                	test   %eax,%eax
    975e:	0f 4f c2             	cmovg  %edx,%eax
    9761:	5d                   	pop    %rbp
    9762:	c3                   	retq   
    9763:	0f 1f 00             	nopl   (%rax)
    9766:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    976d:	00 00 00 

0000000000009770 <file_attrquery>:
    9770:	55                   	push   %rbp
    9771:	48 89 f7             	mov    %rsi,%rdi
    9774:	31 f6                	xor    %esi,%esi
    9776:	48 89 e5             	mov    %rsp,%rbp
    9779:	41 56                	push   %r14
    977b:	41 55                	push   %r13
    977d:	41 54                	push   %r12
    977f:	53                   	push   %rbx
    9780:	49 89 d5             	mov    %rdx,%r13
    9783:	31 d2                	xor    %edx,%edx
    9785:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    978c:	e8 7f 78 00 00       	callq  11010 <ocall_open>
    9791:	85 c0                	test   %eax,%eax
    9793:	41 89 c4             	mov    %eax,%r12d
    9796:	0f 88 c3 00 00 00    	js     985f <file_attrquery+0xef>
    979c:	4c 8d b5 50 ff ff ff 	lea    -0xb0(%rbp),%r14
    97a3:	89 c7                	mov    %eax,%edi
    97a5:	4c 89 f6             	mov    %r14,%rsi
    97a8:	e8 93 7b 00 00       	callq  11340 <ocall_fstat>
    97ad:	44 89 e7             	mov    %r12d,%edi
    97b0:	89 c3                	mov    %eax,%ebx
    97b2:	e8 19 79 00 00       	callq  110d0 <ocall_close>
    97b7:	85 db                	test   %ebx,%ebx
    97b9:	89 d8                	mov    %ebx,%eax
    97bb:	0f 88 9e 00 00 00    	js     985f <file_attrquery+0xef>
    97c1:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
    97c7:	25 00 f0 00 00       	and    $0xf000,%eax
    97cc:	3d 00 80 00 00       	cmp    $0x8000,%eax
    97d1:	0f 84 99 00 00 00    	je     9870 <file_attrquery+0x100>
    97d7:	3d 00 40 00 00       	cmp    $0x4000,%eax
    97dc:	0f 84 9e 00 00 00    	je     9880 <file_attrquery+0x110>
    97e2:	3d 00 20 00 00       	cmp    $0x2000,%eax
    97e7:	0f 84 a3 00 00 00    	je     9890 <file_attrquery+0x120>
    97ed:	3d 00 10 00 00       	cmp    $0x1000,%eax
    97f2:	0f 84 a8 00 00 00    	je     98a0 <file_attrquery+0x130>
    97f8:	3d 00 c0 00 00       	cmp    $0xc000,%eax
    97fd:	ba 06 00 00 00       	mov    $0x6,%edx
    9802:	b8 00 00 00 00       	mov    $0x0,%eax
    9807:	0f 44 c2             	cmove  %edx,%eax
    980a:	be 04 00 00 00       	mov    $0x4,%esi
    980f:	4c 89 f7             	mov    %r14,%rdi
    9812:	41 89 45 00          	mov    %eax,0x0(%r13)
    9816:	41 c6 45 04 00       	movb   $0x0,0x4(%r13)
    981b:	41 c6 45 05 00       	movb   $0x0,0x5(%r13)
    9820:	e8 9b 38 00 00       	callq  d0c0 <stataccess>
    9825:	be 02 00 00 00       	mov    $0x2,%esi
    982a:	4c 89 f7             	mov    %r14,%rdi
    982d:	41 88 45 06          	mov    %al,0x6(%r13)
    9831:	e8 8a 38 00 00       	callq  d0c0 <stataccess>
    9836:	be 01 00 00 00       	mov    $0x1,%esi
    983b:	41 88 45 07          	mov    %al,0x7(%r13)
    983f:	4c 89 f7             	mov    %r14,%rdi
    9842:	e8 79 38 00 00       	callq  d0c0 <stataccess>
    9847:	41 88 45 08          	mov    %al,0x8(%r13)
    984b:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
    9851:	41 89 45 0c          	mov    %eax,0xc(%r13)
    9855:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    9859:	49 89 45 10          	mov    %rax,0x10(%r13)
    985d:	31 c0                	xor    %eax,%eax
    985f:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
    9866:	5b                   	pop    %rbx
    9867:	41 5c                	pop    %r12
    9869:	41 5d                	pop    %r13
    986b:	41 5e                	pop    %r14
    986d:	5d                   	pop    %rbp
    986e:	c3                   	retq   
    986f:	90                   	nop
    9870:	b8 01 00 00 00       	mov    $0x1,%eax
    9875:	eb 93                	jmp    980a <file_attrquery+0x9a>
    9877:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    987e:	00 00 
    9880:	b8 07 00 00 00       	mov    $0x7,%eax
    9885:	eb 83                	jmp    980a <file_attrquery+0x9a>
    9887:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    988e:	00 00 
    9890:	b8 06 00 00 00       	mov    $0x6,%eax
    9895:	e9 70 ff ff ff       	jmpq   980a <file_attrquery+0x9a>
    989a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    98a0:	b8 02 00 00 00       	mov    $0x2,%eax
    98a5:	e9 60 ff ff ff       	jmpq   980a <file_attrquery+0x9a>
    98aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000098b0 <file_flush>:
    98b0:	55                   	push   %rbp
    98b1:	8b 7f 08             	mov    0x8(%rdi),%edi
    98b4:	48 89 e5             	mov    %rsp,%rbp
    98b7:	e8 e4 7b 00 00       	callq  114a0 <ocall_fsync>
    98bc:	31 c0                	xor    %eax,%eax
    98be:	5d                   	pop    %rbp
    98bf:	c3                   	retq   

00000000000098c0 <file_setlength>:
    98c0:	55                   	push   %rbp
    98c1:	48 89 e5             	mov    %rsp,%rbp
    98c4:	41 54                	push   %r12
    98c6:	49 89 fc             	mov    %rdi,%r12
    98c9:	53                   	push   %rbx
    98ca:	8b 7f 08             	mov    0x8(%rdi),%edi
    98cd:	48 89 f3             	mov    %rsi,%rbx
    98d0:	e8 1b 7c 00 00       	callq  114f0 <ocall_ftruncate>
    98d5:	85 c0                	test   %eax,%eax
    98d7:	78 17                	js     98f0 <file_setlength+0x30>
    98d9:	49 89 5c 24 18       	mov    %rbx,0x18(%r12)
    98de:	48 89 d8             	mov    %rbx,%rax
    98e1:	5b                   	pop    %rbx
    98e2:	41 5c                	pop    %r12
    98e4:	5d                   	pop    %rbp
    98e5:	c3                   	retq   
    98e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    98ed:	00 00 00 
    98f0:	5b                   	pop    %rbx
    98f1:	48 98                	cltq   
    98f3:	41 5c                	pop    %r12
    98f5:	5d                   	pop    %rbp
    98f6:	c3                   	retq   
    98f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    98fe:	00 00 

0000000000009900 <file_map>:
    9900:	55                   	push   %rbp
    9901:	49 89 fa             	mov    %rdi,%r10
    9904:	48 89 e5             	mov    %rsp,%rbp
    9907:	41 57                	push   %r15
    9909:	41 56                	push   %r14
    990b:	41 55                	push   %r13
    990d:	41 54                	push   %r12
    990f:	49 89 f7             	mov    %rsi,%r15
    9912:	53                   	push   %rbx
    9913:	49 89 cc             	mov    %rcx,%r12
    9916:	4d 89 c6             	mov    %r8,%r14
    9919:	48 83 ec 38          	sub    $0x38,%rsp
    991d:	4c 8b 5f 20          	mov    0x20(%rdi),%r11
    9921:	48 8b 06             	mov    (%rsi),%rax
    9924:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
    9928:	4d 85 db             	test   %r11,%r11
    992b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    992f:	0f 84 eb 00 00 00    	je     9a20 <file_map+0x120>
    9935:	83 e2 0a             	and    $0xa,%edx
    9938:	83 fa 02             	cmp    $0x2,%edx
    993b:	0f 84 c7 01 00 00    	je     9b08 <file_map+0x208>
    9941:	4b 8d 14 34          	lea    (%r12,%r14,1),%rdx
    9945:	4d 89 e5             	mov    %r12,%r13
    9948:	41 8b 7a 08          	mov    0x8(%r10),%edi
    994c:	4c 8d 45 c8          	lea    -0x38(%rbp),%r8
    9950:	b9 01 00 00 00       	mov    $0x1,%ecx
    9955:	4c 89 5d a8          	mov    %r11,-0x58(%rbp)
    9959:	4c 39 ca             	cmp    %r9,%rdx
    995c:	4c 89 4d b0          	mov    %r9,-0x50(%rbp)
    9960:	4c 89 55 b8          	mov    %r10,-0x48(%rbp)
    9964:	49 0f 47 d1          	cmova  %r9,%rdx
    9968:	49 81 e5 00 c0 ff ff 	and    $0xffffffffffffc000,%r13
    996f:	48 8d 9a ff 3f 00 00 	lea    0x3fff(%rdx),%rbx
    9976:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    997a:	4c 89 ee             	mov    %r13,%rsi
    997d:	48 81 e3 00 c0 ff ff 	and    $0xffffffffffffc000,%rbx
    9984:	4c 29 eb             	sub    %r13,%rbx
    9987:	48 89 da             	mov    %rbx,%rdx
    998a:	e8 e1 74 00 00       	callq  10e70 <ocall_map_untrusted>
    998f:	85 c0                	test   %eax,%eax
    9991:	89 c2                	mov    %eax,%edx
    9993:	4c 8b 55 b8          	mov    -0x48(%rbp),%r10
    9997:	4c 8b 4d b0          	mov    -0x50(%rbp),%r9
    999b:	4c 8b 5d a8          	mov    -0x58(%rbp),%r11
    999f:	0f 88 e3 00 00 00    	js     9a88 <file_map+0x188>
    99a5:	49 8b 7a 10          	mov    0x10(%r10),%rdi
    99a9:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    99ad:	4d 89 d8             	mov    %r11,%r8
    99b0:	48 89 d9             	mov    %rbx,%rcx
    99b3:	4c 89 ea             	mov    %r13,%rdx
    99b6:	e8 e5 9b 00 00       	callq  135a0 <verify_trusted_file>
    99bb:	85 c0                	test   %eax,%eax
    99bd:	0f 88 e5 00 00 00    	js     9aa8 <file_map+0x1a8>
    99c3:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    99c7:	4c 89 f6             	mov    %r14,%rsi
    99ca:	e8 81 aa 00 00       	callq  14450 <get_reserved_pages>
    99cf:	48 85 c0             	test   %rax,%rax
    99d2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    99d6:	74 20                	je     99f8 <file_map+0xf8>
    99d8:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    99dc:	48 89 c7             	mov    %rax,%rdi
    99df:	4c 29 e2             	sub    %r12,%rdx
    99e2:	4d 29 ec             	sub    %r13,%r12
    99e5:	4c 89 e6             	mov    %r12,%rsi
    99e8:	48 03 75 c8          	add    -0x38(%rbp),%rsi
    99ec:	e8 ff c1 00 00       	callq  15bf0 <memcpy>
    99f1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    99f5:	49 89 07             	mov    %rax,(%r15)
    99f8:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    99fc:	48 89 de             	mov    %rbx,%rsi
    99ff:	e8 0c 75 00 00       	callq  10f10 <ocall_unmap_untrusted>
    9a04:	48 83 7d c0 01       	cmpq   $0x1,-0x40(%rbp)
    9a09:	19 c0                	sbb    %eax,%eax
    9a0b:	83 e0 f0             	and    $0xfffffff0,%eax
    9a0e:	48 83 c4 38          	add    $0x38,%rsp
    9a12:	5b                   	pop    %rbx
    9a13:	41 5c                	pop    %r12
    9a15:	41 5d                	pop    %r13
    9a17:	41 5e                	pop    %r14
    9a19:	41 5f                	pop    %r15
    9a1b:	5d                   	pop    %rbp
    9a1c:	c3                   	retq   
    9a1d:	0f 1f 00             	nopl   (%rax)
    9a20:	f6 c2 08             	test   $0x8,%dl
    9a23:	0f 84 af 00 00 00    	je     9ad8 <file_map+0x1d8>
    9a29:	83 e2 0a             	and    $0xa,%edx
    9a2c:	83 fa 02             	cmp    $0x2,%edx
    9a2f:	0f 84 d3 00 00 00    	je     9b08 <file_map+0x208>
    9a35:	4b 8d 14 34          	lea    (%r12,%r14,1),%rdx
    9a39:	48 8d 05 a0 4c 22 04 	lea    0x4224ca0(%rip),%rax        # 422e6e0 <pal_state>
    9a40:	4d 89 e5             	mov    %r12,%r13
    9a43:	41 8b 7a 08          	mov    0x8(%r10),%edi
    9a47:	4c 8d 45 c8          	lea    -0x38(%rbp),%r8
    9a4b:	b9 01 00 00 00       	mov    $0x1,%ecx
    9a50:	4c 39 ca             	cmp    %r9,%rdx
    9a53:	4c 0f 46 ca          	cmovbe %rdx,%r9
    9a57:	48 8b 58 60          	mov    0x60(%rax),%rbx
    9a5b:	4c 89 4d a0          	mov    %r9,-0x60(%rbp)
    9a5f:	4c 03 48 58          	add    0x58(%rax),%r9
    9a63:	49 21 dd             	and    %rbx,%r13
    9a66:	4c 89 ee             	mov    %r13,%rsi
    9a69:	4c 21 cb             	and    %r9,%rbx
    9a6c:	4c 29 eb             	sub    %r13,%rbx
    9a6f:	48 89 da             	mov    %rbx,%rdx
    9a72:	e8 f9 73 00 00       	callq  10e70 <ocall_map_untrusted>
    9a77:	85 c0                	test   %eax,%eax
    9a79:	89 c2                	mov    %eax,%edx
    9a7b:	0f 89 42 ff ff ff    	jns    99c3 <file_map+0xc3>
    9a81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9a88:	48 8d 3d 79 f2 01 00 	lea    0x1f279(%rip),%rdi        # 28d08 <slab_levels+0x188>
    9a8f:	89 d6                	mov    %edx,%esi
    9a91:	31 c0                	xor    %eax,%eax
    9a93:	89 55 b8             	mov    %edx,-0x48(%rbp)
    9a96:	e8 95 fb ff ff       	callq  9630 <pal_printf>
    9a9b:	8b 55 b8             	mov    -0x48(%rbp),%edx
    9a9e:	89 d0                	mov    %edx,%eax
    9aa0:	e9 69 ff ff ff       	jmpq   9a0e <file_map+0x10e>
    9aa5:	0f 1f 00             	nopl   (%rax)
    9aa8:	48 8d 3d e9 f1 01 00 	lea    0x1f1e9(%rip),%rdi        # 28c98 <slab_levels+0x118>
    9aaf:	89 c6                	mov    %eax,%esi
    9ab1:	89 45 b8             	mov    %eax,-0x48(%rbp)
    9ab4:	31 c0                	xor    %eax,%eax
    9ab6:	e8 75 fb ff ff       	callq  9630 <pal_printf>
    9abb:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    9abf:	48 89 de             	mov    %rbx,%rsi
    9ac2:	e8 49 74 00 00       	callq  10f10 <ocall_unmap_untrusted>
    9ac7:	8b 55 b8             	mov    -0x48(%rbp),%edx
    9aca:	89 d0                	mov    %edx,%eax
    9acc:	e9 3d ff ff ff       	jmpq   9a0e <file_map+0x10e>
    9ad1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9ad8:	8b 7f 08             	mov    0x8(%rdi),%edi
    9adb:	89 d1                	mov    %edx,%ecx
    9add:	4c 8d 45 c0          	lea    -0x40(%rbp),%r8
    9ae1:	83 e1 07             	and    $0x7,%ecx
    9ae4:	4c 89 f2             	mov    %r14,%rdx
    9ae7:	4c 89 e6             	mov    %r12,%rsi
    9aea:	e8 81 73 00 00       	callq  10e70 <ocall_map_untrusted>
    9aef:	85 c0                	test   %eax,%eax
    9af1:	0f 85 17 ff ff ff    	jne    9a0e <file_map+0x10e>
    9af7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    9afb:	49 89 17             	mov    %rdx,(%r15)
    9afe:	e9 0b ff ff ff       	jmpq   9a0e <file_map+0x10e>
    9b03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9b08:	48 8d 3d 91 f0 01 00 	lea    0x1f091(%rip),%rdi        # 28ba0 <slab_levels+0x20>
    9b0f:	31 c0                	xor    %eax,%eax
    9b11:	e8 1a fb ff ff       	callq  9630 <pal_printf>
    9b16:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
    9b1b:	e9 ee fe ff ff       	jmpq   9a0e <file_map+0x10e>

0000000000009b20 <file_write>:
    9b20:	55                   	push   %rbp
    9b21:	4c 8d 14 16          	lea    (%rsi,%rdx,1),%r10
    9b25:	48 89 e5             	mov    %rsp,%rbp
    9b28:	41 57                	push   %r15
    9b2a:	41 56                	push   %r14
    9b2c:	41 55                	push   %r13
    9b2e:	41 54                	push   %r12
    9b30:	49 89 fe             	mov    %rdi,%r14
    9b33:	53                   	push   %rbx
    9b34:	4c 8d 45 c8          	lea    -0x38(%rbp),%r8
    9b38:	49 89 f4             	mov    %rsi,%r12
    9b3b:	49 89 d5             	mov    %rdx,%r13
    9b3e:	48 83 ec 28          	sub    $0x28,%rsp
    9b42:	48 8d 05 97 4b 22 04 	lea    0x4224b97(%rip),%rax        # 422e6e0 <pal_state>
    9b49:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    9b4d:	4c 89 d1             	mov    %r10,%rcx
    9b50:	8b 7f 08             	mov    0x8(%rdi),%edi
    9b53:	4c 89 55 b0          	mov    %r10,-0x50(%rbp)
    9b57:	48 03 48 58          	add    0x58(%rax),%rcx
    9b5b:	48 8b 58 60          	mov    0x60(%rax),%rbx
    9b5f:	49 89 df             	mov    %rbx,%r15
    9b62:	49 21 f7             	and    %rsi,%r15
    9b65:	48 21 cb             	and    %rcx,%rbx
    9b68:	b9 02 00 00 00       	mov    $0x2,%ecx
    9b6d:	4c 29 fb             	sub    %r15,%rbx
    9b70:	4c 89 fe             	mov    %r15,%rsi
    9b73:	48 89 da             	mov    %rbx,%rdx
    9b76:	e8 f5 72 00 00       	callq  10e70 <ocall_map_untrusted>
    9b7b:	85 c0                	test   %eax,%eax
    9b7d:	78 61                	js     9be0 <file_write+0xc0>
    9b7f:	4c 8b 55 b0          	mov    -0x50(%rbp),%r10
    9b83:	4d 3b 56 18          	cmp    0x18(%r14),%r10
    9b87:	77 37                	ja     9bc0 <file_write+0xa0>
    9b89:	4d 29 fc             	sub    %r15,%r12
    9b8c:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    9b90:	4c 89 ea             	mov    %r13,%rdx
    9b93:	4c 89 e7             	mov    %r12,%rdi
    9b96:	48 03 7d c8          	add    -0x38(%rbp),%rdi
    9b9a:	e8 51 c0 00 00       	callq  15bf0 <memcpy>
    9b9f:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    9ba3:	48 89 de             	mov    %rbx,%rsi
    9ba6:	e8 65 73 00 00       	callq  10f10 <ocall_unmap_untrusted>
    9bab:	4c 89 e8             	mov    %r13,%rax
    9bae:	48 83 c4 28          	add    $0x28,%rsp
    9bb2:	5b                   	pop    %rbx
    9bb3:	41 5c                	pop    %r12
    9bb5:	41 5d                	pop    %r13
    9bb7:	41 5e                	pop    %r14
    9bb9:	41 5f                	pop    %r15
    9bbb:	5d                   	pop    %rbp
    9bbc:	c3                   	retq   
    9bbd:	0f 1f 00             	nopl   (%rax)
    9bc0:	41 8b 7e 08          	mov    0x8(%r14),%edi
    9bc4:	4c 89 d6             	mov    %r10,%rsi
    9bc7:	e8 24 79 00 00       	callq  114f0 <ocall_ftruncate>
    9bcc:	4c 8b 55 b0          	mov    -0x50(%rbp),%r10
    9bd0:	4d 89 56 18          	mov    %r10,0x18(%r14)
    9bd4:	eb b3                	jmp    9b89 <file_write+0x69>
    9bd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9bdd:	00 00 00 
    9be0:	48 c7 c0 fa ff ff ff 	mov    $0xfffffffffffffffa,%rax
    9be7:	eb c5                	jmp    9bae <file_write+0x8e>
    9be9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000009bf0 <file_read>:
    9bf0:	44 8b 4f 18          	mov    0x18(%rdi),%r9d
    9bf4:	31 c0                	xor    %eax,%eax
    9bf6:	4c 39 ce             	cmp    %r9,%rsi
    9bf9:	0f 83 d8 00 00 00    	jae    9cd7 <file_read+0xe7>
    9bff:	55                   	push   %rbp
    9c00:	49 89 fa             	mov    %rdi,%r10
    9c03:	48 89 e5             	mov    %rsp,%rbp
    9c06:	41 57                	push   %r15
    9c08:	41 56                	push   %r14
    9c0a:	41 55                	push   %r13
    9c0c:	41 54                	push   %r12
    9c0e:	4c 8d 24 16          	lea    (%rsi,%rdx,1),%r12
    9c12:	53                   	push   %rbx
    9c13:	48 89 f3             	mov    %rsi,%rbx
    9c16:	48 83 ec 38          	sub    $0x38,%rsp
    9c1a:	4c 8b 77 20          	mov    0x20(%rdi),%r14
    9c1e:	4d 39 cc             	cmp    %r9,%r12
    9c21:	4d 0f 47 e1          	cmova  %r9,%r12
    9c25:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    9c29:	4c 89 4d b0          	mov    %r9,-0x50(%rbp)
    9c2d:	4d 85 f6             	test   %r14,%r14
    9c30:	0f 84 aa 00 00 00    	je     9ce0 <file_read+0xf0>
    9c36:	49 8d 84 24 ff 3f 00 	lea    0x3fff(%r12),%rax
    9c3d:	00 
    9c3e:	49 89 f5             	mov    %rsi,%r13
    9c41:	8b 7f 08             	mov    0x8(%rdi),%edi
    9c44:	49 81 e5 00 c0 ff ff 	and    $0xffffffffffffc000,%r13
    9c4b:	4c 8d 45 c8          	lea    -0x38(%rbp),%r8
    9c4f:	b9 01 00 00 00       	mov    $0x1,%ecx
    9c54:	48 25 00 c0 ff ff    	and    $0xffffffffffffc000,%rax
    9c5a:	4c 89 ee             	mov    %r13,%rsi
    9c5d:	4c 89 55 a8          	mov    %r10,-0x58(%rbp)
    9c61:	49 89 c7             	mov    %rax,%r15
    9c64:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    9c68:	4d 29 ef             	sub    %r13,%r15
    9c6b:	4c 89 fa             	mov    %r15,%rdx
    9c6e:	e8 fd 71 00 00       	callq  10e70 <ocall_map_untrusted>
    9c73:	85 c0                	test   %eax,%eax
    9c75:	4c 8b 55 a8          	mov    -0x58(%rbp),%r10
    9c79:	4c 8b 4d b0          	mov    -0x50(%rbp),%r9
    9c7d:	0f 88 96 00 00 00    	js     9d19 <file_read+0x129>
    9c83:	49 8b 7a 10          	mov    0x10(%r10),%rdi
    9c87:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    9c8b:	4d 89 f0             	mov    %r14,%r8
    9c8e:	4c 89 f9             	mov    %r15,%rcx
    9c91:	4c 89 ea             	mov    %r13,%rdx
    9c94:	e8 07 99 00 00       	callq  135a0 <verify_trusted_file>
    9c99:	85 c0                	test   %eax,%eax
    9c9b:	0f 88 87 00 00 00    	js     9d28 <file_read+0x138>
    9ca1:	49 29 dc             	sub    %rbx,%r12
    9ca4:	4c 29 eb             	sub    %r13,%rbx
    9ca7:	48 03 5d c8          	add    -0x38(%rbp),%rbx
    9cab:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
    9caf:	4c 89 e2             	mov    %r12,%rdx
    9cb2:	48 89 de             	mov    %rbx,%rsi
    9cb5:	e8 36 bf 00 00       	callq  15bf0 <memcpy>
    9cba:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    9cbe:	4c 89 fe             	mov    %r15,%rsi
    9cc1:	e8 4a 72 00 00       	callq  10f10 <ocall_unmap_untrusted>
    9cc6:	4c 89 e0             	mov    %r12,%rax
    9cc9:	48 83 c4 38          	add    $0x38,%rsp
    9ccd:	5b                   	pop    %rbx
    9cce:	41 5c                	pop    %r12
    9cd0:	41 5d                	pop    %r13
    9cd2:	41 5e                	pop    %r14
    9cd4:	41 5f                	pop    %r15
    9cd6:	5d                   	pop    %rbp
    9cd7:	f3 c3                	repz retq 
    9cd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9ce0:	48 8d 05 f9 49 22 04 	lea    0x42249f9(%rip),%rax        # 422e6e0 <pal_state>
    9ce7:	4c 89 e1             	mov    %r12,%rcx
    9cea:	49 89 f5             	mov    %rsi,%r13
    9ced:	8b 7f 08             	mov    0x8(%rdi),%edi
    9cf0:	4c 8d 45 c8          	lea    -0x38(%rbp),%r8
    9cf4:	48 03 48 58          	add    0x58(%rax),%rcx
    9cf8:	4c 8b 78 60          	mov    0x60(%rax),%r15
    9cfc:	4d 21 fd             	and    %r15,%r13
    9cff:	49 21 cf             	and    %rcx,%r15
    9d02:	4c 89 ee             	mov    %r13,%rsi
    9d05:	b9 01 00 00 00       	mov    $0x1,%ecx
    9d0a:	4d 29 ef             	sub    %r13,%r15
    9d0d:	4c 89 fa             	mov    %r15,%rdx
    9d10:	e8 5b 71 00 00       	callq  10e70 <ocall_map_untrusted>
    9d15:	85 c0                	test   %eax,%eax
    9d17:	79 88                	jns    9ca1 <file_read+0xb1>
    9d19:	48 c7 c0 fa ff ff ff 	mov    $0xfffffffffffffffa,%rax
    9d20:	eb a7                	jmp    9cc9 <file_read+0xd9>
    9d22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9d28:	4c 89 ee             	mov    %r13,%rsi
    9d2b:	48 2b 75 a0          	sub    -0x60(%rbp),%rsi
    9d2f:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    9d33:	89 45 b8             	mov    %eax,-0x48(%rbp)
    9d36:	e8 d5 71 00 00       	callq  10f10 <ocall_unmap_untrusted>
    9d3b:	48 63 45 b8          	movslq -0x48(%rbp),%rax
    9d3f:	eb 88                	jmp    9cc9 <file_read+0xd9>
    9d41:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9d46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9d4d:	00 00 00 

0000000000009d50 <file_delete>:
    9d50:	55                   	push   %rbp
    9d51:	85 f6                	test   %esi,%esi
    9d53:	48 89 e5             	mov    %rsp,%rbp
    9d56:	75 10                	jne    9d68 <file_delete+0x18>
    9d58:	5d                   	pop    %rbp
    9d59:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    9d5d:	e9 ee 8b 00 00       	jmpq   12950 <ocall_delete>
    9d62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9d68:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    9d6d:	5d                   	pop    %rbp
    9d6e:	c3                   	retq   
    9d6f:	90                   	nop

0000000000009d70 <file_close>:
    9d70:	55                   	push   %rbp
    9d71:	48 89 e5             	mov    %rsp,%rbp
    9d74:	53                   	push   %rbx
    9d75:	48 89 fb             	mov    %rdi,%rbx
    9d78:	48 83 ec 08          	sub    $0x8,%rsp
    9d7c:	8b 7f 08             	mov    0x8(%rdi),%edi
    9d7f:	e8 4c 73 00 00       	callq  110d0 <ocall_close>
    9d84:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    9d88:	48 85 ff             	test   %rdi,%rdi
    9d8b:	74 0e                	je     9d9b <file_close+0x2b>
    9d8d:	48 83 c3 58          	add    $0x58,%rbx
    9d91:	48 39 df             	cmp    %rbx,%rdi
    9d94:	74 05                	je     9d9b <file_close+0x2b>
    9d96:	e8 c5 f6 ff ff       	callq  9460 <free>
    9d9b:	48 83 c4 08          	add    $0x8,%rsp
    9d9f:	31 c0                	xor    %eax,%eax
    9da1:	5b                   	pop    %rbx
    9da2:	5d                   	pop    %rbp
    9da3:	c3                   	retq   
    9da4:	66 90                	xchg   %ax,%ax
    9da6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9dad:	00 00 00 

0000000000009db0 <dir_close>:
    9db0:	55                   	push   %rbp
    9db1:	48 89 e5             	mov    %rsp,%rbp
    9db4:	53                   	push   %rbx
    9db5:	48 89 fb             	mov    %rdi,%rbx
    9db8:	48 83 ec 08          	sub    $0x8,%rsp
    9dbc:	8b 7f 08             	mov    0x8(%rdi),%edi
    9dbf:	e8 0c 73 00 00       	callq  110d0 <ocall_close>
    9dc4:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    9dc8:	48 85 ff             	test   %rdi,%rdi
    9dcb:	74 1d                	je     9dea <dir_close+0x3a>
    9dcd:	e8 8e f6 ff ff       	callq  9460 <free>
    9dd2:	48 c7 43 28 00 00 00 	movq   $0x0,0x28(%rbx)
    9dd9:	00 
    9dda:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    9de1:	00 
    9de2:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
    9de9:	00 
    9dea:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    9dee:	48 85 ff             	test   %rdi,%rdi
    9df1:	74 0e                	je     9e01 <dir_close+0x51>
    9df3:	48 83 c3 58          	add    $0x58,%rbx
    9df7:	48 39 df             	cmp    %rbx,%rdi
    9dfa:	74 05                	je     9e01 <dir_close+0x51>
    9dfc:	e8 5f f6 ff ff       	callq  9460 <free>
    9e01:	48 83 c4 08          	add    $0x8,%rsp
    9e05:	31 c0                	xor    %eax,%eax
    9e07:	5b                   	pop    %rbx
    9e08:	5d                   	pop    %rbp
    9e09:	c3                   	retq   
    9e0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000009e10 <file_getname>:
    9e10:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    9e14:	31 c0                	xor    %eax,%eax
    9e16:	48 85 c9             	test   %rcx,%rcx
    9e19:	74 3d                	je     9e58 <file_getname+0x48>
    9e1b:	55                   	push   %rbp
    9e1c:	48 89 e5             	mov    %rsp,%rbp
    9e1f:	41 57                	push   %r15
    9e21:	41 56                	push   %r14
    9e23:	41 55                	push   %r13
    9e25:	41 54                	push   %r12
    9e27:	49 89 fe             	mov    %rdi,%r14
    9e2a:	53                   	push   %rbx
    9e2b:	48 89 cf             	mov    %rcx,%rdi
    9e2e:	48 63 da             	movslq %edx,%rbx
    9e31:	49 89 f5             	mov    %rsi,%r13
    9e34:	48 83 ec 18          	sub    $0x18,%rsp
    9e38:	e8 33 b8 00 00       	callq  15670 <strlen>
    9e3d:	83 fb 05             	cmp    $0x5,%ebx
    9e40:	49 89 c7             	mov    %rax,%r15
    9e43:	77 1b                	ja     9e60 <file_getname+0x50>
    9e45:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
    9e4a:	48 83 c4 18          	add    $0x18,%rsp
    9e4e:	5b                   	pop    %rbx
    9e4f:	41 5c                	pop    %r12
    9e51:	41 5d                	pop    %r13
    9e53:	41 5e                	pop    %r14
    9e55:	41 5f                	pop    %r15
    9e57:	5d                   	pop    %rbp
    9e58:	f3 c3                	repz retq 
    9e5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9e60:	48 8d 35 bf ee 01 00 	lea    0x1eebf(%rip),%rsi        # 28d26 <slab_levels+0x1a6>
    9e67:	ba 06 00 00 00       	mov    $0x6,%edx
    9e6c:	4c 89 ef             	mov    %r13,%rdi
    9e6f:	e8 7c bd 00 00       	callq  15bf0 <memcpy>
    9e74:	48 83 c0 05          	add    $0x5,%rax
    9e78:	48 89 c1             	mov    %rax,%rcx
    9e7b:	74 c8                	je     9e45 <file_getname+0x35>
    9e7d:	4d 63 e7             	movslq %r15d,%r12
    9e80:	4c 01 eb             	add    %r13,%rbx
    9e83:	4a 8d 44 20 01       	lea    0x1(%rax,%r12,1),%rax
    9e88:	48 39 c3             	cmp    %rax,%rbx
    9e8b:	72 b8                	jb     9e45 <file_getname+0x35>
    9e8d:	41 8d 57 01          	lea    0x1(%r15),%edx
    9e91:	49 8b 76 10          	mov    0x10(%r14),%rsi
    9e95:	48 89 cf             	mov    %rcx,%rdi
    9e98:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
    9e9c:	48 63 d2             	movslq %edx,%rdx
    9e9f:	e8 4c bd 00 00       	callq  15bf0 <memcpy>
    9ea4:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    9ea8:	4a 8d 04 21          	lea    (%rcx,%r12,1),%rax
    9eac:	44 29 e8             	sub    %r13d,%eax
    9eaf:	eb 99                	jmp    9e4a <file_getname+0x3a>
    9eb1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9eb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9ebd:	00 00 00 

0000000000009ec0 <dir_getname>:
    9ec0:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    9ec4:	31 c0                	xor    %eax,%eax
    9ec6:	48 85 c9             	test   %rcx,%rcx
    9ec9:	74 3d                	je     9f08 <dir_getname+0x48>
    9ecb:	55                   	push   %rbp
    9ecc:	48 89 e5             	mov    %rsp,%rbp
    9ecf:	41 57                	push   %r15
    9ed1:	41 56                	push   %r14
    9ed3:	41 55                	push   %r13
    9ed5:	41 54                	push   %r12
    9ed7:	49 89 fe             	mov    %rdi,%r14
    9eda:	53                   	push   %rbx
    9edb:	48 89 cf             	mov    %rcx,%rdi
    9ede:	48 63 da             	movslq %edx,%rbx
    9ee1:	49 89 f5             	mov    %rsi,%r13
    9ee4:	48 83 ec 18          	sub    $0x18,%rsp
    9ee8:	e8 83 b7 00 00       	callq  15670 <strlen>
    9eed:	83 fb 04             	cmp    $0x4,%ebx
    9ef0:	49 89 c7             	mov    %rax,%r15
    9ef3:	77 1b                	ja     9f10 <dir_getname+0x50>
    9ef5:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
    9efa:	48 83 c4 18          	add    $0x18,%rsp
    9efe:	5b                   	pop    %rbx
    9eff:	41 5c                	pop    %r12
    9f01:	41 5d                	pop    %r13
    9f03:	41 5e                	pop    %r14
    9f05:	41 5f                	pop    %r15
    9f07:	5d                   	pop    %rbp
    9f08:	f3 c3                	repz retq 
    9f0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9f10:	48 8d 35 15 ee 01 00 	lea    0x1ee15(%rip),%rsi        # 28d2c <slab_levels+0x1ac>
    9f17:	ba 05 00 00 00       	mov    $0x5,%edx
    9f1c:	4c 89 ef             	mov    %r13,%rdi
    9f1f:	e8 cc bc 00 00       	callq  15bf0 <memcpy>
    9f24:	48 83 c0 04          	add    $0x4,%rax
    9f28:	48 89 c1             	mov    %rax,%rcx
    9f2b:	74 c8                	je     9ef5 <dir_getname+0x35>
    9f2d:	4d 63 e7             	movslq %r15d,%r12
    9f30:	4c 01 eb             	add    %r13,%rbx
    9f33:	4a 8d 44 20 01       	lea    0x1(%rax,%r12,1),%rax
    9f38:	48 39 c3             	cmp    %rax,%rbx
    9f3b:	72 b8                	jb     9ef5 <dir_getname+0x35>
    9f3d:	41 8d 57 01          	lea    0x1(%r15),%edx
    9f41:	49 8b 76 10          	mov    0x10(%r14),%rsi
    9f45:	48 89 cf             	mov    %rcx,%rdi
    9f48:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
    9f4c:	48 63 d2             	movslq %edx,%rdx
    9f4f:	e8 9c bc 00 00       	callq  15bf0 <memcpy>
    9f54:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    9f58:	4a 8d 04 21          	lea    (%rcx,%r12,1),%rax
    9f5c:	44 29 e8             	sub    %r13d,%eax
    9f5f:	eb 99                	jmp    9efa <dir_getname+0x3a>
    9f61:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9f66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9f6d:	00 00 00 

0000000000009f70 <file_open>:
    9f70:	55                   	push   %rbp
    9f71:	48 89 e5             	mov    %rsp,%rbp
    9f74:	41 57                	push   %r15
    9f76:	41 56                	push   %r14
    9f78:	41 55                	push   %r13
    9f7a:	41 54                	push   %r12
    9f7c:	49 89 d5             	mov    %rdx,%r13
    9f7f:	53                   	push   %rbx
    9f80:	49 89 fe             	mov    %rdi,%r14
    9f83:	41 0f b7 d0          	movzwl %r8w,%edx
    9f87:	4c 89 ef             	mov    %r13,%rdi
    9f8a:	48 83 ec 18          	sub    $0x18,%rsp
    9f8e:	8b 75 10             	mov    0x10(%rbp),%esi
    9f91:	44 09 ce             	or     %r9d,%esi
    9f94:	09 ce                	or     %ecx,%esi
    9f96:	e8 75 70 00 00       	callq  11010 <ocall_open>
    9f9b:	85 c0                	test   %eax,%eax
    9f9d:	41 89 c4             	mov    %eax,%r12d
    9fa0:	78 76                	js     a018 <file_open+0xa8>
    9fa2:	4c 89 ef             	mov    %r13,%rdi
    9fa5:	e8 c6 b6 00 00       	callq  15670 <strlen>
    9faa:	48 63 f8             	movslq %eax,%rdi
    9fad:	49 89 c7             	mov    %rax,%r15
    9fb0:	48 83 c7 59          	add    $0x59,%rdi
    9fb4:	e8 67 f0 ff ff       	callq  9020 <malloc>
    9fb9:	44 89 60 08          	mov    %r12d,0x8(%rax)
    9fbd:	4c 8d 60 58          	lea    0x58(%rax),%r12
    9fc1:	41 8d 4f 01          	lea    0x1(%r15),%ecx
    9fc5:	31 d2                	xor    %edx,%edx
    9fc7:	4c 89 ef             	mov    %r13,%rdi
    9fca:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    9fd0:	4c 89 e6             	mov    %r12,%rsi
    9fd3:	c7 40 04 49 00 00 00 	movl   $0x49,0x4(%rax)
    9fda:	c6 40 0c 00          	movb   $0x0,0xc(%rax)
    9fde:	c6 40 0d 00          	movb   $0x0,0xd(%rax)
    9fe2:	48 89 c3             	mov    %rax,%rbx
    9fe5:	e8 a6 e6 00 00       	callq  18690 <get_norm_path>
    9fea:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    9fee:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    9ff2:	4c 89 63 10          	mov    %r12,0x10(%rbx)
    9ff6:	48 89 df             	mov    %rbx,%rdi
    9ff9:	e8 12 91 00 00       	callq  13110 <load_trusted_file>
    9ffe:	85 c0                	test   %eax,%eax
    a000:	78 28                	js     a02a <file_open+0xba>
    a002:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a006:	45 31 e4             	xor    %r12d,%r12d
    a009:	48 89 43 20          	mov    %rax,0x20(%rbx)
    a00d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a011:	48 89 43 18          	mov    %rax,0x18(%rbx)
    a015:	49 89 1e             	mov    %rbx,(%r14)
    a018:	48 83 c4 18          	add    $0x18,%rsp
    a01c:	44 89 e0             	mov    %r12d,%eax
    a01f:	5b                   	pop    %rbx
    a020:	41 5c                	pop    %r12
    a022:	41 5d                	pop    %r13
    a024:	41 5e                	pop    %r14
    a026:	41 5f                	pop    %r15
    a028:	5d                   	pop    %rbp
    a029:	c3                   	retq   
    a02a:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    a02e:	48 8d 15 f1 df 01 00 	lea    0x1dff1(%rip),%rdx        # 28026 <section_rodata+0x426>
    a035:	48 8d 3d 84 ec 01 00 	lea    0x1ec84(%rip),%rdi        # 28cc0 <slab_levels+0x140>
    a03c:	31 c0                	xor    %eax,%eax
    a03e:	41 bc fa ff ff ff    	mov    $0xfffffffa,%r12d
    a044:	e8 e7 f5 ff ff       	callq  9630 <pal_printf>
    a049:	48 89 df             	mov    %rbx,%rdi
    a04c:	e8 0f f4 ff ff       	callq  9460 <free>
    a051:	eb c5                	jmp    a018 <file_open+0xa8>
    a053:	0f 1f 00             	nopl   (%rax)
    a056:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a05d:	00 00 00 

000000000000a060 <dir_read>:
    a060:	55                   	push   %rbp
    a061:	48 89 e5             	mov    %rsp,%rbp
    a064:	41 57                	push   %r15
    a066:	41 56                	push   %r14
    a068:	41 55                	push   %r13
    a06a:	41 54                	push   %r12
    a06c:	49 89 d4             	mov    %rdx,%r12
    a06f:	53                   	push   %rbx
    a070:	48 89 cb             	mov    %rcx,%rbx
    a073:	48 83 ec 38          	sub    $0x38,%rsp
    a077:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
    a07b:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
    a07f:	48 85 ff             	test   %rdi,%rdi
    a082:	48 89 7d a0          	mov    %rdi,-0x60(%rbp)
    a086:	0f 84 fc 01 00 00    	je     a288 <dir_read+0x228>
    a08c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a090:	4c 8b 70 20          	mov    0x20(%rax),%r14
    a094:	48 8b 40 28          	mov    0x28(%rax),%rax
    a098:	4d 85 f6             	test   %r14,%r14
    a09b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    a09f:	0f 84 13 01 00 00    	je     a1b8 <dir_read+0x158>
    a0a5:	45 31 ed             	xor    %r13d,%r13d
    a0a8:	49 39 c6             	cmp    %rax,%r14
    a0ab:	0f 83 07 01 00 00    	jae    a1b8 <dir_read+0x158>
    a0b1:	4c 3b 75 c0          	cmp    -0x40(%rbp),%r14
    a0b5:	72 79                	jb     a130 <dir_read+0xd0>
    a0b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a0be:	00 00 
    a0c0:	4c 39 75 c0          	cmp    %r14,-0x40(%rbp)
    a0c4:	0f 84 66 01 00 00    	je     a230 <dir_read+0x1d0>
    a0ca:	45 85 ed             	test   %r13d,%r13d
    a0cd:	0f 85 26 01 00 00    	jne    a1f9 <dir_read+0x199>
    a0d3:	48 c7 c0 ec ff ff ff 	mov    $0xffffffffffffffec,%rax
    a0da:	e9 1d 01 00 00       	jmpq   a1fc <dir_read+0x19c>
    a0df:	90                   	nop
    a0e0:	44 8d 48 01          	lea    0x1(%rax),%r9d
    a0e4:	4d 63 d1             	movslq %r9d,%r10
    a0e7:	4d 39 d4             	cmp    %r10,%r12
    a0ea:	0f 82 20 01 00 00    	jb     a210 <dir_read+0x1b0>
    a0f0:	4d 63 f8             	movslq %r8d,%r15
    a0f3:	48 89 df             	mov    %rbx,%rdi
    a0f6:	4c 89 55 b8          	mov    %r10,-0x48(%rbp)
    a0fa:	4c 89 fa             	mov    %r15,%rdx
    a0fd:	44 89 4d c8          	mov    %r9d,-0x38(%rbp)
    a101:	e8 ea ba 00 00       	callq  15bf0 <memcpy>
    a106:	4c 8b 55 b8          	mov    -0x48(%rbp),%r10
    a10a:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
    a10e:	4d 89 f8             	mov    %r15,%r8
    a111:	4c 89 d0             	mov    %r10,%rax
    a114:	42 c6 04 03 00       	movb   $0x0,(%rbx,%r8,1)
    a119:	45 01 cd             	add    %r9d,%r13d
    a11c:	48 01 c3             	add    %rax,%rbx
    a11f:	49 29 c4             	sub    %rax,%r12
    a122:	41 0f b7 46 10       	movzwl 0x10(%r14),%eax
    a127:	49 01 c6             	add    %rax,%r14
    a12a:	4c 39 75 c0          	cmp    %r14,-0x40(%rbp)
    a12e:	76 90                	jbe    a0c0 <dir_read+0x60>
    a130:	41 80 7e 13 2e       	cmpb   $0x2e,0x13(%r14)
    a135:	75 0d                	jne    a144 <dir_read+0xe4>
    a137:	41 0f b6 46 14       	movzbl 0x14(%r14),%eax
    a13c:	84 c0                	test   %al,%al
    a13e:	74 e2                	je     a122 <dir_read+0xc2>
    a140:	3c 2e                	cmp    $0x2e,%al
    a142:	74 de                	je     a122 <dir_read+0xc2>
    a144:	45 0f b6 7e 12       	movzbl 0x12(%r14),%r15d
    a149:	49 8d 76 13          	lea    0x13(%r14),%rsi
    a14d:	48 89 f7             	mov    %rsi,%rdi
    a150:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
    a154:	e8 17 b5 00 00       	callq  15670 <strlen>
    a159:	41 80 ff 04          	cmp    $0x4,%r15b
    a15d:	49 89 c0             	mov    %rax,%r8
    a160:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    a164:	0f 85 76 ff ff ff    	jne    a0e0 <dir_read+0x80>
    a16a:	44 8d 48 02          	lea    0x2(%rax),%r9d
    a16e:	4d 63 f9             	movslq %r9d,%r15
    a171:	4d 39 e7             	cmp    %r12,%r15
    a174:	0f 87 96 00 00 00    	ja     a210 <dir_read+0x1b0>
    a17a:	4d 63 d0             	movslq %r8d,%r10
    a17d:	48 89 df             	mov    %rbx,%rdi
    a180:	44 89 4d ac          	mov    %r9d,-0x54(%rbp)
    a184:	4c 89 d2             	mov    %r10,%rdx
    a187:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    a18b:	4c 89 55 c8          	mov    %r10,-0x38(%rbp)
    a18f:	e8 5c ba 00 00       	callq  15bf0 <memcpy>
    a194:	4c 8b 45 b8          	mov    -0x48(%rbp),%r8
    a198:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
    a19c:	4c 89 f8             	mov    %r15,%rax
    a19f:	44 8b 4d ac          	mov    -0x54(%rbp),%r9d
    a1a3:	41 83 c0 01          	add    $0x1,%r8d
    a1a7:	42 c6 04 13 2f       	movb   $0x2f,(%rbx,%r10,1)
    a1ac:	4d 63 c0             	movslq %r8d,%r8
    a1af:	e9 60 ff ff ff       	jmpq   a114 <dir_read+0xb4>
    a1b4:	0f 1f 40 00          	nopl   0x0(%rax)
    a1b8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a1bc:	45 31 ed             	xor    %r13d,%r13d
    a1bf:	80 78 30 00          	cmpb   $0x0,0x30(%rax)
    a1c3:	0f 84 7f 00 00 00    	je     a248 <dir_read+0x1e8>
    a1c9:	4c 3b 75 c0          	cmp    -0x40(%rbp),%r14
    a1cd:	0f 83 00 ff ff ff    	jae    a0d3 <dir_read+0x73>
    a1d3:	48 85 ff             	test   %rdi,%rdi
    a1d6:	0f 84 cc 00 00 00    	je     a2a8 <dir_read+0x248>
    a1dc:	4c 39 f7             	cmp    %r14,%rdi
    a1df:	74 0f                	je     a1f0 <dir_read+0x190>
    a1e1:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    a1e5:	4c 89 f6             	mov    %r14,%rsi
    a1e8:	4c 29 f2             	sub    %r14,%rdx
    a1eb:	e8 d0 ba 00 00       	callq  15cc0 <memmove>
    a1f0:	45 85 ed             	test   %r13d,%r13d
    a1f3:	0f 84 c9 00 00 00    	je     a2c2 <dir_read+0x262>
    a1f9:	49 63 c5             	movslq %r13d,%rax
    a1fc:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    a200:	5b                   	pop    %rbx
    a201:	41 5c                	pop    %r12
    a203:	41 5d                	pop    %r13
    a205:	41 5e                	pop    %r14
    a207:	41 5f                	pop    %r15
    a209:	5d                   	pop    %rbp
    a20a:	c3                   	retq   
    a20b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a210:	4c 39 75 c0          	cmp    %r14,-0x40(%rbp)
    a214:	74 1a                	je     a230 <dir_read+0x1d0>
    a216:	4c 3b 75 c0          	cmp    -0x40(%rbp),%r14
    a21a:	0f 83 aa fe ff ff    	jae    a0ca <dir_read+0x6a>
    a220:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a224:	48 8b 78 18          	mov    0x18(%rax),%rdi
    a228:	eb a9                	jmp    a1d3 <dir_read+0x173>
    a22a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a230:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a234:	80 78 30 00          	cmpb   $0x0,0x30(%rax)
    a238:	0f 85 8c fe ff ff    	jne    a0ca <dir_read+0x6a>
    a23e:	4c 89 75 c0          	mov    %r14,-0x40(%rbp)
    a242:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a248:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a24c:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    a250:	ba 00 04 00 00       	mov    $0x400,%edx
    a255:	8b 78 08             	mov    0x8(%rax),%edi
    a258:	e8 93 73 00 00       	callq  115f0 <ocall_getdents>
    a25d:	85 c0                	test   %eax,%eax
    a25f:	78 40                	js     a2a1 <dir_read+0x241>
    a261:	75 0d                	jne    a270 <dir_read+0x210>
    a263:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a267:	c6 40 30 01          	movb   $0x1,0x30(%rax)
    a26b:	eb a9                	jmp    a216 <dir_read+0x1b6>
    a26d:	0f 1f 00             	nopl   (%rax)
    a270:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    a274:	48 98                	cltq   
    a276:	48 01 c8             	add    %rcx,%rax
    a279:	49 89 ce             	mov    %rcx,%r14
    a27c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    a280:	e9 2c fe ff ff       	jmpq   a0b1 <dir_read+0x51>
    a285:	0f 1f 00             	nopl   (%rax)
    a288:	48 81 ec 10 04 00 00 	sub    $0x410,%rsp
    a28f:	48 8d 44 24 0f       	lea    0xf(%rsp),%rax
    a294:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    a298:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    a29c:	e9 eb fd ff ff       	jmpq   a08c <dir_read+0x2c>
    a2a1:	48 98                	cltq   
    a2a3:	e9 54 ff ff ff       	jmpq   a1fc <dir_read+0x19c>
    a2a8:	bf 00 04 00 00       	mov    $0x400,%edi
    a2ad:	e8 6e ed ff ff       	callq  9020 <malloc>
    a2b2:	48 89 c7             	mov    %rax,%rdi
    a2b5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a2b9:	48 89 78 18          	mov    %rdi,0x18(%rax)
    a2bd:	e9 1a ff ff ff       	jmpq   a1dc <dir_read+0x17c>
    a2c2:	48 c7 c0 f2 ff ff ff 	mov    $0xfffffffffffffff2,%rax
    a2c9:	e9 2e ff ff ff       	jmpq   a1fc <dir_read+0x19c>
    a2ce:	66 90                	xchg   %ax,%ax

000000000000a2d0 <dir_open>:
    a2d0:	55                   	push   %rbp
    a2d1:	48 89 e5             	mov    %rsp,%rbp
    a2d4:	41 57                	push   %r15
    a2d6:	41 56                	push   %r14
    a2d8:	41 55                	push   %r13
    a2da:	41 54                	push   %r12
    a2dc:	49 89 fe             	mov    %rdi,%r14
    a2df:	53                   	push   %rbx
    a2e0:	49 89 d5             	mov    %rdx,%r13
    a2e3:	48 83 ec 18          	sub    $0x18,%rsp
    a2e7:	41 f6 c1 40          	test   $0x40,%r9b
    a2eb:	74 1d                	je     a30a <dir_open+0x3a>
    a2ed:	41 0f b7 f0          	movzwl %r8w,%esi
    a2f1:	48 89 d7             	mov    %rdx,%rdi
    a2f4:	44 89 4d cc          	mov    %r9d,-0x34(%rbp)
    a2f8:	e8 43 72 00 00       	callq  11540 <ocall_mkdir>
    a2fd:	83 f8 f8             	cmp    $0xfffffff8,%eax
    a300:	44 8b 4d cc          	mov    -0x34(%rbp),%r9d
    a304:	0f 84 96 00 00 00    	je     a3a0 <dir_open+0xd0>
    a30a:	8b 75 10             	mov    0x10(%rbp),%esi
    a30d:	31 d2                	xor    %edx,%edx
    a30f:	4c 89 ef             	mov    %r13,%rdi
    a312:	81 ce 00 00 01 00    	or     $0x10000,%esi
    a318:	e8 f3 6c 00 00       	callq  11010 <ocall_open>
    a31d:	85 c0                	test   %eax,%eax
    a31f:	41 89 c4             	mov    %eax,%r12d
    a322:	78 67                	js     a38b <dir_open+0xbb>
    a324:	4c 89 ef             	mov    %r13,%rdi
    a327:	e8 44 b3 00 00       	callq  15670 <strlen>
    a32c:	48 63 f8             	movslq %eax,%rdi
    a32f:	49 89 c7             	mov    %rax,%r15
    a332:	48 83 c7 59          	add    $0x59,%rdi
    a336:	e8 e5 ec ff ff       	callq  9020 <malloc>
    a33b:	41 8d 57 01          	lea    0x1(%r15),%edx
    a33f:	44 89 60 08          	mov    %r12d,0x8(%rax)
    a343:	4c 8d 60 58          	lea    0x58(%rax),%r12
    a347:	48 89 c3             	mov    %rax,%rbx
    a34a:	c7 00 07 00 00 00    	movl   $0x7,(%rax)
    a350:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    a357:	4c 89 e7             	mov    %r12,%rdi
    a35a:	48 63 d2             	movslq %edx,%rdx
    a35d:	4c 89 ee             	mov    %r13,%rsi
    a360:	e8 8b b8 00 00       	callq  15bf0 <memcpy>
    a365:	4c 89 63 10          	mov    %r12,0x10(%rbx)
    a369:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
    a370:	00 
    a371:	45 31 e4             	xor    %r12d,%r12d
    a374:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    a37b:	00 
    a37c:	48 c7 43 28 00 00 00 	movq   $0x0,0x28(%rbx)
    a383:	00 
    a384:	c6 43 30 00          	movb   $0x0,0x30(%rbx)
    a388:	49 89 1e             	mov    %rbx,(%r14)
    a38b:	48 83 c4 18          	add    $0x18,%rsp
    a38f:	44 89 e0             	mov    %r12d,%eax
    a392:	5b                   	pop    %rbx
    a393:	41 5c                	pop    %r12
    a395:	41 5d                	pop    %r13
    a397:	41 5e                	pop    %r14
    a399:	41 5f                	pop    %r15
    a39b:	5d                   	pop    %rbp
    a39c:	c3                   	retq   
    a39d:	0f 1f 00             	nopl   (%rax)
    a3a0:	41 81 e1 80 00 00 00 	and    $0x80,%r9d
    a3a7:	41 89 c4             	mov    %eax,%r12d
    a3aa:	0f 84 5a ff ff ff    	je     a30a <dir_open+0x3a>
    a3b0:	eb d9                	jmp    a38b <dir_open+0xbb>
    a3b2:	0f 1f 40 00          	nopl   0x0(%rax)
    a3b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a3bd:	00 00 00 

000000000000a3c0 <dir_delete>:
    a3c0:	85 f6                	test   %esi,%esi
    a3c2:	75 3c                	jne    a400 <dir_delete+0x40>
    a3c4:	55                   	push   %rbp
    a3c5:	48 89 e5             	mov    %rsp,%rbp
    a3c8:	53                   	push   %rbx
    a3c9:	48 89 fb             	mov    %rdi,%rbx
    a3cc:	48 83 ec 08          	sub    $0x8,%rsp
    a3d0:	e8 db f9 ff ff       	callq  9db0 <dir_close>
    a3d5:	85 c0                	test   %eax,%eax
    a3d7:	78 17                	js     a3f0 <dir_delete+0x30>
    a3d9:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    a3dd:	48 83 c4 08          	add    $0x8,%rsp
    a3e1:	5b                   	pop    %rbx
    a3e2:	5d                   	pop    %rbp
    a3e3:	e9 68 85 00 00       	jmpq   12950 <ocall_delete>
    a3e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a3ef:	00 
    a3f0:	48 83 c4 08          	add    $0x8,%rsp
    a3f4:	5b                   	pop    %rbx
    a3f5:	5d                   	pop    %rbp
    a3f6:	c3                   	retq   
    a3f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a3fe:	00 00 
    a400:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    a405:	c3                   	retq   
    a406:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a40d:	00 00 00 

000000000000a410 <file_attrquerybyhdl>:
    a410:	55                   	push   %rbp
    a411:	48 89 e5             	mov    %rsp,%rbp
    a414:	41 54                	push   %r12
    a416:	53                   	push   %rbx
    a417:	4c 8d a5 60 ff ff ff 	lea    -0xa0(%rbp),%r12
    a41e:	48 89 f3             	mov    %rsi,%rbx
    a421:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    a428:	8b 7f 08             	mov    0x8(%rdi),%edi
    a42b:	4c 89 e6             	mov    %r12,%rsi
    a42e:	e8 0d 6f 00 00       	callq  11340 <ocall_fstat>
    a433:	85 c0                	test   %eax,%eax
    a435:	0f 88 96 00 00 00    	js     a4d1 <file_attrquerybyhdl+0xc1>
    a43b:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    a441:	25 00 f0 00 00       	and    $0xf000,%eax
    a446:	3d 00 80 00 00       	cmp    $0x8000,%eax
    a44b:	0f 84 9f 00 00 00    	je     a4f0 <file_attrquerybyhdl+0xe0>
    a451:	3d 00 40 00 00       	cmp    $0x4000,%eax
    a456:	0f 84 84 00 00 00    	je     a4e0 <file_attrquerybyhdl+0xd0>
    a45c:	3d 00 20 00 00       	cmp    $0x2000,%eax
    a461:	0f 84 99 00 00 00    	je     a500 <file_attrquerybyhdl+0xf0>
    a467:	3d 00 10 00 00       	cmp    $0x1000,%eax
    a46c:	0f 84 9e 00 00 00    	je     a510 <file_attrquerybyhdl+0x100>
    a472:	3d 00 c0 00 00       	cmp    $0xc000,%eax
    a477:	ba 06 00 00 00       	mov    $0x6,%edx
    a47c:	b8 00 00 00 00       	mov    $0x0,%eax
    a481:	0f 44 c2             	cmove  %edx,%eax
    a484:	be 04 00 00 00       	mov    $0x4,%esi
    a489:	4c 89 e7             	mov    %r12,%rdi
    a48c:	89 03                	mov    %eax,(%rbx)
    a48e:	c6 43 04 00          	movb   $0x0,0x4(%rbx)
    a492:	c6 43 05 00          	movb   $0x0,0x5(%rbx)
    a496:	e8 25 2c 00 00       	callq  d0c0 <stataccess>
    a49b:	be 02 00 00 00       	mov    $0x2,%esi
    a4a0:	4c 89 e7             	mov    %r12,%rdi
    a4a3:	88 43 06             	mov    %al,0x6(%rbx)
    a4a6:	e8 15 2c 00 00       	callq  d0c0 <stataccess>
    a4ab:	be 01 00 00 00       	mov    $0x1,%esi
    a4b0:	88 43 07             	mov    %al,0x7(%rbx)
    a4b3:	4c 89 e7             	mov    %r12,%rdi
    a4b6:	e8 05 2c 00 00       	callq  d0c0 <stataccess>
    a4bb:	88 43 08             	mov    %al,0x8(%rbx)
    a4be:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    a4c4:	89 43 0c             	mov    %eax,0xc(%rbx)
    a4c7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    a4cb:	48 89 43 10          	mov    %rax,0x10(%rbx)
    a4cf:	31 c0                	xor    %eax,%eax
    a4d1:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
    a4d8:	5b                   	pop    %rbx
    a4d9:	41 5c                	pop    %r12
    a4db:	5d                   	pop    %rbp
    a4dc:	c3                   	retq   
    a4dd:	0f 1f 00             	nopl   (%rax)
    a4e0:	b8 07 00 00 00       	mov    $0x7,%eax
    a4e5:	eb 9d                	jmp    a484 <file_attrquerybyhdl+0x74>
    a4e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a4ee:	00 00 
    a4f0:	b8 01 00 00 00       	mov    $0x1,%eax
    a4f5:	eb 8d                	jmp    a484 <file_attrquerybyhdl+0x74>
    a4f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a4fe:	00 00 
    a500:	b8 06 00 00 00       	mov    $0x6,%eax
    a505:	e9 7a ff ff ff       	jmpq   a484 <file_attrquerybyhdl+0x74>
    a50a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a510:	b8 02 00 00 00       	mov    $0x2,%eax
    a515:	e9 6a ff ff ff       	jmpq   a484 <file_attrquerybyhdl+0x74>
    a51a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a520 <term_close>:
    a520:	55                   	push   %rbp
    a521:	31 c0                	xor    %eax,%eax
    a523:	48 89 e5             	mov    %rsp,%rbp
    a526:	5d                   	pop    %rbp
    a527:	c3                   	retq   
    a528:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a52f:	00 

000000000000a530 <term_attrquery>:
    a530:	55                   	push   %rbp
    a531:	31 c0                	xor    %eax,%eax
    a533:	c7 02 06 00 00 00    	movl   $0x6,(%rdx)
    a539:	c6 42 06 01          	movb   $0x1,0x6(%rdx)
    a53d:	c6 42 07 01          	movb   $0x1,0x7(%rdx)
    a541:	48 89 e5             	mov    %rsp,%rbp
    a544:	c6 42 08 00          	movb   $0x0,0x8(%rdx)
    a548:	48 c7 42 10 00 00 00 	movq   $0x0,0x10(%rdx)
    a54f:	00 
    a550:	5d                   	pop    %rbp
    a551:	c3                   	retq   
    a552:	0f 1f 40 00          	nopl   0x0(%rax)
    a556:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a55d:	00 00 00 

000000000000a560 <term_attrquerybyhdl>:
    a560:	c7 06 06 00 00 00    	movl   $0x6,(%rsi)
    a566:	83 7f 08 ff          	cmpl   $0xffffffff,0x8(%rdi)
    a56a:	55                   	push   %rbp
    a56b:	48 89 e5             	mov    %rsp,%rbp
    a56e:	0f 95 46 06          	setne  0x6(%rsi)
    a572:	83 7f 0c ff          	cmpl   $0xffffffff,0xc(%rdi)
    a576:	5d                   	pop    %rbp
    a577:	c6 46 08 00          	movb   $0x0,0x8(%rsi)
    a57b:	48 c7 46 10 00 00 00 	movq   $0x0,0x10(%rsi)
    a582:	00 
    a583:	0f 95 46 07          	setne  0x7(%rsi)
    a587:	31 c0                	xor    %eax,%eax
    a589:	c3                   	retq   
    a58a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a590 <dev_read>:
    a590:	83 7f 10 01          	cmpl   $0x1,0x10(%rdi)
    a594:	55                   	push   %rbp
    a595:	48 89 e5             	mov    %rsp,%rbp
    a598:	74 0e                	je     a5a8 <dev_read+0x18>
    a59a:	48 c7 c0 fd ff ff ff 	mov    $0xfffffffffffffffd,%rax
    a5a1:	5d                   	pop    %rbp
    a5a2:	c3                   	retq   
    a5a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a5a8:	48 8b 05 29 05 22 00 	mov    0x220529(%rip),%rax        # 22aad8 <term_ops+0x18>
    a5af:	48 85 c0             	test   %rax,%rax
    a5b2:	74 e6                	je     a59a <dev_read+0xa>
    a5b4:	5d                   	pop    %rbp
    a5b5:	ff e0                	jmpq   *%rax
    a5b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a5be:	00 00 

000000000000a5c0 <dev_write>:
    a5c0:	83 7f 10 01          	cmpl   $0x1,0x10(%rdi)
    a5c4:	55                   	push   %rbp
    a5c5:	48 89 e5             	mov    %rsp,%rbp
    a5c8:	74 0e                	je     a5d8 <dev_write+0x18>
    a5ca:	48 c7 c0 fd ff ff ff 	mov    $0xfffffffffffffffd,%rax
    a5d1:	5d                   	pop    %rbp
    a5d2:	c3                   	retq   
    a5d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a5d8:	48 8b 05 01 05 22 00 	mov    0x220501(%rip),%rax        # 22aae0 <term_ops+0x20>
    a5df:	48 85 c0             	test   %rax,%rax
    a5e2:	74 e6                	je     a5ca <dev_write+0xa>
    a5e4:	5d                   	pop    %rbp
    a5e5:	ff e0                	jmpq   *%rax
    a5e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a5ee:	00 00 

000000000000a5f0 <dev_getrealpath>:
    a5f0:	55                   	push   %rbp
    a5f1:	48 8b 47 18          	mov    0x18(%rdi),%rax
    a5f5:	48 89 e5             	mov    %rsp,%rbp
    a5f8:	5d                   	pop    %rbp
    a5f9:	c3                   	retq   
    a5fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a600 <char_write>:
    a600:	8b 7f 0c             	mov    0xc(%rdi),%edi
    a603:	83 ff ff             	cmp    $0xffffffff,%edi
    a606:	74 28                	je     a630 <char_write+0x30>
    a608:	be ff ff ff ff       	mov    $0xffffffff,%esi
    a60d:	48 c7 c0 fc ff ff ff 	mov    $0xfffffffffffffffc,%rax
    a614:	48 39 f2             	cmp    %rsi,%rdx
    a617:	77 0f                	ja     a628 <char_write+0x28>
    a619:	55                   	push   %rbp
    a61a:	48 89 ce             	mov    %rcx,%rsi
    a61d:	48 89 e5             	mov    %rsp,%rbp
    a620:	e8 fb 6b 00 00       	callq  11220 <ocall_write>
    a625:	5d                   	pop    %rbp
    a626:	48 98                	cltq   
    a628:	f3 c3                	repz retq 
    a62a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a630:	48 c7 c0 fa ff ff ff 	mov    $0xfffffffffffffffa,%rax
    a637:	c3                   	retq   
    a638:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a63f:	00 

000000000000a640 <char_read>:
    a640:	8b 7f 08             	mov    0x8(%rdi),%edi
    a643:	83 ff ff             	cmp    $0xffffffff,%edi
    a646:	74 28                	je     a670 <char_read+0x30>
    a648:	be ff ff ff ff       	mov    $0xffffffff,%esi
    a64d:	48 c7 c0 fc ff ff ff 	mov    $0xfffffffffffffffc,%rax
    a654:	48 39 f2             	cmp    %rsi,%rdx
    a657:	77 0f                	ja     a668 <char_read+0x28>
    a659:	55                   	push   %rbp
    a65a:	48 89 ce             	mov    %rcx,%rsi
    a65d:	48 89 e5             	mov    %rsp,%rbp
    a660:	e8 bb 6a 00 00       	callq  11120 <ocall_read>
    a665:	5d                   	pop    %rbp
    a666:	48 98                	cltq   
    a668:	f3 c3                	repz retq 
    a66a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a670:	48 c7 c0 fa ff ff ff 	mov    $0xfffffffffffffffa,%rax
    a677:	c3                   	retq   
    a678:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a67f:	00 

000000000000a680 <term_open>:
    a680:	55                   	push   %rbp
    a681:	48 89 e5             	mov    %rsp,%rbp
    a684:	41 54                	push   %r12
    a686:	53                   	push   %rbx
    a687:	0f b6 02             	movzbl (%rdx),%eax
    a68a:	84 c0                	test   %al,%al
    a68c:	74 4c                	je     a6da <term_open+0x5a>
    a68e:	48 83 c2 01          	add    $0x1,%rdx
    a692:	31 f6                	xor    %esi,%esi
    a694:	eb 1d                	jmp    a6b3 <term_open+0x33>
    a696:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a69d:	00 00 00 
    a6a0:	3c 2c                	cmp    $0x2c,%al
    a6a2:	0f 84 88 00 00 00    	je     a730 <term_open+0xb0>
    a6a8:	0f b6 02             	movzbl (%rdx),%eax
    a6ab:	48 83 c2 01          	add    $0x1,%rdx
    a6af:	84 c0                	test   %al,%al
    a6b1:	74 1d                	je     a6d0 <term_open+0x50>
    a6b3:	48 85 f6             	test   %rsi,%rsi
    a6b6:	75 e8                	jne    a6a0 <term_open+0x20>
    a6b8:	3c 2f                	cmp    $0x2f,%al
    a6ba:	75 e4                	jne    a6a0 <term_open+0x20>
    a6bc:	0f b6 02             	movzbl (%rdx),%eax
    a6bf:	48 89 d6             	mov    %rdx,%rsi
    a6c2:	48 83 c2 01          	add    $0x1,%rdx
    a6c6:	84 c0                	test   %al,%al
    a6c8:	75 e9                	jne    a6b3 <term_open+0x33>
    a6ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a6d0:	48 85 f6             	test   %rsi,%rsi
    a6d3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a6d8:	75 5b                	jne    a735 <term_open+0xb5>
    a6da:	89 cb                	mov    %ecx,%ebx
    a6dc:	49 89 fc             	mov    %rdi,%r12
    a6df:	bf 58 00 00 00       	mov    $0x58,%edi
    a6e4:	e8 37 e9 ff ff       	callq  9020 <malloc>
    a6e9:	f6 c3 01             	test   $0x1,%bl
    a6ec:	c7 00 06 00 00 00    	movl   $0x6,(%rax)
    a6f2:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    a6f9:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%rax)
    a700:	75 0e                	jne    a710 <term_open+0x90>
    a702:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    a709:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    a710:	83 e3 03             	and    $0x3,%ebx
    a713:	74 0b                	je     a720 <term_open+0xa0>
    a715:	83 48 04 10          	orl    $0x10,0x4(%rax)
    a719:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%rax)
    a720:	49 89 04 24          	mov    %rax,(%r12)
    a724:	31 c0                	xor    %eax,%eax
    a726:	5b                   	pop    %rbx
    a727:	41 5c                	pop    %r12
    a729:	5d                   	pop    %rbp
    a72a:	c3                   	retq   
    a72b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a730:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    a735:	5b                   	pop    %rbx
    a736:	41 5c                	pop    %r12
    a738:	5d                   	pop    %rbp
    a739:	c3                   	retq   
    a73a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a740 <dev_attrquerybyhdl>:
    a740:	55                   	push   %rbp
    a741:	48 89 e5             	mov    %rsp,%rbp
    a744:	41 55                	push   %r13
    a746:	41 54                	push   %r12
    a748:	53                   	push   %rbx
    a749:	49 89 fc             	mov    %rdi,%r12
    a74c:	48 89 f3             	mov    %rsi,%rbx
    a74f:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    a756:	83 7f 10 01          	cmpl   $0x1,0x10(%rdi)
    a75a:	0f 84 90 00 00 00    	je     a7f0 <dev_attrquerybyhdl+0xb0>
    a760:	c7 03 06 00 00 00    	movl   $0x6,(%rbx)
    a766:	41 8b 7c 24 08       	mov    0x8(%r12),%edi
    a76b:	83 ff ff             	cmp    $0xffffffff,%edi
    a76e:	0f 84 b2 00 00 00    	je     a826 <dev_attrquerybyhdl+0xe6>
    a774:	4c 8d ad 50 ff ff ff 	lea    -0xb0(%rbp),%r13
    a77b:	4c 89 ee             	mov    %r13,%rsi
    a77e:	e8 bd 6b 00 00       	callq  11340 <ocall_fstat>
    a783:	85 c0                	test   %eax,%eax
    a785:	0f 85 85 00 00 00    	jne    a810 <dev_attrquerybyhdl+0xd0>
    a78b:	41 8b 7c 24 08       	mov    0x8(%r12),%edi
    a790:	83 ff ff             	cmp    $0xffffffff,%edi
    a793:	0f 85 d0 00 00 00    	jne    a869 <dev_attrquerybyhdl+0x129>
    a799:	45 31 e4             	xor    %r12d,%r12d
    a79c:	be 04 00 00 00       	mov    $0x4,%esi
    a7a1:	4c 89 ef             	mov    %r13,%rdi
    a7a4:	e8 17 29 00 00       	callq  d0c0 <stataccess>
    a7a9:	be 02 00 00 00       	mov    $0x2,%esi
    a7ae:	88 43 06             	mov    %al,0x6(%rbx)
    a7b1:	4c 89 ef             	mov    %r13,%rdi
    a7b4:	e8 07 29 00 00       	callq  d0c0 <stataccess>
    a7b9:	4d 85 e4             	test   %r12,%r12
    a7bc:	88 43 07             	mov    %al,0x7(%rbx)
    a7bf:	0f 84 9b 00 00 00    	je     a860 <dev_attrquerybyhdl+0x120>
    a7c5:	be 01 00 00 00       	mov    $0x1,%esi
    a7ca:	4c 89 e7             	mov    %r12,%rdi
    a7cd:	e8 ee 28 00 00       	callq  d0c0 <stataccess>
    a7d2:	88 43 08             	mov    %al,0x8(%rbx)
    a7d5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    a7d9:	48 89 43 10          	mov    %rax,0x10(%rbx)
    a7dd:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    a7e4:	31 c0                	xor    %eax,%eax
    a7e6:	5b                   	pop    %rbx
    a7e7:	41 5c                	pop    %r12
    a7e9:	41 5d                	pop    %r13
    a7eb:	5d                   	pop    %rbp
    a7ec:	c3                   	retq   
    a7ed:	0f 1f 00             	nopl   (%rax)
    a7f0:	48 8b 05 39 03 22 00 	mov    0x220339(%rip),%rax        # 22ab30 <term_ops+0x70>
    a7f7:	48 85 c0             	test   %rax,%rax
    a7fa:	0f 84 60 ff ff ff    	je     a760 <dev_attrquerybyhdl+0x20>
    a800:	ff d0                	callq  *%rax
    a802:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    a809:	5b                   	pop    %rbx
    a80a:	41 5c                	pop    %r12
    a80c:	41 5d                	pop    %r13
    a80e:	5d                   	pop    %rbp
    a80f:	c3                   	retq   
    a810:	41 8b 7c 24 08       	mov    0x8(%r12),%edi
    a815:	83 ff ff             	cmp    $0xffffffff,%edi
    a818:	74 0c                	je     a826 <dev_attrquerybyhdl+0xe6>
    a81a:	4c 89 ee             	mov    %r13,%rsi
    a81d:	e8 1e 6b 00 00       	callq  11340 <ocall_fstat>
    a822:	85 c0                	test   %eax,%eax
    a824:	74 03                	je     a829 <dev_attrquerybyhdl+0xe9>
    a826:	45 31 ed             	xor    %r13d,%r13d
    a829:	4d 85 ed             	test   %r13,%r13
    a82c:	c6 43 06 00          	movb   $0x0,0x6(%rbx)
    a830:	c6 43 07 00          	movb   $0x0,0x7(%rbx)
    a834:	75 0a                	jne    a840 <dev_attrquerybyhdl+0x100>
    a836:	c6 43 08 00          	movb   $0x0,0x8(%rbx)
    a83a:	31 c0                	xor    %eax,%eax
    a83c:	eb 9b                	jmp    a7d9 <dev_attrquerybyhdl+0x99>
    a83e:	66 90                	xchg   %ax,%ax
    a840:	be 01 00 00 00       	mov    $0x1,%esi
    a845:	4c 89 ef             	mov    %r13,%rdi
    a848:	e8 73 28 00 00       	callq  d0c0 <stataccess>
    a84d:	88 43 08             	mov    %al,0x8(%rbx)
    a850:	49 8b 45 30          	mov    0x30(%r13),%rax
    a854:	e9 80 ff ff ff       	jmpq   a7d9 <dev_attrquerybyhdl+0x99>
    a859:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a860:	c6 43 08 00          	movb   $0x0,0x8(%rbx)
    a864:	e9 6c ff ff ff       	jmpq   a7d5 <dev_attrquerybyhdl+0x95>
    a869:	4c 89 ee             	mov    %r13,%rsi
    a86c:	41 bc 00 00 00 00    	mov    $0x0,%r12d
    a872:	e8 c9 6a 00 00       	callq  11340 <ocall_fstat>
    a877:	85 c0                	test   %eax,%eax
    a879:	4d 0f 44 e5          	cmove  %r13,%r12
    a87d:	e9 1a ff ff ff       	jmpq   a79c <dev_attrquerybyhdl+0x5c>
    a882:	0f 1f 40 00          	nopl   0x0(%rax)
    a886:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a88d:	00 00 00 

000000000000a890 <dev_flush>:
    a890:	55                   	push   %rbp
    a891:	48 89 e5             	mov    %rsp,%rbp
    a894:	53                   	push   %rbx
    a895:	48 83 ec 08          	sub    $0x8,%rsp
    a899:	83 7f 10 01          	cmpl   $0x1,0x10(%rdi)
    a89d:	74 31                	je     a8d0 <dev_flush+0x40>
    a89f:	48 89 fb             	mov    %rdi,%rbx
    a8a2:	8b 7f 08             	mov    0x8(%rdi),%edi
    a8a5:	83 ff ff             	cmp    $0xffffffff,%edi
    a8a8:	74 05                	je     a8af <dev_flush+0x1f>
    a8aa:	e8 f1 6b 00 00       	callq  114a0 <ocall_fsync>
    a8af:	8b 7b 0c             	mov    0xc(%rbx),%edi
    a8b2:	83 ff ff             	cmp    $0xffffffff,%edi
    a8b5:	74 0a                	je     a8c1 <dev_flush+0x31>
    a8b7:	3b 7b 08             	cmp    0x8(%rbx),%edi
    a8ba:	74 05                	je     a8c1 <dev_flush+0x31>
    a8bc:	e8 df 6b 00 00       	callq  114a0 <ocall_fsync>
    a8c1:	48 83 c4 08          	add    $0x8,%rsp
    a8c5:	31 c0                	xor    %eax,%eax
    a8c7:	5b                   	pop    %rbx
    a8c8:	5d                   	pop    %rbp
    a8c9:	c3                   	retq   
    a8ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a8d0:	48 8b 05 41 02 22 00 	mov    0x220241(%rip),%rax        # 22ab18 <term_ops+0x58>
    a8d7:	48 85 c0             	test   %rax,%rax
    a8da:	74 c3                	je     a89f <dev_flush+0xf>
    a8dc:	48 83 c4 08          	add    $0x8,%rsp
    a8e0:	5b                   	pop    %rbx
    a8e1:	5d                   	pop    %rbp
    a8e2:	ff e0                	jmpq   *%rax
    a8e4:	66 90                	xchg   %ax,%ax
    a8e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a8ed:	00 00 00 

000000000000a8f0 <dev_close>:
    a8f0:	55                   	push   %rbp
    a8f1:	48 89 e5             	mov    %rsp,%rbp
    a8f4:	53                   	push   %rbx
    a8f5:	48 83 ec 08          	sub    $0x8,%rsp
    a8f9:	83 7f 10 01          	cmpl   $0x1,0x10(%rdi)
    a8fd:	74 39                	je     a938 <dev_close+0x48>
    a8ff:	48 89 fb             	mov    %rdi,%rbx
    a902:	8b 7f 08             	mov    0x8(%rdi),%edi
    a905:	83 ff ff             	cmp    $0xffffffff,%edi
    a908:	74 05                	je     a90f <dev_close+0x1f>
    a90a:	e8 c1 67 00 00       	callq  110d0 <ocall_close>
    a90f:	8b 7b 0c             	mov    0xc(%rbx),%edi
    a912:	83 ff ff             	cmp    $0xffffffff,%edi
    a915:	74 05                	je     a91c <dev_close+0x2c>
    a917:	e8 b4 67 00 00       	callq  110d0 <ocall_close>
    a91c:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    a920:	48 85 ff             	test   %rdi,%rdi
    a923:	74 05                	je     a92a <dev_close+0x3a>
    a925:	e8 36 eb ff ff       	callq  9460 <free>
    a92a:	48 83 c4 08          	add    $0x8,%rsp
    a92e:	31 c0                	xor    %eax,%eax
    a930:	5b                   	pop    %rbx
    a931:	5d                   	pop    %rbp
    a932:	c3                   	retq   
    a933:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a938:	48 8b 05 b9 01 22 00 	mov    0x2201b9(%rip),%rax        # 22aaf8 <term_ops+0x38>
    a93f:	48 85 c0             	test   %rax,%rax
    a942:	74 bb                	je     a8ff <dev_close+0xf>
    a944:	48 83 c4 08          	add    $0x8,%rsp
    a948:	5b                   	pop    %rbx
    a949:	5d                   	pop    %rbp
    a94a:	ff e0                	jmpq   *%rax
    a94c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a950 <dev_delete>:
    a950:	83 7f 10 01          	cmpl   $0x1,0x10(%rdi)
    a954:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
    a959:	74 05                	je     a960 <dev_delete+0x10>
    a95b:	c3                   	retq   
    a95c:	0f 1f 40 00          	nopl   0x0(%rax)
    a960:	48 83 3d 98 01 22 00 	cmpq   $0x0,0x220198(%rip)        # 22ab00 <term_ops+0x40>
    a967:	00 
    a968:	74 f1                	je     a95b <dev_delete+0xb>
    a96a:	55                   	push   %rbp
    a96b:	48 89 e5             	mov    %rsp,%rbp
    a96e:	41 54                	push   %r12
    a970:	53                   	push   %rbx
    a971:	41 89 f4             	mov    %esi,%r12d
    a974:	48 89 fb             	mov    %rdi,%rbx
    a977:	e8 74 ff ff ff       	callq  a8f0 <dev_close>
    a97c:	85 c0                	test   %eax,%eax
    a97e:	78 10                	js     a990 <dev_delete+0x40>
    a980:	44 89 e6             	mov    %r12d,%esi
    a983:	48 89 df             	mov    %rbx,%rdi
    a986:	5b                   	pop    %rbx
    a987:	41 5c                	pop    %r12
    a989:	5d                   	pop    %rbp
    a98a:	ff 25 70 01 22 00    	jmpq   *0x220170(%rip)        # 22ab00 <term_ops+0x40>
    a990:	5b                   	pop    %rbx
    a991:	41 5c                	pop    %r12
    a993:	5d                   	pop    %rbp
    a994:	eb c5                	jmp    a95b <dev_delete+0xb>
    a996:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a99d:	00 00 00 

000000000000a9a0 <parse_device_uri.constprop.3>:
    a9a0:	55                   	push   %rbp
    a9a1:	48 89 e5             	mov    %rsp,%rbp
    a9a4:	41 57                	push   %r15
    a9a6:	41 56                	push   %r14
    a9a8:	41 55                	push   %r13
    a9aa:	41 54                	push   %r12
    a9ac:	49 89 fd             	mov    %rdi,%r13
    a9af:	53                   	push   %rbx
    a9b0:	49 89 f7             	mov    %rsi,%r15
    a9b3:	49 89 d6             	mov    %rdx,%r14
    a9b6:	48 83 ec 08          	sub    $0x8,%rsp
    a9ba:	4c 8b 27             	mov    (%rdi),%r12
    a9bd:	41 0f b6 04 24       	movzbl (%r12),%eax
    a9c2:	3c 2f                	cmp    $0x2f,%al
    a9c4:	76 52                	jbe    aa18 <parse_device_uri.constprop.3+0x78>
    a9c6:	4c 89 e3             	mov    %r12,%rbx
    a9c9:	48 ba 01 00 00 00 00 	movabs $0x900000000001,%rdx
    a9d0:	90 00 00 
    a9d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a9d8:	48 83 c3 01          	add    $0x1,%rbx
    a9dc:	0f b6 03             	movzbl (%rbx),%eax
    a9df:	3c 2f                	cmp    $0x2f,%al
    a9e1:	77 f5                	ja     a9d8 <parse_device_uri.constprop.3+0x38>
    a9e3:	48 0f a3 c2          	bt     %rax,%rdx
    a9e7:	73 ef                	jae    a9d8 <parse_device_uri.constprop.3+0x38>
    a9e9:	48 8d 35 21 d7 01 00 	lea    0x1d721(%rip),%rsi        # 28111 <section_rodata+0x511>
    a9f0:	ba 03 00 00 00       	mov    $0x3,%edx
    a9f5:	4c 89 e7             	mov    %r12,%rdi
    a9f8:	e8 93 ac 00 00       	callq  15690 <memcmp>
    a9fd:	85 c0                	test   %eax,%eax
    a9ff:	74 2f                	je     aa30 <parse_device_uri.constprop.3+0x90>
    aa01:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    aa06:	48 83 c4 08          	add    $0x8,%rsp
    aa0a:	5b                   	pop    %rbx
    aa0b:	41 5c                	pop    %r12
    aa0d:	41 5d                	pop    %r13
    aa0f:	41 5e                	pop    %r14
    aa11:	41 5f                	pop    %r15
    aa13:	5d                   	pop    %rbp
    aa14:	c3                   	retq   
    aa15:	0f 1f 00             	nopl   (%rax)
    aa18:	48 ba 01 00 00 00 00 	movabs $0x900000000001,%rdx
    aa1f:	90 00 00 
    aa22:	4c 89 e3             	mov    %r12,%rbx
    aa25:	48 0f a3 c2          	bt     %rax,%rdx
    aa29:	73 9e                	jae    a9c9 <parse_device_uri.constprop.3+0x29>
    aa2b:	eb bc                	jmp    a9e9 <parse_device_uri.constprop.3+0x49>
    aa2d:	0f 1f 00             	nopl   (%rax)
    aa30:	80 3b 00             	cmpb   $0x0,(%rbx)
    aa33:	48 8d 53 01          	lea    0x1(%rbx),%rdx
    aa37:	48 0f 45 da          	cmovne %rdx,%rbx
    aa3b:	4d 85 ff             	test   %r15,%r15
    aa3e:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    aa42:	74 03                	je     aa47 <parse_device_uri.constprop.3+0xa7>
    aa44:	4d 89 27             	mov    %r12,(%r15)
    aa47:	4d 85 f6             	test   %r14,%r14
    aa4a:	74 ba                	je     aa06 <parse_device_uri.constprop.3+0x66>
    aa4c:	48 8d 0d 6d 00 22 00 	lea    0x22006d(%rip),%rcx        # 22aac0 <term_ops>
    aa53:	49 89 0e             	mov    %rcx,(%r14)
    aa56:	48 83 c4 08          	add    $0x8,%rsp
    aa5a:	5b                   	pop    %rbx
    aa5b:	41 5c                	pop    %r12
    aa5d:	41 5d                	pop    %r13
    aa5f:	41 5e                	pop    %r14
    aa61:	41 5f                	pop    %r15
    aa63:	5d                   	pop    %rbp
    aa64:	c3                   	retq   
    aa65:	90                   	nop
    aa66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    aa6d:	00 00 00 

000000000000aa70 <dev_open>:
    aa70:	55                   	push   %rbp
    aa71:	48 89 e5             	mov    %rsp,%rbp
    aa74:	41 56                	push   %r14
    aa76:	41 55                	push   %r13
    aa78:	41 54                	push   %r12
    aa7a:	53                   	push   %rbx
    aa7b:	48 8d 75 d8          	lea    -0x28(%rbp),%rsi
    aa7f:	48 89 fb             	mov    %rdi,%rbx
    aa82:	48 8d 7d c8          	lea    -0x38(%rbp),%rdi
    aa86:	41 89 cc             	mov    %ecx,%r12d
    aa89:	48 83 ec 20          	sub    $0x20,%rsp
    aa8d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    aa91:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    aa95:	45 89 c5             	mov    %r8d,%r13d
    aa98:	45 89 ce             	mov    %r9d,%r14d
    aa9b:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    aaa2:	00 
    aaa3:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    aaaa:	00 
    aaab:	e8 f0 fe ff ff       	callq  a9a0 <parse_device_uri.constprop.3>
    aab0:	85 c0                	test   %eax,%eax
    aab2:	78 58                	js     ab0c <dev_open+0x9c>
    aab4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    aab8:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    aabd:	74 61                	je     ab20 <dev_open+0xb0>
    aabf:	bf 58 00 00 00       	mov    $0x58,%edi
    aac4:	e8 57 e5 ff ff       	callq  9020 <malloc>
    aac9:	c7 00 06 00 00 00    	movl   $0x6,(%rax)
    aacf:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    aad6:	48 83 ec 08          	sub    $0x8,%rsp
    aada:	c7 40 08 ff ff ff ff 	movl   $0xffffffff,0x8(%rax)
    aae1:	c7 40 0c ff ff ff ff 	movl   $0xffffffff,0xc(%rax)
    aae8:	44 89 e1             	mov    %r12d,%ecx
    aaeb:	48 89 03             	mov    %rax,(%rbx)
    aaee:	8b 45 10             	mov    0x10(%rbp),%eax
    aaf1:	45 89 f1             	mov    %r14d,%r9d
    aaf4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    aaf8:	45 89 e8             	mov    %r13d,%r8d
    aafb:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    aaff:	48 89 df             	mov    %rbx,%rdi
    ab02:	50                   	push   %rax
    ab03:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ab07:	ff 50 10             	callq  *0x10(%rax)
    ab0a:	5a                   	pop    %rdx
    ab0b:	59                   	pop    %rcx
    ab0c:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    ab10:	5b                   	pop    %rbx
    ab11:	41 5c                	pop    %r12
    ab13:	41 5d                	pop    %r13
    ab15:	41 5e                	pop    %r14
    ab17:	5d                   	pop    %rbp
    ab18:	c3                   	retq   
    ab19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ab20:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    ab25:	eb e5                	jmp    ab0c <dev_open+0x9c>
    ab27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ab2e:	00 00 

000000000000ab30 <dev_attrquery>:
    ab30:	55                   	push   %rbp
    ab31:	48 89 e5             	mov    %rsp,%rbp
    ab34:	53                   	push   %rbx
    ab35:	48 89 d3             	mov    %rdx,%rbx
    ab38:	48 8d 7d d8          	lea    -0x28(%rbp),%rdi
    ab3c:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    ab40:	48 83 ec 28          	sub    $0x28,%rsp
    ab44:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
    ab48:	48 8d 75 e8          	lea    -0x18(%rbp),%rsi
    ab4c:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    ab53:	00 
    ab54:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    ab5b:	00 
    ab5c:	e8 3f fe ff ff       	callq  a9a0 <parse_device_uri.constprop.3>
    ab61:	85 c0                	test   %eax,%eax
    ab63:	78 1f                	js     ab84 <dev_attrquery+0x54>
    ab65:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ab69:	48 85 c0             	test   %rax,%rax
    ab6c:	74 22                	je     ab90 <dev_attrquery+0x60>
    ab6e:	48 8b 40 68          	mov    0x68(%rax),%rax
    ab72:	48 85 c0             	test   %rax,%rax
    ab75:	74 19                	je     ab90 <dev_attrquery+0x60>
    ab77:	48 89 da             	mov    %rbx,%rdx
    ab7a:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    ab7e:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
    ab82:	ff d0                	callq  *%rax
    ab84:	48 83 c4 28          	add    $0x28,%rsp
    ab88:	5b                   	pop    %rbx
    ab89:	5d                   	pop    %rbp
    ab8a:	c3                   	retq   
    ab8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ab90:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    ab95:	eb ed                	jmp    ab84 <dev_attrquery+0x54>
    ab97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ab9e:	00 00 

000000000000aba0 <pipe_attrsetbyhdl>:
    aba0:	55                   	push   %rbp
    aba1:	48 89 f8             	mov    %rdi,%rax
    aba4:	48 89 e5             	mov    %rsp,%rbp
    aba7:	41 55                	push   %r13
    aba9:	41 54                	push   %r12
    abab:	53                   	push   %rbx
    abac:	48 83 ec 08          	sub    $0x8,%rsp
    abb0:	8b 7f 08             	mov    0x8(%rdi),%edi
    abb3:	83 ff ff             	cmp    $0xffffffff,%edi
    abb6:	74 68                	je     ac20 <pipe_attrsetbyhdl+0x80>
    abb8:	83 38 05             	cmpl   $0x5,(%rax)
    abbb:	74 3b                	je     abf8 <pipe_attrsetbyhdl+0x58>
    abbd:	0f b6 50 18          	movzbl 0x18(%rax),%edx
    abc1:	4c 8d 68 18          	lea    0x18(%rax),%r13
    abc5:	0f b6 46 05          	movzbl 0x5(%rsi),%eax
    abc9:	45 31 e4             	xor    %r12d,%r12d
    abcc:	38 d0                	cmp    %dl,%al
    abce:	74 17                	je     abe7 <pipe_attrsetbyhdl+0x47>
    abd0:	48 89 f3             	mov    %rsi,%rbx
    abd3:	0f b6 f0             	movzbl %al,%esi
    abd6:	e8 25 68 00 00       	callq  11400 <ocall_fsetnonblock>
    abdb:	85 c0                	test   %eax,%eax
    abdd:	78 29                	js     ac08 <pipe_attrsetbyhdl+0x68>
    abdf:	0f b6 43 05          	movzbl 0x5(%rbx),%eax
    abe3:	41 88 45 00          	mov    %al,0x0(%r13)
    abe7:	48 83 c4 08          	add    $0x8,%rsp
    abeb:	44 89 e0             	mov    %r12d,%eax
    abee:	5b                   	pop    %rbx
    abef:	41 5c                	pop    %r12
    abf1:	41 5d                	pop    %r13
    abf3:	5d                   	pop    %rbp
    abf4:	c3                   	retq   
    abf5:	0f 1f 00             	nopl   (%rax)
    abf8:	4c 8d 68 10          	lea    0x10(%rax),%r13
    abfc:	0f b6 50 10          	movzbl 0x10(%rax),%edx
    ac00:	eb c3                	jmp    abc5 <pipe_attrsetbyhdl+0x25>
    ac02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ac08:	48 83 c4 08          	add    $0x8,%rsp
    ac0c:	41 89 c4             	mov    %eax,%r12d
    ac0f:	5b                   	pop    %rbx
    ac10:	44 89 e0             	mov    %r12d,%eax
    ac13:	41 5c                	pop    %r12
    ac15:	41 5d                	pop    %r13
    ac17:	5d                   	pop    %rbp
    ac18:	c3                   	retq   
    ac19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ac20:	41 bc f9 ff ff ff    	mov    $0xfffffff9,%r12d
    ac26:	eb bf                	jmp    abe7 <pipe_attrsetbyhdl+0x47>
    ac28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ac2f:	00 

000000000000ac30 <pipe_attrquerybyhdl>:
    ac30:	55                   	push   %rbp
    ac31:	48 89 e5             	mov    %rsp,%rbp
    ac34:	41 56                	push   %r14
    ac36:	41 55                	push   %r13
    ac38:	41 54                	push   %r12
    ac3a:	53                   	push   %rbx
    ac3b:	48 83 ec 10          	sub    $0x10,%rsp
    ac3f:	44 8b 77 08          	mov    0x8(%rdi),%r14d
    ac43:	41 83 fe ff          	cmp    $0xffffffff,%r14d
    ac47:	0f 84 eb 00 00 00    	je     ad38 <pipe_attrquerybyhdl+0x108>
    ac4d:	8b 07                	mov    (%rdi),%eax
    ac4f:	48 89 f3             	mov    %rsi,%rbx
    ac52:	49 89 fc             	mov    %rdi,%r12
    ac55:	44 8b 6f 04          	mov    0x4(%rdi),%r13d
    ac59:	83 f8 03             	cmp    $0x3,%eax
    ac5c:	89 06                	mov    %eax,(%rsi)
    ac5e:	0f 84 9c 00 00 00    	je     ad00 <pipe_attrquerybyhdl+0xd0>
    ac64:	44 89 f7             	mov    %r14d,%edi
    ac67:	e8 44 67 00 00       	callq  113b0 <ocall_fionread>
    ac6c:	85 c0                	test   %eax,%eax
    ac6e:	0f 88 bc 00 00 00    	js     ad30 <pipe_attrquerybyhdl+0x100>
    ac74:	41 83 3c 24 05       	cmpl   $0x5,(%r12)
    ac79:	48 98                	cltq   
    ac7b:	ba 80 00 00 00       	mov    $0x80,%edx
    ac80:	48 89 43 10          	mov    %rax,0x10(%rbx)
    ac84:	b8 40 00 00 00       	mov    $0x40,%eax
    ac89:	0f 44 c2             	cmove  %edx,%eax
    ac8c:	44 85 e8             	test   %r13d,%eax
    ac8f:	0f 95 43 07          	setne  0x7(%rbx)
    ac93:	31 d2                	xor    %edx,%edx
    ac95:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi
    ac99:	b8 01 00 00 00       	mov    $0x1,%eax
    ac9e:	66 89 55 d6          	mov    %dx,-0x2a(%rbp)
    aca2:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    aca6:	be 01 00 00 00       	mov    $0x1,%esi
    acab:	44 89 75 d0          	mov    %r14d,-0x30(%rbp)
    acaf:	66 89 45 d4          	mov    %ax,-0x2c(%rbp)
    acb3:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    acba:	00 
    acbb:	e8 60 7a 00 00       	callq  12720 <ocall_poll>
    acc0:	85 c0                	test   %eax,%eax
    acc2:	78 28                	js     acec <pipe_attrquerybyhdl+0xbc>
    acc4:	31 d2                	xor    %edx,%edx
    acc6:	83 f8 01             	cmp    $0x1,%eax
    acc9:	74 55                	je     ad20 <pipe_attrquerybyhdl+0xf0>
    accb:	41 c1 ed 09          	shr    $0x9,%r13d
    accf:	88 53 06             	mov    %dl,0x6(%rbx)
    acd2:	41 83 e5 01          	and    $0x1,%r13d
    acd6:	41 83 3c 24 05       	cmpl   $0x5,(%r12)
    acdb:	44 88 6b 04          	mov    %r13b,0x4(%rbx)
    acdf:	74 2f                	je     ad10 <pipe_attrquerybyhdl+0xe0>
    ace1:	41 0f b6 44 24 18    	movzbl 0x18(%r12),%eax
    ace7:	88 43 05             	mov    %al,0x5(%rbx)
    acea:	31 c0                	xor    %eax,%eax
    acec:	48 83 c4 10          	add    $0x10,%rsp
    acf0:	5b                   	pop    %rbx
    acf1:	41 5c                	pop    %r12
    acf3:	41 5d                	pop    %r13
    acf5:	41 5e                	pop    %r14
    acf7:	5d                   	pop    %rbp
    acf8:	c3                   	retq   
    acf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ad00:	48 c7 46 10 00 00 00 	movq   $0x0,0x10(%rsi)
    ad07:	00 
    ad08:	c6 46 07 00          	movb   $0x0,0x7(%rsi)
    ad0c:	eb 85                	jmp    ac93 <pipe_attrquerybyhdl+0x63>
    ad0e:	66 90                	xchg   %ax,%ax
    ad10:	41 0f b6 44 24 10    	movzbl 0x10(%r12),%eax
    ad16:	eb cf                	jmp    ace7 <pipe_attrquerybyhdl+0xb7>
    ad18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ad1f:	00 
    ad20:	66 83 7d d6 01       	cmpw   $0x1,-0x2a(%rbp)
    ad25:	0f 94 c2             	sete   %dl
    ad28:	eb a1                	jmp    accb <pipe_attrquerybyhdl+0x9b>
    ad2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ad30:	f7 d8                	neg    %eax
    ad32:	eb b8                	jmp    acec <pipe_attrquerybyhdl+0xbc>
    ad34:	0f 1f 40 00          	nopl   0x0(%rax)
    ad38:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    ad3d:	eb ad                	jmp    acec <pipe_attrquerybyhdl+0xbc>
    ad3f:	90                   	nop

000000000000ad40 <pipe_waitforclient>:
    ad40:	55                   	push   %rbp
    ad41:	48 89 e5             	mov    %rsp,%rbp
    ad44:	41 55                	push   %r13
    ad46:	41 54                	push   %r12
    ad48:	53                   	push   %rbx
    ad49:	bb eb ff ff ff       	mov    $0xffffffeb,%ebx
    ad4e:	48 83 ec 28          	sub    $0x28,%rsp
    ad52:	83 3f 03             	cmpl   $0x3,(%rdi)
    ad55:	75 4d                	jne    ada4 <pipe_waitforclient+0x64>
    ad57:	48 89 f8             	mov    %rdi,%rax
    ad5a:	8b 7f 08             	mov    0x8(%rdi),%edi
    ad5d:	83 ff ff             	cmp    $0xffffffff,%edi
    ad60:	74 56                	je     adb8 <pipe_waitforclient+0x78>
    ad62:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
    ad66:	31 d2                	xor    %edx,%edx
    ad68:	49 89 f5             	mov    %rsi,%r13
    ad6b:	31 f6                	xor    %esi,%esi
    ad6d:	49 89 c4             	mov    %rax,%r12
    ad70:	e8 eb 6d 00 00       	callq  11b60 <ocall_sock_accept>
    ad75:	85 c0                	test   %eax,%eax
    ad77:	89 c3                	mov    %eax,%ebx
    ad79:	78 29                	js     ada4 <pipe_waitforclient+0x64>
    ad7b:	bf 58 00 00 00       	mov    $0x58,%edi
    ad80:	e8 9b e2 ff ff       	callq  9020 <malloc>
    ad85:	89 58 08             	mov    %ebx,0x8(%rax)
    ad88:	c7 00 04 00 00 00    	movl   $0x4,(%rax)
    ad8e:	31 db                	xor    %ebx,%ebx
    ad90:	c7 40 04 49 00 00 00 	movl   $0x49,0x4(%rax)
    ad97:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
    ad9c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    ada0:	49 89 45 00          	mov    %rax,0x0(%r13)
    ada4:	48 83 c4 28          	add    $0x28,%rsp
    ada8:	89 d8                	mov    %ebx,%eax
    adaa:	5b                   	pop    %rbx
    adab:	41 5c                	pop    %r12
    adad:	41 5d                	pop    %r13
    adaf:	5d                   	pop    %rbp
    adb0:	c3                   	retq   
    adb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    adb8:	bb fa ff ff ff       	mov    $0xfffffffa,%ebx
    adbd:	eb e5                	jmp    ada4 <pipe_waitforclient+0x64>
    adbf:	90                   	nop

000000000000adc0 <pipe_write>:
    adc0:	55                   	push   %rbp
    adc1:	48 89 e5             	mov    %rsp,%rbp
    adc4:	41 54                	push   %r12
    adc6:	53                   	push   %rbx
    adc7:	8b 37                	mov    (%rdi),%esi
    adc9:	48 89 fb             	mov    %rdi,%rbx
    adcc:	8d 46 fc             	lea    -0x4(%rsi),%eax
    adcf:	83 f8 01             	cmp    $0x1,%eax
    add2:	76 0c                	jbe    ade0 <pipe_write+0x20>
    add4:	83 fe 02             	cmp    $0x2,%esi
    add7:	48 c7 c0 ea ff ff ff 	mov    $0xffffffffffffffea,%rax
    adde:	75 47                	jne    ae27 <pipe_write+0x67>
    ade0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    ade5:	48 39 c2             	cmp    %rax,%rdx
    ade8:	77 66                	ja     ae50 <pipe_write+0x90>
    adea:	83 fe 05             	cmp    $0x5,%esi
    aded:	74 41                	je     ae30 <pipe_write+0x70>
    adef:	8b 7b 08             	mov    0x8(%rbx),%edi
    adf2:	48 89 ce             	mov    %rcx,%rsi
    adf5:	45 31 c0             	xor    %r8d,%r8d
    adf8:	31 c9                	xor    %ecx,%ecx
    adfa:	49 89 d4             	mov    %rdx,%r12
    adfd:	e8 de 72 00 00       	callq  120e0 <ocall_sock_send>
    ae02:	83 3b 05             	cmpl   $0x5,(%rbx)
    ae05:	ba 40 00 00 00       	mov    $0x40,%edx
    ae0a:	b9 80 00 00 00       	mov    $0x80,%ecx
    ae0f:	0f 45 ca             	cmovne %edx,%ecx
    ae12:	83 f8 ed             	cmp    $0xffffffed,%eax
    ae15:	74 21                	je     ae38 <pipe_write+0x78>
    ae17:	85 c0                	test   %eax,%eax
    ae19:	78 22                	js     ae3d <pipe_write+0x7d>
    ae1b:	48 98                	cltq   
    ae1d:	49 39 c4             	cmp    %rax,%r12
    ae20:	74 26                	je     ae48 <pipe_write+0x88>
    ae22:	f7 d1                	not    %ecx
    ae24:	21 4b 04             	and    %ecx,0x4(%rbx)
    ae27:	5b                   	pop    %rbx
    ae28:	41 5c                	pop    %r12
    ae2a:	5d                   	pop    %rbp
    ae2b:	c3                   	retq   
    ae2c:	0f 1f 40 00          	nopl   0x0(%rax)
    ae30:	8b 7b 0c             	mov    0xc(%rbx),%edi
    ae33:	eb bd                	jmp    adf2 <pipe_write+0x32>
    ae35:	0f 1f 00             	nopl   (%rax)
    ae38:	f7 d1                	not    %ecx
    ae3a:	21 4b 04             	and    %ecx,0x4(%rbx)
    ae3d:	5b                   	pop    %rbx
    ae3e:	48 98                	cltq   
    ae40:	41 5c                	pop    %r12
    ae42:	5d                   	pop    %rbp
    ae43:	c3                   	retq   
    ae44:	0f 1f 40 00          	nopl   0x0(%rax)
    ae48:	09 4b 04             	or     %ecx,0x4(%rbx)
    ae4b:	5b                   	pop    %rbx
    ae4c:	41 5c                	pop    %r12
    ae4e:	5d                   	pop    %rbp
    ae4f:	c3                   	retq   
    ae50:	48 c7 c0 fc ff ff ff 	mov    $0xfffffffffffffffc,%rax
    ae57:	eb ce                	jmp    ae27 <pipe_write+0x67>
    ae59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000ae60 <pipe_read>:
    ae60:	8b 37                	mov    (%rdi),%esi
    ae62:	8d 46 fc             	lea    -0x4(%rsi),%eax
    ae65:	83 f8 01             	cmp    $0x1,%eax
    ae68:	76 0c                	jbe    ae76 <pipe_read+0x16>
    ae6a:	83 fe 02             	cmp    $0x2,%esi
    ae6d:	48 c7 c0 ea ff ff ff 	mov    $0xffffffffffffffea,%rax
    ae74:	75 30                	jne    aea6 <pipe_read+0x46>
    ae76:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    ae7b:	48 39 c2             	cmp    %rax,%rdx
    ae7e:	77 30                	ja     aeb0 <pipe_read+0x50>
    ae80:	55                   	push   %rbp
    ae81:	8b 7f 08             	mov    0x8(%rdi),%edi
    ae84:	48 89 ce             	mov    %rcx,%rsi
    ae87:	45 31 c0             	xor    %r8d,%r8d
    ae8a:	31 c9                	xor    %ecx,%ecx
    ae8c:	48 89 e5             	mov    %rsp,%rbp
    ae8f:	e8 5c 70 00 00       	callq  11ef0 <ocall_sock_recv>
    ae94:	85 c0                	test   %eax,%eax
    ae96:	48 98                	cltq   
    ae98:	78 0b                	js     aea5 <pipe_read+0x45>
    ae9a:	48 c7 c2 ec ff ff ff 	mov    $0xffffffffffffffec,%rdx
    aea1:	48 0f 44 c2          	cmove  %rdx,%rax
    aea5:	5d                   	pop    %rbp
    aea6:	f3 c3                	repz retq 
    aea8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    aeaf:	00 
    aeb0:	48 c7 c0 fc ff ff ff 	mov    $0xfffffffffffffffc,%rax
    aeb7:	c3                   	retq   
    aeb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    aebf:	00 

000000000000aec0 <pipe_getname>:
    aec0:	55                   	push   %rbp
    aec1:	48 89 e5             	mov    %rsp,%rbp
    aec4:	41 57                	push   %r15
    aec6:	41 56                	push   %r14
    aec8:	41 55                	push   %r13
    aeca:	41 54                	push   %r12
    aecc:	49 89 f4             	mov    %rsi,%r12
    aecf:	53                   	push   %rbx
    aed0:	48 83 ec 18          	sub    $0x18,%rsp
    aed4:	8b 07                	mov    (%rdi),%eax
    aed6:	83 f8 02             	cmp    $0x2,%eax
    aed9:	0f 84 b1 00 00 00    	je     af90 <pipe_getname+0xd0>
    aedf:	0f 82 a3 00 00 00    	jb     af88 <pipe_getname+0xc8>
    aee5:	83 f8 04             	cmp    $0x4,%eax
    aee8:	41 be 08 00 00 00    	mov    $0x8,%r14d
    aeee:	48 8d 35 7e cd 01 00 	lea    0x1cd7e(%rip),%rsi        # 27c73 <section_rodata+0x73>
    aef5:	0f 87 8d 00 00 00    	ja     af88 <pipe_getname+0xc8>
    aefb:	41 39 d6             	cmp    %edx,%r14d
    aefe:	41 bf f2 ff ff ff    	mov    $0xfffffff2,%r15d
    af04:	7d 6b                	jge    af71 <pipe_getname+0xb1>
    af06:	49 63 ce             	movslq %r14d,%rcx
    af09:	89 d3                	mov    %edx,%ebx
    af0b:	49 89 fd             	mov    %rdi,%r13
    af0e:	48 89 ca             	mov    %rcx,%rdx
    af11:	4c 89 e7             	mov    %r12,%rdi
    af14:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
    af18:	e8 d3 ac 00 00       	callq  15bf0 <memcpy>
    af1d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    af21:	41 83 c6 01          	add    $0x1,%r14d
    af25:	48 8d 15 05 de 01 00 	lea    0x1de05(%rip),%rdx        # 28d31 <slab_levels+0x1b1>
    af2c:	31 c0                	xor    %eax,%eax
    af2e:	4d 8d 44 0c 01       	lea    0x1(%r12,%rcx,1),%r8
    af33:	41 c6 04 0c 3a       	movb   $0x3a,(%r12,%rcx,1)
    af38:	41 89 dc             	mov    %ebx,%r12d
    af3b:	49 8b 4d 10          	mov    0x10(%r13),%rcx
    af3f:	45 29 f4             	sub    %r14d,%r12d
    af42:	4c 89 c7             	mov    %r8,%rdi
    af45:	44 89 e6             	mov    %r12d,%esi
    af48:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    af4c:	e8 cf c0 00 00       	callq  17020 <snprintf>
    af51:	4c 8b 45 c8          	mov    -0x38(%rbp),%r8
    af55:	48 63 d0             	movslq %eax,%rdx
    af58:	49 8d 54 10 ff       	lea    -0x1(%r8,%rdx,1),%rdx
    af5d:	80 3a 0a             	cmpb   $0xa,(%rdx)
    af60:	75 46                	jne    afa8 <pipe_getname+0xe8>
    af62:	83 e8 01             	sub    $0x1,%eax
    af65:	c6 02 00             	movb   $0x0,(%rdx)
    af68:	41 29 c4             	sub    %eax,%r12d
    af6b:	44 29 e3             	sub    %r12d,%ebx
    af6e:	41 89 df             	mov    %ebx,%r15d
    af71:	48 83 c4 18          	add    $0x18,%rsp
    af75:	44 89 f8             	mov    %r15d,%eax
    af78:	5b                   	pop    %rbx
    af79:	41 5c                	pop    %r12
    af7b:	41 5d                	pop    %r13
    af7d:	41 5e                	pop    %r14
    af7f:	41 5f                	pop    %r15
    af81:	5d                   	pop    %rbp
    af82:	c3                   	retq   
    af83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    af88:	41 bf fc ff ff ff    	mov    $0xfffffffc,%r15d
    af8e:	eb e1                	jmp    af71 <pipe_getname+0xb1>
    af90:	41 be 04 00 00 00    	mov    $0x4,%r14d
    af96:	48 8d 35 bc cc 01 00 	lea    0x1ccbc(%rip),%rsi        # 27c59 <section_rodata+0x59>
    af9d:	e9 59 ff ff ff       	jmpq   aefb <pipe_getname+0x3b>
    afa2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    afa8:	49 63 d4             	movslq %r12d,%rdx
    afab:	31 f6                	xor    %esi,%esi
    afad:	4c 89 c7             	mov    %r8,%rdi
    afb0:	e8 ab b4 00 00       	callq  16460 <memset>
    afb5:	eb ba                	jmp    af71 <pipe_getname+0xb1>
    afb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    afbe:	00 00 

000000000000afc0 <pipe_close>:
    afc0:	55                   	push   %rbp
    afc1:	48 89 e5             	mov    %rsp,%rbp
    afc4:	53                   	push   %rbx
    afc5:	48 89 fb             	mov    %rdi,%rbx
    afc8:	48 83 ec 08          	sub    $0x8,%rsp
    afcc:	83 3f 05             	cmpl   $0x5,(%rdi)
    afcf:	8b 7f 08             	mov    0x8(%rdi),%edi
    afd2:	74 1c                	je     aff0 <pipe_close+0x30>
    afd4:	83 ff ff             	cmp    $0xffffffff,%edi
    afd7:	74 0c                	je     afe5 <pipe_close+0x25>
    afd9:	e8 f2 60 00 00       	callq  110d0 <ocall_close>
    afde:	c7 43 08 ff ff ff ff 	movl   $0xffffffff,0x8(%rbx)
    afe5:	48 83 c4 08          	add    $0x8,%rsp
    afe9:	31 c0                	xor    %eax,%eax
    afeb:	5b                   	pop    %rbx
    afec:	5d                   	pop    %rbp
    afed:	c3                   	retq   
    afee:	66 90                	xchg   %ax,%ax
    aff0:	83 ff ff             	cmp    $0xffffffff,%edi
    aff3:	74 0c                	je     b001 <pipe_close+0x41>
    aff5:	e8 d6 60 00 00       	callq  110d0 <ocall_close>
    affa:	c7 43 08 ff ff ff ff 	movl   $0xffffffff,0x8(%rbx)
    b001:	8b 7b 0c             	mov    0xc(%rbx),%edi
    b004:	83 ff ff             	cmp    $0xffffffff,%edi
    b007:	74 dc                	je     afe5 <pipe_close+0x25>
    b009:	e8 c2 60 00 00       	callq  110d0 <ocall_close>
    b00e:	c7 43 0c ff ff ff ff 	movl   $0xffffffff,0xc(%rbx)
    b015:	48 83 c4 08          	add    $0x8,%rsp
    b019:	31 c0                	xor    %eax,%eax
    b01b:	5b                   	pop    %rbx
    b01c:	5d                   	pop    %rbp
    b01d:	c3                   	retq   
    b01e:	66 90                	xchg   %ax,%ax

000000000000b020 <pipe_path.constprop.1>:
    b020:	55                   	push   %rbp
    b021:	ba 6c 00 00 00       	mov    $0x6c,%edx
    b026:	48 89 e5             	mov    %rsp,%rbp
    b029:	41 54                	push   %r12
    b02b:	53                   	push   %rbx
    b02c:	48 89 f3             	mov    %rsi,%rbx
    b02f:	41 89 fc             	mov    %edi,%r12d
    b032:	31 f6                	xor    %esi,%esi
    b034:	48 89 df             	mov    %rbx,%rdi
    b037:	e8 24 b4 00 00       	callq  16460 <memset>
    b03c:	48 8d 05 3d 38 22 04 	lea    0x422383d(%rip),%rax        # 422e880 <pal_sec>
    b043:	48 8d 7b 01          	lea    0x1(%rbx),%rdi
    b047:	45 89 e0             	mov    %r12d,%r8d
    b04a:	5b                   	pop    %rbx
    b04b:	41 5c                	pop    %r12
    b04d:	5d                   	pop    %rbp
    b04e:	48 8d 88 bc 03 00 00 	lea    0x3bc(%rax),%rcx
    b055:	48 8d 15 da dc 01 00 	lea    0x1dcda(%rip),%rdx        # 28d36 <slab_levels+0x1b6>
    b05c:	be 6b 00 00 00       	mov    $0x6b,%esi
    b061:	31 c0                	xor    %eax,%eax
    b063:	e9 b8 bf 00 00       	jmpq   17020 <snprintf>
    b068:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b06f:	00 

000000000000b070 <pipe_open>:
    b070:	55                   	push   %rbp
    b071:	48 89 e5             	mov    %rsp,%rbp
    b074:	41 57                	push   %r15
    b076:	41 56                	push   %r14
    b078:	41 55                	push   %r13
    b07a:	41 54                	push   %r12
    b07c:	49 89 f4             	mov    %rsi,%r12
    b07f:	53                   	push   %rbx
    b080:	48 8d 35 b6 dc 01 00 	lea    0x1dcb6(%rip),%rsi        # 28d3d <slab_levels+0x1bd>
    b087:	49 89 fe             	mov    %rdi,%r14
    b08a:	49 89 d5             	mov    %rdx,%r13
    b08d:	4c 89 e7             	mov    %r12,%rdi
    b090:	ba 05 00 00 00       	mov    $0x5,%edx
    b095:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    b09c:	e8 ef a5 00 00       	callq  15690 <memcmp>
    b0a1:	85 c0                	test   %eax,%eax
    b0a3:	75 0b                	jne    b0b0 <pipe_open+0x40>
    b0a5:	41 80 7d 00 00       	cmpb   $0x0,0x0(%r13)
    b0aa:	0f 84 c0 01 00 00    	je     b270 <pipe_open+0x200>
    b0b0:	48 8d b5 38 ff ff ff 	lea    -0xc8(%rbp),%rsi
    b0b7:	4c 89 ef             	mov    %r13,%rdi
    b0ba:	ba 0a 00 00 00       	mov    $0xa,%edx
    b0bf:	e8 3c a3 00 00       	callq  15400 <strtol>
    b0c4:	49 89 c5             	mov    %rax,%r13
    b0c7:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    b0ce:	80 38 00             	cmpb   $0x0,(%rax)
    b0d1:	0f 85 09 02 00 00    	jne    b2e0 <pipe_open+0x270>
    b0d7:	48 8d 35 65 dc 01 00 	lea    0x1dc65(%rip),%rsi        # 28d43 <slab_levels+0x1c3>
    b0de:	ba 09 00 00 00       	mov    $0x9,%edx
    b0e3:	4c 89 e7             	mov    %r12,%rdi
    b0e6:	e8 a5 a5 00 00       	callq  15690 <memcmp>
    b0eb:	85 c0                	test   %eax,%eax
    b0ed:	89 c3                	mov    %eax,%ebx
    b0ef:	0f 84 d3 00 00 00    	je     b1c8 <pipe_open+0x158>
    b0f5:	48 8d 35 41 dc 01 00 	lea    0x1dc41(%rip),%rsi        # 28d3d <slab_levels+0x1bd>
    b0fc:	ba 05 00 00 00       	mov    $0x5,%edx
    b101:	4c 89 e7             	mov    %r12,%rdi
    b104:	e8 87 a5 00 00       	callq  15690 <memcmp>
    b109:	85 c0                	test   %eax,%eax
    b10b:	89 c3                	mov    %eax,%ebx
    b10d:	0f 85 cd 01 00 00    	jne    b2e0 <pipe_open+0x270>
    b113:	4c 8d bd 60 ff ff ff 	lea    -0xa0(%rbp),%r15
    b11a:	b9 01 00 00 00       	mov    $0x1,%ecx
    b11f:	44 89 ef             	mov    %r13d,%edi
    b122:	66 89 8d 60 ff ff ff 	mov    %cx,-0xa0(%rbp)
    b129:	49 8d 77 02          	lea    0x2(%r15),%rsi
    b12d:	e8 ee fe ff ff       	callq  b020 <pipe_path.constprop.1>
    b132:	85 c0                	test   %eax,%eax
    b134:	0f 88 26 01 00 00    	js     b260 <pipe_open+0x1f0>
    b13a:	44 8b 65 10          	mov    0x10(%rbp),%r12d
    b13e:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    b145:	4c 89 f9             	mov    %r15,%rcx
    b148:	41 b8 6e 00 00 00    	mov    $0x6e,%r8d
    b14e:	bf 01 00 00 00       	mov    $0x1,%edi
    b153:	50                   	push   %rax
    b154:	6a 00                	pushq  $0x0
    b156:	41 81 e4 00 08 00 00 	and    $0x800,%r12d
    b15d:	41 83 fc 01          	cmp    $0x1,%r12d
    b161:	19 f6                	sbb    %esi,%esi
    b163:	31 d2                	xor    %edx,%edx
    b165:	45 31 c9             	xor    %r9d,%r9d
    b168:	81 e6 00 f8 ff ff    	and    $0xfffff800,%esi
    b16e:	81 c6 01 08 00 00    	add    $0x801,%esi
    b174:	e8 67 6b 00 00       	callq  11ce0 <ocall_sock_connect>
    b179:	41 89 c7             	mov    %eax,%r15d
    b17c:	45 85 ff             	test   %r15d,%r15d
    b17f:	58                   	pop    %rax
    b180:	5a                   	pop    %rdx
    b181:	0f 88 d1 00 00 00    	js     b258 <pipe_open+0x1e8>
    b187:	bf 58 00 00 00       	mov    $0x58,%edi
    b18c:	e8 8f de ff ff       	callq  9020 <malloc>
    b191:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
    b197:	c7 40 04 49 00 00 00 	movl   $0x49,0x4(%rax)
    b19e:	45 85 e4             	test   %r12d,%r12d
    b1a1:	44 89 78 08          	mov    %r15d,0x8(%rax)
    b1a5:	4c 89 68 10          	mov    %r13,0x10(%rax)
    b1a9:	0f 95 40 18          	setne  0x18(%rax)
    b1ad:	49 89 06             	mov    %rax,(%r14)
    b1b0:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    b1b4:	89 d8                	mov    %ebx,%eax
    b1b6:	5b                   	pop    %rbx
    b1b7:	41 5c                	pop    %r12
    b1b9:	41 5d                	pop    %r13
    b1bb:	41 5e                	pop    %r14
    b1bd:	41 5f                	pop    %r15
    b1bf:	5d                   	pop    %rbp
    b1c0:	c3                   	retq   
    b1c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b1c8:	4c 8d bd 60 ff ff ff 	lea    -0xa0(%rbp),%r15
    b1cf:	be 01 00 00 00       	mov    $0x1,%esi
    b1d4:	44 89 ef             	mov    %r13d,%edi
    b1d7:	66 89 b5 60 ff ff ff 	mov    %si,-0xa0(%rbp)
    b1de:	49 8d 77 02          	lea    0x2(%r15),%rsi
    b1e2:	e8 39 fe ff ff       	callq  b020 <pipe_path.constprop.1>
    b1e7:	85 c0                	test   %eax,%eax
    b1e9:	78 75                	js     b260 <pipe_open+0x1f0>
    b1eb:	44 8b 65 10          	mov    0x10(%rbp),%r12d
    b1ef:	4c 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%r9
    b1f6:	4c 8d 85 34 ff ff ff 	lea    -0xcc(%rbp),%r8
    b1fd:	4c 89 f9             	mov    %r15,%rcx
    b200:	bf 01 00 00 00       	mov    $0x1,%edi
    b205:	c7 85 34 ff ff ff 6e 	movl   $0x6e,-0xcc(%rbp)
    b20c:	00 00 00 
    b20f:	41 81 e4 00 08 00 00 	and    $0x800,%r12d
    b216:	41 83 fc 01          	cmp    $0x1,%r12d
    b21a:	19 f6                	sbb    %esi,%esi
    b21c:	31 d2                	xor    %edx,%edx
    b21e:	81 e6 00 f8 ff ff    	and    $0xfffff800,%esi
    b224:	81 c6 01 08 00 00    	add    $0x801,%esi
    b22a:	e8 c1 67 00 00       	callq  119f0 <ocall_sock_listen>
    b22f:	85 c0                	test   %eax,%eax
    b231:	41 89 c7             	mov    %eax,%r15d
    b234:	78 22                	js     b258 <pipe_open+0x1e8>
    b236:	bf 58 00 00 00       	mov    $0x58,%edi
    b23b:	e8 e0 dd ff ff       	callq  9020 <malloc>
    b240:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
    b246:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    b24d:	e9 4c ff ff ff       	jmpq   b19e <pipe_open+0x12e>
    b252:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b258:	44 89 fb             	mov    %r15d,%ebx
    b25b:	e9 50 ff ff ff       	jmpq   b1b0 <pipe_open+0x140>
    b260:	89 c3                	mov    %eax,%ebx
    b262:	e9 49 ff ff ff       	jmpq   b1b0 <pipe_open+0x140>
    b267:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b26e:	00 00 
    b270:	44 8b 65 10          	mov    0x10(%rbp),%r12d
    b274:	48 8d 8d 60 ff ff ff 	lea    -0xa0(%rbp),%rcx
    b27b:	bf 01 00 00 00       	mov    $0x1,%edi
    b280:	89 c3                	mov    %eax,%ebx
    b282:	41 81 e4 00 08 00 00 	and    $0x800,%r12d
    b289:	41 83 fc 01          	cmp    $0x1,%r12d
    b28d:	19 f6                	sbb    %esi,%esi
    b28f:	31 d2                	xor    %edx,%edx
    b291:	81 e6 00 f8 ff ff    	and    $0xfffff800,%esi
    b297:	81 c6 01 08 00 00    	add    $0x801,%esi
    b29d:	e8 be 66 00 00       	callq  11960 <ocall_socketpair>
    b2a2:	85 c0                	test   %eax,%eax
    b2a4:	78 ba                	js     b260 <pipe_open+0x1f0>
    b2a6:	bf 58 00 00 00       	mov    $0x58,%edi
    b2ab:	e8 70 dd ff ff       	callq  9020 <malloc>
    b2b0:	c7 00 05 00 00 00    	movl   $0x5,(%rax)
    b2b6:	c7 40 04 91 00 00 00 	movl   $0x91,0x4(%rax)
    b2bd:	45 85 e4             	test   %r12d,%r12d
    b2c0:	8b 95 60 ff ff ff    	mov    -0xa0(%rbp),%edx
    b2c6:	89 50 08             	mov    %edx,0x8(%rax)
    b2c9:	8b 95 64 ff ff ff    	mov    -0x9c(%rbp),%edx
    b2cf:	0f 95 40 10          	setne  0x10(%rax)
    b2d3:	89 50 0c             	mov    %edx,0xc(%rax)
    b2d6:	49 89 06             	mov    %rax,(%r14)
    b2d9:	e9 d2 fe ff ff       	jmpq   b1b0 <pipe_open+0x140>
    b2de:	66 90                	xchg   %ax,%ax
    b2e0:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx
    b2e5:	e9 c6 fe ff ff       	jmpq   b1b0 <pipe_open+0x140>
    b2ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000b2f0 <pipe_delete>:
    b2f0:	55                   	push   %rbp
    b2f1:	48 89 e5             	mov    %rsp,%rbp
    b2f4:	41 54                	push   %r12
    b2f6:	53                   	push   %rbx
    b2f7:	48 89 fb             	mov    %rdi,%rbx
    b2fa:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    b2fe:	8b 07                	mov    (%rdi),%eax
    b300:	83 f8 05             	cmp    $0x5,%eax
    b303:	74 3b                	je     b340 <pipe_delete+0x50>
    b305:	83 f8 03             	cmp    $0x3,%eax
    b308:	0f 84 0a 01 00 00    	je     b418 <pipe_delete+0x128>
    b30e:	8b 7b 08             	mov    0x8(%rbx),%edi
    b311:	83 ff ff             	cmp    $0xffffffff,%edi
    b314:	0f 84 ee 00 00 00    	je     b408 <pipe_delete+0x118>
    b31a:	83 fe 01             	cmp    $0x1,%esi
    b31d:	74 69                	je     b388 <pipe_delete+0x98>
    b31f:	83 fe 02             	cmp    $0x2,%esi
    b322:	0f 84 b8 00 00 00    	je     b3e0 <pipe_delete+0xf0>
    b328:	85 f6                	test   %esi,%esi
    b32a:	0f 84 c0 00 00 00    	je     b3f0 <pipe_delete+0x100>
    b330:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    b335:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    b339:	5b                   	pop    %rbx
    b33a:	41 5c                	pop    %r12
    b33c:	5d                   	pop    %rbp
    b33d:	c3                   	retq   
    b33e:	66 90                	xchg   %ax,%ax
    b340:	83 fe 01             	cmp    $0x1,%esi
    b343:	0f 84 f7 00 00 00    	je     b440 <pipe_delete+0x150>
    b349:	83 fe 02             	cmp    $0x2,%esi
    b34c:	74 52                	je     b3a0 <pipe_delete+0xb0>
    b34e:	85 f6                	test   %esi,%esi
    b350:	75 de                	jne    b330 <pipe_delete+0x40>
    b352:	8b 7f 08             	mov    0x8(%rdi),%edi
    b355:	83 ff ff             	cmp    $0xffffffff,%edi
    b358:	0f 84 a2 00 00 00    	je     b400 <pipe_delete+0x110>
    b35e:	89 b5 7c ff ff ff    	mov    %esi,-0x84(%rbp)
    b364:	e8 67 5d 00 00       	callq  110d0 <ocall_close>
    b369:	8b 7b 0c             	mov    0xc(%rbx),%edi
    b36c:	c7 43 08 ff ff ff ff 	movl   $0xffffffff,0x8(%rbx)
    b373:	8b b5 7c ff ff ff    	mov    -0x84(%rbp),%esi
    b379:	83 ff ff             	cmp    $0xffffffff,%edi
    b37c:	75 2a                	jne    b3a8 <pipe_delete+0xb8>
    b37e:	8b 03                	mov    (%rbx),%eax
    b380:	eb 83                	jmp    b305 <pipe_delete+0x15>
    b382:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b388:	31 f6                	xor    %esi,%esi
    b38a:	e8 21 72 00 00       	callq  125b0 <ocall_sock_shutdown>
    b38f:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    b393:	31 c0                	xor    %eax,%eax
    b395:	5b                   	pop    %rbx
    b396:	41 5c                	pop    %r12
    b398:	5d                   	pop    %rbp
    b399:	c3                   	retq   
    b39a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b3a0:	8b 7f 0c             	mov    0xc(%rdi),%edi
    b3a3:	83 ff ff             	cmp    $0xffffffff,%edi
    b3a6:	74 28                	je     b3d0 <pipe_delete+0xe0>
    b3a8:	89 b5 7c ff ff ff    	mov    %esi,-0x84(%rbp)
    b3ae:	e8 1d 5d 00 00       	callq  110d0 <ocall_close>
    b3b3:	c7 43 0c ff ff ff ff 	movl   $0xffffffff,0xc(%rbx)
    b3ba:	8b 03                	mov    (%rbx),%eax
    b3bc:	8b b5 7c ff ff ff    	mov    -0x84(%rbp),%esi
    b3c2:	e9 3e ff ff ff       	jmpq   b305 <pipe_delete+0x15>
    b3c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b3ce:	00 00 
    b3d0:	8b 7b 08             	mov    0x8(%rbx),%edi
    b3d3:	83 ff ff             	cmp    $0xffffffff,%edi
    b3d6:	74 30                	je     b408 <pipe_delete+0x118>
    b3d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b3df:	00 
    b3e0:	be 01 00 00 00       	mov    $0x1,%esi
    b3e5:	eb a3                	jmp    b38a <pipe_delete+0x9a>
    b3e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b3ee:	00 00 
    b3f0:	be 02 00 00 00       	mov    $0x2,%esi
    b3f5:	eb 93                	jmp    b38a <pipe_delete+0x9a>
    b3f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b3fe:	00 00 
    b400:	8b 7b 0c             	mov    0xc(%rbx),%edi
    b403:	83 ff ff             	cmp    $0xffffffff,%edi
    b406:	75 a0                	jne    b3a8 <pipe_delete+0xb8>
    b408:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    b40c:	31 c0                	xor    %eax,%eax
    b40e:	5b                   	pop    %rbx
    b40f:	41 5c                	pop    %r12
    b411:	5d                   	pop    %rbp
    b412:	c3                   	retq   
    b413:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b418:	4c 8d 65 80          	lea    -0x80(%rbp),%r12
    b41c:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    b420:	4c 89 e6             	mov    %r12,%rsi
    b423:	e8 f8 fb ff ff       	callq  b020 <pipe_path.constprop.1>
    b428:	4c 89 e7             	mov    %r12,%rdi
    b42b:	e8 20 75 00 00       	callq  12950 <ocall_delete>
    b430:	31 c0                	xor    %eax,%eax
    b432:	e9 fe fe ff ff       	jmpq   b335 <pipe_delete+0x45>
    b437:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b43e:	00 00 
    b440:	8b 7f 08             	mov    0x8(%rdi),%edi
    b443:	31 c0                	xor    %eax,%eax
    b445:	89 b5 7c ff ff ff    	mov    %esi,-0x84(%rbp)
    b44b:	83 ff ff             	cmp    $0xffffffff,%edi
    b44e:	0f 84 e1 fe ff ff    	je     b335 <pipe_delete+0x45>
    b454:	e8 77 5c 00 00       	callq  110d0 <ocall_close>
    b459:	c7 43 08 ff ff ff ff 	movl   $0xffffffff,0x8(%rbx)
    b460:	8b 03                	mov    (%rbx),%eax
    b462:	8b b5 7c ff ff ff    	mov    -0x84(%rbp),%esi
    b468:	e9 98 fe ff ff       	jmpq   b305 <pipe_delete+0x15>
    b46d:	0f 1f 00             	nopl   (%rax)

000000000000b470 <mcast_attrsetbyhdl>:
    b470:	55                   	push   %rbp
    b471:	48 89 fa             	mov    %rdi,%rdx
    b474:	48 89 e5             	mov    %rsp,%rbp
    b477:	41 55                	push   %r13
    b479:	41 54                	push   %r12
    b47b:	53                   	push   %rbx
    b47c:	48 83 ec 08          	sub    $0x8,%rsp
    b480:	8b 7f 08             	mov    0x8(%rdi),%edi
    b483:	83 ff ff             	cmp    $0xffffffff,%edi
    b486:	74 50                	je     b4d8 <mcast_attrsetbyhdl+0x68>
    b488:	0f b6 42 14          	movzbl 0x14(%rdx),%eax
    b48c:	45 31 ed             	xor    %r13d,%r13d
    b48f:	38 46 05             	cmp    %al,0x5(%rsi)
    b492:	74 1b                	je     b4af <mcast_attrsetbyhdl+0x3f>
    b494:	48 89 f3             	mov    %rsi,%rbx
    b497:	0f b6 f0             	movzbl %al,%esi
    b49a:	49 89 d4             	mov    %rdx,%r12
    b49d:	e8 5e 5f 00 00       	callq  11400 <ocall_fsetnonblock>
    b4a2:	85 c0                	test   %eax,%eax
    b4a4:	78 1a                	js     b4c0 <mcast_attrsetbyhdl+0x50>
    b4a6:	0f b6 43 05          	movzbl 0x5(%rbx),%eax
    b4aa:	41 88 44 24 14       	mov    %al,0x14(%r12)
    b4af:	48 83 c4 08          	add    $0x8,%rsp
    b4b3:	44 89 e8             	mov    %r13d,%eax
    b4b6:	5b                   	pop    %rbx
    b4b7:	41 5c                	pop    %r12
    b4b9:	41 5d                	pop    %r13
    b4bb:	5d                   	pop    %rbp
    b4bc:	c3                   	retq   
    b4bd:	0f 1f 00             	nopl   (%rax)
    b4c0:	48 83 c4 08          	add    $0x8,%rsp
    b4c4:	41 89 c5             	mov    %eax,%r13d
    b4c7:	5b                   	pop    %rbx
    b4c8:	44 89 e8             	mov    %r13d,%eax
    b4cb:	41 5c                	pop    %r12
    b4cd:	41 5d                	pop    %r13
    b4cf:	5d                   	pop    %rbp
    b4d0:	c3                   	retq   
    b4d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b4d8:	41 bd f9 ff ff ff    	mov    $0xfffffff9,%r13d
    b4de:	eb cf                	jmp    b4af <mcast_attrsetbyhdl+0x3f>

000000000000b4e0 <socket_attrsetbyhdl>:
    b4e0:	55                   	push   %rbp
    b4e1:	48 89 e5             	mov    %rsp,%rbp
    b4e4:	41 55                	push   %r13
    b4e6:	41 54                	push   %r12
    b4e8:	53                   	push   %rbx
    b4e9:	48 83 ec 18          	sub    $0x18,%rsp
    b4ed:	44 8b 6f 08          	mov    0x8(%rdi),%r13d
    b4f1:	41 83 fd ff          	cmp    $0xffffffff,%r13d
    b4f5:	0f 84 2d 02 00 00    	je     b728 <socket_attrsetbyhdl+0x248>
    b4fb:	49 89 f4             	mov    %rsi,%r12
    b4fe:	0f b6 76 05          	movzbl 0x5(%rsi),%esi
    b502:	48 89 fb             	mov    %rdi,%rbx
    b505:	40 3a 77 20          	cmp    0x20(%rdi),%sil
    b509:	74 19                	je     b524 <socket_attrsetbyhdl+0x44>
    b50b:	44 89 ef             	mov    %r13d,%edi
    b50e:	e8 ed 5e 00 00       	callq  11400 <ocall_fsetnonblock>
    b513:	85 c0                	test   %eax,%eax
    b515:	0f 88 48 01 00 00    	js     b663 <socket_attrsetbyhdl+0x183>
    b51b:	41 0f b6 44 24 05    	movzbl 0x5(%r12),%eax
    b521:	88 43 20             	mov    %al,0x20(%rbx)
    b524:	83 3b 09             	cmpl   $0x9,(%rbx)
    b527:	0f 84 43 01 00 00    	je     b670 <socket_attrsetbyhdl+0x190>
    b52d:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    b532:	48 3b 43 28          	cmp    0x28(%rbx),%rax
    b536:	74 3b                	je     b573 <socket_attrsetbyhdl+0x93>
    b538:	31 d2                	xor    %edx,%edx
    b53a:	48 85 c0             	test   %rax,%rax
    b53d:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    b541:	0f 95 c2             	setne  %dl
    b544:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    b54a:	be 01 00 00 00       	mov    $0x1,%esi
    b54f:	89 55 d0             	mov    %edx,-0x30(%rbp)
    b552:	44 89 ef             	mov    %r13d,%edi
    b555:	ba 0d 00 00 00       	mov    $0xd,%edx
    b55a:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    b55d:	e8 9e 6f 00 00       	callq  12500 <ocall_sock_setopt>
    b562:	85 c0                	test   %eax,%eax
    b564:	0f 88 f9 00 00 00    	js     b663 <socket_attrsetbyhdl+0x183>
    b56a:	49 8b 44 24 18       	mov    0x18(%r12),%rax
    b56f:	48 89 43 28          	mov    %rax,0x28(%rbx)
    b573:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    b578:	48 3b 43 30          	cmp    0x30(%rbx),%rax
    b57c:	74 30                	je     b5ae <socket_attrsetbyhdl+0xce>
    b57e:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    b582:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    b588:	ba 08 00 00 00       	mov    $0x8,%edx
    b58d:	be 01 00 00 00       	mov    $0x1,%esi
    b592:	44 89 ef             	mov    %r13d,%edi
    b595:	89 45 d0             	mov    %eax,-0x30(%rbp)
    b598:	e8 63 6f 00 00       	callq  12500 <ocall_sock_setopt>
    b59d:	85 c0                	test   %eax,%eax
    b59f:	0f 88 be 00 00 00    	js     b663 <socket_attrsetbyhdl+0x183>
    b5a5:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    b5aa:	48 89 43 30          	mov    %rax,0x30(%rbx)
    b5ae:	49 8b 44 24 28       	mov    0x28(%r12),%rax
    b5b3:	48 3b 43 38          	cmp    0x38(%rbx),%rax
    b5b7:	74 30                	je     b5e9 <socket_attrsetbyhdl+0x109>
    b5b9:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    b5bd:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    b5c3:	ba 07 00 00 00       	mov    $0x7,%edx
    b5c8:	be 01 00 00 00       	mov    $0x1,%esi
    b5cd:	44 89 ef             	mov    %r13d,%edi
    b5d0:	89 45 d0             	mov    %eax,-0x30(%rbp)
    b5d3:	e8 28 6f 00 00       	callq  12500 <ocall_sock_setopt>
    b5d8:	85 c0                	test   %eax,%eax
    b5da:	0f 88 83 00 00 00    	js     b663 <socket_attrsetbyhdl+0x183>
    b5e0:	49 8b 44 24 28       	mov    0x28(%r12),%rax
    b5e5:	48 89 43 38          	mov    %rax,0x38(%rbx)
    b5e9:	49 8b 44 24 30       	mov    0x30(%r12),%rax
    b5ee:	48 3b 43 40          	cmp    0x40(%rbx),%rax
    b5f2:	74 2c                	je     b620 <socket_attrsetbyhdl+0x140>
    b5f4:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    b5f8:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    b5fe:	ba 14 00 00 00       	mov    $0x14,%edx
    b603:	be 01 00 00 00       	mov    $0x1,%esi
    b608:	44 89 ef             	mov    %r13d,%edi
    b60b:	89 45 d0             	mov    %eax,-0x30(%rbp)
    b60e:	e8 ed 6e 00 00       	callq  12500 <ocall_sock_setopt>
    b613:	85 c0                	test   %eax,%eax
    b615:	78 4c                	js     b663 <socket_attrsetbyhdl+0x183>
    b617:	49 8b 44 24 30       	mov    0x30(%r12),%rax
    b61c:	48 89 43 40          	mov    %rax,0x40(%rbx)
    b620:	49 8b 44 24 38       	mov    0x38(%r12),%rax
    b625:	48 3b 43 48          	cmp    0x48(%rbx),%rax
    b629:	74 2c                	je     b657 <socket_attrsetbyhdl+0x177>
    b62b:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    b62f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    b635:	ba 15 00 00 00       	mov    $0x15,%edx
    b63a:	be 01 00 00 00       	mov    $0x1,%esi
    b63f:	44 89 ef             	mov    %r13d,%edi
    b642:	89 45 d0             	mov    %eax,-0x30(%rbp)
    b645:	e8 b6 6e 00 00       	callq  12500 <ocall_sock_setopt>
    b64a:	85 c0                	test   %eax,%eax
    b64c:	78 15                	js     b663 <socket_attrsetbyhdl+0x183>
    b64e:	49 8b 44 24 38       	mov    0x38(%r12),%rax
    b653:	48 89 43 48          	mov    %rax,0x48(%rbx)
    b657:	8b 03                	mov    (%rbx),%eax
    b659:	83 e8 08             	sub    $0x8,%eax
    b65c:	83 f8 01             	cmp    $0x1,%eax
    b65f:	76 0f                	jbe    b670 <socket_attrsetbyhdl+0x190>
    b661:	31 c0                	xor    %eax,%eax
    b663:	48 83 c4 18          	add    $0x18,%rsp
    b667:	5b                   	pop    %rbx
    b668:	41 5c                	pop    %r12
    b66a:	41 5d                	pop    %r13
    b66c:	5d                   	pop    %rbp
    b66d:	c3                   	retq   
    b66e:	66 90                	xchg   %ax,%ax
    b670:	41 0f b6 44 24 40    	movzbl 0x40(%r12),%eax
    b676:	3a 43 50             	cmp    0x50(%rbx),%al
    b679:	74 2c                	je     b6a7 <socket_attrsetbyhdl+0x1c7>
    b67b:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    b67f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    b685:	ba 03 00 00 00       	mov    $0x3,%edx
    b68a:	be 06 00 00 00       	mov    $0x6,%esi
    b68f:	44 89 ef             	mov    %r13d,%edi
    b692:	89 45 d0             	mov    %eax,-0x30(%rbp)
    b695:	e8 66 6e 00 00       	callq  12500 <ocall_sock_setopt>
    b69a:	85 c0                	test   %eax,%eax
    b69c:	78 c5                	js     b663 <socket_attrsetbyhdl+0x183>
    b69e:	41 0f b6 44 24 40    	movzbl 0x40(%r12),%eax
    b6a4:	88 43 50             	mov    %al,0x50(%rbx)
    b6a7:	41 0f b6 44 24 41    	movzbl 0x41(%r12),%eax
    b6ad:	3a 43 51             	cmp    0x51(%rbx),%al
    b6b0:	74 2c                	je     b6de <socket_attrsetbyhdl+0x1fe>
    b6b2:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    b6b6:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    b6bc:	ba 09 00 00 00       	mov    $0x9,%edx
    b6c1:	be 01 00 00 00       	mov    $0x1,%esi
    b6c6:	44 89 ef             	mov    %r13d,%edi
    b6c9:	89 45 d0             	mov    %eax,-0x30(%rbp)
    b6cc:	e8 2f 6e 00 00       	callq  12500 <ocall_sock_setopt>
    b6d1:	85 c0                	test   %eax,%eax
    b6d3:	78 8e                	js     b663 <socket_attrsetbyhdl+0x183>
    b6d5:	41 0f b6 44 24 41    	movzbl 0x41(%r12),%eax
    b6db:	88 43 51             	mov    %al,0x51(%rbx)
    b6de:	41 0f b6 44 24 42    	movzbl 0x42(%r12),%eax
    b6e4:	3a 43 52             	cmp    0x52(%rbx),%al
    b6e7:	0f 84 74 ff ff ff    	je     b661 <socket_attrsetbyhdl+0x181>
    b6ed:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    b6f1:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    b6f7:	ba 01 00 00 00       	mov    $0x1,%edx
    b6fc:	be 06 00 00 00       	mov    $0x6,%esi
    b701:	44 89 ef             	mov    %r13d,%edi
    b704:	89 45 d0             	mov    %eax,-0x30(%rbp)
    b707:	e8 f4 6d 00 00       	callq  12500 <ocall_sock_setopt>
    b70c:	85 c0                	test   %eax,%eax
    b70e:	0f 88 4f ff ff ff    	js     b663 <socket_attrsetbyhdl+0x183>
    b714:	41 0f b6 44 24 42    	movzbl 0x42(%r12),%eax
    b71a:	88 43 52             	mov    %al,0x52(%rbx)
    b71d:	31 c0                	xor    %eax,%eax
    b71f:	e9 3f ff ff ff       	jmpq   b663 <socket_attrsetbyhdl+0x183>
    b724:	0f 1f 40 00          	nopl   0x0(%rax)
    b728:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    b72d:	e9 31 ff ff ff       	jmpq   b663 <socket_attrsetbyhdl+0x183>
    b732:	0f 1f 40 00          	nopl   0x0(%rax)
    b736:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b73d:	00 00 00 

000000000000b740 <socket_attrquerybyhdl>:
    b740:	55                   	push   %rbp
    b741:	48 89 e5             	mov    %rsp,%rbp
    b744:	41 54                	push   %r12
    b746:	53                   	push   %rbx
    b747:	48 83 ec 10          	sub    $0x10,%rsp
    b74b:	44 8b 67 08          	mov    0x8(%rdi),%r12d
    b74f:	41 83 fc ff          	cmp    $0xffffffff,%r12d
    b753:	0f 84 d7 00 00 00    	je     b830 <socket_attrquerybyhdl+0xf0>
    b759:	8b 47 04             	mov    0x4(%rdi),%eax
    b75c:	8b 0f                	mov    (%rdi),%ecx
    b75e:	48 89 f3             	mov    %rsi,%rbx
    b761:	89 c2                	mov    %eax,%edx
    b763:	89 0e                	mov    %ecx,(%rsi)
    b765:	c1 e8 06             	shr    $0x6,%eax
    b768:	c1 ea 09             	shr    $0x9,%edx
    b76b:	83 e0 01             	and    $0x1,%eax
    b76e:	83 e2 01             	and    $0x1,%edx
    b771:	83 f9 09             	cmp    $0x9,%ecx
    b774:	88 56 04             	mov    %dl,0x4(%rsi)
    b777:	0f b6 57 20          	movzbl 0x20(%rdi),%edx
    b77b:	88 46 07             	mov    %al,0x7(%rsi)
    b77e:	48 c7 46 10 00 00 00 	movq   $0x0,0x10(%rsi)
    b785:	00 
    b786:	88 56 05             	mov    %dl,0x5(%rsi)
    b789:	48 8b 47 28          	mov    0x28(%rdi),%rax
    b78d:	48 89 46 18          	mov    %rax,0x18(%rsi)
    b791:	48 8b 47 30          	mov    0x30(%rdi),%rax
    b795:	48 89 46 20          	mov    %rax,0x20(%rsi)
    b799:	48 8b 47 38          	mov    0x38(%rdi),%rax
    b79d:	48 89 46 28          	mov    %rax,0x28(%rsi)
    b7a1:	48 8b 47 40          	mov    0x40(%rdi),%rax
    b7a5:	48 89 46 30          	mov    %rax,0x30(%rsi)
    b7a9:	48 8b 47 48          	mov    0x48(%rdi),%rax
    b7ad:	48 89 46 38          	mov    %rax,0x38(%rsi)
    b7b1:	0f b6 47 50          	movzbl 0x50(%rdi),%eax
    b7b5:	88 46 40             	mov    %al,0x40(%rsi)
    b7b8:	0f b6 47 51          	movzbl 0x51(%rdi),%eax
    b7bc:	88 46 41             	mov    %al,0x41(%rsi)
    b7bf:	0f b6 47 52          	movzbl 0x52(%rdi),%eax
    b7c3:	88 46 42             	mov    %al,0x42(%rsi)
    b7c6:	74 12                	je     b7da <socket_attrquerybyhdl+0x9a>
    b7c8:	44 89 e7             	mov    %r12d,%edi
    b7cb:	e8 e0 5b 00 00       	callq  113b0 <ocall_fionread>
    b7d0:	85 c0                	test   %eax,%eax
    b7d2:	78 43                	js     b817 <socket_attrquerybyhdl+0xd7>
    b7d4:	48 98                	cltq   
    b7d6:	48 89 43 10          	mov    %rax,0x10(%rbx)
    b7da:	31 d2                	xor    %edx,%edx
    b7dc:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
    b7e0:	b8 01 00 00 00       	mov    $0x1,%eax
    b7e5:	66 89 55 e6          	mov    %dx,-0x1a(%rbp)
    b7e9:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    b7ed:	be 01 00 00 00       	mov    $0x1,%esi
    b7f2:	44 89 65 e0          	mov    %r12d,-0x20(%rbp)
    b7f6:	66 89 45 e4          	mov    %ax,-0x1c(%rbp)
    b7fa:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    b801:	00 
    b802:	e8 19 6f 00 00       	callq  12720 <ocall_poll>
    b807:	85 c0                	test   %eax,%eax
    b809:	78 0c                	js     b817 <socket_attrquerybyhdl+0xd7>
    b80b:	31 d2                	xor    %edx,%edx
    b80d:	83 f8 01             	cmp    $0x1,%eax
    b810:	74 0e                	je     b820 <socket_attrquerybyhdl+0xe0>
    b812:	88 53 06             	mov    %dl,0x6(%rbx)
    b815:	31 c0                	xor    %eax,%eax
    b817:	48 83 c4 10          	add    $0x10,%rsp
    b81b:	5b                   	pop    %rbx
    b81c:	41 5c                	pop    %r12
    b81e:	5d                   	pop    %rbp
    b81f:	c3                   	retq   
    b820:	66 83 7d e6 01       	cmpw   $0x1,-0x1a(%rbp)
    b825:	0f 94 c2             	sete   %dl
    b828:	eb e8                	jmp    b812 <socket_attrquerybyhdl+0xd2>
    b82a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b830:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    b835:	eb e0                	jmp    b817 <socket_attrquerybyhdl+0xd7>
    b837:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b83e:	00 00 

000000000000b840 <socket_close>:
    b840:	55                   	push   %rbp
    b841:	48 89 e5             	mov    %rsp,%rbp
    b844:	53                   	push   %rbx
    b845:	48 89 fb             	mov    %rdi,%rbx
    b848:	48 83 ec 08          	sub    $0x8,%rsp
    b84c:	8b 7f 08             	mov    0x8(%rdi),%edi
    b84f:	83 ff ff             	cmp    $0xffffffff,%edi
    b852:	74 0c                	je     b860 <socket_close+0x20>
    b854:	e8 77 58 00 00       	callq  110d0 <ocall_close>
    b859:	c7 43 08 ff ff ff ff 	movl   $0xffffffff,0x8(%rbx)
    b860:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
    b865:	74 08                	je     b86f <socket_close+0x2f>
    b867:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
    b86e:	00 
    b86f:	48 83 7b 18 00       	cmpq   $0x0,0x18(%rbx)
    b874:	74 08                	je     b87e <socket_close+0x3e>
    b876:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
    b87d:	00 
    b87e:	48 83 c4 08          	add    $0x8,%rsp
    b882:	31 c0                	xor    %eax,%eax
    b884:	5b                   	pop    %rbx
    b885:	5d                   	pop    %rbp
    b886:	c3                   	retq   
    b887:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b88e:	00 00 

000000000000b890 <mcast_close>:
    b890:	55                   	push   %rbp
    b891:	48 89 e5             	mov    %rsp,%rbp
    b894:	53                   	push   %rbx
    b895:	48 89 fb             	mov    %rdi,%rbx
    b898:	48 83 ec 08          	sub    $0x8,%rsp
    b89c:	8b 7f 0c             	mov    0xc(%rdi),%edi
    b89f:	83 ff ff             	cmp    $0xffffffff,%edi
    b8a2:	74 0c                	je     b8b0 <mcast_close+0x20>
    b8a4:	e8 27 58 00 00       	callq  110d0 <ocall_close>
    b8a9:	c7 43 0c ff ff ff ff 	movl   $0xffffffff,0xc(%rbx)
    b8b0:	8b 7b 08             	mov    0x8(%rbx),%edi
    b8b3:	83 ff ff             	cmp    $0xffffffff,%edi
    b8b6:	74 0c                	je     b8c4 <mcast_close+0x34>
    b8b8:	e8 13 58 00 00       	callq  110d0 <ocall_close>
    b8bd:	c7 43 08 ff ff ff ff 	movl   $0xffffffff,0x8(%rbx)
    b8c4:	48 83 c4 08          	add    $0x8,%rsp
    b8c8:	31 c0                	xor    %eax,%eax
    b8ca:	5b                   	pop    %rbx
    b8cb:	5d                   	pop    %rbp
    b8cc:	c3                   	retq   
    b8cd:	0f 1f 00             	nopl   (%rax)

000000000000b8d0 <mcast_attrquerybyhdl>:
    b8d0:	55                   	push   %rbp
    b8d1:	48 89 e5             	mov    %rsp,%rbp
    b8d4:	41 55                	push   %r13
    b8d6:	41 54                	push   %r12
    b8d8:	53                   	push   %rbx
    b8d9:	48 83 ec 08          	sub    $0x8,%rsp
    b8dd:	8b 47 08             	mov    0x8(%rdi),%eax
    b8e0:	83 f8 ff             	cmp    $0xffffffff,%eax
    b8e3:	74 63                	je     b948 <mcast_attrquerybyhdl+0x78>
    b8e5:	49 89 fd             	mov    %rdi,%r13
    b8e8:	89 c7                	mov    %eax,%edi
    b8ea:	48 89 f3             	mov    %rsi,%rbx
    b8ed:	e8 be 5a 00 00       	callq  113b0 <ocall_fionread>
    b8f2:	4c 63 e0             	movslq %eax,%r12
    b8f5:	45 85 e4             	test   %r12d,%r12d
    b8f8:	78 39                	js     b933 <mcast_attrquerybyhdl+0x63>
    b8fa:	31 f6                	xor    %esi,%esi
    b8fc:	ba 48 00 00 00       	mov    $0x48,%edx
    b901:	48 89 df             	mov    %rbx,%rdi
    b904:	e8 57 ab 00 00       	callq  16460 <memset>
    b909:	41 8b 45 04          	mov    0x4(%r13),%eax
    b90d:	4c 89 63 10          	mov    %r12,0x10(%rbx)
    b911:	f6 c4 06             	test   $0x6,%ah
    b914:	0f 95 43 04          	setne  0x4(%rbx)
    b918:	4d 85 e4             	test   %r12,%r12
    b91b:	0f 95 43 06          	setne  0x6(%rbx)
    b91f:	c1 e8 07             	shr    $0x7,%eax
    b922:	45 31 e4             	xor    %r12d,%r12d
    b925:	83 e0 01             	and    $0x1,%eax
    b928:	88 43 07             	mov    %al,0x7(%rbx)
    b92b:	41 0f b6 45 14       	movzbl 0x14(%r13),%eax
    b930:	88 43 05             	mov    %al,0x5(%rbx)
    b933:	48 83 c4 08          	add    $0x8,%rsp
    b937:	44 89 e0             	mov    %r12d,%eax
    b93a:	5b                   	pop    %rbx
    b93b:	41 5c                	pop    %r12
    b93d:	41 5d                	pop    %r13
    b93f:	5d                   	pop    %rbp
    b940:	c3                   	retq   
    b941:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b948:	41 bc f9 ff ff ff    	mov    $0xfffffff9,%r12d
    b94e:	eb e3                	jmp    b933 <mcast_attrquerybyhdl+0x63>

000000000000b950 <socket_delete>:
    b950:	55                   	push   %rbp
    b951:	8b 4f 08             	mov    0x8(%rdi),%ecx
    b954:	48 89 e5             	mov    %rsp,%rbp
    b957:	83 f9 ff             	cmp    $0xffffffff,%ecx
    b95a:	74 54                	je     b9b0 <socket_delete+0x60>
    b95c:	8b 17                	mov    (%rdi),%edx
    b95e:	83 fa 08             	cmp    $0x8,%edx
    b961:	74 09                	je     b96c <socket_delete+0x1c>
    b963:	85 f6                	test   %esi,%esi
    b965:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    b96a:	75 0a                	jne    b976 <socket_delete+0x26>
    b96c:	83 ea 08             	sub    $0x8,%edx
    b96f:	31 c0                	xor    %eax,%eax
    b971:	83 fa 01             	cmp    $0x1,%edx
    b974:	76 0a                	jbe    b980 <socket_delete+0x30>
    b976:	5d                   	pop    %rbp
    b977:	c3                   	retq   
    b978:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b97f:	00 
    b980:	83 fe 01             	cmp    $0x1,%esi
    b983:	74 33                	je     b9b8 <socket_delete+0x68>
    b985:	83 fe 02             	cmp    $0x2,%esi
    b988:	74 16                	je     b9a0 <socket_delete+0x50>
    b98a:	85 f6                	test   %esi,%esi
    b98c:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    b991:	75 e3                	jne    b976 <socket_delete+0x26>
    b993:	be 02 00 00 00       	mov    $0x2,%esi
    b998:	eb 0b                	jmp    b9a5 <socket_delete+0x55>
    b99a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b9a0:	be 01 00 00 00       	mov    $0x1,%esi
    b9a5:	89 cf                	mov    %ecx,%edi
    b9a7:	e8 04 6c 00 00       	callq  125b0 <ocall_sock_shutdown>
    b9ac:	31 c0                	xor    %eax,%eax
    b9ae:	5d                   	pop    %rbp
    b9af:	c3                   	retq   
    b9b0:	31 c0                	xor    %eax,%eax
    b9b2:	5d                   	pop    %rbp
    b9b3:	c3                   	retq   
    b9b4:	0f 1f 40 00          	nopl   0x0(%rax)
    b9b8:	31 f6                	xor    %esi,%esi
    b9ba:	eb e9                	jmp    b9a5 <socket_delete+0x55>
    b9bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b9c0 <tcp_write>:
    b9c0:	83 3f 08             	cmpl   $0x8,(%rdi)
    b9c3:	48 c7 c0 ea ff ff ff 	mov    $0xffffffffffffffea,%rax
    b9ca:	75 55                	jne    ba21 <tcp_write+0x61>
    b9cc:	48 83 7f 18 00       	cmpq   $0x0,0x18(%rdi)
    b9d1:	49 89 f8             	mov    %rdi,%r8
    b9d4:	74 4b                	je     ba21 <tcp_write+0x61>
    b9d6:	8b 7f 08             	mov    0x8(%rdi),%edi
    b9d9:	83 ff ff             	cmp    $0xffffffff,%edi
    b9dc:	74 62                	je     ba40 <tcp_write+0x80>
    b9de:	be ff ff ff ff       	mov    $0xffffffff,%esi
    b9e3:	48 c7 c0 fc ff ff ff 	mov    $0xfffffffffffffffc,%rax
    b9ea:	48 39 f2             	cmp    %rsi,%rdx
    b9ed:	77 32                	ja     ba21 <tcp_write+0x61>
    b9ef:	55                   	push   %rbp
    b9f0:	48 89 ce             	mov    %rcx,%rsi
    b9f3:	31 c9                	xor    %ecx,%ecx
    b9f5:	48 89 e5             	mov    %rsp,%rbp
    b9f8:	41 54                	push   %r12
    b9fa:	53                   	push   %rbx
    b9fb:	4c 89 c3             	mov    %r8,%rbx
    b9fe:	45 31 c0             	xor    %r8d,%r8d
    ba01:	49 89 d4             	mov    %rdx,%r12
    ba04:	e8 d7 66 00 00       	callq  120e0 <ocall_sock_send>
    ba09:	83 f8 ed             	cmp    $0xffffffed,%eax
    ba0c:	74 1a                	je     ba28 <tcp_write+0x68>
    ba0e:	85 c0                	test   %eax,%eax
    ba10:	78 1a                	js     ba2c <tcp_write+0x6c>
    ba12:	48 98                	cltq   
    ba14:	49 39 c4             	cmp    %rax,%r12
    ba17:	74 17                	je     ba30 <tcp_write+0x70>
    ba19:	83 63 04 bf          	andl   $0xffffffbf,0x4(%rbx)
    ba1d:	5b                   	pop    %rbx
    ba1e:	41 5c                	pop    %r12
    ba20:	5d                   	pop    %rbp
    ba21:	f3 c3                	repz retq 
    ba23:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ba28:	83 63 04 bf          	andl   $0xffffffbf,0x4(%rbx)
    ba2c:	48 98                	cltq   
    ba2e:	eb ed                	jmp    ba1d <tcp_write+0x5d>
    ba30:	83 4b 04 40          	orl    $0x40,0x4(%rbx)
    ba34:	eb e7                	jmp    ba1d <tcp_write+0x5d>
    ba36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ba3d:	00 00 00 
    ba40:	48 c7 c0 e8 ff ff ff 	mov    $0xffffffffffffffe8,%rax
    ba47:	c3                   	retq   
    ba48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ba4f:	00 

000000000000ba50 <udp_send>:
    ba50:	83 3f 0a             	cmpl   $0xa,(%rdi)
    ba53:	48 c7 c0 ea ff ff ff 	mov    $0xffffffffffffffea,%rax
    ba5a:	75 4e                	jne    baaa <udp_send+0x5a>
    ba5c:	49 89 f8             	mov    %rdi,%r8
    ba5f:	8b 7f 08             	mov    0x8(%rdi),%edi
    ba62:	83 ff ff             	cmp    $0xffffffff,%edi
    ba65:	74 69                	je     bad0 <udp_send+0x80>
    ba67:	be ff ff ff ff       	mov    $0xffffffff,%esi
    ba6c:	48 c7 c0 fc ff ff ff 	mov    $0xfffffffffffffffc,%rax
    ba73:	48 39 f2             	cmp    %rsi,%rdx
    ba76:	77 32                	ja     baaa <udp_send+0x5a>
    ba78:	55                   	push   %rbp
    ba79:	48 89 ce             	mov    %rcx,%rsi
    ba7c:	31 c9                	xor    %ecx,%ecx
    ba7e:	48 89 e5             	mov    %rsp,%rbp
    ba81:	41 54                	push   %r12
    ba83:	53                   	push   %rbx
    ba84:	4c 89 c3             	mov    %r8,%rbx
    ba87:	45 31 c0             	xor    %r8d,%r8d
    ba8a:	49 89 d4             	mov    %rdx,%r12
    ba8d:	e8 4e 66 00 00       	callq  120e0 <ocall_sock_send>
    ba92:	83 f8 ed             	cmp    $0xffffffed,%eax
    ba95:	74 19                	je     bab0 <udp_send+0x60>
    ba97:	85 c0                	test   %eax,%eax
    ba99:	78 19                	js     bab4 <udp_send+0x64>
    ba9b:	48 98                	cltq   
    ba9d:	49 39 c4             	cmp    %rax,%r12
    baa0:	74 1e                	je     bac0 <udp_send+0x70>
    baa2:	83 63 04 bf          	andl   $0xffffffbf,0x4(%rbx)
    baa6:	5b                   	pop    %rbx
    baa7:	41 5c                	pop    %r12
    baa9:	5d                   	pop    %rbp
    baaa:	f3 c3                	repz retq 
    baac:	0f 1f 40 00          	nopl   0x0(%rax)
    bab0:	83 63 04 bf          	andl   $0xffffffbf,0x4(%rbx)
    bab4:	48 98                	cltq   
    bab6:	eb ee                	jmp    baa6 <udp_send+0x56>
    bab8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    babf:	00 
    bac0:	83 4b 04 40          	orl    $0x40,0x4(%rbx)
    bac4:	eb e0                	jmp    baa6 <udp_send+0x56>
    bac6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    bacd:	00 00 00 
    bad0:	48 c7 c0 f9 ff ff ff 	mov    $0xfffffffffffffff9,%rax
    bad7:	c3                   	retq   
    bad8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    badf:	00 

000000000000bae0 <mcast_send>:
    bae0:	49 89 f8             	mov    %rdi,%r8
    bae3:	8b 7f 0c             	mov    0xc(%rdi),%edi
    bae6:	83 ff ff             	cmp    $0xffffffff,%edi
    bae9:	74 6d                	je     bb58 <mcast_send+0x78>
    baeb:	be ff ff ff ff       	mov    $0xffffffff,%esi
    baf0:	48 c7 c0 fc ff ff ff 	mov    $0xfffffffffffffffc,%rax
    baf7:	48 39 f2             	cmp    %rsi,%rdx
    bafa:	77 35                	ja     bb31 <mcast_send+0x51>
    bafc:	55                   	push   %rbp
    bafd:	48 89 ce             	mov    %rcx,%rsi
    bb00:	31 c9                	xor    %ecx,%ecx
    bb02:	48 89 e5             	mov    %rsp,%rbp
    bb05:	41 54                	push   %r12
    bb07:	53                   	push   %rbx
    bb08:	4c 89 c3             	mov    %r8,%rbx
    bb0b:	45 31 c0             	xor    %r8d,%r8d
    bb0e:	49 89 d4             	mov    %rdx,%r12
    bb11:	e8 ca 65 00 00       	callq  120e0 <ocall_sock_send>
    bb16:	83 f8 ed             	cmp    $0xffffffed,%eax
    bb19:	74 1d                	je     bb38 <mcast_send+0x58>
    bb1b:	85 c0                	test   %eax,%eax
    bb1d:	78 20                	js     bb3f <mcast_send+0x5f>
    bb1f:	48 98                	cltq   
    bb21:	49 39 c4             	cmp    %rax,%r12
    bb24:	74 22                	je     bb48 <mcast_send+0x68>
    bb26:	81 63 04 7f ff ff ff 	andl   $0xffffff7f,0x4(%rbx)
    bb2d:	5b                   	pop    %rbx
    bb2e:	41 5c                	pop    %r12
    bb30:	5d                   	pop    %rbp
    bb31:	f3 c3                	repz retq 
    bb33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bb38:	81 63 04 7f ff ff ff 	andl   $0xffffff7f,0x4(%rbx)
    bb3f:	48 98                	cltq   
    bb41:	eb ea                	jmp    bb2d <mcast_send+0x4d>
    bb43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bb48:	81 4b 04 80 00 00 00 	orl    $0x80,0x4(%rbx)
    bb4f:	eb dc                	jmp    bb2d <mcast_send+0x4d>
    bb51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bb58:	48 c7 c0 f9 ff ff ff 	mov    $0xfffffffffffffff9,%rax
    bb5f:	c3                   	retq   

000000000000bb60 <tcp_read>:
    bb60:	83 3f 08             	cmpl   $0x8,(%rdi)
    bb63:	48 c7 c0 ea ff ff ff 	mov    $0xffffffffffffffea,%rax
    bb6a:	75 3a                	jne    bba6 <tcp_read+0x46>
    bb6c:	48 83 7f 18 00       	cmpq   $0x0,0x18(%rdi)
    bb71:	74 33                	je     bba6 <tcp_read+0x46>
    bb73:	8b 7f 08             	mov    0x8(%rdi),%edi
    bb76:	83 ff ff             	cmp    $0xffffffff,%edi
    bb79:	74 45                	je     bbc0 <tcp_read+0x60>
    bb7b:	be ff ff ff ff       	mov    $0xffffffff,%esi
    bb80:	48 c7 c0 fc ff ff ff 	mov    $0xfffffffffffffffc,%rax
    bb87:	48 39 f2             	cmp    %rsi,%rdx
    bb8a:	77 1a                	ja     bba6 <tcp_read+0x46>
    bb8c:	55                   	push   %rbp
    bb8d:	48 89 ce             	mov    %rcx,%rsi
    bb90:	45 31 c0             	xor    %r8d,%r8d
    bb93:	31 c9                	xor    %ecx,%ecx
    bb95:	48 89 e5             	mov    %rsp,%rbp
    bb98:	e8 53 63 00 00       	callq  11ef0 <ocall_sock_recv>
    bb9d:	85 c0                	test   %eax,%eax
    bb9f:	78 02                	js     bba3 <tcp_read+0x43>
    bba1:	74 0d                	je     bbb0 <tcp_read+0x50>
    bba3:	5d                   	pop    %rbp
    bba4:	48 98                	cltq   
    bba6:	f3 c3                	repz retq 
    bba8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    bbaf:	00 
    bbb0:	48 c7 c0 ec ff ff ff 	mov    $0xffffffffffffffec,%rax
    bbb7:	5d                   	pop    %rbp
    bbb8:	eb ec                	jmp    bba6 <tcp_read+0x46>
    bbba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bbc0:	48 c7 c0 ec ff ff ff 	mov    $0xffffffffffffffec,%rax
    bbc7:	c3                   	retq   
    bbc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    bbcf:	00 

000000000000bbd0 <udp_receive>:
    bbd0:	83 3f 0a             	cmpl   $0xa,(%rdi)
    bbd3:	48 c7 c0 ea ff ff ff 	mov    $0xffffffffffffffea,%rax
    bbda:	75 2d                	jne    bc09 <udp_receive+0x39>
    bbdc:	8b 7f 08             	mov    0x8(%rdi),%edi
    bbdf:	83 ff ff             	cmp    $0xffffffff,%edi
    bbe2:	74 2c                	je     bc10 <udp_receive+0x40>
    bbe4:	be ff ff ff ff       	mov    $0xffffffff,%esi
    bbe9:	48 c7 c0 fc ff ff ff 	mov    $0xfffffffffffffffc,%rax
    bbf0:	48 39 f2             	cmp    %rsi,%rdx
    bbf3:	77 14                	ja     bc09 <udp_receive+0x39>
    bbf5:	55                   	push   %rbp
    bbf6:	48 89 ce             	mov    %rcx,%rsi
    bbf9:	45 31 c0             	xor    %r8d,%r8d
    bbfc:	31 c9                	xor    %ecx,%ecx
    bbfe:	48 89 e5             	mov    %rsp,%rbp
    bc01:	e8 ea 62 00 00       	callq  11ef0 <ocall_sock_recv>
    bc06:	5d                   	pop    %rbp
    bc07:	48 98                	cltq   
    bc09:	f3 c3                	repz retq 
    bc0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bc10:	48 c7 c0 f9 ff ff ff 	mov    $0xfffffffffffffff9,%rax
    bc17:	c3                   	retq   
    bc18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    bc1f:	00 

000000000000bc20 <mcast_receive>:
    bc20:	49 89 f8             	mov    %rdi,%r8
    bc23:	8b 7f 08             	mov    0x8(%rdi),%edi
    bc26:	83 ff ff             	cmp    $0xffffffff,%edi
    bc29:	74 4d                	je     bc78 <mcast_receive+0x58>
    bc2b:	be ff ff ff ff       	mov    $0xffffffff,%esi
    bc30:	48 c7 c0 fc ff ff ff 	mov    $0xfffffffffffffffc,%rax
    bc37:	48 39 f2             	cmp    %rsi,%rdx
    bc3a:	77 26                	ja     bc62 <mcast_receive+0x42>
    bc3c:	55                   	push   %rbp
    bc3d:	48 89 ce             	mov    %rcx,%rsi
    bc40:	31 c9                	xor    %ecx,%ecx
    bc42:	48 89 e5             	mov    %rsp,%rbp
    bc45:	53                   	push   %rbx
    bc46:	4c 89 c3             	mov    %r8,%rbx
    bc49:	45 31 c0             	xor    %r8d,%r8d
    bc4c:	48 83 ec 08          	sub    $0x8,%rsp
    bc50:	e8 9b 62 00 00       	callq  11ef0 <ocall_sock_recv>
    bc55:	83 f8 ed             	cmp    $0xffffffed,%eax
    bc58:	74 0e                	je     bc68 <mcast_receive+0x48>
    bc5a:	48 83 c4 08          	add    $0x8,%rsp
    bc5e:	48 98                	cltq   
    bc60:	5b                   	pop    %rbx
    bc61:	5d                   	pop    %rbp
    bc62:	f3 c3                	repz retq 
    bc64:	0f 1f 40 00          	nopl   0x0(%rax)
    bc68:	81 63 04 7f ff ff ff 	andl   $0xffffff7f,0x4(%rbx)
    bc6f:	eb e9                	jmp    bc5a <mcast_receive+0x3a>
    bc71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bc78:	48 c7 c0 f9 ff ff ff 	mov    $0xfffffffffffffff9,%rax
    bc7f:	c3                   	retq   

000000000000bc80 <inet_parse_uri>:
    bc80:	55                   	push   %rbp
    bc81:	48 89 f1             	mov    %rsi,%rcx
    bc84:	48 89 e5             	mov    %rsp,%rbp
    bc87:	41 57                	push   %r15
    bc89:	41 56                	push   %r14
    bc8b:	41 55                	push   %r13
    bc8d:	41 54                	push   %r12
    bc8f:	49 89 d6             	mov    %rdx,%r14
    bc92:	53                   	push   %rbx
    bc93:	49 89 fc             	mov    %rdi,%r12
    bc96:	48 83 ec 18          	sub    $0x18,%rsp
    bc9a:	4c 8b 3f             	mov    (%rdi),%r15
    bc9d:	41 80 3f 5b          	cmpb   $0x5b,(%r15)
    bca1:	0f 84 d1 00 00 00    	je     bd78 <inet_parse_uri+0xf8>
    bca7:	31 f6                	xor    %esi,%esi
    bca9:	48 89 cf             	mov    %rcx,%rdi
    bcac:	ba 10 00 00 00       	mov    $0x10,%edx
    bcb1:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
    bcb5:	e8 a6 a7 00 00       	callq  16460 <memset>
    bcba:	be 3a 00 00 00       	mov    $0x3a,%esi
    bcbf:	4c 89 ff             	mov    %r15,%rdi
    bcc2:	e8 99 a8 00 00       	callq  16560 <strchr>
    bcc7:	48 85 c0             	test   %rax,%rax
    bcca:	0f 84 50 01 00 00    	je     be20 <inet_parse_uri+0x1a0>
    bcd0:	48 89 c6             	mov    %rax,%rsi
    bcd3:	4c 8d 68 01          	lea    0x1(%rax),%r13
    bcd7:	0f b6 40 01          	movzbl 0x1(%rax),%eax
    bcdb:	4c 29 fe             	sub    %r15,%rsi
    bcde:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    bce2:	4c 89 eb             	mov    %r13,%rbx
    bce5:	83 e8 30             	sub    $0x30,%eax
    bce8:	3c 09                	cmp    $0x9,%al
    bcea:	77 12                	ja     bcfe <inet_parse_uri+0x7e>
    bcec:	0f 1f 40 00          	nopl   0x0(%rax)
    bcf0:	48 83 c3 01          	add    $0x1,%rbx
    bcf4:	0f b6 03             	movzbl (%rbx),%eax
    bcf7:	83 e8 30             	sub    $0x30,%eax
    bcfa:	3c 09                	cmp    $0x9,%al
    bcfc:	76 f2                	jbe    bcf0 <inet_parse_uri+0x70>
    bcfe:	b8 02 00 00 00       	mov    $0x2,%eax
    bd03:	48 8d 51 04          	lea    0x4(%rcx),%rdx
    bd07:	4c 89 ff             	mov    %r15,%rdi
    bd0a:	66 89 01             	mov    %ax,(%rcx)
    bd0d:	48 8d 41 02          	lea    0x2(%rcx),%rax
    bd11:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    bd15:	e8 36 b4 00 00       	callq  17150 <inet_pton4>
    bd1a:	85 c0                	test   %eax,%eax
    bd1c:	0f 84 fe 00 00 00    	je     be20 <inet_parse_uri+0x1a0>
    bd22:	ba 10 00 00 00       	mov    $0x10,%edx
    bd27:	4c 89 ef             	mov    %r13,%rdi
    bd2a:	89 55 c0             	mov    %edx,-0x40(%rbp)
    bd2d:	e8 fe 97 00 00       	callq  15530 <atoi>
    bd32:	0f b7 f8             	movzwl %ax,%edi
    bd35:	e8 f6 b3 00 00       	callq  17130 <__htons>
    bd3a:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    bd3e:	b9 00 00 00 00       	mov    $0x0,%ecx
    bd43:	66 89 07             	mov    %ax,(%rdi)
    bd46:	80 3b 00             	cmpb   $0x0,(%rbx)
    bd49:	48 8d 43 01          	lea    0x1(%rbx),%rax
    bd4d:	48 0f 44 c1          	cmove  %rcx,%rax
    bd51:	4d 85 f6             	test   %r14,%r14
    bd54:	49 89 04 24          	mov    %rax,(%r12)
    bd58:	0f 84 b2 00 00 00    	je     be10 <inet_parse_uri+0x190>
    bd5e:	8b 55 c0             	mov    -0x40(%rbp),%edx
    bd61:	31 c0                	xor    %eax,%eax
    bd63:	41 89 16             	mov    %edx,(%r14)
    bd66:	48 83 c4 18          	add    $0x18,%rsp
    bd6a:	5b                   	pop    %rbx
    bd6b:	41 5c                	pop    %r12
    bd6d:	41 5d                	pop    %r13
    bd6f:	41 5e                	pop    %r14
    bd71:	41 5f                	pop    %r15
    bd73:	5d                   	pop    %rbp
    bd74:	c3                   	retq   
    bd75:	0f 1f 00             	nopl   (%rax)
    bd78:	48 89 cf             	mov    %rcx,%rdi
    bd7b:	31 f6                	xor    %esi,%esi
    bd7d:	ba 1c 00 00 00       	mov    $0x1c,%edx
    bd82:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    bd86:	e8 d5 a6 00 00       	callq  16460 <memset>
    bd8b:	4d 8d 4f 01          	lea    0x1(%r15),%r9
    bd8f:	be 5d 00 00 00       	mov    $0x5d,%esi
    bd94:	4c 89 cf             	mov    %r9,%rdi
    bd97:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
    bd9b:	e8 c0 a7 00 00       	callq  16560 <strchr>
    bda0:	48 85 c0             	test   %rax,%rax
    bda3:	4c 8b 4d c8          	mov    -0x38(%rbp),%r9
    bda7:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    bdab:	74 73                	je     be20 <inet_parse_uri+0x1a0>
    bdad:	80 78 01 3a          	cmpb   $0x3a,0x1(%rax)
    bdb1:	75 6d                	jne    be20 <inet_parse_uri+0x1a0>
    bdb3:	48 89 c6             	mov    %rax,%rsi
    bdb6:	4c 8d 68 02          	lea    0x2(%rax),%r13
    bdba:	0f b6 40 02          	movzbl 0x2(%rax),%eax
    bdbe:	4c 29 fe             	sub    %r15,%rsi
    bdc1:	83 ee 01             	sub    $0x1,%esi
    bdc4:	4c 89 eb             	mov    %r13,%rbx
    bdc7:	83 e8 30             	sub    $0x30,%eax
    bdca:	3c 09                	cmp    $0x9,%al
    bdcc:	77 10                	ja     bdde <inet_parse_uri+0x15e>
    bdce:	66 90                	xchg   %ax,%ax
    bdd0:	48 83 c3 01          	add    $0x1,%rbx
    bdd4:	0f b6 03             	movzbl (%rbx),%eax
    bdd7:	83 e8 30             	sub    $0x30,%eax
    bdda:	3c 09                	cmp    $0x9,%al
    bddc:	76 f2                	jbe    bdd0 <inet_parse_uri+0x150>
    bdde:	ba 0a 00 00 00       	mov    $0xa,%edx
    bde3:	48 8d 41 02          	lea    0x2(%rcx),%rax
    bde7:	4c 89 cf             	mov    %r9,%rdi
    bdea:	66 89 11             	mov    %dx,(%rcx)
    bded:	48 8d 51 08          	lea    0x8(%rcx),%rdx
    bdf1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    bdf5:	e8 46 b4 00 00       	callq  17240 <inet_pton6>
    bdfa:	85 c0                	test   %eax,%eax
    bdfc:	74 22                	je     be20 <inet_parse_uri+0x1a0>
    bdfe:	ba 1c 00 00 00       	mov    $0x1c,%edx
    be03:	e9 1f ff ff ff       	jmpq   bd27 <inet_parse_uri+0xa7>
    be08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    be0f:	00 
    be10:	31 c0                	xor    %eax,%eax
    be12:	e9 4f ff ff ff       	jmpq   bd66 <inet_parse_uri+0xe6>
    be17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    be1e:	00 00 
    be20:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    be25:	e9 3c ff ff ff       	jmpq   bd66 <inet_parse_uri+0xe6>
    be2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000be30 <socket_parse_uri>:
    be30:	55                   	push   %rbp
    be31:	48 89 e5             	mov    %rsp,%rbp
    be34:	41 57                	push   %r15
    be36:	41 56                	push   %r14
    be38:	41 55                	push   %r13
    be3a:	41 54                	push   %r12
    be3c:	53                   	push   %rbx
    be3d:	48 83 ec 28          	sub    $0x28,%rsp
    be41:	48 85 f6             	test   %rsi,%rsi
    be44:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    be48:	41 0f 94 c7          	sete   %r15b
    be4c:	48 85 c9             	test   %rcx,%rcx
    be4f:	41 0f 94 c5          	sete   %r13b
    be53:	45 84 ff             	test   %r15b,%r15b
    be56:	74 18                	je     be70 <socket_parse_uri+0x40>
    be58:	45 84 ed             	test   %r13b,%r13b
    be5b:	74 13                	je     be70 <socket_parse_uri+0x40>
    be5d:	31 c0                	xor    %eax,%eax
    be5f:	48 83 c4 28          	add    $0x28,%rsp
    be63:	5b                   	pop    %rbx
    be64:	41 5c                	pop    %r12
    be66:	41 5d                	pop    %r13
    be68:	41 5e                	pop    %r14
    be6a:	41 5f                	pop    %r15
    be6c:	5d                   	pop    %rbp
    be6d:	c3                   	retq   
    be6e:	66 90                	xchg   %ax,%ax
    be70:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    be74:	48 85 c0             	test   %rax,%rax
    be77:	74 05                	je     be7e <socket_parse_uri+0x4e>
    be79:	80 38 00             	cmpb   $0x0,(%rax)
    be7c:	75 32                	jne    beb0 <socket_parse_uri+0x80>
    be7e:	48 85 f6             	test   %rsi,%rsi
    be81:	74 07                	je     be8a <socket_parse_uri+0x5a>
    be83:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    be8a:	48 85 c9             	test   %rcx,%rcx
    be8d:	74 ce                	je     be5d <socket_parse_uri+0x2d>
    be8f:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    be96:	48 83 c4 28          	add    $0x28,%rsp
    be9a:	31 c0                	xor    %eax,%eax
    be9c:	5b                   	pop    %rbx
    be9d:	41 5c                	pop    %r12
    be9f:	41 5d                	pop    %r13
    bea1:	41 5e                	pop    %r14
    bea3:	41 5f                	pop    %r15
    bea5:	5d                   	pop    %rbp
    bea6:	c3                   	retq   
    bea7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    beae:	00 00 
    beb0:	48 85 f6             	test   %rsi,%rsi
    beb3:	0f 84 8f 00 00 00    	je     bf48 <socket_parse_uri+0x118>
    beb9:	48 8b 3e             	mov    (%rsi),%rdi
    bebc:	48 89 d0             	mov    %rdx,%rax
    bebf:	4c 8d 65 c8          	lea    -0x38(%rbp),%r12
    bec3:	49 89 d6             	mov    %rdx,%r14
    bec6:	48 89 f3             	mov    %rsi,%rbx
    bec9:	48 89 c2             	mov    %rax,%rdx
    becc:	48 89 fe             	mov    %rdi,%rsi
    becf:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
    bed3:	4c 89 e7             	mov    %r12,%rdi
    bed6:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    beda:	e8 a1 fd ff ff       	callq  bc80 <inet_parse_uri>
    bedf:	85 c0                	test   %eax,%eax
    bee1:	0f 88 78 ff ff ff    	js     be5f <socket_parse_uri+0x2f>
    bee7:	45 84 ff             	test   %r15b,%r15b
    beea:	0f 85 6d ff ff ff    	jne    be5d <socket_parse_uri+0x2d>
    bef0:	45 84 ed             	test   %r13b,%r13b
    bef3:	0f 85 64 ff ff ff    	jne    be5d <socket_parse_uri+0x2d>
    bef9:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    befe:	74 1b                	je     bf1b <socket_parse_uri+0xeb>
    bf00:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bf04:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    bf08:	4c 89 e7             	mov    %r12,%rdi
    bf0b:	48 8b 30             	mov    (%rax),%rsi
    bf0e:	e8 6d fd ff ff       	callq  bc80 <inet_parse_uri>
    bf13:	85 c0                	test   %eax,%eax
    bf15:	0f 89 42 ff ff ff    	jns    be5d <socket_parse_uri+0x2d>
    bf1b:	48 8b 03             	mov    (%rbx),%rax
    bf1e:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    bf22:	48 89 07             	mov    %rax,(%rdi)
    bf25:	41 8b 06             	mov    (%r14),%eax
    bf28:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
    bf2c:	89 07                	mov    %eax,(%rdi)
    bf2e:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    bf35:	41 c7 06 00 00 00 00 	movl   $0x0,(%r14)
    bf3c:	e9 1c ff ff ff       	jmpq   be5d <socket_parse_uri+0x2d>
    bf41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bf48:	48 8b 39             	mov    (%rcx),%rdi
    bf4b:	4c 89 c0             	mov    %r8,%rax
    bf4e:	e9 6c ff ff ff       	jmpq   bebf <socket_parse_uri+0x8f>
    bf53:	0f 1f 00             	nopl   (%rax)
    bf56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    bf5d:	00 00 00 

000000000000bf60 <inet_create_uri>:
    bf60:	55                   	push   %rbp
    bf61:	48 89 e5             	mov    %rsp,%rbp
    bf64:	41 54                	push   %r12
    bf66:	53                   	push   %rbx
    bf67:	89 f3                	mov    %esi,%ebx
    bf69:	49 89 fc             	mov    %rdi,%r12
    bf6c:	48 83 ec 10          	sub    $0x10,%rsp
    bf70:	0f b7 32             	movzwl (%rdx),%esi
    bf73:	66 83 fe 02          	cmp    $0x2,%si
    bf77:	74 27                	je     bfa0 <inet_create_uri+0x40>
    bf79:	66 83 fe 0a          	cmp    $0xa,%si
    bf7d:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    bf82:	75 0a                	jne    bf8e <inet_create_uri+0x2e>
    bf84:	83 f9 1c             	cmp    $0x1c,%ecx
    bf87:	b8 04 00 00 00       	mov    $0x4,%eax
    bf8c:	74 6a                	je     bff8 <inet_create_uri+0x98>
    bf8e:	48 8d 65 f0          	lea    -0x10(%rbp),%rsp
    bf92:	5b                   	pop    %rbx
    bf93:	41 5c                	pop    %r12
    bf95:	5d                   	pop    %rbp
    bf96:	c3                   	retq   
    bf97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bf9e:	00 00 
    bfa0:	83 f9 10             	cmp    $0x10,%ecx
    bfa3:	b8 04 00 00 00       	mov    $0x4,%eax
    bfa8:	75 e4                	jne    bf8e <inet_create_uri+0x2e>
    bfaa:	0f b7 7a 02          	movzwl 0x2(%rdx),%edi
    bfae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    bfb2:	e8 89 b1 00 00       	callq  17140 <__ntohs>
    bfb7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bfbb:	0f b7 c0             	movzwl %ax,%eax
    bfbe:	89 de                	mov    %ebx,%esi
    bfc0:	4c 89 e7             	mov    %r12,%rdi
    bfc3:	0f b6 4a 04          	movzbl 0x4(%rdx),%ecx
    bfc7:	50                   	push   %rax
    bfc8:	0f b6 42 07          	movzbl 0x7(%rdx),%eax
    bfcc:	50                   	push   %rax
    bfcd:	44 0f b6 4a 06       	movzbl 0x6(%rdx),%r9d
    bfd2:	31 c0                	xor    %eax,%eax
    bfd4:	44 0f b6 42 05       	movzbl 0x5(%rdx),%r8d
    bfd9:	48 8d 15 6d cd 01 00 	lea    0x1cd6d(%rip),%rdx        # 28d4d <slab_levels+0x1cd>
    bfe0:	e8 3b b0 00 00       	callq  17020 <snprintf>
    bfe5:	5a                   	pop    %rdx
    bfe6:	59                   	pop    %rcx
    bfe7:	39 d8                	cmp    %ebx,%eax
    bfe9:	ba fb ff ff ff       	mov    $0xfffffffb,%edx
    bfee:	0f 4d c2             	cmovge %edx,%eax
    bff1:	eb 9b                	jmp    bf8e <inet_create_uri+0x2e>
    bff3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bff8:	0f b7 7a 02          	movzwl 0x2(%rdx),%edi
    bffc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    c000:	e8 3b b1 00 00       	callq  17140 <__ntohs>
    c005:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c009:	0f b7 c0             	movzwl %ax,%eax
    c00c:	89 de                	mov    %ebx,%esi
    c00e:	4c 89 e7             	mov    %r12,%rdi
    c011:	0f b7 4a 08          	movzwl 0x8(%rdx),%ecx
    c015:	50                   	push   %rax
    c016:	0f b7 42 16          	movzwl 0x16(%rdx),%eax
    c01a:	44 0f b7 4a 0c       	movzwl 0xc(%rdx),%r9d
    c01f:	44 0f b7 42 0a       	movzwl 0xa(%rdx),%r8d
    c024:	50                   	push   %rax
    c025:	0f b7 42 14          	movzwl 0x14(%rdx),%eax
    c029:	50                   	push   %rax
    c02a:	0f b7 42 12          	movzwl 0x12(%rdx),%eax
    c02e:	50                   	push   %rax
    c02f:	0f b7 42 10          	movzwl 0x10(%rdx),%eax
    c033:	50                   	push   %rax
    c034:	0f b7 42 0e          	movzwl 0xe(%rdx),%eax
    c038:	48 8d 15 39 cd 01 00 	lea    0x1cd39(%rip),%rdx        # 28d78 <slab_levels+0x1f8>
    c03f:	50                   	push   %rax
    c040:	31 c0                	xor    %eax,%eax
    c042:	e8 d9 af 00 00       	callq  17020 <snprintf>
    c047:	48 83 c4 30          	add    $0x30,%rsp
    c04b:	eb 9a                	jmp    bfe7 <inet_create_uri+0x87>
    c04d:	0f 1f 00             	nopl   (%rax)

000000000000c050 <socket_getname>:
    c050:	55                   	push   %rbp
    c051:	48 89 e5             	mov    %rsp,%rbp
    c054:	41 57                	push   %r15
    c056:	41 56                	push   %r14
    c058:	41 55                	push   %r13
    c05a:	41 54                	push   %r12
    c05c:	49 89 f5             	mov    %rsi,%r13
    c05f:	53                   	push   %rbx
    c060:	48 83 ec 18          	sub    $0x18,%rsp
    c064:	8b 0f                	mov    (%rdi),%ecx
    c066:	83 f9 09             	cmp    $0x9,%ecx
    c069:	0f 84 61 01 00 00    	je     c1d0 <socket_getname+0x180>
    c06f:	0f 86 1b 01 00 00    	jbe    c190 <socket_getname+0x140>
    c075:	83 f9 0a             	cmp    $0xa,%ecx
    c078:	0f 84 d2 00 00 00    	je     c150 <socket_getname+0x100>
    c07e:	83 f9 0b             	cmp    $0xb,%ecx
    c081:	0f 85 31 01 00 00    	jne    c1b8 <socket_getname+0x168>
    c087:	48 8b 47 10          	mov    0x10(%rdi),%rax
    c08b:	48 8d 35 d9 bb 01 00 	lea    0x1bbd9(%rip),%rsi        # 27c6b <section_rodata+0x6b>
    c092:	45 31 e4             	xor    %r12d,%r12d
    c095:	41 bf 07 00 00 00    	mov    $0x7,%r15d
    c09b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c09f:	41 39 d7             	cmp    %edx,%r15d
    c0a2:	0f 8d 48 01 00 00    	jge    c1f0 <socket_getname+0x1a0>
    c0a8:	89 d3                	mov    %edx,%ebx
    c0aa:	41 8d 57 01          	lea    0x1(%r15),%edx
    c0ae:	4c 89 ef             	mov    %r13,%rdi
    c0b1:	41 be 01 00 00 00    	mov    $0x1,%r14d
    c0b7:	48 63 d2             	movslq %edx,%rdx
    c0ba:	e8 31 9b 00 00       	callq  15bf0 <memcpy>
    c0bf:	49 63 ff             	movslq %r15d,%rdi
    c0c2:	89 de                	mov    %ebx,%esi
    c0c4:	4c 01 ef             	add    %r13,%rdi
    c0c7:	44 29 fe             	sub    %r15d,%esi
    c0ca:	41 83 fe 01          	cmp    $0x1,%r14d
    c0ce:	0f 84 9a 00 00 00    	je     c16e <socket_getname+0x11e>
    c0d4:	4d 85 e4             	test   %r12,%r12
    c0d7:	74 54                	je     c12d <socket_getname+0xdd>
    c0d9:	4c 89 e2             	mov    %r12,%rdx
    c0dc:	83 fe 01             	cmp    $0x1,%esi
    c0df:	0f 8e 0b 01 00 00    	jle    c1f0 <socket_getname+0x1a0>
    c0e5:	c6 07 3a             	movb   $0x3a,(%rdi)
    c0e8:	c6 47 01 00          	movb   $0x0,0x1(%rdi)
    c0ec:	4c 8d 7f 01          	lea    0x1(%rdi),%r15
    c0f0:	0f b7 02             	movzwl (%rdx),%eax
    c0f3:	44 8d 6e ff          	lea    -0x1(%rsi),%r13d
    c0f7:	b9 10 00 00 00       	mov    $0x10,%ecx
    c0fc:	66 83 f8 02          	cmp    $0x2,%ax
    c100:	74 11                	je     c113 <socket_getname+0xc3>
    c102:	66 83 f8 0a          	cmp    $0xa,%ax
    c106:	b9 00 00 00 00       	mov    $0x0,%ecx
    c10b:	b8 1c 00 00 00       	mov    $0x1c,%eax
    c110:	0f 44 c8             	cmove  %eax,%ecx
    c113:	44 89 ee             	mov    %r13d,%esi
    c116:	4c 89 ff             	mov    %r15,%rdi
    c119:	e8 42 fe ff ff       	callq  bf60 <inet_create_uri>
    c11e:	85 c0                	test   %eax,%eax
    c120:	78 15                	js     c137 <socket_getname+0xe7>
    c122:	48 63 f8             	movslq %eax,%rdi
    c125:	44 89 ee             	mov    %r13d,%esi
    c128:	4c 01 ff             	add    %r15,%rdi
    c12b:	29 c6                	sub    %eax,%esi
    c12d:	41 83 fe 02          	cmp    $0x2,%r14d
    c131:	75 4d                	jne    c180 <socket_getname+0x130>
    c133:	89 d8                	mov    %ebx,%eax
    c135:	29 f0                	sub    %esi,%eax
    c137:	48 83 c4 18          	add    $0x18,%rsp
    c13b:	5b                   	pop    %rbx
    c13c:	41 5c                	pop    %r12
    c13e:	41 5d                	pop    %r13
    c140:	41 5e                	pop    %r14
    c142:	41 5f                	pop    %r15
    c144:	5d                   	pop    %rbp
    c145:	c3                   	retq   
    c146:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c14d:	00 00 00 
    c150:	48 8b 47 10          	mov    0x10(%rdi),%rax
    c154:	4c 8b 67 18          	mov    0x18(%rdi),%r12
    c158:	41 bf 03 00 00 00    	mov    $0x3,%r15d
    c15e:	48 8d 35 ec ba 01 00 	lea    0x1baec(%rip),%rsi        # 27c51 <section_rodata+0x51>
    c165:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c169:	e9 31 ff ff ff       	jmpq   c09f <socket_getname+0x4f>
    c16e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c172:	48 85 c0             	test   %rax,%rax
    c175:	48 89 c2             	mov    %rax,%rdx
    c178:	0f 85 5e ff ff ff    	jne    c0dc <socket_getname+0x8c>
    c17e:	66 90                	xchg   %ax,%ax
    c180:	41 83 c6 01          	add    $0x1,%r14d
    c184:	e9 41 ff ff ff       	jmpq   c0ca <socket_getname+0x7a>
    c189:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c190:	83 f9 08             	cmp    $0x8,%ecx
    c193:	75 23                	jne    c1b8 <socket_getname+0x168>
    c195:	48 8b 47 10          	mov    0x10(%rdi),%rax
    c199:	4c 8b 67 18          	mov    0x18(%rdi),%r12
    c19d:	41 bf 03 00 00 00    	mov    $0x3,%r15d
    c1a3:	48 8d 35 a3 ba 01 00 	lea    0x1baa3(%rip),%rsi        # 27c4d <section_rodata+0x4d>
    c1aa:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c1ae:	e9 ec fe ff ff       	jmpq   c09f <socket_getname+0x4f>
    c1b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c1b8:	48 83 c4 18          	add    $0x18,%rsp
    c1bc:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    c1c1:	5b                   	pop    %rbx
    c1c2:	41 5c                	pop    %r12
    c1c4:	41 5d                	pop    %r13
    c1c6:	41 5e                	pop    %r14
    c1c8:	41 5f                	pop    %r15
    c1ca:	5d                   	pop    %rbp
    c1cb:	c3                   	retq   
    c1cc:	0f 1f 40 00          	nopl   0x0(%rax)
    c1d0:	48 8b 47 10          	mov    0x10(%rdi),%rax
    c1d4:	45 31 e4             	xor    %r12d,%r12d
    c1d7:	41 bf 07 00 00 00    	mov    $0x7,%r15d
    c1dd:	48 8d 35 7f ba 01 00 	lea    0x1ba7f(%rip),%rsi        # 27c63 <section_rodata+0x63>
    c1e4:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c1e8:	e9 b2 fe ff ff       	jmpq   c09f <socket_getname+0x4f>
    c1ed:	0f 1f 00             	nopl   (%rax)
    c1f0:	48 83 c4 18          	add    $0x18,%rsp
    c1f4:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    c1f9:	5b                   	pop    %rbx
    c1fa:	41 5c                	pop    %r12
    c1fc:	41 5d                	pop    %r13
    c1fe:	41 5e                	pop    %r14
    c200:	41 5f                	pop    %r15
    c202:	5d                   	pop    %rbp
    c203:	c3                   	retq   
    c204:	66 90                	xchg   %ax,%ax
    c206:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c20d:	00 00 00 

000000000000c210 <udp_receivebyaddr>:
    c210:	83 3f 0b             	cmpl   $0xb,(%rdi)
    c213:	48 c7 c0 ea ff ff ff 	mov    $0xffffffffffffffea,%rax
    c21a:	75 7e                	jne    c29a <udp_receivebyaddr+0x8a>
    c21c:	8b 7f 08             	mov    0x8(%rdi),%edi
    c21f:	83 ff ff             	cmp    $0xffffffff,%edi
    c222:	0f 84 d0 00 00 00    	je     c2f8 <udp_receivebyaddr+0xe8>
    c228:	be ff ff ff ff       	mov    $0xffffffff,%esi
    c22d:	48 c7 c0 fc ff ff ff 	mov    $0xfffffffffffffffc,%rax
    c234:	48 39 f2             	cmp    %rsi,%rdx
    c237:	77 61                	ja     c29a <udp_receivebyaddr+0x8a>
    c239:	55                   	push   %rbp
    c23a:	48 89 ce             	mov    %rcx,%rsi
    c23d:	48 89 e5             	mov    %rsp,%rbp
    c240:	41 56                	push   %r14
    c242:	41 55                	push   %r13
    c244:	4c 8d ad 60 ff ff ff 	lea    -0xa0(%rbp),%r13
    c24b:	41 54                	push   %r12
    c24d:	53                   	push   %rbx
    c24e:	4d 89 c6             	mov    %r8,%r14
    c251:	4c 8d 85 5c ff ff ff 	lea    -0xa4(%rbp),%r8
    c258:	45 89 cc             	mov    %r9d,%r12d
    c25b:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    c262:	4c 89 e9             	mov    %r13,%rcx
    c265:	c7 85 5c ff ff ff 80 	movl   $0x80,-0xa4(%rbp)
    c26c:	00 00 00 
    c26f:	e8 7c 5c 00 00       	callq  11ef0 <ocall_sock_recv>
    c274:	48 63 d8             	movslq %eax,%rbx
    c277:	85 db                	test   %ebx,%ebx
    c279:	48 63 c3             	movslq %ebx,%rax
    c27c:	78 0d                	js     c28b <udp_receivebyaddr+0x7b>
    c27e:	41 83 fc 04          	cmp    $0x4,%r12d
    c282:	77 1c                	ja     c2a0 <udp_receivebyaddr+0x90>
    c284:	48 c7 c0 f2 ff ff ff 	mov    $0xfffffffffffffff2,%rax
    c28b:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
    c292:	5b                   	pop    %rbx
    c293:	41 5c                	pop    %r12
    c295:	41 5d                	pop    %r13
    c297:	41 5e                	pop    %r14
    c299:	5d                   	pop    %rbp
    c29a:	f3 c3                	repz retq 
    c29c:	0f 1f 40 00          	nopl   0x0(%rax)
    c2a0:	48 8d 35 b5 ca 01 00 	lea    0x1cab5(%rip),%rsi        # 28d5c <slab_levels+0x1dc>
    c2a7:	4c 89 f7             	mov    %r14,%rdi
    c2aa:	ba 05 00 00 00       	mov    $0x5,%edx
    c2af:	e8 3c 99 00 00       	callq  15bf0 <memcpy>
    c2b4:	48 83 c0 04          	add    $0x4,%rax
    c2b8:	48 89 c7             	mov    %rax,%rdi
    c2bb:	74 c7                	je     c284 <udp_receivebyaddr+0x74>
    c2bd:	49 63 f4             	movslq %r12d,%rsi
    c2c0:	8b 8d 5c ff ff ff    	mov    -0xa4(%rbp),%ecx
    c2c6:	4c 89 ea             	mov    %r13,%rdx
    c2c9:	4c 01 f6             	add    %r14,%rsi
    c2cc:	48 29 c6             	sub    %rax,%rsi
    c2cf:	e8 8c fc ff ff       	callq  bf60 <inet_create_uri>
    c2d4:	48 63 d0             	movslq %eax,%rdx
    c2d7:	85 c0                	test   %eax,%eax
    c2d9:	48 89 d0             	mov    %rdx,%rax
    c2dc:	48 0f 49 c3          	cmovns %rbx,%rax
    c2e0:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
    c2e7:	5b                   	pop    %rbx
    c2e8:	41 5c                	pop    %r12
    c2ea:	41 5d                	pop    %r13
    c2ec:	41 5e                	pop    %r14
    c2ee:	5d                   	pop    %rbp
    c2ef:	eb a9                	jmp    c29a <udp_receivebyaddr+0x8a>
    c2f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c2f8:	48 c7 c0 f9 ff ff ff 	mov    $0xfffffffffffffff9,%rax
    c2ff:	c3                   	retq   

000000000000c300 <udp_sendbyaddr>:
    c300:	83 3f 0b             	cmpl   $0xb,(%rdi)
    c303:	48 c7 c0 ea ff ff ff 	mov    $0xffffffffffffffea,%rax
    c30a:	0f 85 e7 00 00 00    	jne    c3f7 <udp_sendbyaddr+0xf7>
    c310:	83 7f 08 ff          	cmpl   $0xffffffff,0x8(%rdi)
    c314:	0f 84 16 01 00 00    	je     c430 <udp_sendbyaddr+0x130>
    c31a:	55                   	push   %rbp
    c31b:	48 8d 35 3a ca 01 00 	lea    0x1ca3a(%rip),%rsi        # 28d5c <slab_levels+0x1dc>
    c322:	48 89 e5             	mov    %rsp,%rbp
    c325:	41 57                	push   %r15
    c327:	41 56                	push   %r14
    c329:	41 55                	push   %r13
    c32b:	41 54                	push   %r12
    c32d:	49 89 d4             	mov    %rdx,%r12
    c330:	53                   	push   %rbx
    c331:	ba 04 00 00 00       	mov    $0x4,%edx
    c336:	48 89 fb             	mov    %rdi,%rbx
    c339:	4c 89 c7             	mov    %r8,%rdi
    c33c:	45 89 cf             	mov    %r9d,%r15d
    c33f:	4d 89 c5             	mov    %r8,%r13
    c342:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    c349:	49 89 ce             	mov    %rcx,%r14
    c34c:	e8 3f 93 00 00       	callq  15690 <memcmp>
    c351:	85 c0                	test   %eax,%eax
    c353:	0f 85 c7 00 00 00    	jne    c420 <udp_sendbyaddr+0x120>
    c359:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    c35e:	49 39 c4             	cmp    %rax,%r12
    c361:	0f 87 b9 00 00 00    	ja     c420 <udp_sendbyaddr+0x120>
    c367:	41 8d 57 fc          	lea    -0x4(%r15),%edx
    c36b:	49 8d 75 04          	lea    0x4(%r13),%rsi
    c36f:	4c 8d ad 50 ff ff ff 	lea    -0xb0(%rbp),%r13
    c376:	48 63 d2             	movslq %edx,%rdx
    c379:	48 8d 42 1e          	lea    0x1e(%rdx),%rax
    c37d:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    c381:	48 29 c4             	sub    %rax,%rsp
    c384:	48 8d 7c 24 0f       	lea    0xf(%rsp),%rdi
    c389:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
    c38d:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
    c394:	e8 57 98 00 00       	callq  15bf0 <memcpy>
    c399:	48 8d 95 44 ff ff ff 	lea    -0xbc(%rbp),%rdx
    c3a0:	48 8d bd 48 ff ff ff 	lea    -0xb8(%rbp),%rdi
    c3a7:	4c 89 ee             	mov    %r13,%rsi
    c3aa:	c7 85 44 ff ff ff 80 	movl   $0x80,-0xbc(%rbp)
    c3b1:	00 00 00 
    c3b4:	e8 c7 f8 ff ff       	callq  bc80 <inet_parse_uri>
    c3b9:	85 c0                	test   %eax,%eax
    c3bb:	78 47                	js     c404 <udp_sendbyaddr+0x104>
    c3bd:	8b 7b 08             	mov    0x8(%rbx),%edi
    c3c0:	44 8b 85 44 ff ff ff 	mov    -0xbc(%rbp),%r8d
    c3c7:	4c 89 e9             	mov    %r13,%rcx
    c3ca:	44 89 e2             	mov    %r12d,%edx
    c3cd:	4c 89 f6             	mov    %r14,%rsi
    c3d0:	e8 0b 5d 00 00       	callq  120e0 <ocall_sock_send>
    c3d5:	83 f8 ed             	cmp    $0xffffffed,%eax
    c3d8:	74 26                	je     c400 <udp_sendbyaddr+0x100>
    c3da:	85 c0                	test   %eax,%eax
    c3dc:	78 26                	js     c404 <udp_sendbyaddr+0x104>
    c3de:	48 98                	cltq   
    c3e0:	49 39 c4             	cmp    %rax,%r12
    c3e3:	74 2b                	je     c410 <udp_sendbyaddr+0x110>
    c3e5:	83 63 04 bf          	andl   $0xffffffbf,0x4(%rbx)
    c3e9:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    c3ed:	5b                   	pop    %rbx
    c3ee:	41 5c                	pop    %r12
    c3f0:	41 5d                	pop    %r13
    c3f2:	41 5e                	pop    %r14
    c3f4:	41 5f                	pop    %r15
    c3f6:	5d                   	pop    %rbp
    c3f7:	f3 c3                	repz retq 
    c3f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c400:	83 63 04 bf          	andl   $0xffffffbf,0x4(%rbx)
    c404:	48 98                	cltq   
    c406:	eb e1                	jmp    c3e9 <udp_sendbyaddr+0xe9>
    c408:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c40f:	00 
    c410:	83 4b 04 40          	orl    $0x40,0x4(%rbx)
    c414:	eb d3                	jmp    c3e9 <udp_sendbyaddr+0xe9>
    c416:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c41d:	00 00 00 
    c420:	48 c7 c0 fc ff ff ff 	mov    $0xfffffffffffffffc,%rax
    c427:	eb c0                	jmp    c3e9 <udp_sendbyaddr+0xe9>
    c429:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c430:	48 c7 c0 f9 ff ff ff 	mov    $0xfffffffffffffff9,%rax
    c437:	c3                   	retq   
    c438:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c43f:	00 

000000000000c440 <tcp_accept>:
    c440:	55                   	push   %rbp
    c441:	48 89 e5             	mov    %rsp,%rbp
    c444:	41 57                	push   %r15
    c446:	41 56                	push   %r14
    c448:	41 55                	push   %r13
    c44a:	41 54                	push   %r12
    c44c:	41 bd eb ff ff ff    	mov    $0xffffffeb,%r13d
    c452:	53                   	push   %rbx
    c453:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
    c45a:	83 3f 09             	cmpl   $0x9,(%rdi)
    c45d:	0f 85 73 01 00 00    	jne    c5d6 <tcp_accept+0x196>
    c463:	4c 8b 67 10          	mov    0x10(%rdi),%r12
    c467:	4d 85 e4             	test   %r12,%r12
    c46a:	0f 84 66 01 00 00    	je     c5d6 <tcp_accept+0x196>
    c470:	48 83 7f 18 00       	cmpq   $0x0,0x18(%rdi)
    c475:	0f 85 5b 01 00 00    	jne    c5d6 <tcp_accept+0x196>
    c47b:	8b 7f 08             	mov    0x8(%rdi),%edi
    c47e:	83 ff ff             	cmp    $0xffffffff,%edi
    c481:	0f 84 89 01 00 00    	je     c610 <tcp_accept+0x1d0>
    c487:	41 0f b7 04 24       	movzwl (%r12),%eax
    c48c:	bb 10 00 00 00       	mov    $0x10,%ebx
    c491:	66 83 f8 02          	cmp    $0x2,%ax
    c495:	74 12                	je     c4a9 <tcp_accept+0x69>
    c497:	66 83 f8 0a          	cmp    $0xa,%ax
    c49b:	bb 1c 00 00 00       	mov    $0x1c,%ebx
    c4a0:	b8 00 00 00 00       	mov    $0x0,%eax
    c4a5:	48 0f 45 d8          	cmovne %rax,%rbx
    c4a9:	4c 8d b5 50 ff ff ff 	lea    -0xb0(%rbp),%r14
    c4b0:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
    c4b7:	48 8d 95 2c ff ff ff 	lea    -0xd4(%rbp),%rdx
    c4be:	48 89 b5 18 ff ff ff 	mov    %rsi,-0xe8(%rbp)
    c4c5:	c7 85 2c ff ff ff 80 	movl   $0x80,-0xd4(%rbp)
    c4cc:	00 00 00 
    c4cf:	4c 89 f6             	mov    %r14,%rsi
    c4d2:	e8 89 56 00 00       	callq  11b60 <ocall_sock_accept>
    c4d7:	85 c0                	test   %eax,%eax
    c4d9:	41 89 c5             	mov    %eax,%r13d
    c4dc:	0f 88 f4 00 00 00    	js     c5d6 <tcp_accept+0x196>
    c4e2:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
    c4e8:	48 8d 7c 03 58       	lea    0x58(%rbx,%rax,1),%rdi
    c4ed:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    c4f4:	e8 27 cb ff ff       	callq  9020 <malloc>
    c4f9:	48 85 c0             	test   %rax,%rax
    c4fc:	49 89 c7             	mov    %rax,%r15
    c4ff:	0f 84 eb 00 00 00    	je     c5f0 <tcp_accept+0x1b0>
    c505:	ba 58 00 00 00       	mov    $0x58,%edx
    c50a:	31 f6                	xor    %esi,%esi
    c50c:	48 89 c7             	mov    %rax,%rdi
    c50f:	e8 4c 9f 00 00       	callq  16460 <memset>
    c514:	45 89 6f 08          	mov    %r13d,0x8(%r15)
    c518:	4d 8d 6f 58          	lea    0x58(%r15),%r13
    c51c:	48 89 da             	mov    %rbx,%rdx
    c51f:	4c 89 e6             	mov    %r12,%rsi
    c522:	41 c7 07 08 00 00 00 	movl   $0x8,(%r15)
    c529:	41 c7 47 04 09 00 00 	movl   $0x9,0x4(%r15)
    c530:	00 
    c531:	4c 89 ef             	mov    %r13,%rdi
    c534:	4d 89 6f 10          	mov    %r13,0x10(%r15)
    c538:	e8 b3 96 00 00       	callq  15bf0 <memcpy>
    c53d:	49 8d 7c 1d 00       	lea    0x0(%r13,%rbx,1),%rdi
    c542:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
    c549:	4c 89 f6             	mov    %r14,%rsi
    c54c:	45 31 ed             	xor    %r13d,%r13d
    c54f:	49 89 7f 18          	mov    %rdi,0x18(%r15)
    c553:	e8 98 96 00 00       	callq  15bf0 <memcpy>
    c558:	48 63 85 40 ff ff ff 	movslq -0xc0(%rbp),%rax
    c55f:	41 c6 47 20 00       	movb   $0x0,0x20(%r15)
    c564:	49 89 47 28          	mov    %rax,0x28(%r15)
    c568:	48 63 85 30 ff ff ff 	movslq -0xd0(%rbp),%rax
    c56f:	49 89 47 30          	mov    %rax,0x30(%r15)
    c573:	48 63 85 34 ff ff ff 	movslq -0xcc(%rbp),%rax
    c57a:	49 89 47 38          	mov    %rax,0x38(%r15)
    c57e:	48 63 85 38 ff ff ff 	movslq -0xc8(%rbp),%rax
    c585:	49 89 47 40          	mov    %rax,0x40(%r15)
    c589:	48 63 85 3c ff ff ff 	movslq -0xc4(%rbp),%rax
    c590:	49 89 47 48          	mov    %rax,0x48(%r15)
    c594:	0f b6 85 44 ff ff ff 	movzbl -0xbc(%rbp),%eax
    c59b:	89 c2                	mov    %eax,%edx
    c59d:	c1 e2 06             	shl    $0x6,%edx
    c5a0:	c0 fa 07             	sar    $0x7,%dl
    c5a3:	41 88 57 50          	mov    %dl,0x50(%r15)
    c5a7:	89 c2                	mov    %eax,%edx
    c5a9:	c1 e0 04             	shl    $0x4,%eax
    c5ac:	c0 f8 07             	sar    $0x7,%al
    c5af:	c1 e2 05             	shl    $0x5,%edx
    c5b2:	41 80 67 50 01       	andb   $0x1,0x50(%r15)
    c5b7:	41 88 47 52          	mov    %al,0x52(%r15)
    c5bb:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    c5c2:	c0 fa 07             	sar    $0x7,%dl
    c5c5:	41 88 57 51          	mov    %dl,0x51(%r15)
    c5c9:	41 80 67 52 01       	andb   $0x1,0x52(%r15)
    c5ce:	41 80 67 51 01       	andb   $0x1,0x51(%r15)
    c5d3:	4c 89 38             	mov    %r15,(%rax)
    c5d6:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
    c5dd:	44 89 e8             	mov    %r13d,%eax
    c5e0:	5b                   	pop    %rbx
    c5e1:	41 5c                	pop    %r12
    c5e3:	41 5d                	pop    %r13
    c5e5:	41 5e                	pop    %r14
    c5e7:	41 5f                	pop    %r15
    c5e9:	5d                   	pop    %rbp
    c5ea:	c3                   	retq   
    c5eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c5f0:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    c5f7:	44 89 ef             	mov    %r13d,%edi
    c5fa:	41 bd f0 ff ff ff    	mov    $0xfffffff0,%r13d
    c600:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c607:	e8 c4 4a 00 00       	callq  110d0 <ocall_close>
    c60c:	eb c8                	jmp    c5d6 <tcp_accept+0x196>
    c60e:	66 90                	xchg   %ax,%ax
    c610:	41 bd f9 ff ff ff    	mov    $0xfffffff9,%r13d
    c616:	eb be                	jmp    c5d6 <tcp_accept+0x196>
    c618:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c61f:	00 

000000000000c620 <tcp_open>:
    c620:	55                   	push   %rbp
    c621:	48 89 e5             	mov    %rsp,%rbp
    c624:	41 57                	push   %r15
    c626:	41 56                	push   %r14
    c628:	41 55                	push   %r13
    c62a:	41 54                	push   %r12
    c62c:	49 89 fd             	mov    %rdi,%r13
    c62f:	53                   	push   %rbx
    c630:	48 89 d7             	mov    %rdx,%rdi
    c633:	49 89 f4             	mov    %rsi,%r12
    c636:	49 89 d7             	mov    %rdx,%r15
    c639:	bb fb ff ff ff       	mov    $0xfffffffb,%ebx
    c63e:	48 81 ec c8 01 00 00 	sub    $0x1c8,%rsp
    c645:	e8 26 90 00 00       	callq  15670 <strlen>
    c64a:	83 c0 01             	add    $0x1,%eax
    c64d:	83 f8 60             	cmp    $0x60,%eax
    c650:	0f 8f 76 02 00 00    	jg     c8cc <tcp_open+0x2ac>
    c656:	4c 8d b5 70 fe ff ff 	lea    -0x190(%rbp),%r14
    c65d:	48 63 d0             	movslq %eax,%rdx
    c660:	4c 89 fe             	mov    %r15,%rsi
    c663:	4c 89 f7             	mov    %r14,%rdi
    c666:	e8 85 95 00 00       	callq  15bf0 <memcpy>
    c66b:	48 8d 35 ef c6 01 00 	lea    0x1c6ef(%rip),%rsi        # 28d61 <slab_levels+0x1e1>
    c672:	ba 08 00 00 00       	mov    $0x8,%edx
    c677:	4c 89 e7             	mov    %r12,%rdi
    c67a:	e8 11 90 00 00       	callq  15690 <memcmp>
    c67f:	85 c0                	test   %eax,%eax
    c681:	89 c3                	mov    %eax,%ebx
    c683:	0f 84 57 02 00 00    	je     c8e0 <tcp_open+0x2c0>
    c689:	48 8d 35 da c6 01 00 	lea    0x1c6da(%rip),%rsi        # 28d6a <slab_levels+0x1ea>
    c690:	ba 04 00 00 00       	mov    $0x4,%edx
    c695:	4c 89 e7             	mov    %r12,%rdi
    c698:	e8 f3 8f 00 00       	callq  15690 <memcmp>
    c69d:	85 c0                	test   %eax,%eax
    c69f:	89 c3                	mov    %eax,%ebx
    c6a1:	0f 85 89 03 00 00    	jne    ca30 <tcp_open+0x410>
    c6a7:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    c6ae:	4c 8d bd 38 fe ff ff 	lea    -0x1c8(%rbp),%r15
    c6b5:	48 8d 8d 48 fe ff ff 	lea    -0x1b8(%rbp),%rcx
    c6bc:	48 8d b5 40 fe ff ff 	lea    -0x1c0(%rbp),%rsi
    c6c3:	4c 8d 85 3c fe ff ff 	lea    -0x1c4(%rbp),%r8
    c6ca:	4c 89 f7             	mov    %r14,%rdi
    c6cd:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
    c6d4:	4c 89 fa             	mov    %r15,%rdx
    c6d7:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
    c6db:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
    c6e2:	e8 49 f7 ff ff       	callq  be30 <socket_parse_uri>
    c6e7:	85 c0                	test   %eax,%eax
    c6e9:	0f 88 01 03 00 00    	js     c9f0 <tcp_open+0x3d0>
    c6ef:	48 8b 8d 48 fe ff ff 	mov    -0x1b8(%rbp),%rcx
    c6f6:	48 85 c9             	test   %rcx,%rcx
    c6f9:	0f 84 51 03 00 00    	je     ca50 <tcp_open+0x430>
    c6ff:	4c 8b 8d 40 fe ff ff 	mov    -0x1c0(%rbp),%r9
    c706:	0f b7 39             	movzwl (%rcx),%edi
    c709:	4d 85 c9             	test   %r9,%r9
    c70c:	74 0a                	je     c718 <tcp_open+0xf8>
    c70e:	66 41 39 39          	cmp    %di,(%r9)
    c712:	0f 85 38 03 00 00    	jne    ca50 <tcp_open+0x430>
    c718:	8b 45 10             	mov    0x10(%rbp),%eax
    c71b:	44 8b 85 3c fe ff ff 	mov    -0x1c4(%rbp),%r8d
    c722:	25 00 08 00 00       	and    $0x800,%eax
    c727:	83 f8 01             	cmp    $0x1,%eax
    c72a:	89 85 1c fe ff ff    	mov    %eax,-0x1e4(%rbp)
    c730:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
    c737:	19 f6                	sbb    %esi,%esi
    c739:	31 d2                	xor    %edx,%edx
    c73b:	50                   	push   %rax
    c73c:	81 e6 00 f8 ff ff    	and    $0xfffff800,%esi
    c742:	41 57                	push   %r15
    c744:	81 c6 01 08 00 00    	add    $0x801,%esi
    c74a:	e8 91 55 00 00       	callq  11ce0 <ocall_sock_connect>
    c74f:	85 c0                	test   %eax,%eax
    c751:	41 89 c4             	mov    %eax,%r12d
    c754:	5a                   	pop    %rdx
    c755:	59                   	pop    %rcx
    c756:	0f 88 a4 02 00 00    	js     ca00 <tcp_open+0x3e0>
    c75c:	8b 85 3c fe ff ff    	mov    -0x1c4(%rbp),%eax
    c762:	4c 8b bd 40 fe ff ff 	mov    -0x1c0(%rbp),%r15
    c769:	89 85 20 fe ff ff    	mov    %eax,-0x1e0(%rbp)
    c76f:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    c776:	4d 85 ff             	test   %r15,%r15
    c779:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    c780:	8b 85 38 fe ff ff    	mov    -0x1c8(%rbp),%eax
    c786:	89 85 10 fe ff ff    	mov    %eax,-0x1f0(%rbp)
    c78c:	0f 84 ae 02 00 00    	je     ca40 <tcp_open+0x420>
    c792:	89 c7                	mov    %eax,%edi
    c794:	48 8d 57 58          	lea    0x58(%rdi),%rdx
    c798:	48 83 bd 28 fe ff ff 	cmpq   $0x0,-0x1d8(%rbp)
    c79f:	00 
    c7a0:	8b 85 20 fe ff ff    	mov    -0x1e0(%rbp),%eax
    c7a6:	bf 00 00 00 00       	mov    $0x0,%edi
    c7ab:	48 0f 44 c7          	cmove  %rdi,%rax
    c7af:	48 8d 3c 02          	lea    (%rdx,%rax,1),%rdi
    c7b3:	e8 68 c8 ff ff       	callq  9020 <malloc>
    c7b8:	48 85 c0             	test   %rax,%rax
    c7bb:	49 89 c6             	mov    %rax,%r14
    c7be:	0f 84 04 03 00 00    	je     cac8 <tcp_open+0x4a8>
    c7c4:	31 f6                	xor    %esi,%esi
    c7c6:	ba 58 00 00 00       	mov    $0x58,%edx
    c7cb:	48 89 c7             	mov    %rax,%rdi
    c7ce:	e8 8d 9c 00 00       	callq  16460 <memset>
    c7d3:	4d 85 ff             	test   %r15,%r15
    c7d6:	45 89 66 08          	mov    %r12d,0x8(%r14)
    c7da:	41 c7 06 08 00 00 00 	movl   $0x8,(%r14)
    c7e1:	41 c7 46 04 09 00 00 	movl   $0x9,0x4(%r14)
    c7e8:	00 
    c7e9:	4d 8d 66 58          	lea    0x58(%r14),%r12
    c7ed:	0f 84 2d 02 00 00    	je     ca20 <tcp_open+0x400>
    c7f3:	44 8b 8d 10 fe ff ff 	mov    -0x1f0(%rbp),%r9d
    c7fa:	4d 89 66 10          	mov    %r12,0x10(%r14)
    c7fe:	4c 89 e7             	mov    %r12,%rdi
    c801:	4c 89 fe             	mov    %r15,%rsi
    c804:	4c 89 ca             	mov    %r9,%rdx
    c807:	4c 89 8d 10 fe ff ff 	mov    %r9,-0x1f0(%rbp)
    c80e:	e8 dd 93 00 00       	callq  15bf0 <memcpy>
    c813:	4c 8b 8d 10 fe ff ff 	mov    -0x1f0(%rbp),%r9
    c81a:	4d 01 cc             	add    %r9,%r12
    c81d:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
    c824:	48 85 c0             	test   %rax,%rax
    c827:	0f 84 e3 01 00 00    	je     ca10 <tcp_open+0x3f0>
    c82d:	8b 95 20 fe ff ff    	mov    -0x1e0(%rbp),%edx
    c833:	4d 89 66 18          	mov    %r12,0x18(%r14)
    c837:	48 89 c6             	mov    %rax,%rsi
    c83a:	4c 89 e7             	mov    %r12,%rdi
    c83d:	e8 ae 93 00 00       	callq  15bf0 <memcpy>
    c842:	8b 85 1c fe ff ff    	mov    -0x1e4(%rbp),%eax
    c848:	85 c0                	test   %eax,%eax
    c84a:	41 0f 95 46 20       	setne  0x20(%r14)
    c84f:	48 63 85 60 fe ff ff 	movslq -0x1a0(%rbp),%rax
    c856:	49 89 46 28          	mov    %rax,0x28(%r14)
    c85a:	48 63 85 50 fe ff ff 	movslq -0x1b0(%rbp),%rax
    c861:	49 89 46 30          	mov    %rax,0x30(%r14)
    c865:	48 63 85 54 fe ff ff 	movslq -0x1ac(%rbp),%rax
    c86c:	49 89 46 38          	mov    %rax,0x38(%r14)
    c870:	48 63 85 58 fe ff ff 	movslq -0x1a8(%rbp),%rax
    c877:	49 89 46 40          	mov    %rax,0x40(%r14)
    c87b:	48 63 85 5c fe ff ff 	movslq -0x1a4(%rbp),%rax
    c882:	49 89 46 48          	mov    %rax,0x48(%r14)
    c886:	0f b6 85 64 fe ff ff 	movzbl -0x19c(%rbp),%eax
    c88d:	c1 e0 06             	shl    $0x6,%eax
    c890:	c0 f8 07             	sar    $0x7,%al
    c893:	41 88 46 50          	mov    %al,0x50(%r14)
    c897:	41 80 66 50 01       	andb   $0x1,0x50(%r14)
    c89c:	0f b6 85 64 fe ff ff 	movzbl -0x19c(%rbp),%eax
    c8a3:	c1 e0 05             	shl    $0x5,%eax
    c8a6:	c0 f8 07             	sar    $0x7,%al
    c8a9:	41 88 46 51          	mov    %al,0x51(%r14)
    c8ad:	41 80 66 51 01       	andb   $0x1,0x51(%r14)
    c8b2:	0f b6 85 64 fe ff ff 	movzbl -0x19c(%rbp),%eax
    c8b9:	c1 e0 04             	shl    $0x4,%eax
    c8bc:	c0 f8 07             	sar    $0x7,%al
    c8bf:	41 88 46 52          	mov    %al,0x52(%r14)
    c8c3:	41 80 66 52 01       	andb   $0x1,0x52(%r14)
    c8c8:	4d 89 75 00          	mov    %r14,0x0(%r13)
    c8cc:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    c8d0:	89 d8                	mov    %ebx,%eax
    c8d2:	5b                   	pop    %rbx
    c8d3:	41 5c                	pop    %r12
    c8d5:	41 5d                	pop    %r13
    c8d7:	41 5e                	pop    %r14
    c8d9:	41 5f                	pop    %r15
    c8db:	5d                   	pop    %rbp
    c8dc:	c3                   	retq   
    c8dd:	0f 1f 00             	nopl   (%rax)
    c8e0:	4c 8d bd 40 fe ff ff 	lea    -0x1c0(%rbp),%r15
    c8e7:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    c8ee:	48 8d b5 48 fe ff ff 	lea    -0x1b8(%rbp),%rsi
    c8f5:	45 31 c0             	xor    %r8d,%r8d
    c8f8:	31 c9                	xor    %ecx,%ecx
    c8fa:	4c 89 f7             	mov    %r14,%rdi
    c8fd:	4c 89 fa             	mov    %r15,%rdx
    c900:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
    c907:	e8 24 f5 ff ff       	callq  be30 <socket_parse_uri>
    c90c:	85 c0                	test   %eax,%eax
    c90e:	0f 88 dc 00 00 00    	js     c9f0 <tcp_open+0x3d0>
    c914:	44 8b 65 10          	mov    0x10(%rbp),%r12d
    c918:	48 8b 8d 48 fe ff ff 	mov    -0x1b8(%rbp),%rcx
    c91f:	4c 8d 8d 50 fe ff ff 	lea    -0x1b0(%rbp),%r9
    c926:	4d 89 f8             	mov    %r15,%r8
    c929:	41 81 e4 00 08 00 00 	and    $0x800,%r12d
    c930:	0f b7 39             	movzwl (%rcx),%edi
    c933:	41 83 fc 01          	cmp    $0x1,%r12d
    c937:	19 f6                	sbb    %esi,%esi
    c939:	31 d2                	xor    %edx,%edx
    c93b:	81 e6 00 f8 ff ff    	and    $0xfffff800,%esi
    c941:	81 c6 01 08 00 00    	add    $0x801,%esi
    c947:	e8 a4 50 00 00       	callq  119f0 <ocall_sock_listen>
    c94c:	85 c0                	test   %eax,%eax
    c94e:	41 89 c7             	mov    %eax,%r15d
    c951:	0f 88 91 00 00 00    	js     c9e8 <tcp_open+0x3c8>
    c957:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    c95e:	44 8b b5 40 fe ff ff 	mov    -0x1c0(%rbp),%r14d
    c965:	48 85 c0             	test   %rax,%rax
    c968:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    c96f:	0f 84 0b 01 00 00    	je     ca80 <tcp_open+0x460>
    c975:	44 89 f0             	mov    %r14d,%eax
    c978:	48 8d 78 58          	lea    0x58(%rax),%rdi
    c97c:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    c983:	e8 98 c6 ff ff       	callq  9020 <malloc>
    c988:	48 85 c0             	test   %rax,%rax
    c98b:	49 89 c6             	mov    %rax,%r14
    c98e:	0f 84 cc 00 00 00    	je     ca60 <tcp_open+0x440>
    c994:	ba 58 00 00 00       	mov    $0x58,%edx
    c999:	31 f6                	xor    %esi,%esi
    c99b:	48 89 c7             	mov    %rax,%rdi
    c99e:	e8 bd 9a 00 00       	callq  16460 <memset>
    c9a3:	49 8d 7e 58          	lea    0x58(%r14),%rdi
    c9a7:	48 8b 95 20 fe ff ff 	mov    -0x1e0(%rbp),%rdx
    c9ae:	48 8b b5 28 fe ff ff 	mov    -0x1d8(%rbp),%rsi
    c9b5:	41 c7 06 09 00 00 00 	movl   $0x9,(%r14)
    c9bc:	41 c7 46 04 01 00 00 	movl   $0x1,0x4(%r14)
    c9c3:	00 
    c9c4:	45 89 7e 08          	mov    %r15d,0x8(%r14)
    c9c8:	49 89 7e 10          	mov    %rdi,0x10(%r14)
    c9cc:	e8 1f 92 00 00       	callq  15bf0 <memcpy>
    c9d1:	49 c7 46 18 00 00 00 	movq   $0x0,0x18(%r14)
    c9d8:	00 
    c9d9:	45 85 e4             	test   %r12d,%r12d
    c9dc:	e9 69 fe ff ff       	jmpq   c84a <tcp_open+0x22a>
    c9e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c9e8:	89 c3                	mov    %eax,%ebx
    c9ea:	e9 dd fe ff ff       	jmpq   c8cc <tcp_open+0x2ac>
    c9ef:	90                   	nop
    c9f0:	89 c3                	mov    %eax,%ebx
    c9f2:	e9 d5 fe ff ff       	jmpq   c8cc <tcp_open+0x2ac>
    c9f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c9fe:	00 00 
    ca00:	89 c3                	mov    %eax,%ebx
    ca02:	e9 c5 fe ff ff       	jmpq   c8cc <tcp_open+0x2ac>
    ca07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ca0e:	00 00 
    ca10:	49 c7 46 18 00 00 00 	movq   $0x0,0x18(%r14)
    ca17:	00 
    ca18:	e9 25 fe ff ff       	jmpq   c842 <tcp_open+0x222>
    ca1d:	0f 1f 00             	nopl   (%rax)
    ca20:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
    ca27:	00 
    ca28:	e9 f0 fd ff ff       	jmpq   c81d <tcp_open+0x1fd>
    ca2d:	0f 1f 00             	nopl   (%rax)
    ca30:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx
    ca35:	e9 92 fe ff ff       	jmpq   c8cc <tcp_open+0x2ac>
    ca3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ca40:	ba 58 00 00 00       	mov    $0x58,%edx
    ca45:	e9 4e fd ff ff       	jmpq   c798 <tcp_open+0x178>
    ca4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ca50:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx
    ca55:	e9 72 fe ff ff       	jmpq   c8cc <tcp_open+0x2ac>
    ca5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ca60:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
    ca67:	00 
    ca68:	44 89 ff             	mov    %r15d,%edi
    ca6b:	bb f0 ff ff ff       	mov    $0xfffffff0,%ebx
    ca70:	e8 5b 46 00 00       	callq  110d0 <ocall_close>
    ca75:	e9 52 fe ff ff       	jmpq   c8cc <tcp_open+0x2ac>
    ca7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ca80:	bf 58 00 00 00       	mov    $0x58,%edi
    ca85:	e8 96 c5 ff ff       	callq  9020 <malloc>
    ca8a:	48 85 c0             	test   %rax,%rax
    ca8d:	49 89 c6             	mov    %rax,%r14
    ca90:	74 ce                	je     ca60 <tcp_open+0x440>
    ca92:	ba 58 00 00 00       	mov    $0x58,%edx
    ca97:	31 f6                	xor    %esi,%esi
    ca99:	4c 89 f7             	mov    %r14,%rdi
    ca9c:	e8 bf 99 00 00       	callq  16460 <memset>
    caa1:	41 c7 06 09 00 00 00 	movl   $0x9,(%r14)
    caa8:	41 c7 46 04 01 00 00 	movl   $0x1,0x4(%r14)
    caaf:	00 
    cab0:	45 89 7e 08          	mov    %r15d,0x8(%r14)
    cab4:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
    cabb:	00 
    cabc:	e9 10 ff ff ff       	jmpq   c9d1 <tcp_open+0x3b1>
    cac1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cac8:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
    cacf:	00 
    cad0:	44 89 e7             	mov    %r12d,%edi
    cad3:	bb f0 ff ff ff       	mov    $0xfffffff0,%ebx
    cad8:	e8 f3 45 00 00       	callq  110d0 <ocall_close>
    cadd:	e9 ea fd ff ff       	jmpq   c8cc <tcp_open+0x2ac>
    cae2:	0f 1f 40 00          	nopl   0x0(%rax)
    cae6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    caed:	00 00 00 

000000000000caf0 <udp_open>:
    caf0:	55                   	push   %rbp
    caf1:	48 89 e5             	mov    %rsp,%rbp
    caf4:	41 57                	push   %r15
    caf6:	41 56                	push   %r14
    caf8:	41 55                	push   %r13
    cafa:	41 54                	push   %r12
    cafc:	49 89 fc             	mov    %rdi,%r12
    caff:	53                   	push   %rbx
    cb00:	48 89 d7             	mov    %rdx,%rdi
    cb03:	49 89 f5             	mov    %rsi,%r13
    cb06:	49 89 d7             	mov    %rdx,%r15
    cb09:	bb fb ff ff ff       	mov    $0xfffffffb,%ebx
    cb0e:	48 81 ec c8 01 00 00 	sub    $0x1c8,%rsp
    cb15:	e8 56 8b 00 00       	callq  15670 <strlen>
    cb1a:	83 f8 5f             	cmp    $0x5f,%eax
    cb1d:	0f 8f 76 02 00 00    	jg     cd99 <udp_open+0x2a9>
    cb23:	4c 8d b5 70 fe ff ff 	lea    -0x190(%rbp),%r14
    cb2a:	83 c0 01             	add    $0x1,%eax
    cb2d:	4c 89 fe             	mov    %r15,%rsi
    cb30:	48 63 d0             	movslq %eax,%rdx
    cb33:	4c 89 f7             	mov    %r14,%rdi
    cb36:	e8 b5 90 00 00       	callq  15bf0 <memcpy>
    cb3b:	48 8d 35 2d c2 01 00 	lea    0x1c22d(%rip),%rsi        # 28d6f <slab_levels+0x1ef>
    cb42:	ba 08 00 00 00       	mov    $0x8,%edx
    cb47:	4c 89 ef             	mov    %r13,%rdi
    cb4a:	e8 41 8b 00 00       	callq  15690 <memcmp>
    cb4f:	85 c0                	test   %eax,%eax
    cb51:	89 c3                	mov    %eax,%ebx
    cb53:	0f 84 57 02 00 00    	je     cdb0 <udp_open+0x2c0>
    cb59:	48 8d 35 fc c1 01 00 	lea    0x1c1fc(%rip),%rsi        # 28d5c <slab_levels+0x1dc>
    cb60:	ba 04 00 00 00       	mov    $0x4,%edx
    cb65:	4c 89 ef             	mov    %r13,%rdi
    cb68:	e8 23 8b 00 00       	callq  15690 <memcmp>
    cb6d:	85 c0                	test   %eax,%eax
    cb6f:	89 c3                	mov    %eax,%ebx
    cb71:	0f 85 19 04 00 00    	jne    cf90 <udp_open+0x4a0>
    cb77:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    cb7e:	4c 8d ad 38 fe ff ff 	lea    -0x1c8(%rbp),%r13
    cb85:	48 8d 8d 48 fe ff ff 	lea    -0x1b8(%rbp),%rcx
    cb8c:	48 8d b5 40 fe ff ff 	lea    -0x1c0(%rbp),%rsi
    cb93:	4c 8d 85 3c fe ff ff 	lea    -0x1c4(%rbp),%r8
    cb9a:	4c 89 f7             	mov    %r14,%rdi
    cb9d:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
    cba4:	4c 89 ea             	mov    %r13,%rdx
    cba7:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
    cbab:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
    cbb2:	e8 79 f2 ff ff       	callq  be30 <socket_parse_uri>
    cbb7:	85 c0                	test   %eax,%eax
    cbb9:	0f 88 51 03 00 00    	js     cf10 <udp_open+0x420>
    cbbf:	8b 45 10             	mov    0x10(%rbp),%eax
    cbc2:	48 8b 8d 48 fe ff ff 	mov    -0x1b8(%rbp),%rcx
    cbc9:	4c 8b 8d 40 fe ff ff 	mov    -0x1c0(%rbp),%r9
    cbd0:	44 8b 85 3c fe ff ff 	mov    -0x1c4(%rbp),%r8d
    cbd7:	25 00 08 00 00       	and    $0x800,%eax
    cbdc:	83 f8 01             	cmp    $0x1,%eax
    cbdf:	89 85 18 fe ff ff    	mov    %eax,-0x1e8(%rbp)
    cbe5:	19 f6                	sbb    %esi,%esi
    cbe7:	81 e6 00 f8 ff ff    	and    $0xfffff800,%esi
    cbed:	81 c6 02 08 00 00    	add    $0x802,%esi
    cbf3:	48 85 c9             	test   %rcx,%rcx
    cbf6:	0f 84 84 03 00 00    	je     cf80 <udp_open+0x490>
    cbfc:	0f b7 39             	movzwl (%rcx),%edi
    cbff:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
    cc06:	31 d2                	xor    %edx,%edx
    cc08:	50                   	push   %rax
    cc09:	41 55                	push   %r13
    cc0b:	e8 d0 50 00 00       	callq  11ce0 <ocall_sock_connect>
    cc10:	85 c0                	test   %eax,%eax
    cc12:	41 89 c5             	mov    %eax,%r13d
    cc15:	5a                   	pop    %rdx
    cc16:	59                   	pop    %rcx
    cc17:	0f 88 53 03 00 00    	js     cf70 <udp_open+0x480>
    cc1d:	8b 85 3c fe ff ff    	mov    -0x1c4(%rbp),%eax
    cc23:	4c 8b bd 48 fe ff ff 	mov    -0x1b8(%rbp),%r15
    cc2a:	89 85 1c fe ff ff    	mov    %eax,-0x1e4(%rbp)
    cc30:	8b 85 38 fe ff ff    	mov    -0x1c8(%rbp),%eax
    cc36:	4d 85 ff             	test   %r15,%r15
    cc39:	89 85 20 fe ff ff    	mov    %eax,-0x1e0(%rbp)
    cc3f:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
    cc46:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    cc4d:	0f 84 4d 03 00 00    	je     cfa0 <udp_open+0x4b0>
    cc53:	48 83 bd 28 fe ff ff 	cmpq   $0x0,-0x1d8(%rbp)
    cc5a:	00 
    cc5b:	0f 84 02 04 00 00    	je     d063 <udp_open+0x573>
    cc61:	8b bd 20 fe ff ff    	mov    -0x1e0(%rbp),%edi
    cc67:	48 8d 47 58          	lea    0x58(%rdi),%rax
    cc6b:	8b bd 1c fe ff ff    	mov    -0x1e4(%rbp),%edi
    cc71:	c7 85 14 fe ff ff 0a 	movl   $0xa,-0x1ec(%rbp)
    cc78:	00 00 00 
    cc7b:	48 01 c7             	add    %rax,%rdi
    cc7e:	e8 9d c3 ff ff       	callq  9020 <malloc>
    cc83:	48 85 c0             	test   %rax,%rax
    cc86:	49 89 c6             	mov    %rax,%r14
    cc89:	0f 84 a1 03 00 00    	je     d030 <udp_open+0x540>
    cc8f:	31 f6                	xor    %esi,%esi
    cc91:	ba 58 00 00 00       	mov    $0x58,%edx
    cc96:	48 89 c7             	mov    %rax,%rdi
    cc99:	e8 c2 97 00 00       	callq  16460 <memset>
    cc9e:	8b 85 14 fe ff ff    	mov    -0x1ec(%rbp),%eax
    cca4:	45 89 6e 08          	mov    %r13d,0x8(%r14)
    cca8:	4d 8d 6e 58          	lea    0x58(%r14),%r13
    ccac:	41 c7 46 04 09 00 00 	movl   $0x9,0x4(%r14)
    ccb3:	00 
    ccb4:	41 89 06             	mov    %eax,(%r14)
    ccb7:	48 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%rax
    ccbe:	48 85 c0             	test   %rax,%rax
    ccc1:	0f 84 69 02 00 00    	je     cf30 <udp_open+0x440>
    ccc7:	44 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%r8d
    ccce:	4d 89 6e 10          	mov    %r13,0x10(%r14)
    ccd2:	4c 89 ef             	mov    %r13,%rdi
    ccd5:	48 89 c6             	mov    %rax,%rsi
    ccd8:	4c 89 c2             	mov    %r8,%rdx
    ccdb:	4c 89 85 28 fe ff ff 	mov    %r8,-0x1d8(%rbp)
    cce2:	e8 09 8f 00 00       	callq  15bf0 <memcpy>
    cce7:	4c 8b 85 28 fe ff ff 	mov    -0x1d8(%rbp),%r8
    ccee:	4d 01 c5             	add    %r8,%r13
    ccf1:	4d 85 ff             	test   %r15,%r15
    ccf4:	0f 84 26 02 00 00    	je     cf20 <udp_open+0x430>
    ccfa:	8b 95 1c fe ff ff    	mov    -0x1e4(%rbp),%edx
    cd00:	4d 89 6e 18          	mov    %r13,0x18(%r14)
    cd04:	4c 89 fe             	mov    %r15,%rsi
    cd07:	4c 89 ef             	mov    %r13,%rdi
    cd0a:	e8 e1 8e 00 00       	callq  15bf0 <memcpy>
    cd0f:	8b 85 18 fe ff ff    	mov    -0x1e8(%rbp),%eax
    cd15:	85 c0                	test   %eax,%eax
    cd17:	41 0f 95 46 20       	setne  0x20(%r14)
    cd1c:	48 63 85 60 fe ff ff 	movslq -0x1a0(%rbp),%rax
    cd23:	49 89 46 28          	mov    %rax,0x28(%r14)
    cd27:	48 63 85 50 fe ff ff 	movslq -0x1b0(%rbp),%rax
    cd2e:	49 89 46 30          	mov    %rax,0x30(%r14)
    cd32:	48 63 85 54 fe ff ff 	movslq -0x1ac(%rbp),%rax
    cd39:	49 89 46 38          	mov    %rax,0x38(%r14)
    cd3d:	48 63 85 58 fe ff ff 	movslq -0x1a8(%rbp),%rax
    cd44:	49 89 46 40          	mov    %rax,0x40(%r14)
    cd48:	48 63 85 5c fe ff ff 	movslq -0x1a4(%rbp),%rax
    cd4f:	49 89 46 48          	mov    %rax,0x48(%r14)
    cd53:	0f b6 85 64 fe ff ff 	movzbl -0x19c(%rbp),%eax
    cd5a:	c1 e0 06             	shl    $0x6,%eax
    cd5d:	c0 f8 07             	sar    $0x7,%al
    cd60:	41 88 46 50          	mov    %al,0x50(%r14)
    cd64:	41 80 66 50 01       	andb   $0x1,0x50(%r14)
    cd69:	0f b6 85 64 fe ff ff 	movzbl -0x19c(%rbp),%eax
    cd70:	c1 e0 05             	shl    $0x5,%eax
    cd73:	c0 f8 07             	sar    $0x7,%al
    cd76:	41 88 46 51          	mov    %al,0x51(%r14)
    cd7a:	41 80 66 51 01       	andb   $0x1,0x51(%r14)
    cd7f:	0f b6 85 64 fe ff ff 	movzbl -0x19c(%rbp),%eax
    cd86:	c1 e0 04             	shl    $0x4,%eax
    cd89:	c0 f8 07             	sar    $0x7,%al
    cd8c:	41 88 46 52          	mov    %al,0x52(%r14)
    cd90:	41 80 66 52 01       	andb   $0x1,0x52(%r14)
    cd95:	4d 89 34 24          	mov    %r14,(%r12)
    cd99:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    cd9d:	89 d8                	mov    %ebx,%eax
    cd9f:	5b                   	pop    %rbx
    cda0:	41 5c                	pop    %r12
    cda2:	41 5d                	pop    %r13
    cda4:	41 5e                	pop    %r14
    cda6:	41 5f                	pop    %r15
    cda8:	5d                   	pop    %rbp
    cda9:	c3                   	retq   
    cdaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cdb0:	4c 8d bd 40 fe ff ff 	lea    -0x1c0(%rbp),%r15
    cdb7:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    cdbe:	48 8d b5 48 fe ff ff 	lea    -0x1b8(%rbp),%rsi
    cdc5:	45 31 c0             	xor    %r8d,%r8d
    cdc8:	31 c9                	xor    %ecx,%ecx
    cdca:	4c 89 f7             	mov    %r14,%rdi
    cdcd:	4c 89 fa             	mov    %r15,%rdx
    cdd0:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
    cdd7:	e8 54 f0 ff ff       	callq  be30 <socket_parse_uri>
    cddc:	85 c0                	test   %eax,%eax
    cdde:	0f 88 2c 01 00 00    	js     cf10 <udp_open+0x420>
    cde4:	48 8b 8d 48 fe ff ff 	mov    -0x1b8(%rbp),%rcx
    cdeb:	48 85 c9             	test   %rcx,%rcx
    cdee:	0f 84 4c 01 00 00    	je     cf40 <udp_open+0x450>
    cdf4:	0f b7 39             	movzwl (%rcx),%edi
    cdf7:	b8 10 00 00 00       	mov    $0x10,%eax
    cdfc:	66 83 ff 02          	cmp    $0x2,%di
    ce00:	74 11                	je     ce13 <udp_open+0x323>
    ce02:	66 83 ff 0a          	cmp    $0xa,%di
    ce06:	ba 00 00 00 00       	mov    $0x0,%edx
    ce0b:	b8 1c 00 00 00       	mov    $0x1c,%eax
    ce10:	0f 45 c2             	cmovne %edx,%eax
    ce13:	39 85 40 fe ff ff    	cmp    %eax,-0x1c0(%rbp)
    ce19:	74 24                	je     ce3f <udp_open+0x34f>
    ce1b:	48 8d 3d be bf 01 00 	lea    0x1bfbe(%rip),%rdi        # 28de0 <slab_levels+0x260>
    ce22:	31 d2                	xor    %edx,%edx
    ce24:	be 1d 02 00 00       	mov    $0x21d,%esi
    ce29:	31 c0                	xor    %eax,%eax
    ce2b:	e8 20 a3 ff ff       	callq  7150 <warn>
    ce30:	e8 0b a3 ff ff       	callq  7140 <__abort>
    ce35:	48 8b 8d 48 fe ff ff 	mov    -0x1b8(%rbp),%rcx
    ce3c:	0f b7 39             	movzwl (%rcx),%edi
    ce3f:	44 8b 6d 10          	mov    0x10(%rbp),%r13d
    ce43:	4c 8d 8d 50 fe ff ff 	lea    -0x1b0(%rbp),%r9
    ce4a:	4d 89 f8             	mov    %r15,%r8
    ce4d:	41 81 e5 00 08 00 00 	and    $0x800,%r13d
    ce54:	41 83 fd 01          	cmp    $0x1,%r13d
    ce58:	19 f6                	sbb    %esi,%esi
    ce5a:	31 d2                	xor    %edx,%edx
    ce5c:	81 e6 00 f8 ff ff    	and    $0xfffff800,%esi
    ce62:	81 c6 02 08 00 00    	add    $0x802,%esi
    ce68:	e8 83 4b 00 00       	callq  119f0 <ocall_sock_listen>
    ce6d:	85 c0                	test   %eax,%eax
    ce6f:	41 89 c7             	mov    %eax,%r15d
    ce72:	0f 88 90 00 00 00    	js     cf08 <udp_open+0x418>
    ce78:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    ce7f:	44 8b b5 40 fe ff ff 	mov    -0x1c0(%rbp),%r14d
    ce86:	48 85 c0             	test   %rax,%rax
    ce89:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    ce90:	0f 84 52 01 00 00    	je     cfe8 <udp_open+0x4f8>
    ce96:	44 89 f0             	mov    %r14d,%eax
    ce99:	48 8d 78 58          	lea    0x58(%rax),%rdi
    ce9d:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    cea4:	e8 77 c1 ff ff       	callq  9020 <malloc>
    cea9:	48 85 c0             	test   %rax,%rax
    ceac:	49 89 c6             	mov    %rax,%r14
    ceaf:	0f 84 13 01 00 00    	je     cfc8 <udp_open+0x4d8>
    ceb5:	ba 58 00 00 00       	mov    $0x58,%edx
    ceba:	31 f6                	xor    %esi,%esi
    cebc:	48 89 c7             	mov    %rax,%rdi
    cebf:	e8 9c 95 00 00       	callq  16460 <memset>
    cec4:	49 8d 7e 58          	lea    0x58(%r14),%rdi
    cec8:	48 8b 95 20 fe ff ff 	mov    -0x1e0(%rbp),%rdx
    cecf:	48 8b b5 28 fe ff ff 	mov    -0x1d8(%rbp),%rsi
    ced6:	41 c7 06 0b 00 00 00 	movl   $0xb,(%r14)
    cedd:	41 c7 46 04 09 00 00 	movl   $0x9,0x4(%r14)
    cee4:	00 
    cee5:	45 89 7e 08          	mov    %r15d,0x8(%r14)
    cee9:	49 89 7e 10          	mov    %rdi,0x10(%r14)
    ceed:	e8 fe 8c 00 00       	callq  15bf0 <memcpy>
    cef2:	49 c7 46 18 00 00 00 	movq   $0x0,0x18(%r14)
    cef9:	00 
    cefa:	45 85 ed             	test   %r13d,%r13d
    cefd:	e9 15 fe ff ff       	jmpq   cd17 <udp_open+0x227>
    cf02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cf08:	89 c3                	mov    %eax,%ebx
    cf0a:	e9 8a fe ff ff       	jmpq   cd99 <udp_open+0x2a9>
    cf0f:	90                   	nop
    cf10:	89 c3                	mov    %eax,%ebx
    cf12:	e9 82 fe ff ff       	jmpq   cd99 <udp_open+0x2a9>
    cf17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cf1e:	00 00 
    cf20:	49 c7 46 18 00 00 00 	movq   $0x0,0x18(%r14)
    cf27:	00 
    cf28:	e9 e2 fd ff ff       	jmpq   cd0f <udp_open+0x21f>
    cf2d:	0f 1f 00             	nopl   (%rax)
    cf30:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
    cf37:	00 
    cf38:	e9 b4 fd ff ff       	jmpq   ccf1 <udp_open+0x201>
    cf3d:	0f 1f 00             	nopl   (%rax)
    cf40:	48 8d 3d 61 be 01 00 	lea    0x1be61(%rip),%rdi        # 28da8 <slab_levels+0x228>
    cf47:	31 d2                	xor    %edx,%edx
    cf49:	be 1c 02 00 00       	mov    $0x21c,%esi
    cf4e:	31 c0                	xor    %eax,%eax
    cf50:	e8 fb a1 ff ff       	callq  7150 <warn>
    cf55:	e8 e6 a1 ff ff       	callq  7140 <__abort>
    cf5a:	48 8b 8d 48 fe ff ff 	mov    -0x1b8(%rbp),%rcx
    cf61:	e9 8e fe ff ff       	jmpq   cdf4 <udp_open+0x304>
    cf66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    cf6d:	00 00 00 
    cf70:	89 c3                	mov    %eax,%ebx
    cf72:	e9 22 fe ff ff       	jmpq   cd99 <udp_open+0x2a9>
    cf77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cf7e:	00 00 
    cf80:	bf 02 00 00 00       	mov    $0x2,%edi
    cf85:	e9 75 fc ff ff       	jmpq   cbff <udp_open+0x10f>
    cf8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cf90:	bb fd ff ff ff       	mov    $0xfffffffd,%ebx
    cf95:	e9 ff fd ff ff       	jmpq   cd99 <udp_open+0x2a9>
    cf9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cfa0:	48 83 bd 28 fe ff ff 	cmpq   $0x0,-0x1d8(%rbp)
    cfa7:	00 
    cfa8:	0f 85 9c 00 00 00    	jne    d04a <udp_open+0x55a>
    cfae:	bf 58 00 00 00       	mov    $0x58,%edi
    cfb3:	c7 85 14 fe ff ff 0b 	movl   $0xb,-0x1ec(%rbp)
    cfba:	00 00 00 
    cfbd:	e9 bc fc ff ff       	jmpq   cc7e <udp_open+0x18e>
    cfc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cfc8:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    cfcf:	00 
    cfd0:	44 89 ff             	mov    %r15d,%edi
    cfd3:	bb f0 ff ff ff       	mov    $0xfffffff0,%ebx
    cfd8:	e8 f3 40 00 00       	callq  110d0 <ocall_close>
    cfdd:	e9 b7 fd ff ff       	jmpq   cd99 <udp_open+0x2a9>
    cfe2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cfe8:	bf 58 00 00 00       	mov    $0x58,%edi
    cfed:	e8 2e c0 ff ff       	callq  9020 <malloc>
    cff2:	48 85 c0             	test   %rax,%rax
    cff5:	49 89 c6             	mov    %rax,%r14
    cff8:	74 ce                	je     cfc8 <udp_open+0x4d8>
    cffa:	ba 58 00 00 00       	mov    $0x58,%edx
    cfff:	31 f6                	xor    %esi,%esi
    d001:	4c 89 f7             	mov    %r14,%rdi
    d004:	e8 57 94 00 00       	callq  16460 <memset>
    d009:	41 c7 06 0b 00 00 00 	movl   $0xb,(%r14)
    d010:	41 c7 46 04 09 00 00 	movl   $0x9,0x4(%r14)
    d017:	00 
    d018:	45 89 7e 08          	mov    %r15d,0x8(%r14)
    d01c:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
    d023:	00 
    d024:	e9 c9 fe ff ff       	jmpq   cef2 <udp_open+0x402>
    d029:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d030:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    d037:	00 
    d038:	44 89 ef             	mov    %r13d,%edi
    d03b:	bb f0 ff ff ff       	mov    $0xfffffff0,%ebx
    d040:	e8 8b 40 00 00       	callq  110d0 <ocall_close>
    d045:	e9 4f fd ff ff       	jmpq   cd99 <udp_open+0x2a9>
    d04a:	8b bd 20 fe ff ff    	mov    -0x1e0(%rbp),%edi
    d050:	c7 85 14 fe ff ff 0b 	movl   $0xb,-0x1ec(%rbp)
    d057:	00 00 00 
    d05a:	48 83 c7 58          	add    $0x58,%rdi
    d05e:	e9 1b fc ff ff       	jmpq   cc7e <udp_open+0x18e>
    d063:	b8 58 00 00 00       	mov    $0x58,%eax
    d068:	e9 fe fb ff ff       	jmpq   cc6b <udp_open+0x17b>
    d06d:	0f 1f 00             	nopl   (%rax)

000000000000d070 <_DkBroadcastStreamOpen>:
    d070:	55                   	push   %rbp
    d071:	bf 58 00 00 00       	mov    $0x58,%edi
    d076:	48 89 e5             	mov    %rsp,%rbp
    d079:	e8 a2 bf ff ff       	callq  9020 <malloc>
    d07e:	48 8d 15 fb 17 22 04 	lea    0x42217fb(%rip),%rdx        # 422e880 <pal_sec>
    d085:	c7 00 0d 00 00 00    	movl   $0xd,(%rax)
    d08b:	c7 40 04 91 00 00 00 	movl   $0x91,0x4(%rax)
    d092:	8b 8a bc 04 00 00    	mov    0x4bc(%rdx),%ecx
    d098:	89 48 10             	mov    %ecx,0x10(%rax)
    d09b:	8b 8a c0 04 00 00    	mov    0x4c0(%rdx),%ecx
    d0a1:	89 48 0c             	mov    %ecx,0xc(%rax)
    d0a4:	8b 92 c4 04 00 00    	mov    0x4c4(%rdx),%edx
    d0aa:	89 50 08             	mov    %edx,0x8(%rax)
    d0ad:	5d                   	pop    %rbp
    d0ae:	c3                   	retq   
    d0af:	90                   	nop

000000000000d0b0 <_DkPrintConsole>:
    d0b0:	55                   	push   %rbp
    d0b1:	48 89 e5             	mov    %rsp,%rbp
    d0b4:	5d                   	pop    %rbp
    d0b5:	e9 86 3c 00 00       	jmpq   10d40 <ocall_print_string>
    d0ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000d0c0 <stataccess>:
    d0c0:	48 8d 15 99 1c 22 04 	lea    0x4221c99(%rip),%rdx        # 422ed60 <linux_state>
    d0c7:	55                   	push   %rbp
    d0c8:	8b 47 18             	mov    0x18(%rdi),%eax
    d0cb:	48 89 e5             	mov    %rsp,%rbp
    d0ce:	8b 4a 18             	mov    0x18(%rdx),%ecx
    d0d1:	85 c9                	test   %ecx,%ecx
    d0d3:	74 1b                	je     d0f0 <stataccess+0x30>
    d0d5:	3b 4f 1c             	cmp    0x1c(%rdi),%ecx
    d0d8:	74 22                	je     d0fc <stataccess+0x3c>
    d0da:	8b 52 1c             	mov    0x1c(%rdx),%edx
    d0dd:	85 d2                	test   %edx,%edx
    d0df:	74 1e                	je     d0ff <stataccess+0x3f>
    d0e1:	3b 57 20             	cmp    0x20(%rdi),%edx
    d0e4:	75 19                	jne    d0ff <stataccess+0x3f>
    d0e6:	c1 e8 03             	shr    $0x3,%eax
    d0e9:	eb 14                	jmp    d0ff <stataccess+0x3f>
    d0eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d0f0:	8b 52 1c             	mov    0x1c(%rdx),%edx
    d0f3:	85 d2                	test   %edx,%edx
    d0f5:	74 05                	je     d0fc <stataccess+0x3c>
    d0f7:	39 57 20             	cmp    %edx,0x20(%rdi)
    d0fa:	74 ea                	je     d0e6 <stataccess+0x26>
    d0fc:	c1 e8 06             	shr    $0x6,%eax
    d0ff:	85 c6                	test   %eax,%esi
    d101:	0f 95 c0             	setne  %al
    d104:	5d                   	pop    %rbp
    d105:	c3                   	retq   
    d106:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d10d:	00 00 00 

000000000000d110 <handle_set_cloexec>:
    d110:	55                   	push   %rbp
    d111:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    d116:	48 89 e5             	mov    %rsp,%rbp
    d119:	5d                   	pop    %rbp
    d11a:	c3                   	retq   
    d11b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000d120 <_DkStreamUnmap>:
    d120:	55                   	push   %rbp
    d121:	48 89 e5             	mov    %rsp,%rbp
    d124:	e8 37 78 00 00       	callq  14960 <free_pages>
    d129:	31 c0                	xor    %eax,%eax
    d12b:	5d                   	pop    %rbp
    d12c:	c3                   	retq   
    d12d:	0f 1f 00             	nopl   (%rax)

000000000000d130 <handle_serialize>:
    d130:	55                   	push   %rbp
    d131:	48 89 e5             	mov    %rsp,%rbp
    d134:	41 57                	push   %r15
    d136:	41 56                	push   %r14
    d138:	41 55                	push   %r13
    d13a:	41 54                	push   %r12
    d13c:	53                   	push   %rbx
    d13d:	48 83 ec 18          	sub    $0x18,%rsp
    d141:	83 3f 11             	cmpl   $0x11,(%rdi)
    d144:	0f 87 7e 01 00 00    	ja     d2c8 <handle_serialize+0x198>
    d14a:	8b 17                	mov    (%rdi),%edx
    d14c:	48 8d 05 dd bc 01 00 	lea    0x1bcdd(%rip),%rax        # 28e30 <slab_levels+0x2b0>
    d153:	49 89 f4             	mov    %rsi,%r12
    d156:	49 89 fe             	mov    %rdi,%r14
    d159:	48 63 14 90          	movslq (%rax,%rdx,4),%rdx
    d15d:	48 01 d0             	add    %rdx,%rax
    d160:	ff e0                	jmpq   *%rax
    d162:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d168:	4c 8b 7f 10          	mov    0x10(%rdi),%r15
    d16c:	4d 85 ff             	test   %r15,%r15
    d16f:	75 53                	jne    d1c4 <handle_serialize+0x94>
    d171:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d178:	bf 58 00 00 00       	mov    $0x58,%edi
    d17d:	e8 9e be ff ff       	callq  9020 <malloc>
    d182:	48 85 c0             	test   %rax,%rax
    d185:	49 89 c5             	mov    %rax,%r13
    d188:	0f 84 9a 01 00 00    	je     d328 <handle_serialize+0x1f8>
    d18e:	ba 58 00 00 00       	mov    $0x58,%edx
    d193:	4c 89 f6             	mov    %r14,%rsi
    d196:	4c 89 ef             	mov    %r13,%rdi
    d199:	bb 58 00 00 00       	mov    $0x58,%ebx
    d19e:	e8 4d 8a 00 00       	callq  15bf0 <memcpy>
    d1a3:	4d 89 2c 24          	mov    %r13,(%r12)
    d1a7:	48 83 c4 18          	add    $0x18,%rsp
    d1ab:	89 d8                	mov    %ebx,%eax
    d1ad:	5b                   	pop    %rbx
    d1ae:	41 5c                	pop    %r12
    d1b0:	41 5d                	pop    %r13
    d1b2:	41 5e                	pop    %r14
    d1b4:	41 5f                	pop    %r15
    d1b6:	5d                   	pop    %rbp
    d1b7:	c3                   	retq   
    d1b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d1bf:	00 
    d1c0:	4c 8b 7f 10          	mov    0x10(%rdi),%r15
    d1c4:	4c 89 ff             	mov    %r15,%rdi
    d1c7:	e8 a4 84 00 00       	callq  15670 <strlen>
    d1cc:	8d 48 01             	lea    0x1(%rax),%ecx
    d1cf:	8d 58 59             	lea    0x59(%rax),%ebx
    d1d2:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    d1d9:	89 4d c8             	mov    %ecx,-0x38(%rbp)
    d1dc:	03 5d cc             	add    -0x34(%rbp),%ebx
    d1df:	48 63 fb             	movslq %ebx,%rdi
    d1e2:	e8 39 be ff ff       	callq  9020 <malloc>
    d1e7:	48 85 c0             	test   %rax,%rax
    d1ea:	49 89 c5             	mov    %rax,%r13
    d1ed:	0f 84 35 01 00 00    	je     d328 <handle_serialize+0x1f8>
    d1f3:	ba 58 00 00 00       	mov    $0x58,%edx
    d1f8:	4c 89 f6             	mov    %r14,%rsi
    d1fb:	48 89 c7             	mov    %rax,%rdi
    d1fe:	e8 ed 89 00 00       	callq  15bf0 <memcpy>
    d203:	8b 45 c8             	mov    -0x38(%rbp),%eax
    d206:	85 c0                	test   %eax,%eax
    d208:	74 0f                	je     d219 <handle_serialize+0xe9>
    d20a:	49 8d 7d 58          	lea    0x58(%r13),%rdi
    d20e:	48 63 d0             	movslq %eax,%rdx
    d211:	4c 89 fe             	mov    %r15,%rsi
    d214:	e8 d7 89 00 00       	callq  15bf0 <memcpy>
    d219:	8b 45 cc             	mov    -0x34(%rbp),%eax
    d21c:	85 c0                	test   %eax,%eax
    d21e:	74 83                	je     d1a3 <handle_serialize+0x73>
    d220:	4c 63 75 c8          	movslq -0x38(%rbp),%r14
    d224:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    d228:	48 63 d0             	movslq %eax,%rdx
    d22b:	4b 8d 7c 35 58       	lea    0x58(%r13,%r14,1),%rdi
    d230:	e8 bb 89 00 00       	callq  15bf0 <memcpy>
    d235:	e9 69 ff ff ff       	jmpq   d1a3 <handle_serialize+0x73>
    d23a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d240:	4c 8b 7f 18          	mov    0x18(%rdi),%r15
    d244:	4d 85 ff             	test   %r15,%r15
    d247:	0f 85 77 ff ff ff    	jne    d1c4 <handle_serialize+0x94>
    d24d:	e9 26 ff ff ff       	jmpq   d178 <handle_serialize+0x48>
    d252:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d258:	4c 8b 7f 10          	mov    0x10(%rdi),%r15
    d25c:	4d 85 ff             	test   %r15,%r15
    d25f:	0f 84 ab 00 00 00    	je     d310 <handle_serialize+0x1e0>
    d265:	41 0f b7 17          	movzwl (%r15),%edx
    d269:	66 83 fa 02          	cmp    $0x2,%dx
    d26d:	74 69                	je     d2d8 <handle_serialize+0x1a8>
    d26f:	66 83 fa 0a          	cmp    $0xa,%dx
    d273:	b8 74 00 00 00       	mov    $0x74,%eax
    d278:	bb 58 00 00 00       	mov    $0x58,%ebx
    d27d:	0f 44 d8             	cmove  %eax,%ebx
    d280:	ba 1c 00 00 00       	mov    $0x1c,%edx
    d285:	b8 00 00 00 00       	mov    $0x0,%eax
    d28a:	0f 44 c2             	cmove  %edx,%eax
    d28d:	89 45 c8             	mov    %eax,-0x38(%rbp)
    d290:	49 8b 46 18          	mov    0x18(%r14),%rax
    d294:	48 85 c0             	test   %rax,%rax
    d297:	74 67                	je     d300 <handle_serialize+0x1d0>
    d299:	0f b7 10             	movzwl (%rax),%edx
    d29c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    d2a0:	66 83 fa 02          	cmp    $0x2,%dx
    d2a4:	74 4a                	je     d2f0 <handle_serialize+0x1c0>
    d2a6:	66 83 fa 0a          	cmp    $0xa,%dx
    d2aa:	b8 00 00 00 00       	mov    $0x0,%eax
    d2af:	41 bd 1c 00 00 00    	mov    $0x1c,%r13d
    d2b5:	41 0f 44 c5          	cmove  %r13d,%eax
    d2b9:	89 45 cc             	mov    %eax,-0x34(%rbp)
    d2bc:	e9 1b ff ff ff       	jmpq   d1dc <handle_serialize+0xac>
    d2c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d2c8:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx
    d2cd:	e9 d5 fe ff ff       	jmpq   d1a7 <handle_serialize+0x77>
    d2d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d2d8:	bb 68 00 00 00       	mov    $0x68,%ebx
    d2dd:	c7 45 c8 10 00 00 00 	movl   $0x10,-0x38(%rbp)
    d2e4:	eb aa                	jmp    d290 <handle_serialize+0x160>
    d2e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d2ed:	00 00 00 
    d2f0:	c7 45 cc 10 00 00 00 	movl   $0x10,-0x34(%rbp)
    d2f7:	e9 e0 fe ff ff       	jmpq   d1dc <handle_serialize+0xac>
    d2fc:	0f 1f 40 00          	nopl   0x0(%rax)
    d300:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    d307:	e9 d0 fe ff ff       	jmpq   d1dc <handle_serialize+0xac>
    d30c:	0f 1f 40 00          	nopl   0x0(%rax)
    d310:	45 31 ff             	xor    %r15d,%r15d
    d313:	bb 58 00 00 00       	mov    $0x58,%ebx
    d318:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
    d31f:	e9 6c ff ff ff       	jmpq   d290 <handle_serialize+0x160>
    d324:	0f 1f 40 00          	nopl   0x0(%rax)
    d328:	bb f0 ff ff ff       	mov    $0xfffffff0,%ebx
    d32d:	e9 75 fe ff ff       	jmpq   d1a7 <handle_serialize+0x77>
    d332:	0f 1f 40 00          	nopl   0x0(%rax)
    d336:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d33d:	00 00 00 

000000000000d340 <handle_deserialize>:
    d340:	83 3e 11             	cmpl   $0x11,(%rsi)
    d343:	0f 87 a7 02 00 00    	ja     d5f0 <handle_deserialize+0x2b0>
    d349:	55                   	push   %rbp
    d34a:	48 8d 05 27 bb 01 00 	lea    0x1bb27(%rip),%rax        # 28e78 <slab_levels+0x2f8>
    d351:	48 89 e5             	mov    %rsp,%rbp
    d354:	41 57                	push   %r15
    d356:	41 56                	push   %r14
    d358:	41 55                	push   %r13
    d35a:	41 54                	push   %r12
    d35c:	49 89 fd             	mov    %rdi,%r13
    d35f:	53                   	push   %rbx
    d360:	4c 8d 66 58          	lea    0x58(%rsi),%r12
    d364:	48 89 f3             	mov    %rsi,%rbx
    d367:	48 83 ec 18          	sub    $0x18,%rsp
    d36b:	8b 16                	mov    (%rsi),%edx
    d36d:	48 63 14 90          	movslq (%rax,%rdx,4),%rdx
    d371:	48 01 d0             	add    %rdx,%rax
    d374:	ff e0                	jmpq   *%rax
    d376:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d37d:	00 00 00 
    d380:	be 58 00 00 00       	mov    $0x58,%esi
    d385:	48 89 df             	mov    %rbx,%rdi
    d388:	e8 03 c0 ff ff       	callq  9390 <remalloc>
    d38d:	48 85 c0             	test   %rax,%rax
    d390:	49 89 c7             	mov    %rax,%r15
    d393:	0f 84 0f 02 00 00    	je     d5a8 <handle_deserialize+0x268>
    d399:	4d 89 7d 00          	mov    %r15,0x0(%r13)
    d39d:	31 c0                	xor    %eax,%eax
    d39f:	48 83 c4 18          	add    $0x18,%rsp
    d3a3:	5b                   	pop    %rbx
    d3a4:	41 5c                	pop    %r12
    d3a6:	41 5d                	pop    %r13
    d3a8:	41 5e                	pop    %r14
    d3aa:	41 5f                	pop    %r15
    d3ac:	5d                   	pop    %rbp
    d3ad:	c3                   	retq   
    d3ae:	66 90                	xchg   %ax,%ax
    d3b0:	4c 89 e7             	mov    %r12,%rdi
    d3b3:	e8 b8 82 00 00       	callq  15670 <strlen>
    d3b8:	44 8d 70 01          	lea    0x1(%rax),%r14d
    d3bc:	83 c0 59             	add    $0x59,%eax
    d3bf:	48 63 f8             	movslq %eax,%rdi
    d3c2:	e8 59 bc ff ff       	callq  9020 <malloc>
    d3c7:	48 85 c0             	test   %rax,%rax
    d3ca:	49 89 c7             	mov    %rax,%r15
    d3cd:	0f 84 d5 01 00 00    	je     d5a8 <handle_deserialize+0x268>
    d3d3:	48 89 de             	mov    %rbx,%rsi
    d3d6:	49 8d 5f 58          	lea    0x58(%r15),%rbx
    d3da:	ba 58 00 00 00       	mov    $0x58,%edx
    d3df:	48 89 c7             	mov    %rax,%rdi
    d3e2:	e8 09 88 00 00       	callq  15bf0 <memcpy>
    d3e7:	49 63 d6             	movslq %r14d,%rdx
    d3ea:	4c 89 e6             	mov    %r12,%rsi
    d3ed:	48 89 df             	mov    %rbx,%rdi
    d3f0:	e8 fb 87 00 00       	callq  15bf0 <memcpy>
    d3f5:	49 89 5f 10          	mov    %rbx,0x10(%r15)
    d3f9:	49 c7 47 20 00 00 00 	movq   $0x0,0x20(%r15)
    d400:	00 
    d401:	eb 96                	jmp    d399 <handle_deserialize+0x59>
    d403:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d408:	48 83 7e 18 00       	cmpq   $0x0,0x18(%rsi)
    d40d:	0f 84 ad 01 00 00    	je     d5c0 <handle_deserialize+0x280>
    d413:	4c 89 e7             	mov    %r12,%rdi
    d416:	e8 55 82 00 00       	callq  15670 <strlen>
    d41b:	44 8d 70 01          	lea    0x1(%rax),%r14d
    d41f:	83 c0 59             	add    $0x59,%eax
    d422:	48 63 f8             	movslq %eax,%rdi
    d425:	e8 f6 bb ff ff       	callq  9020 <malloc>
    d42a:	48 85 c0             	test   %rax,%rax
    d42d:	49 89 c7             	mov    %rax,%r15
    d430:	0f 84 72 01 00 00    	je     d5a8 <handle_deserialize+0x268>
    d436:	ba 58 00 00 00       	mov    $0x58,%edx
    d43b:	48 89 de             	mov    %rbx,%rsi
    d43e:	48 89 c7             	mov    %rax,%rdi
    d441:	e8 aa 87 00 00       	callq  15bf0 <memcpy>
    d446:	45 85 f6             	test   %r14d,%r14d
    d449:	0f 84 4a ff ff ff    	je     d399 <handle_deserialize+0x59>
    d44f:	49 8d 5f 58          	lea    0x58(%r15),%rbx
    d453:	49 63 d6             	movslq %r14d,%rdx
    d456:	4c 89 e6             	mov    %r12,%rsi
    d459:	48 89 df             	mov    %rbx,%rdi
    d45c:	e8 8f 87 00 00       	callq  15bf0 <memcpy>
    d461:	49 89 5f 18          	mov    %rbx,0x18(%r15)
    d465:	e9 2f ff ff ff       	jmpq   d399 <handle_deserialize+0x59>
    d46a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d470:	48 83 7e 10 00       	cmpq   $0x0,0x10(%rsi)
    d475:	0f 84 45 01 00 00    	je     d5c0 <handle_deserialize+0x280>
    d47b:	4c 89 e7             	mov    %r12,%rdi
    d47e:	e8 ed 81 00 00       	callq  15670 <strlen>
    d483:	44 8d 70 01          	lea    0x1(%rax),%r14d
    d487:	83 c0 59             	add    $0x59,%eax
    d48a:	48 63 f8             	movslq %eax,%rdi
    d48d:	e8 8e bb ff ff       	callq  9020 <malloc>
    d492:	48 85 c0             	test   %rax,%rax
    d495:	49 89 c7             	mov    %rax,%r15
    d498:	0f 84 0a 01 00 00    	je     d5a8 <handle_deserialize+0x268>
    d49e:	ba 58 00 00 00       	mov    $0x58,%edx
    d4a3:	48 89 de             	mov    %rbx,%rsi
    d4a6:	48 89 c7             	mov    %rax,%rdi
    d4a9:	e8 42 87 00 00       	callq  15bf0 <memcpy>
    d4ae:	45 85 f6             	test   %r14d,%r14d
    d4b1:	0f 84 e2 fe ff ff    	je     d399 <handle_deserialize+0x59>
    d4b7:	49 8d 5f 58          	lea    0x58(%r15),%rbx
    d4bb:	49 63 d6             	movslq %r14d,%rdx
    d4be:	4c 89 e6             	mov    %r12,%rsi
    d4c1:	48 89 df             	mov    %rbx,%rdi
    d4c4:	e8 27 87 00 00       	callq  15bf0 <memcpy>
    d4c9:	49 89 5f 10          	mov    %rbx,0x10(%r15)
    d4cd:	e9 c7 fe ff ff       	jmpq   d399 <handle_deserialize+0x59>
    d4d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d4d8:	48 83 7e 10 00       	cmpq   $0x0,0x10(%rsi)
    d4dd:	0f 84 65 01 00 00    	je     d648 <handle_deserialize+0x308>
    d4e3:	0f b7 56 58          	movzwl 0x58(%rsi),%edx
    d4e7:	66 83 fa 02          	cmp    $0x2,%dx
    d4eb:	0f 84 1f 01 00 00    	je     d610 <handle_deserialize+0x2d0>
    d4f1:	66 83 fa 0a          	cmp    $0xa,%dx
    d4f5:	b8 74 00 00 00       	mov    $0x74,%eax
    d4fa:	bf 58 00 00 00       	mov    $0x58,%edi
    d4ff:	0f 44 f8             	cmove  %eax,%edi
    d502:	41 bf 1c 00 00 00    	mov    $0x1c,%r15d
    d508:	b8 00 00 00 00       	mov    $0x0,%eax
    d50d:	41 0f 44 c7          	cmove  %r15d,%eax
    d511:	89 45 cc             	mov    %eax,-0x34(%rbp)
    d514:	48 83 7b 18 00       	cmpq   $0x0,0x18(%rbx)
    d519:	0f 84 41 01 00 00    	je     d660 <handle_deserialize+0x320>
    d51f:	48 63 45 cc          	movslq -0x34(%rbp),%rax
    d523:	41 be 10 00 00 00    	mov    $0x10,%r14d
    d529:	48 c1 e0 07          	shl    $0x7,%rax
    d52d:	41 0f b7 04 04       	movzwl (%r12,%rax,1),%eax
    d532:	66 83 f8 02          	cmp    $0x2,%ax
    d536:	74 13                	je     d54b <handle_deserialize+0x20b>
    d538:	66 83 f8 0a          	cmp    $0xa,%ax
    d53c:	41 be 1c 00 00 00    	mov    $0x1c,%r14d
    d542:	b8 00 00 00 00       	mov    $0x0,%eax
    d547:	4c 0f 45 f0          	cmovne %rax,%r14
    d54b:	44 01 f7             	add    %r14d,%edi
    d54e:	48 63 ff             	movslq %edi,%rdi
    d551:	e8 ca ba ff ff       	callq  9020 <malloc>
    d556:	48 85 c0             	test   %rax,%rax
    d559:	49 89 c7             	mov    %rax,%r15
    d55c:	74 4a                	je     d5a8 <handle_deserialize+0x268>
    d55e:	ba 58 00 00 00       	mov    $0x58,%edx
    d563:	48 89 de             	mov    %rbx,%rsi
    d566:	48 89 c7             	mov    %rax,%rdi
    d569:	e8 82 86 00 00       	callq  15bf0 <memcpy>
    d56e:	8b 45 cc             	mov    -0x34(%rbp),%eax
    d571:	85 c0                	test   %eax,%eax
    d573:	0f 85 af 00 00 00    	jne    d628 <handle_deserialize+0x2e8>
    d579:	45 85 f6             	test   %r14d,%r14d
    d57c:	0f 84 17 fe ff ff    	je     d399 <handle_deserialize+0x59>
    d582:	48 63 45 cc          	movslq -0x34(%rbp),%rax
    d586:	4c 89 f2             	mov    %r14,%rdx
    d589:	49 8d 34 04          	lea    (%r12,%rax,1),%rsi
    d58d:	49 8d 7c 07 58       	lea    0x58(%r15,%rax,1),%rdi
    d592:	e8 59 86 00 00       	callq  15bf0 <memcpy>
    d597:	4b 8d 44 37 58       	lea    0x58(%r15,%r14,1),%rax
    d59c:	49 89 47 18          	mov    %rax,0x18(%r15)
    d5a0:	e9 f4 fd ff ff       	jmpq   d399 <handle_deserialize+0x59>
    d5a5:	0f 1f 00             	nopl   (%rax)
    d5a8:	48 83 c4 18          	add    $0x18,%rsp
    d5ac:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    d5b1:	5b                   	pop    %rbx
    d5b2:	41 5c                	pop    %r12
    d5b4:	41 5d                	pop    %r13
    d5b6:	41 5e                	pop    %r14
    d5b8:	41 5f                	pop    %r15
    d5ba:	5d                   	pop    %rbp
    d5bb:	c3                   	retq   
    d5bc:	0f 1f 40 00          	nopl   0x0(%rax)
    d5c0:	bf 58 00 00 00       	mov    $0x58,%edi
    d5c5:	e8 56 ba ff ff       	callq  9020 <malloc>
    d5ca:	48 85 c0             	test   %rax,%rax
    d5cd:	49 89 c7             	mov    %rax,%r15
    d5d0:	74 d6                	je     d5a8 <handle_deserialize+0x268>
    d5d2:	ba 58 00 00 00       	mov    $0x58,%edx
    d5d7:	48 89 de             	mov    %rbx,%rsi
    d5da:	4c 89 ff             	mov    %r15,%rdi
    d5dd:	e8 0e 86 00 00       	callq  15bf0 <memcpy>
    d5e2:	e9 b2 fd ff ff       	jmpq   d399 <handle_deserialize+0x59>
    d5e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d5ee:	00 00 
    d5f0:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    d5f5:	c3                   	retq   
    d5f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d5fd:	00 00 00 
    d600:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    d605:	e9 95 fd ff ff       	jmpq   d39f <handle_deserialize+0x5f>
    d60a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d610:	bf 68 00 00 00       	mov    $0x68,%edi
    d615:	c7 45 cc 10 00 00 00 	movl   $0x10,-0x34(%rbp)
    d61c:	e9 f3 fe ff ff       	jmpq   d514 <handle_deserialize+0x1d4>
    d621:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d628:	48 63 55 cc          	movslq -0x34(%rbp),%rdx
    d62c:	49 8d 5f 58          	lea    0x58(%r15),%rbx
    d630:	4c 89 e6             	mov    %r12,%rsi
    d633:	48 89 df             	mov    %rbx,%rdi
    d636:	e8 b5 85 00 00       	callq  15bf0 <memcpy>
    d63b:	49 89 5f 10          	mov    %rbx,0x10(%r15)
    d63f:	e9 35 ff ff ff       	jmpq   d579 <handle_deserialize+0x239>
    d644:	0f 1f 40 00          	nopl   0x0(%rax)
    d648:	bf 58 00 00 00       	mov    $0x58,%edi
    d64d:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    d654:	e9 bb fe ff ff       	jmpq   d514 <handle_deserialize+0x1d4>
    d659:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d660:	45 31 f6             	xor    %r14d,%r14d
    d663:	e9 e3 fe ff ff       	jmpq   d54b <handle_deserialize+0x20b>
    d668:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d66f:	00 

000000000000d670 <_DkSendHandle>:
    d670:	55                   	push   %rbp
    d671:	48 89 e5             	mov    %rsp,%rbp
    d674:	41 55                	push   %r13
    d676:	41 54                	push   %r12
    d678:	53                   	push   %rbx
    d679:	49 89 f5             	mov    %rsi,%r13
    d67c:	48 8d 75 c8          	lea    -0x38(%rbp),%rsi
    d680:	48 89 fb             	mov    %rdi,%rbx
    d683:	4c 89 ef             	mov    %r13,%rdi
    d686:	48 83 ec 38          	sub    $0x38,%rsp
    d68a:	e8 a1 fa ff ff       	callq  d130 <handle_serialize>
    d68f:	85 c0                	test   %eax,%eax
    d691:	0f 88 a8 00 00 00    	js     d73f <_DkSendHandle+0xcf>
    d697:	0f b7 55 c0          	movzwl -0x40(%rbp),%edx
    d69b:	c1 e0 03             	shl    $0x3,%eax
    d69e:	45 8b 45 04          	mov    0x4(%r13),%r8d
    d6a2:	31 c9                	xor    %ecx,%ecx
    d6a4:	45 31 c9             	xor    %r9d,%r9d
    d6a7:	45 31 e4             	xor    %r12d,%r12d
    d6aa:	bf 01 00 00 00       	mov    $0x1,%edi
    d6af:	83 e2 07             	and    $0x7,%edx
    d6b2:	09 d0                	or     %edx,%eax
    d6b4:	66 89 45 c0          	mov    %ax,-0x40(%rbp)
    d6b8:	83 e0 07             	and    $0x7,%eax
    d6bb:	89 fa                	mov    %edi,%edx
    d6bd:	d3 e2                	shl    %cl,%edx
    d6bf:	89 d6                	mov    %edx,%esi
    d6c1:	83 ce 10             	or     $0x10,%esi
    d6c4:	44 85 c6             	test   %r8d,%esi
    d6c7:	74 1b                	je     d6e4 <_DkSendHandle+0x74>
    d6c9:	41 8b 74 8d 08       	mov    0x8(%r13,%rcx,4),%esi
    d6ce:	09 d0                	or     %edx,%eax
    d6d0:	44 89 e2             	mov    %r12d,%edx
    d6d3:	83 e0 07             	and    $0x7,%eax
    d6d6:	41 83 c4 01          	add    $0x1,%r12d
    d6da:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    d6e0:	89 74 95 d0          	mov    %esi,-0x30(%rbp,%rdx,4)
    d6e4:	48 83 c1 01          	add    $0x1,%rcx
    d6e8:	48 83 f9 03          	cmp    $0x3,%rcx
    d6ec:	75 cd                	jne    d6bb <_DkSendHandle+0x4b>
    d6ee:	45 84 c9             	test   %r9b,%r9b
    d6f1:	75 77                	jne    d76a <_DkSendHandle+0xfa>
    d6f3:	8b 5b 10             	mov    0x10(%rbx),%ebx
    d6f6:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    d6fa:	45 31 c0             	xor    %r8d,%r8d
    d6fd:	31 c9                	xor    %ecx,%ecx
    d6ff:	ba 02 00 00 00       	mov    $0x2,%edx
    d704:	89 df                	mov    %ebx,%edi
    d706:	e8 d5 49 00 00       	callq  120e0 <ocall_sock_send>
    d70b:	85 c0                	test   %eax,%eax
    d70d:	78 41                	js     d750 <_DkSendHandle+0xe0>
    d70f:	0f b7 55 c0          	movzwl -0x40(%rbp),%edx
    d713:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    d717:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    d71b:	89 df                	mov    %ebx,%edi
    d71d:	45 89 e0             	mov    %r12d,%r8d
    d720:	66 c1 ea 03          	shr    $0x3,%dx
    d724:	0f b7 d2             	movzwl %dx,%edx
    d727:	e8 b4 4c 00 00       	callq  123e0 <ocall_sock_send_fd>
    d72c:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    d730:	89 c3                	mov    %eax,%ebx
    d732:	e8 29 bd ff ff       	callq  9460 <free>
    d737:	89 d8                	mov    %ebx,%eax
    d739:	c1 f8 1f             	sar    $0x1f,%eax
    d73c:	83 e0 fa             	and    $0xfffffffa,%eax
    d73f:	48 83 c4 38          	add    $0x38,%rsp
    d743:	5b                   	pop    %rbx
    d744:	41 5c                	pop    %r12
    d746:	41 5d                	pop    %r13
    d748:	5d                   	pop    %rbp
    d749:	c3                   	retq   
    d74a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d750:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
    d754:	89 45 bc             	mov    %eax,-0x44(%rbp)
    d757:	e8 04 bd ff ff       	callq  9460 <free>
    d75c:	8b 45 bc             	mov    -0x44(%rbp),%eax
    d75f:	48 83 c4 38          	add    $0x38,%rsp
    d763:	5b                   	pop    %rbx
    d764:	41 5c                	pop    %r12
    d766:	41 5d                	pop    %r13
    d768:	5d                   	pop    %rbp
    d769:	c3                   	retq   
    d76a:	0f b6 55 c0          	movzbl -0x40(%rbp),%edx
    d76e:	83 e0 07             	and    $0x7,%eax
    d771:	83 e2 f8             	and    $0xfffffff8,%edx
    d774:	09 d0                	or     %edx,%eax
    d776:	88 45 c0             	mov    %al,-0x40(%rbp)
    d779:	e9 75 ff ff ff       	jmpq   d6f3 <_DkSendHandle+0x83>
    d77e:	66 90                	xchg   %ax,%ax

000000000000d780 <_DkReceiveHandle>:
    d780:	83 3f 0c             	cmpl   $0xc,(%rdi)
    d783:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    d788:	0f 85 37 01 00 00    	jne    d8c5 <_DkReceiveHandle+0x145>
    d78e:	55                   	push   %rbp
    d78f:	45 31 c0             	xor    %r8d,%r8d
    d792:	31 c9                	xor    %ecx,%ecx
    d794:	ba 02 00 00 00       	mov    $0x2,%edx
    d799:	48 89 e5             	mov    %rsp,%rbp
    d79c:	41 56                	push   %r14
    d79e:	41 55                	push   %r13
    d7a0:	41 54                	push   %r12
    d7a2:	53                   	push   %rbx
    d7a3:	48 89 f3             	mov    %rsi,%rbx
    d7a6:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
    d7aa:	48 83 ec 10          	sub    $0x10,%rsp
    d7ae:	44 8b 77 10          	mov    0x10(%rdi),%r14d
    d7b2:	44 89 f7             	mov    %r14d,%edi
    d7b5:	e8 36 47 00 00       	callq  11ef0 <ocall_sock_recv>
    d7ba:	83 f8 01             	cmp    $0x1,%eax
    d7bd:	0f 8e 0d 01 00 00    	jle    d8d0 <_DkReceiveHandle+0x150>
    d7c3:	0f b7 55 d0          	movzwl -0x30(%rbp),%edx
    d7c7:	0f b6 75 d0          	movzbl -0x30(%rbp),%esi
    d7cb:	45 31 c0             	xor    %r8d,%r8d
    d7ce:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    d7d5:	31 ff                	xor    %edi,%edi
    d7d7:	31 c9                	xor    %ecx,%ecx
    d7d9:	66 c1 ea 03          	shr    $0x3,%dx
    d7dd:	83 e6 07             	and    $0x7,%esi
    d7e0:	48 8d 42 1e          	lea    0x1e(%rdx),%rax
    d7e4:	25 f0 3f 00 00       	and    $0x3ff0,%eax
    d7e9:	48 29 c4             	sub    %rax,%rsp
    d7ec:	31 c0                	xor    %eax,%eax
    d7ee:	4c 8d 6c 24 0f       	lea    0xf(%rsp),%r13
    d7f3:	49 83 e5 f0          	and    $0xfffffffffffffff0,%r13
    d7f7:	0f a3 c6             	bt     %eax,%esi
    d7fa:	73 0b                	jae    d807 <_DkReceiveHandle+0x87>
    d7fc:	8d 79 01             	lea    0x1(%rcx),%edi
    d7ff:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d805:	89 f9                	mov    %edi,%ecx
    d807:	83 c0 01             	add    $0x1,%eax
    d80a:	83 f8 03             	cmp    $0x3,%eax
    d80d:	75 e8                	jne    d7f7 <_DkReceiveHandle+0x77>
    d80f:	45 84 c0             	test   %r8b,%r8b
    d812:	0f 85 ef 00 00 00    	jne    d907 <_DkReceiveHandle+0x187>
    d818:	48 8d 04 8d 1e 00 00 	lea    0x1e(,%rcx,4),%rax
    d81f:	00 
    d820:	4c 8d 45 d4          	lea    -0x2c(%rbp),%r8
    d824:	0f b7 d2             	movzwl %dx,%edx
    d827:	4c 89 ee             	mov    %r13,%rsi
    d82a:	44 89 f7             	mov    %r14d,%edi
    d82d:	48 c1 e8 04          	shr    $0x4,%rax
    d831:	48 c1 e0 04          	shl    $0x4,%rax
    d835:	48 29 c4             	sub    %rax,%rsp
    d838:	4c 8d 64 24 0f       	lea    0xf(%rsp),%r12
    d83d:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    d841:	4c 89 e1             	mov    %r12,%rcx
    d844:	e8 b7 49 00 00       	callq  12200 <ocall_sock_recv_fd>
    d849:	85 c0                	test   %eax,%eax
    d84b:	78 6c                	js     d8b9 <_DkReceiveHandle+0x139>
    d84d:	0f b7 55 d0          	movzwl -0x30(%rbp),%edx
    d851:	48 8d 7d d8          	lea    -0x28(%rbp),%rdi
    d855:	4c 89 ee             	mov    %r13,%rsi
    d858:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    d85f:	00 
    d860:	66 c1 ea 03          	shr    $0x3,%dx
    d864:	0f b7 d2             	movzwl %dx,%edx
    d867:	e8 d4 fa ff ff       	callq  d340 <handle_deserialize>
    d86c:	85 c0                	test   %eax,%eax
    d86e:	78 49                	js     d8b9 <_DkReceiveHandle+0x139>
    d870:	0f b6 55 d0          	movzbl -0x30(%rbp),%edx
    d874:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
    d878:	31 c0                	xor    %eax,%eax
    d87a:	44 8b 4d d4          	mov    -0x2c(%rbp),%r9d
    d87e:	31 f6                	xor    %esi,%esi
    d880:	41 bb 01 00 00 00    	mov    $0x1,%r11d
    d886:	41 ba 08 00 00 00    	mov    $0x8,%r10d
    d88c:	83 e2 07             	and    $0x7,%edx
    d88f:	0f a3 c2             	bt     %eax,%edx
    d892:	89 c1                	mov    %eax,%ecx
    d894:	73 14                	jae    d8aa <_DkReceiveHandle+0x12a>
    d896:	44 39 ce             	cmp    %r9d,%esi
    d899:	73 55                	jae    d8f0 <_DkReceiveHandle+0x170>
    d89b:	48 63 ce             	movslq %esi,%rcx
    d89e:	83 c6 01             	add    $0x1,%esi
    d8a1:	41 8b 0c 8c          	mov    (%r12,%rcx,4),%ecx
    d8a5:	41 89 4c 80 08       	mov    %ecx,0x8(%r8,%rax,4)
    d8aa:	48 83 c0 01          	add    $0x1,%rax
    d8ae:	48 83 f8 03          	cmp    $0x3,%rax
    d8b2:	75 db                	jne    d88f <_DkReceiveHandle+0x10f>
    d8b4:	4c 89 03             	mov    %r8,(%rbx)
    d8b7:	31 c0                	xor    %eax,%eax
    d8b9:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    d8bd:	5b                   	pop    %rbx
    d8be:	41 5c                	pop    %r12
    d8c0:	41 5d                	pop    %r13
    d8c2:	41 5e                	pop    %r14
    d8c4:	5d                   	pop    %rbp
    d8c5:	f3 c3                	repz retq 
    d8c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d8ce:	00 00 
    d8d0:	85 c0                	test   %eax,%eax
    d8d2:	74 2c                	je     d900 <_DkReceiveHandle+0x180>
    d8d4:	83 f8 f3             	cmp    $0xfffffff3,%eax
    d8d7:	0f 84 e6 fe ff ff    	je     d7c3 <_DkReceiveHandle+0x43>
    d8dd:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    d8e1:	5b                   	pop    %rbx
    d8e2:	41 5c                	pop    %r12
    d8e4:	41 5d                	pop    %r13
    d8e6:	41 5e                	pop    %r14
    d8e8:	5d                   	pop    %rbp
    d8e9:	eb da                	jmp    d8c5 <_DkReceiveHandle+0x145>
    d8eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d8f0:	44 89 d7             	mov    %r10d,%edi
    d8f3:	44 09 df             	or     %r11d,%edi
    d8f6:	d3 e7                	shl    %cl,%edi
    d8f8:	f7 d7                	not    %edi
    d8fa:	41 21 78 04          	and    %edi,0x4(%r8)
    d8fe:	eb aa                	jmp    d8aa <_DkReceiveHandle+0x12a>
    d900:	b8 ed ff ff ff       	mov    $0xffffffed,%eax
    d905:	eb b2                	jmp    d8b9 <_DkReceiveHandle+0x139>
    d907:	89 7d d4             	mov    %edi,-0x2c(%rbp)
    d90a:	e9 09 ff ff ff       	jmpq   d818 <_DkReceiveHandle+0x98>
    d90f:	90                   	nop

000000000000d910 <_DkCheckMemoryMappable>:
    d910:	48 3b 3d c1 cc 21 00 	cmp    0x21ccc1(%rip),%rdi        # 22a5d8 <data_start+0x120>
    d917:	55                   	push   %rbp
    d918:	48 89 e5             	mov    %rsp,%rbp
    d91b:	41 54                	push   %r12
    d91d:	41 89 f4             	mov    %esi,%r12d
    d920:	53                   	push   %rbx
    d921:	48 89 fb             	mov    %rdi,%rbx
    d924:	73 13                	jae    d939 <_DkCheckMemoryMappable+0x29>
    d926:	48 63 d6             	movslq %esi,%rdx
    d929:	48 01 fa             	add    %rdi,%rdx
    d92c:	48 3b 15 ed cb 21 00 	cmp    0x21cbed(%rip),%rdx        # 22a520 <data_start+0x68>
    d933:	0f 87 97 00 00 00    	ja     d9d0 <_DkCheckMemoryMappable+0xc0>
    d939:	48 8d 3d c0 db 21 04 	lea    0x421dbc0(%rip),%rdi        # 422b500 <pal_vma_lock>
    d940:	e8 9b 33 00 00       	callq  10ce0 <_DkSpinLock>
    d945:	8b 15 bd db 21 04    	mov    0x421dbbd(%rip),%edx        # 422b508 <pal_nvmas>
    d94b:	85 d2                	test   %edx,%edx
    d94d:	74 35                	je     d984 <_DkCheckMemoryMappable+0x74>
    d94f:	8d 4a ff             	lea    -0x1(%rdx),%ecx
    d952:	48 8d 05 c7 db 21 04 	lea    0x421dbc7(%rip),%rax        # 422b520 <pal_vmas>
    d959:	49 63 d4             	movslq %r12d,%rdx
    d95c:	48 01 da             	add    %rbx,%rdx
    d95f:	48 83 c1 01          	add    $0x1,%rcx
    d963:	48 c1 e1 04          	shl    $0x4,%rcx
    d967:	48 01 c1             	add    %rax,%rcx
    d96a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d970:	48 3b 18             	cmp    (%rax),%rbx
    d973:	73 06                	jae    d97b <_DkCheckMemoryMappable+0x6b>
    d975:	48 3b 50 08          	cmp    0x8(%rax),%rdx
    d979:	77 25                	ja     d9a0 <_DkCheckMemoryMappable+0x90>
    d97b:	48 83 c0 10          	add    $0x10,%rax
    d97f:	48 39 c8             	cmp    %rcx,%rax
    d982:	75 ec                	jne    d970 <_DkCheckMemoryMappable+0x60>
    d984:	48 8d 3d 75 db 21 04 	lea    0x421db75(%rip),%rdi        # 422b500 <pal_vma_lock>
    d98b:	e8 80 33 00 00       	callq  10d10 <_DkSpinUnlock>
    d990:	5b                   	pop    %rbx
    d991:	31 c0                	xor    %eax,%eax
    d993:	41 5c                	pop    %r12
    d995:	5d                   	pop    %rbp
    d996:	c3                   	retq   
    d997:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d99e:	00 00 
    d9a0:	48 8d 3d 19 b5 01 00 	lea    0x1b519(%rip),%rdi        # 28ec0 <slab_levels+0x340>
    d9a7:	48 89 de             	mov    %rbx,%rsi
    d9aa:	31 c0                	xor    %eax,%eax
    d9ac:	e8 7f bc ff ff       	callq  9630 <pal_printf>
    d9b1:	48 8d 3d 48 db 21 04 	lea    0x421db48(%rip),%rdi        # 422b500 <pal_vma_lock>
    d9b8:	e8 53 33 00 00       	callq  10d10 <_DkSpinUnlock>
    d9bd:	5b                   	pop    %rbx
    d9be:	b8 01 00 00 00       	mov    $0x1,%eax
    d9c3:	41 5c                	pop    %r12
    d9c5:	5d                   	pop    %rbp
    d9c6:	c3                   	retq   
    d9c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d9ce:	00 00 
    d9d0:	48 89 fe             	mov    %rdi,%rsi
    d9d3:	48 8d 3d e6 b4 01 00 	lea    0x1b4e6(%rip),%rdi        # 28ec0 <slab_levels+0x340>
    d9da:	31 c0                	xor    %eax,%eax
    d9dc:	e8 4f bc ff ff       	callq  9630 <pal_printf>
    d9e1:	5b                   	pop    %rbx
    d9e2:	b8 01 00 00 00       	mov    $0x1,%eax
    d9e7:	41 5c                	pop    %r12
    d9e9:	5d                   	pop    %rbp
    d9ea:	c3                   	retq   
    d9eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000d9f0 <_DkVirtualMemoryAlloc>:
    d9f0:	55                   	push   %rbp
    d9f1:	48 89 e5             	mov    %rsp,%rbp
    d9f4:	41 57                	push   %r15
    d9f6:	41 56                	push   %r14
    d9f8:	41 55                	push   %r13
    d9fa:	41 54                	push   %r12
    d9fc:	53                   	push   %rbx
    d9fd:	48 83 ec 08          	sub    $0x8,%rsp
    da01:	81 e2 00 80 00 00    	and    $0x8000,%edx
    da07:	4c 8b 3f             	mov    (%rdi),%r15
    da0a:	41 89 d4             	mov    %edx,%r12d
    da0d:	74 0a                	je     da19 <_DkVirtualMemoryAlloc+0x29>
    da0f:	4d 85 ff             	test   %r15,%r15
    da12:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    da17:	75 33                	jne    da4c <_DkVirtualMemoryAlloc+0x5c>
    da19:	48 85 f6             	test   %rsi,%rsi
    da1c:	74 42                	je     da60 <_DkVirtualMemoryAlloc+0x70>
    da1e:	49 89 fd             	mov    %rdi,%r13
    da21:	4c 89 ff             	mov    %r15,%rdi
    da24:	49 89 f6             	mov    %rsi,%r14
    da27:	e8 24 6a 00 00       	callq  14450 <get_reserved_pages>
    da2c:	48 85 c0             	test   %rax,%rax
    da2f:	48 89 c3             	mov    %rax,%rbx
    da32:	74 34                	je     da68 <_DkVirtualMemoryAlloc+0x78>
    da34:	31 f6                	xor    %esi,%esi
    da36:	4c 89 f2             	mov    %r14,%rdx
    da39:	48 89 c7             	mov    %rax,%rdi
    da3c:	e8 1f 8a 00 00       	callq  16460 <memset>
    da41:	45 85 e4             	test   %r12d,%r12d
    da44:	75 42                	jne    da88 <_DkVirtualMemoryAlloc+0x98>
    da46:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    da4a:	31 c0                	xor    %eax,%eax
    da4c:	48 83 c4 08          	add    $0x8,%rsp
    da50:	5b                   	pop    %rbx
    da51:	41 5c                	pop    %r12
    da53:	41 5d                	pop    %r13
    da55:	41 5e                	pop    %r14
    da57:	41 5f                	pop    %r15
    da59:	5d                   	pop    %rbp
    da5a:	c3                   	retq   
    da5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    da60:	cc                   	int3   
    da61:	eb bb                	jmp    da1e <_DkVirtualMemoryAlloc+0x2e>
    da63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    da68:	49 83 ff 01          	cmp    $0x1,%r15
    da6c:	19 c0                	sbb    %eax,%eax
    da6e:	48 83 c4 08          	add    $0x8,%rsp
    da72:	83 e0 f6             	and    $0xfffffff6,%eax
    da75:	5b                   	pop    %rbx
    da76:	83 e8 06             	sub    $0x6,%eax
    da79:	41 5c                	pop    %r12
    da7b:	41 5d                	pop    %r13
    da7d:	41 5e                	pop    %r14
    da7f:	41 5f                	pop    %r15
    da81:	5d                   	pop    %rbp
    da82:	c3                   	retq   
    da83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    da88:	48 8d 3d 71 da 21 04 	lea    0x421da71(%rip),%rdi        # 422b500 <pal_vma_lock>
    da8f:	e8 4c 32 00 00       	callq  10ce0 <_DkSpinLock>
    da94:	8b 15 6e da 21 04    	mov    0x421da6e(%rip),%edx        # 422b508 <pal_nvmas>
    da9a:	83 fa 3f             	cmp    $0x3f,%edx
    da9d:	77 39                	ja     dad8 <_DkVirtualMemoryAlloc+0xe8>
    da9f:	89 d0                	mov    %edx,%eax
    daa1:	48 8d 0d 78 da 21 04 	lea    0x421da78(%rip),%rcx        # 422b520 <pal_vmas>
    daa8:	4a 8d 34 33          	lea    (%rbx,%r14,1),%rsi
    daac:	48 c1 e0 04          	shl    $0x4,%rax
    dab0:	48 8d 3d 49 da 21 04 	lea    0x421da49(%rip),%rdi        # 422b500 <pal_vma_lock>
    dab7:	83 c2 01             	add    $0x1,%edx
    daba:	48 01 c8             	add    %rcx,%rax
    dabd:	89 15 45 da 21 04    	mov    %edx,0x421da45(%rip)        # 422b508 <pal_nvmas>
    dac3:	48 89 58 08          	mov    %rbx,0x8(%rax)
    dac7:	48 89 30             	mov    %rsi,(%rax)
    daca:	e8 41 32 00 00       	callq  10d10 <_DkSpinUnlock>
    dacf:	e9 72 ff ff ff       	jmpq   da46 <_DkVirtualMemoryAlloc+0x56>
    dad4:	0f 1f 40 00          	nopl   0x0(%rax)
    dad8:	48 8d 3d 01 b4 01 00 	lea    0x1b401(%rip),%rdi        # 28ee0 <slab_levels+0x360>
    dadf:	31 d2                	xor    %edx,%edx
    dae1:	be 5e 00 00 00       	mov    $0x5e,%esi
    dae6:	31 c0                	xor    %eax,%eax
    dae8:	e8 63 96 ff ff       	callq  7150 <warn>
    daed:	e8 4e 96 ff ff       	callq  7140 <__abort>
    daf2:	8b 15 10 da 21 04    	mov    0x421da10(%rip),%edx        # 422b508 <pal_nvmas>
    daf8:	eb a5                	jmp    da9f <_DkVirtualMemoryAlloc+0xaf>
    dafa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000db00 <_DkVirtualMemoryFree>:
    db00:	55                   	push   %rbp
    db01:	48 89 e5             	mov    %rsp,%rbp
    db04:	41 54                	push   %r12
    db06:	53                   	push   %rbx
    db07:	49 89 f4             	mov    %rsi,%r12
    db0a:	48 89 fb             	mov    %rdi,%rbx
    db0d:	e8 be 53 00 00       	callq  12ed0 <sgx_is_within_enclave>
    db12:	84 c0                	test   %al,%al
    db14:	4c 89 e6             	mov    %r12,%rsi
    db17:	48 89 df             	mov    %rbx,%rdi
    db1a:	75 14                	jne    db30 <_DkVirtualMemoryFree+0x30>
    db1c:	e8 ef 33 00 00       	callq  10f10 <ocall_unmap_untrusted>
    db21:	5b                   	pop    %rbx
    db22:	31 c0                	xor    %eax,%eax
    db24:	41 5c                	pop    %r12
    db26:	5d                   	pop    %rbp
    db27:	c3                   	retq   
    db28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    db2f:	00 
    db30:	e8 2b 6e 00 00       	callq  14960 <free_pages>
    db35:	5b                   	pop    %rbx
    db36:	31 c0                	xor    %eax,%eax
    db38:	41 5c                	pop    %r12
    db3a:	5d                   	pop    %rbp
    db3b:	c3                   	retq   
    db3c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000db40 <_DkVirtualMemoryProtect>:
    db40:	55                   	push   %rbp
    db41:	31 c0                	xor    %eax,%eax
    db43:	48 89 e5             	mov    %rsp,%rbp
    db46:	5d                   	pop    %rbp
    db47:	c3                   	retq   
    db48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    db4f:	00 

000000000000db50 <_DkMemoryQuota>:
    db50:	48 8d 15 29 0d 22 04 	lea    0x4220d29(%rip),%rdx        # 422e880 <pal_sec>
    db57:	55                   	push   %rbp
    db58:	48 89 e5             	mov    %rsp,%rbp
    db5b:	48 8b 82 78 01 00 00 	mov    0x178(%rdx),%rax
    db62:	48 2b 82 70 01 00 00 	sub    0x170(%rdx),%rax
    db69:	5d                   	pop    %rbp
    db6a:	c3                   	retq   
    db6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000db70 <_DkMemoryAvailableQuota>:
    db70:	48 8d 15 09 0d 22 04 	lea    0x4220d09(%rip),%rdx        # 422e880 <pal_sec>
    db77:	55                   	push   %rbp
    db78:	48 89 e5             	mov    %rsp,%rbp
    db7b:	48 8b 82 78 01 00 00 	mov    0x178(%rdx),%rax
    db82:	48 2b 82 70 01 00 00 	sub    0x170(%rdx),%rax
    db89:	48 8d 15 90 13 22 04 	lea    0x4221390(%rip),%rdx        # 422ef20 <alloced_pages>
    db90:	48 8b 12             	mov    (%rdx),%rdx
    db93:	48 8d 0d 56 d5 21 00 	lea    0x21d556(%rip),%rcx        # 22b0f0 <pagesz>
    db9a:	5d                   	pop    %rbp
    db9b:	8b 09                	mov    (%rcx),%ecx
    db9d:	48 0f af d1          	imul   %rcx,%rdx
    dba1:	48 29 d0             	sub    %rdx,%rax
    dba4:	c3                   	retq   
    dba5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    dbac:	00 00 00 
    dbaf:	90                   	nop

000000000000dbb0 <pal_start_thread>:
    dbb0:	55                   	push   %rbp
    dbb1:	48 8d 3d 00 de 21 04 	lea    0x421de00(%rip),%rdi        # 422b9b8 <thread_list_lock>
    dbb8:	48 89 e5             	mov    %rsp,%rbp
    dbbb:	41 55                	push   %r13
    dbbd:	41 54                	push   %r12
    dbbf:	53                   	push   %rbx
    dbc0:	48 83 ec 08          	sub    $0x8,%rsp
    dbc4:	e8 17 31 00 00       	callq  10ce0 <_DkSpinLock>
    dbc9:	48 8b 05 e0 dd 21 04 	mov    0x421dde0(%rip),%rax        # 422b9b0 <thread_list>
    dbd0:	48 85 c0             	test   %rax,%rax
    dbd3:	74 23                	je     dbf8 <pal_start_thread+0x48>
    dbd5:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    dbda:	48 89 c3             	mov    %rax,%rbx
    dbdd:	75 10                	jne    dbef <pal_start_thread+0x3f>
    dbdf:	eb 2f                	jmp    dc10 <pal_start_thread+0x60>
    dbe1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    dbe8:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
    dbed:	74 21                	je     dc10 <pal_start_thread+0x60>
    dbef:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
    dbf3:	48 39 d8             	cmp    %rbx,%rax
    dbf6:	75 f0                	jne    dbe8 <pal_start_thread+0x38>
    dbf8:	48 83 c4 08          	add    $0x8,%rsp
    dbfc:	48 8d 3d b5 dd 21 04 	lea    0x421ddb5(%rip),%rdi        # 422b9b8 <thread_list_lock>
    dc03:	5b                   	pop    %rbx
    dc04:	41 5c                	pop    %r12
    dc06:	41 5d                	pop    %r13
    dc08:	5d                   	pop    %rbp
    dc09:	e9 02 31 00 00       	jmpq   10d10 <_DkSpinUnlock>
    dc0e:	66 90                	xchg   %ax,%ax
    dc10:	48 8d 15 f1 12 22 04 	lea    0x42212f1(%rip),%rdx        # 422ef08 <enclave_base>
    dc17:	48 8d 3d 9a dd 21 04 	lea    0x421dd9a(%rip),%rdi        # 422b9b8 <thread_list_lock>
    dc1e:	65 48 8b 04 25 08 00 	mov    %gs:0x8,%rax
    dc25:	00 00 
    dc27:	48 03 02             	add    (%rdx),%rax
    dc2a:	48 89 43 10          	mov    %rax,0x10(%rbx)
    dc2e:	e8 dd 30 00 00       	callq  10d10 <_DkSpinUnlock>
    dc33:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    dc37:	4c 8b 27             	mov    (%rdi),%r12
    dc3a:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
    dc3e:	e8 1d b8 ff ff       	callq  9460 <free>
    dc43:	48 c7 43 28 00 00 00 	movq   $0x0,0x28(%rbx)
    dc4a:	00 
    dc4b:	65 48 89 1c 25 58 00 	mov    %rbx,%gs:0x58
    dc52:	00 00 
    dc54:	48 83 c4 08          	add    $0x8,%rsp
    dc58:	4c 89 ef             	mov    %r13,%rdi
    dc5b:	4c 89 e0             	mov    %r12,%rax
    dc5e:	5b                   	pop    %rbx
    dc5f:	41 5c                	pop    %r12
    dc61:	41 5d                	pop    %r13
    dc63:	5d                   	pop    %rbp
    dc64:	ff e0                	jmpq   *%rax
    dc66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    dc6d:	00 00 00 

000000000000dc70 <_DkThreadCreate>:
    dc70:	55                   	push   %rbp
    dc71:	48 89 e5             	mov    %rsp,%rbp
    dc74:	41 56                	push   %r14
    dc76:	41 55                	push   %r13
    dc78:	41 54                	push   %r12
    dc7a:	53                   	push   %rbx
    dc7b:	49 89 fc             	mov    %rdi,%r12
    dc7e:	bf 58 00 00 00       	mov    $0x58,%edi
    dc83:	49 89 f6             	mov    %rsi,%r14
    dc86:	49 89 d5             	mov    %rdx,%r13
    dc89:	e8 92 b3 ff ff       	callq  9020 <malloc>
    dc8e:	bf 10 00 00 00       	mov    $0x10,%edi
    dc93:	c7 00 0e 00 00 00    	movl   $0xe,(%rax)
    dc99:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    dca0:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    dca7:	00 
    dca8:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    dcaf:	00 
    dcb0:	48 89 c3             	mov    %rax,%rbx
    dcb3:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    dcba:	00 
    dcbb:	e8 60 b3 ff ff       	callq  9020 <malloc>
    dcc0:	48 8d 3d f1 dc 21 04 	lea    0x421dcf1(%rip),%rdi        # 422b9b8 <thread_list_lock>
    dcc7:	4c 89 30             	mov    %r14,(%rax)
    dcca:	4c 89 68 08          	mov    %r13,0x8(%rax)
    dcce:	48 89 43 30          	mov    %rax,0x30(%rbx)
    dcd2:	e8 09 30 00 00       	callq  10ce0 <_DkSpinLock>
    dcd7:	48 8b 05 d2 dc 21 04 	mov    0x421dcd2(%rip),%rax        # 422b9b0 <thread_list>
    dcde:	48 85 c0             	test   %rax,%rax
    dce1:	74 45                	je     dd28 <_DkThreadCreate+0xb8>
    dce3:	48 8b 50 20          	mov    0x20(%rax),%rdx
    dce7:	48 8d 4b 08          	lea    0x8(%rbx),%rcx
    dceb:	48 89 4a 18          	mov    %rcx,0x18(%rdx)
    dcef:	48 89 48 20          	mov    %rcx,0x20(%rax)
    dcf3:	48 89 43 20          	mov    %rax,0x20(%rbx)
    dcf7:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    dcfb:	48 8d 3d b6 dc 21 04 	lea    0x421dcb6(%rip),%rdi        # 422b9b8 <thread_list_lock>
    dd02:	e8 09 30 00 00       	callq  10d10 <_DkSpinUnlock>
    dd07:	31 ff                	xor    %edi,%edi
    dd09:	e8 b2 39 00 00       	callq  116c0 <ocall_wake_thread>
    dd0e:	85 c0                	test   %eax,%eax
    dd10:	78 06                	js     dd18 <_DkThreadCreate+0xa8>
    dd12:	49 89 1c 24          	mov    %rbx,(%r12)
    dd16:	31 c0                	xor    %eax,%eax
    dd18:	5b                   	pop    %rbx
    dd19:	41 5c                	pop    %r12
    dd1b:	41 5d                	pop    %r13
    dd1d:	41 5e                	pop    %r14
    dd1f:	5d                   	pop    %rbp
    dd20:	c3                   	retq   
    dd21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    dd28:	48 8d 43 08          	lea    0x8(%rbx),%rax
    dd2c:	48 89 05 7d dc 21 04 	mov    %rax,0x421dc7d(%rip)        # 422b9b0 <thread_list>
    dd33:	48 89 43 20          	mov    %rax,0x20(%rbx)
    dd37:	48 89 43 28          	mov    %rax,0x28(%rbx)
    dd3b:	eb be                	jmp    dcfb <_DkThreadCreate+0x8b>
    dd3d:	0f 1f 00             	nopl   (%rax)

000000000000dd40 <_DkThreadDelayExecution>:
    dd40:	55                   	push   %rbp
    dd41:	48 89 e5             	mov    %rsp,%rbp
    dd44:	5d                   	pop    %rbp
    dd45:	e9 26 49 00 00       	jmpq   12670 <ocall_sleep>
    dd4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000dd50 <_DkThreadYieldExecution>:
    dd50:	55                   	push   %rbp
    dd51:	31 ff                	xor    %edi,%edi
    dd53:	48 89 e5             	mov    %rsp,%rbp
    dd56:	5d                   	pop    %rbp
    dd57:	e9 14 49 00 00       	jmpq   12670 <ocall_sleep>
    dd5c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000dd60 <_DkThreadExit>:
    dd60:	55                   	push   %rbp
    dd61:	48 89 e5             	mov    %rsp,%rbp
    dd64:	5d                   	pop    %rbp
    dd65:	e9 b6 2f 00 00       	jmpq   10d20 <ocall_exit>
    dd6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000dd70 <_DkThreadResume>:
    dd70:	55                   	push   %rbp
    dd71:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
    dd75:	48 89 e5             	mov    %rsp,%rbp
    dd78:	5d                   	pop    %rbp
    dd79:	e9 42 39 00 00       	jmpq   116c0 <ocall_wake_thread>
    dd7e:	66 90                	xchg   %ax,%ax

000000000000dd80 <_DkThreadGetCurrent>:
    dd80:	55                   	push   %rbp
    dd81:	65 48 8b 04 25 58 00 	mov    %gs:0x58,%rax
    dd88:	00 00 
    dd8a:	48 89 e5             	mov    %rsp,%rbp
    dd8d:	48 89 07             	mov    %rax,(%rdi)
    dd90:	31 c0                	xor    %eax,%eax
    dd92:	5d                   	pop    %rbp
    dd93:	c3                   	retq   
    dd94:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    dd9b:	00 00 00 
    dd9e:	66 90                	xchg   %ax,%ax

000000000000dda0 <mutex_close>:
    dda0:	55                   	push   %rbp
    dda1:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
    dda5:	48 89 e5             	mov    %rsp,%rbp
    dda8:	e8 e3 71 00 00       	callq  14f90 <free_untrusted>
    ddad:	31 c0                	xor    %eax,%eax
    ddaf:	5d                   	pop    %rbp
    ddb0:	c3                   	retq   
    ddb1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ddb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ddbd:	00 00 00 

000000000000ddc0 <_DkMutexCreate>:
    ddc0:	55                   	push   %rbp
    ddc1:	48 89 e5             	mov    %rsp,%rbp
    ddc4:	41 55                	push   %r13
    ddc6:	41 54                	push   %r12
    ddc8:	53                   	push   %rbx
    ddc9:	49 89 fd             	mov    %rdi,%r13
    ddcc:	bf 58 00 00 00       	mov    $0x58,%edi
    ddd1:	4c 63 e6             	movslq %esi,%r12
    ddd4:	48 83 ec 08          	sub    $0x8,%rsp
    ddd8:	e8 43 b2 ff ff       	callq  9020 <malloc>
    dddd:	48 89 c3             	mov    %rax,%rbx
    dde0:	c7 00 0f 00 00 00    	movl   $0xf,(%rax)
    dde6:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    dded:	31 c0                	xor    %eax,%eax
    ddef:	48 89 43 20          	mov    %rax,0x20(%rbx)
    ddf3:	bf 08 00 00 00       	mov    $0x8,%edi
    ddf8:	e8 a3 6e 00 00       	callq  14ca0 <malloc_untrusted>
    ddfd:	48 85 c0             	test   %rax,%rax
    de00:	48 89 43 18          	mov    %rax,0x18(%rbx)
    de04:	74 14                	je     de1a <_DkMutexCreate+0x5a>
    de06:	4c 89 20             	mov    %r12,(%rax)
    de09:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    de0d:	31 c0                	xor    %eax,%eax
    de0f:	48 83 c4 08          	add    $0x8,%rsp
    de13:	5b                   	pop    %rbx
    de14:	41 5c                	pop    %r12
    de16:	41 5d                	pop    %r13
    de18:	5d                   	pop    %rbp
    de19:	c3                   	retq   
    de1a:	48 89 df             	mov    %rbx,%rdi
    de1d:	e8 3e b6 ff ff       	callq  9460 <free>
    de22:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    de27:	eb e6                	jmp    de0f <_DkMutexCreate+0x4f>
    de29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000de30 <_DkMutexLockTimeout>:
    de30:	55                   	push   %rbp
    de31:	ba 01 00 00 00       	mov    $0x1,%edx
    de36:	31 c0                	xor    %eax,%eax
    de38:	48 89 e5             	mov    %rsp,%rbp
    de3b:	41 54                	push   %r12
    de3d:	53                   	push   %rbx
    de3e:	48 83 ec 10          	sub    $0x10,%rsp
    de42:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    de46:	48 8b 0f             	mov    (%rdi),%rcx
    de49:	f0 48 0f b1 11       	lock cmpxchg %rdx,(%rcx)
    de4e:	48 89 c2             	mov    %rax,%rdx
    de51:	31 c0                	xor    %eax,%eax
    de53:	48 85 d2             	test   %rdx,%rdx
    de56:	74 56                	je     deae <_DkMutexLockTimeout+0x7e>
    de58:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    de5d:	0f 84 e0 00 00 00    	je     df43 <_DkMutexLockTimeout+0x113>
    de63:	49 89 fc             	mov    %rdi,%r12
    de66:	f0 ff 47 08          	lock incl 0x8(%rdi)
    de6a:	48 8d 5d e8          	lea    -0x18(%rbp),%rbx
    de6e:	eb 1d                	jmp    de8d <_DkMutexLockTimeout+0x5d>
    de70:	48 83 7d e8 ff       	cmpq   $0xffffffffffffffff,-0x18(%rbp)
    de75:	49 8b 3c 24          	mov    (%r12),%rdi
    de79:	ba 01 00 00 00       	mov    $0x1,%edx
    de7e:	48 0f 45 cb          	cmovne %rbx,%rcx
    de82:	31 f6                	xor    %esi,%esi
    de84:	e8 37 3a 00 00       	callq  118c0 <ocall_futex>
    de89:	85 c0                	test   %eax,%eax
    de8b:	78 33                	js     dec0 <_DkMutexLockTimeout+0x90>
    de8d:	31 c9                	xor    %ecx,%ecx
    de8f:	49 8b 34 24          	mov    (%r12),%rsi
    de93:	ba 01 00 00 00       	mov    $0x1,%edx
    de98:	48 89 c8             	mov    %rcx,%rax
    de9b:	f0 48 0f b1 16       	lock cmpxchg %rdx,(%rsi)
    dea0:	48 83 f8 01          	cmp    $0x1,%rax
    dea4:	74 ca                	je     de70 <_DkMutexLockTimeout+0x40>
    dea6:	f0 41 ff 4c 24 08    	lock decl 0x8(%r12)
    deac:	31 c0                	xor    %eax,%eax
    deae:	48 83 c4 10          	add    $0x10,%rsp
    deb2:	5b                   	pop    %rbx
    deb3:	41 5c                	pop    %r12
    deb5:	5d                   	pop    %rbp
    deb6:	c3                   	retq   
    deb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    debe:	00 00 
    dec0:	83 f8 f5             	cmp    $0xfffffff5,%eax
    dec3:	0f 84 84 00 00 00    	je     df4d <_DkMutexLockTimeout+0x11d>
    dec9:	f7 d8                	neg    %eax
    decb:	83 f8 6e             	cmp    $0x6e,%eax
    dece:	77 6c                	ja     df3c <_DkMutexLockTimeout+0x10c>
    ded0:	48 8d 15 4d b0 01 00 	lea    0x1b04d(%rip),%rdx        # 28f24 <slab_levels+0x3a4>
    ded7:	89 c0                	mov    %eax,%eax
    ded9:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    dedd:	48 01 c2             	add    %rax,%rdx
    dee0:	ff e2                	jmpq   *%rdx
    dee2:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax
    dee7:	f0 41 ff 4c 24 08    	lock decl 0x8(%r12)
    deed:	48 83 c4 10          	add    $0x10,%rsp
    def1:	5b                   	pop    %rbx
    def2:	41 5c                	pop    %r12
    def4:	5d                   	pop    %rbp
    def5:	c3                   	retq   
    def6:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
    defb:	eb ea                	jmp    dee7 <_DkMutexLockTimeout+0xb7>
    defd:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    df02:	eb e3                	jmp    dee7 <_DkMutexLockTimeout+0xb7>
    df04:	b8 ed ff ff ff       	mov    $0xffffffed,%eax
    df09:	eb dc                	jmp    dee7 <_DkMutexLockTimeout+0xb7>
    df0b:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    df10:	eb d5                	jmp    dee7 <_DkMutexLockTimeout+0xb7>
    df12:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax
    df17:	eb ce                	jmp    dee7 <_DkMutexLockTimeout+0xb7>
    df19:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
    df1e:	eb c7                	jmp    dee7 <_DkMutexLockTimeout+0xb7>
    df20:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
    df25:	eb c0                	jmp    dee7 <_DkMutexLockTimeout+0xb7>
    df27:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    df2c:	eb b9                	jmp    dee7 <_DkMutexLockTimeout+0xb7>
    df2e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    df33:	eb b2                	jmp    dee7 <_DkMutexLockTimeout+0xb7>
    df35:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
    df3a:	eb ab                	jmp    dee7 <_DkMutexLockTimeout+0xb7>
    df3c:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
    df41:	eb a4                	jmp    dee7 <_DkMutexLockTimeout+0xb7>
    df43:	b8 ed ff ff ff       	mov    $0xffffffed,%eax
    df48:	e9 61 ff ff ff       	jmpq   deae <_DkMutexLockTimeout+0x7e>
    df4d:	f0 41 ff 4c 24 08    	lock decl 0x8(%r12)
    df53:	b8 ed ff ff ff       	mov    $0xffffffed,%eax
    df58:	e9 51 ff ff ff       	jmpq   deae <_DkMutexLockTimeout+0x7e>
    df5d:	0f 1f 00             	nopl   (%rax)

000000000000df60 <_DkMutexLock>:
    df60:	55                   	push   %rbp
    df61:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    df68:	48 89 e5             	mov    %rsp,%rbp
    df6b:	5d                   	pop    %rbp
    df6c:	e9 bf fe ff ff       	jmpq   de30 <_DkMutexLockTimeout>
    df71:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    df76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    df7d:	00 00 00 

000000000000df80 <_DkMutexAcquireTimeout>:
    df80:	55                   	push   %rbp
    df81:	48 63 f6             	movslq %esi,%rsi
    df84:	48 83 c7 18          	add    $0x18,%rdi
    df88:	48 89 e5             	mov    %rsp,%rbp
    df8b:	5d                   	pop    %rbp
    df8c:	e9 9f fe ff ff       	jmpq   de30 <_DkMutexLockTimeout>
    df91:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    df96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    df9d:	00 00 00 

000000000000dfa0 <mutex_wait>:
    dfa0:	55                   	push   %rbp
    dfa1:	48 89 e5             	mov    %rsp,%rbp
    dfa4:	5d                   	pop    %rbp
    dfa5:	e9 d6 ff ff ff       	jmpq   df80 <_DkMutexAcquireTimeout>
    dfaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000dfb0 <_DkMutexUnlock>:
    dfb0:	48 8b 07             	mov    (%rdi),%rax
    dfb3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    dfba:	0f ae f0             	mfence 
    dfbd:	48 8b 47 08          	mov    0x8(%rdi),%rax
    dfc1:	85 c0                	test   %eax,%eax
    dfc3:	75 0b                	jne    dfd0 <_DkMutexUnlock+0x20>
    dfc5:	31 c0                	xor    %eax,%eax
    dfc7:	c3                   	retq   
    dfc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    dfcf:	00 
    dfd0:	55                   	push   %rbp
    dfd1:	48 8b 3f             	mov    (%rdi),%rdi
    dfd4:	31 c9                	xor    %ecx,%ecx
    dfd6:	ba 01 00 00 00       	mov    $0x1,%edx
    dfdb:	be 01 00 00 00       	mov    $0x1,%esi
    dfe0:	48 89 e5             	mov    %rsp,%rbp
    dfe3:	e8 d8 38 00 00       	callq  118c0 <ocall_futex>
    dfe8:	31 c0                	xor    %eax,%eax
    dfea:	5d                   	pop    %rbp
    dfeb:	c3                   	retq   
    dfec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000dff0 <_DkMutexRelease>:
    dff0:	55                   	push   %rbp
    dff1:	48 83 c7 18          	add    $0x18,%rdi
    dff5:	48 89 e5             	mov    %rsp,%rbp
    dff8:	e8 b3 ff ff ff       	callq  dfb0 <_DkMutexUnlock>
    dffd:	85 c0                	test   %eax,%eax
    dfff:	78 07                	js     e008 <_DkMutexRelease+0x18>
    e001:	5d                   	pop    %rbp
    e002:	c3                   	retq   
    e003:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e008:	5d                   	pop    %rbp
    e009:	89 c7                	mov    %eax,%edi
    e00b:	e9 90 26 00 00       	jmpq   106a0 <_DkRaiseFailure>

000000000000e010 <_DkEventCreate>:
    e010:	55                   	push   %rbp
    e011:	48 89 e5             	mov    %rsp,%rbp
    e014:	41 56                	push   %r14
    e016:	41 55                	push   %r13
    e018:	41 54                	push   %r12
    e01a:	53                   	push   %rbx
    e01b:	41 89 d6             	mov    %edx,%r14d
    e01e:	49 89 fd             	mov    %rdi,%r13
    e021:	bf 58 00 00 00       	mov    $0x58,%edi
    e026:	41 89 f4             	mov    %esi,%r12d
    e029:	e8 f2 af ff ff       	callq  9020 <malloc>
    e02e:	bf 08 00 00 00       	mov    $0x8,%edi
    e033:	c7 00 10 00 00 00    	movl   $0x10,(%rax)
    e039:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    e040:	44 88 70 38          	mov    %r14b,0x38(%rax)
    e044:	48 89 c3             	mov    %rax,%rbx
    e047:	e8 54 6c 00 00       	callq  14ca0 <malloc_untrusted>
    e04c:	48 85 c0             	test   %rax,%rax
    e04f:	48 89 43 28          	mov    %rax,0x28(%rbx)
    e053:	74 1a                	je     e06f <_DkEventCreate+0x5f>
    e055:	41 0f b6 f4          	movzbl %r12b,%esi
    e059:	48 89 30             	mov    %rsi,(%rax)
    e05c:	31 c0                	xor    %eax,%eax
    e05e:	48 89 43 30          	mov    %rax,0x30(%rbx)
    e062:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    e066:	5b                   	pop    %rbx
    e067:	41 5c                	pop    %r12
    e069:	41 5d                	pop    %r13
    e06b:	41 5e                	pop    %r14
    e06d:	5d                   	pop    %rbp
    e06e:	c3                   	retq   
    e06f:	48 89 df             	mov    %rbx,%rdi
    e072:	e8 e9 b3 ff ff       	callq  9460 <free>
    e077:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    e07c:	eb e8                	jmp    e066 <_DkEventCreate+0x56>
    e07e:	66 90                	xchg   %ax,%ax

000000000000e080 <_DkEventSet>:
    e080:	55                   	push   %rbp
    e081:	48 89 e5             	mov    %rsp,%rbp
    e084:	53                   	push   %rbx
    e085:	48 89 fb             	mov    %rdi,%rbx
    e088:	48 83 ec 08          	sub    $0x8,%rsp
    e08c:	80 7f 38 00          	cmpb   $0x0,0x38(%rdi)
    e090:	74 5e                	je     e0f0 <_DkEventSet+0x70>
    e092:	48 8b 57 28          	mov    0x28(%rdi),%rdx
    e096:	b9 01 00 00 00       	mov    $0x1,%ecx
    e09b:	31 c0                	xor    %eax,%eax
    e09d:	f0 48 0f b1 0a       	lock cmpxchg %rcx,(%rdx)
    e0a2:	48 85 c0             	test   %rax,%rax
    e0a5:	75 39                	jne    e0e0 <_DkEventSet+0x60>
    e0a7:	48 8b 47 30          	mov    0x30(%rdi),%rax
    e0ab:	85 c0                	test   %eax,%eax
    e0ad:	74 31                	je     e0e0 <_DkEventSet+0x60>
    e0af:	83 fe ff             	cmp    $0xffffffff,%esi
    e0b2:	74 5c                	je     e110 <_DkEventSet+0x90>
    e0b4:	39 c6                	cmp    %eax,%esi
    e0b6:	7d 58                	jge    e110 <_DkEventSet+0x90>
    e0b8:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    e0bc:	31 c9                	xor    %ecx,%ecx
    e0be:	89 f2                	mov    %esi,%edx
    e0c0:	be 01 00 00 00       	mov    $0x1,%esi
    e0c5:	e8 f6 37 00 00       	callq  118c0 <ocall_futex>
    e0ca:	85 c0                	test   %eax,%eax
    e0cc:	79 14                	jns    e0e2 <_DkEventSet+0x62>
    e0ce:	48 8b 53 28          	mov    0x28(%rbx),%rdx
    e0d2:	31 c9                	xor    %ecx,%ecx
    e0d4:	48 89 0a             	mov    %rcx,(%rdx)
    e0d7:	eb 09                	jmp    e0e2 <_DkEventSet+0x62>
    e0d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e0e0:	31 c0                	xor    %eax,%eax
    e0e2:	48 83 c4 08          	add    $0x8,%rsp
    e0e6:	5b                   	pop    %rbx
    e0e7:	5d                   	pop    %rbp
    e0e8:	c3                   	retq   
    e0e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e0f0:	48 8b 7f 28          	mov    0x28(%rdi),%rdi
    e0f4:	48 83 c4 08          	add    $0x8,%rsp
    e0f8:	31 c9                	xor    %ecx,%ecx
    e0fa:	5b                   	pop    %rbx
    e0fb:	5d                   	pop    %rbp
    e0fc:	ba 01 00 00 00       	mov    $0x1,%edx
    e101:	be 01 00 00 00       	mov    $0x1,%esi
    e106:	e9 b5 37 00 00       	jmpq   118c0 <ocall_futex>
    e10b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e110:	89 c6                	mov    %eax,%esi
    e112:	eb a4                	jmp    e0b8 <_DkEventSet+0x38>
    e114:	66 90                	xchg   %ax,%ax
    e116:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e11d:	00 00 00 

000000000000e120 <event_close>:
    e120:	55                   	push   %rbp
    e121:	be ff ff ff ff       	mov    $0xffffffff,%esi
    e126:	48 89 e5             	mov    %rsp,%rbp
    e129:	53                   	push   %rbx
    e12a:	48 89 fb             	mov    %rdi,%rbx
    e12d:	48 83 ec 08          	sub    $0x8,%rsp
    e131:	e8 4a ff ff ff       	callq  e080 <_DkEventSet>
    e136:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    e13a:	e8 51 6e 00 00       	callq  14f90 <free_untrusted>
    e13f:	48 83 c4 08          	add    $0x8,%rsp
    e143:	31 c0                	xor    %eax,%eax
    e145:	5b                   	pop    %rbx
    e146:	5d                   	pop    %rbp
    e147:	c3                   	retq   
    e148:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e14f:	00 

000000000000e150 <_DkEventWaitTimeout>:
    e150:	55                   	push   %rbp
    e151:	48 89 e5             	mov    %rsp,%rbp
    e154:	41 54                	push   %r12
    e156:	53                   	push   %rbx
    e157:	48 83 ec 10          	sub    $0x10,%rsp
    e15b:	80 7f 38 00          	cmpb   $0x0,0x38(%rdi)
    e15f:	74 0c                	je     e16d <_DkEventWaitTimeout+0x1d>
    e161:	48 8b 47 28          	mov    0x28(%rdi),%rax
    e165:	48 8b 00             	mov    (%rax),%rax
    e168:	48 85 c0             	test   %rax,%rax
    e16b:	75 63                	jne    e1d0 <_DkEventWaitTimeout+0x80>
    e16d:	48 89 fb             	mov    %rdi,%rbx
    e170:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    e174:	f0 ff 47 30          	lock incl 0x30(%rdi)
    e178:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    e17c:	48 85 f6             	test   %rsi,%rsi
    e17f:	41 bc 00 00 00 00    	mov    $0x0,%r12d
    e185:	4c 0f 45 e0          	cmovne %rax,%r12
    e189:	eb 17                	jmp    e1a2 <_DkEventWaitTimeout+0x52>
    e18b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e190:	80 7b 38 00          	cmpb   $0x0,0x38(%rbx)
    e194:	74 2d                	je     e1c3 <_DkEventWaitTimeout+0x73>
    e196:	48 8b 53 28          	mov    0x28(%rbx),%rdx
    e19a:	48 8b 12             	mov    (%rdx),%rdx
    e19d:	48 85 d2             	test   %rdx,%rdx
    e1a0:	75 21                	jne    e1c3 <_DkEventWaitTimeout+0x73>
    e1a2:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    e1a6:	31 d2                	xor    %edx,%edx
    e1a8:	31 f6                	xor    %esi,%esi
    e1aa:	4c 89 e1             	mov    %r12,%rcx
    e1ad:	e8 0e 37 00 00       	callq  118c0 <ocall_futex>
    e1b2:	85 c0                	test   %eax,%eax
    e1b4:	79 da                	jns    e190 <_DkEventWaitTimeout+0x40>
    e1b6:	83 f8 ed             	cmp    $0xffffffed,%eax
    e1b9:	75 08                	jne    e1c3 <_DkEventWaitTimeout+0x73>
    e1bb:	31 c0                	xor    %eax,%eax
    e1bd:	80 7b 38 00          	cmpb   $0x0,0x38(%rbx)
    e1c1:	75 d3                	jne    e196 <_DkEventWaitTimeout+0x46>
    e1c3:	f0 ff 4b 30          	lock decl 0x30(%rbx)
    e1c7:	48 83 c4 10          	add    $0x10,%rsp
    e1cb:	5b                   	pop    %rbx
    e1cc:	41 5c                	pop    %r12
    e1ce:	5d                   	pop    %rbp
    e1cf:	c3                   	retq   
    e1d0:	48 83 c4 10          	add    $0x10,%rsp
    e1d4:	31 c0                	xor    %eax,%eax
    e1d6:	5b                   	pop    %rbx
    e1d7:	41 5c                	pop    %r12
    e1d9:	5d                   	pop    %rbp
    e1da:	c3                   	retq   
    e1db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000e1e0 <_DkEventWait>:
    e1e0:	55                   	push   %rbp
    e1e1:	48 89 e5             	mov    %rsp,%rbp
    e1e4:	53                   	push   %rbx
    e1e5:	48 83 ec 08          	sub    $0x8,%rsp
    e1e9:	80 7f 38 00          	cmpb   $0x0,0x38(%rdi)
    e1ed:	74 0c                	je     e1fb <_DkEventWait+0x1b>
    e1ef:	48 8b 47 28          	mov    0x28(%rdi),%rax
    e1f3:	48 8b 00             	mov    (%rax),%rax
    e1f6:	48 85 c0             	test   %rax,%rax
    e1f9:	75 4d                	jne    e248 <_DkEventWait+0x68>
    e1fb:	48 89 fb             	mov    %rdi,%rbx
    e1fe:	f0 ff 47 30          	lock incl 0x30(%rdi)
    e202:	eb 16                	jmp    e21a <_DkEventWait+0x3a>
    e204:	0f 1f 40 00          	nopl   0x0(%rax)
    e208:	80 7b 38 00          	cmpb   $0x0,0x38(%rbx)
    e20c:	74 2c                	je     e23a <_DkEventWait+0x5a>
    e20e:	48 8b 53 28          	mov    0x28(%rbx),%rdx
    e212:	48 8b 12             	mov    (%rdx),%rdx
    e215:	48 85 d2             	test   %rdx,%rdx
    e218:	75 20                	jne    e23a <_DkEventWait+0x5a>
    e21a:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    e21e:	31 c9                	xor    %ecx,%ecx
    e220:	31 d2                	xor    %edx,%edx
    e222:	31 f6                	xor    %esi,%esi
    e224:	e8 97 36 00 00       	callq  118c0 <ocall_futex>
    e229:	85 c0                	test   %eax,%eax
    e22b:	79 db                	jns    e208 <_DkEventWait+0x28>
    e22d:	83 f8 ed             	cmp    $0xffffffed,%eax
    e230:	75 08                	jne    e23a <_DkEventWait+0x5a>
    e232:	31 c0                	xor    %eax,%eax
    e234:	80 7b 38 00          	cmpb   $0x0,0x38(%rbx)
    e238:	75 d4                	jne    e20e <_DkEventWait+0x2e>
    e23a:	f0 ff 4b 30          	lock decl 0x30(%rbx)
    e23e:	48 83 c4 08          	add    $0x8,%rsp
    e242:	5b                   	pop    %rbx
    e243:	5d                   	pop    %rbp
    e244:	c3                   	retq   
    e245:	0f 1f 00             	nopl   (%rax)
    e248:	48 83 c4 08          	add    $0x8,%rsp
    e24c:	31 c0                	xor    %eax,%eax
    e24e:	5b                   	pop    %rbx
    e24f:	5d                   	pop    %rbp
    e250:	c3                   	retq   
    e251:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e256:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e25d:	00 00 00 

000000000000e260 <event_wait>:
    e260:	55                   	push   %rbp
    e261:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
    e265:	48 89 e5             	mov    %rsp,%rbp
    e268:	74 06                	je     e270 <event_wait+0x10>
    e26a:	5d                   	pop    %rbp
    e26b:	e9 e0 fe ff ff       	jmpq   e150 <_DkEventWaitTimeout>
    e270:	5d                   	pop    %rbp
    e271:	e9 6a ff ff ff       	jmpq   e1e0 <_DkEventWait>
    e276:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e27d:	00 00 00 

000000000000e280 <_DkEventClear>:
    e280:	55                   	push   %rbp
    e281:	48 8b 47 28          	mov    0x28(%rdi),%rax
    e285:	31 d2                	xor    %edx,%edx
    e287:	48 89 e5             	mov    %rsp,%rbp
    e28a:	48 89 10             	mov    %rdx,(%rax)
    e28d:	31 c0                	xor    %eax,%eax
    e28f:	5d                   	pop    %rbp
    e290:	c3                   	retq   
    e291:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e298:	00 00 00 
    e29b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000e2a0 <check_parent_mrenclave>:
    e2a0:	55                   	push   %rbp
    e2a1:	48 89 e5             	mov    %rsp,%rbp
    e2a4:	41 55                	push   %r13
    e2a6:	41 54                	push   %r12
    e2a8:	4c 8d 65 c0          	lea    -0x40(%rbp),%r12
    e2ac:	53                   	push   %rbx
    e2ad:	49 89 d5             	mov    %rdx,%r13
    e2b0:	48 89 f3             	mov    %rsi,%rbx
    e2b3:	ba 18 00 00 00       	mov    $0x18,%edx
    e2b8:	31 f6                	xor    %esi,%esi
    e2ba:	48 83 ec 28          	sub    $0x28,%rsp
    e2be:	4c 89 e7             	mov    %r12,%rdi
    e2c1:	e8 9a 81 00 00       	callq  16460 <memset>
    e2c6:	48 8d 53 20          	lea    0x20(%rbx),%rdx
    e2ca:	4d 89 e0             	mov    %r12,%r8
    e2cd:	4c 89 ef             	mov    %r13,%rdi
    e2d0:	41 b9 10 00 00 00    	mov    $0x10,%r9d
    e2d6:	b9 20 00 00 00       	mov    $0x20,%ecx
    e2db:	be 10 00 00 00       	mov    $0x10,%esi
    e2e0:	e8 7b a7 00 00       	callq  18a60 <lib_AESCMAC>
    e2e5:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
    e2e9:	4c 89 e6             	mov    %r12,%rsi
    e2ec:	ba 18 00 00 00       	mov    $0x18,%edx
    e2f1:	e8 9a 73 00 00       	callq  15690 <memcmp>
    e2f6:	85 c0                	test   %eax,%eax
    e2f8:	0f 95 c0             	setne  %al
    e2fb:	48 83 c4 28          	add    $0x28,%rsp
    e2ff:	5b                   	pop    %rbx
    e300:	0f b6 c0             	movzbl %al,%eax
    e303:	41 5c                	pop    %r12
    e305:	41 5d                	pop    %r13
    e307:	5d                   	pop    %rbp
    e308:	c3                   	retq   
    e309:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000e310 <proc_attrsetbyhdl>:
    e310:	55                   	push   %rbp
    e311:	48 89 fa             	mov    %rdi,%rdx
    e314:	48 89 e5             	mov    %rsp,%rbp
    e317:	41 55                	push   %r13
    e319:	41 54                	push   %r12
    e31b:	53                   	push   %rbx
    e31c:	48 83 ec 08          	sub    $0x8,%rsp
    e320:	8b 7f 08             	mov    0x8(%rdi),%edi
    e323:	83 ff ff             	cmp    $0xffffffff,%edi
    e326:	74 50                	je     e378 <proc_attrsetbyhdl+0x68>
    e328:	0f b6 42 18          	movzbl 0x18(%rdx),%eax
    e32c:	45 31 ed             	xor    %r13d,%r13d
    e32f:	38 46 05             	cmp    %al,0x5(%rsi)
    e332:	74 1b                	je     e34f <proc_attrsetbyhdl+0x3f>
    e334:	48 89 f3             	mov    %rsi,%rbx
    e337:	0f b6 f0             	movzbl %al,%esi
    e33a:	49 89 d4             	mov    %rdx,%r12
    e33d:	e8 be 30 00 00       	callq  11400 <ocall_fsetnonblock>
    e342:	85 c0                	test   %eax,%eax
    e344:	78 1a                	js     e360 <proc_attrsetbyhdl+0x50>
    e346:	0f b6 43 05          	movzbl 0x5(%rbx),%eax
    e34a:	41 88 44 24 18       	mov    %al,0x18(%r12)
    e34f:	48 83 c4 08          	add    $0x8,%rsp
    e353:	44 89 e8             	mov    %r13d,%eax
    e356:	5b                   	pop    %rbx
    e357:	41 5c                	pop    %r12
    e359:	41 5d                	pop    %r13
    e35b:	5d                   	pop    %rbp
    e35c:	c3                   	retq   
    e35d:	0f 1f 00             	nopl   (%rax)
    e360:	48 83 c4 08          	add    $0x8,%rsp
    e364:	41 89 c5             	mov    %eax,%r13d
    e367:	5b                   	pop    %rbx
    e368:	44 89 e8             	mov    %r13d,%eax
    e36b:	41 5c                	pop    %r12
    e36d:	41 5d                	pop    %r13
    e36f:	5d                   	pop    %rbp
    e370:	c3                   	retq   
    e371:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e378:	41 bd f9 ff ff ff    	mov    $0xfffffff9,%r13d
    e37e:	eb cf                	jmp    e34f <proc_attrsetbyhdl+0x3f>

000000000000e380 <proc_attrquerybyhdl>:
    e380:	8b 47 08             	mov    0x8(%rdi),%eax
    e383:	83 f8 ff             	cmp    $0xffffffff,%eax
    e386:	74 78                	je     e400 <proc_attrquerybyhdl+0x80>
    e388:	55                   	push   %rbp
    e389:	48 89 e5             	mov    %rsp,%rbp
    e38c:	41 55                	push   %r13
    e38e:	41 54                	push   %r12
    e390:	53                   	push   %rbx
    e391:	49 89 fd             	mov    %rdi,%r13
    e394:	89 c7                	mov    %eax,%edi
    e396:	49 89 f4             	mov    %rsi,%r12
    e399:	48 83 ec 08          	sub    $0x8,%rsp
    e39d:	e8 0e 30 00 00       	callq  113b0 <ocall_fionread>
    e3a2:	48 63 d8             	movslq %eax,%rbx
    e3a5:	89 d8                	mov    %ebx,%eax
    e3a7:	f7 d8                	neg    %eax
    e3a9:	85 db                	test   %ebx,%ebx
    e3ab:	78 41                	js     e3ee <proc_attrquerybyhdl+0x6e>
    e3ad:	31 f6                	xor    %esi,%esi
    e3af:	ba 48 00 00 00       	mov    $0x48,%edx
    e3b4:	4c 89 e7             	mov    %r12,%rdi
    e3b7:	e8 a4 80 00 00       	callq  16460 <memset>
    e3bc:	41 8b 45 04          	mov    0x4(%r13),%eax
    e3c0:	49 89 5c 24 10       	mov    %rbx,0x10(%r12)
    e3c5:	f6 c4 06             	test   $0x6,%ah
    e3c8:	41 0f 95 44 24 04    	setne  0x4(%r12)
    e3ce:	48 85 db             	test   %rbx,%rbx
    e3d1:	41 0f 95 44 24 06    	setne  0x6(%r12)
    e3d7:	c1 e8 07             	shr    $0x7,%eax
    e3da:	83 e0 01             	and    $0x1,%eax
    e3dd:	41 88 44 24 07       	mov    %al,0x7(%r12)
    e3e2:	41 0f b6 45 18       	movzbl 0x18(%r13),%eax
    e3e7:	41 88 44 24 05       	mov    %al,0x5(%r12)
    e3ec:	31 c0                	xor    %eax,%eax
    e3ee:	48 83 c4 08          	add    $0x8,%rsp
    e3f2:	5b                   	pop    %rbx
    e3f3:	41 5c                	pop    %r12
    e3f5:	41 5d                	pop    %r13
    e3f7:	5d                   	pop    %rbp
    e3f8:	c3                   	retq   
    e3f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e400:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    e405:	c3                   	retq   
    e406:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e40d:	00 00 00 

000000000000e410 <proc_close>:
    e410:	55                   	push   %rbp
    e411:	48 89 e5             	mov    %rsp,%rbp
    e414:	53                   	push   %rbx
    e415:	48 89 fb             	mov    %rdi,%rbx
    e418:	48 83 ec 08          	sub    $0x8,%rsp
    e41c:	8b 7f 08             	mov    0x8(%rdi),%edi
    e41f:	83 ff ff             	cmp    $0xffffffff,%edi
    e422:	74 0c                	je     e430 <proc_close+0x20>
    e424:	e8 a7 2c 00 00       	callq  110d0 <ocall_close>
    e429:	c7 43 08 ff ff ff ff 	movl   $0xffffffff,0x8(%rbx)
    e430:	8b 7b 0c             	mov    0xc(%rbx),%edi
    e433:	83 ff ff             	cmp    $0xffffffff,%edi
    e436:	74 0c                	je     e444 <proc_close+0x34>
    e438:	e8 93 2c 00 00       	callq  110d0 <ocall_close>
    e43d:	c7 43 0c ff ff ff ff 	movl   $0xffffffff,0xc(%rbx)
    e444:	8b 7b 10             	mov    0x10(%rbx),%edi
    e447:	83 ff ff             	cmp    $0xffffffff,%edi
    e44a:	74 0c                	je     e458 <proc_close+0x48>
    e44c:	e8 7f 2c 00 00       	callq  110d0 <ocall_close>
    e451:	c7 43 10 ff ff ff ff 	movl   $0xffffffff,0x10(%rbx)
    e458:	48 83 c4 08          	add    $0x8,%rsp
    e45c:	31 c0                	xor    %eax,%eax
    e45e:	5b                   	pop    %rbx
    e45f:	5d                   	pop    %rbp
    e460:	c3                   	retq   
    e461:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e466:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e46d:	00 00 00 

000000000000e470 <proc_delete>:
    e470:	55                   	push   %rbp
    e471:	48 89 e5             	mov    %rsp,%rbp
    e474:	41 55                	push   %r13
    e476:	41 54                	push   %r12
    e478:	53                   	push   %rbx
    e479:	49 89 fc             	mov    %rdi,%r12
    e47c:	48 83 ec 18          	sub    $0x18,%rsp
    e480:	83 fe 01             	cmp    $0x1,%esi
    e483:	0f 84 87 00 00 00    	je     e510 <proc_delete+0xa0>
    e489:	83 fe 02             	cmp    $0x2,%esi
    e48c:	0f 84 8e 00 00 00    	je     e520 <proc_delete+0xb0>
    e492:	85 f6                	test   %esi,%esi
    e494:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx
    e499:	74 15                	je     e4b0 <proc_delete+0x40>
    e49b:	48 83 c4 18          	add    $0x18,%rsp
    e49f:	89 d8                	mov    %ebx,%eax
    e4a1:	5b                   	pop    %rbx
    e4a2:	41 5c                	pop    %r12
    e4a4:	41 5d                	pop    %r13
    e4a6:	5d                   	pop    %rbp
    e4a7:	c3                   	retq   
    e4a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e4af:	00 
    e4b0:	8b 7f 08             	mov    0x8(%rdi),%edi
    e4b3:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    e4b9:	83 ff ff             	cmp    $0xffffffff,%edi
    e4bc:	74 19                	je     e4d7 <proc_delete+0x67>
    e4be:	89 75 dc             	mov    %esi,-0x24(%rbp)
    e4c1:	e8 0a 2c 00 00       	callq  110d0 <ocall_close>
    e4c6:	8b 75 dc             	mov    -0x24(%rbp),%esi
    e4c9:	41 c7 44 24 08 ff ff 	movl   $0xffffffff,0x8(%r12)
    e4d0:	ff ff 
    e4d2:	83 fe 01             	cmp    $0x1,%esi
    e4d5:	74 18                	je     e4ef <proc_delete+0x7f>
    e4d7:	41 8b 7c 24 0c       	mov    0xc(%r12),%edi
    e4dc:	83 ff ff             	cmp    $0xffffffff,%edi
    e4df:	74 0e                	je     e4ef <proc_delete+0x7f>
    e4e1:	e8 ea 2b 00 00       	callq  110d0 <ocall_close>
    e4e6:	41 c7 44 24 0c ff ff 	movl   $0xffffffff,0xc(%r12)
    e4ed:	ff ff 
    e4ef:	41 8b 7c 24 10       	mov    0x10(%r12),%edi
    e4f4:	31 db                	xor    %ebx,%ebx
    e4f6:	83 ff ff             	cmp    $0xffffffff,%edi
    e4f9:	74 a0                	je     e49b <proc_delete+0x2b>
    e4fb:	44 89 ee             	mov    %r13d,%esi
    e4fe:	e8 ad 40 00 00       	callq  125b0 <ocall_sock_shutdown>
    e503:	48 83 c4 18          	add    $0x18,%rsp
    e507:	89 d8                	mov    %ebx,%eax
    e509:	5b                   	pop    %rbx
    e50a:	41 5c                	pop    %r12
    e50c:	41 5d                	pop    %r13
    e50e:	5d                   	pop    %rbp
    e50f:	c3                   	retq   
    e510:	8b 7f 08             	mov    0x8(%rdi),%edi
    e513:	45 31 ed             	xor    %r13d,%r13d
    e516:	83 ff ff             	cmp    $0xffffffff,%edi
    e519:	75 a3                	jne    e4be <proc_delete+0x4e>
    e51b:	eb d2                	jmp    e4ef <proc_delete+0x7f>
    e51d:	0f 1f 00             	nopl   (%rax)
    e520:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    e526:	eb af                	jmp    e4d7 <proc_delete+0x67>
    e528:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e52f:	00 

000000000000e530 <proc_write>:
    e530:	be ff ff ff ff       	mov    $0xffffffff,%esi
    e535:	48 c7 c0 fc ff ff ff 	mov    $0xfffffffffffffffc,%rax
    e53c:	48 39 f2             	cmp    %rsi,%rdx
    e53f:	77 33                	ja     e574 <proc_write+0x44>
    e541:	55                   	push   %rbp
    e542:	48 89 ce             	mov    %rcx,%rsi
    e545:	48 89 e5             	mov    %rsp,%rbp
    e548:	41 54                	push   %r12
    e54a:	53                   	push   %rbx
    e54b:	48 89 fb             	mov    %rdi,%rbx
    e54e:	8b 7f 0c             	mov    0xc(%rdi),%edi
    e551:	49 89 d4             	mov    %rdx,%r12
    e554:	e8 c7 2c 00 00       	callq  11220 <ocall_write>
    e559:	83 f8 ed             	cmp    $0xffffffed,%eax
    e55c:	74 22                	je     e580 <proc_write+0x50>
    e55e:	85 c0                	test   %eax,%eax
    e560:	78 25                	js     e587 <proc_write+0x57>
    e562:	48 98                	cltq   
    e564:	49 39 c4             	cmp    %rax,%r12
    e567:	74 27                	je     e590 <proc_write+0x60>
    e569:	81 63 04 7f ff ff ff 	andl   $0xffffff7f,0x4(%rbx)
    e570:	5b                   	pop    %rbx
    e571:	41 5c                	pop    %r12
    e573:	5d                   	pop    %rbp
    e574:	f3 c3                	repz retq 
    e576:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e57d:	00 00 00 
    e580:	81 63 04 7f ff ff ff 	andl   $0xffffff7f,0x4(%rbx)
    e587:	48 98                	cltq   
    e589:	eb e5                	jmp    e570 <proc_write+0x40>
    e58b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e590:	81 4b 04 80 00 00 00 	orl    $0x80,0x4(%rbx)
    e597:	eb d7                	jmp    e570 <proc_write+0x40>
    e599:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000e5a0 <proc_read>:
    e5a0:	be ff ff ff ff       	mov    $0xffffffff,%esi
    e5a5:	48 39 f2             	cmp    %rsi,%rdx
    e5a8:	77 16                	ja     e5c0 <proc_read+0x20>
    e5aa:	55                   	push   %rbp
    e5ab:	8b 7f 08             	mov    0x8(%rdi),%edi
    e5ae:	48 89 ce             	mov    %rcx,%rsi
    e5b1:	48 89 e5             	mov    %rsp,%rbp
    e5b4:	e8 67 2b 00 00       	callq  11120 <ocall_read>
    e5b9:	5d                   	pop    %rbp
    e5ba:	48 98                	cltq   
    e5bc:	c3                   	retq   
    e5bd:	0f 1f 00             	nopl   (%rax)
    e5c0:	48 c7 c0 fc ff ff ff 	mov    $0xfffffffffffffffc,%rax
    e5c7:	c3                   	retq   
    e5c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e5cf:	00 

000000000000e5d0 <check_child_mrenclave>:
    e5d0:	55                   	push   %rbp
    e5d1:	48 89 e5             	mov    %rsp,%rbp
    e5d4:	41 56                	push   %r14
    e5d6:	41 55                	push   %r13
    e5d8:	41 54                	push   %r12
    e5da:	53                   	push   %rbx
    e5db:	48 83 ec 20          	sub    $0x20,%rsp
    e5df:	f6 06 01             	testb  $0x1,(%rsi)
    e5e2:	74 1c                	je     e600 <check_child_mrenclave+0x30>
    e5e4:	bb 01 00 00 00       	mov    $0x1,%ebx
    e5e9:	48 83 c4 20          	add    $0x20,%rsp
    e5ed:	89 d8                	mov    %ebx,%eax
    e5ef:	5b                   	pop    %rbx
    e5f0:	41 5c                	pop    %r12
    e5f2:	41 5d                	pop    %r13
    e5f4:	41 5e                	pop    %r14
    e5f6:	5d                   	pop    %rbp
    e5f7:	c3                   	retq   
    e5f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e5ff:	00 
    e600:	4c 8d 75 c0          	lea    -0x40(%rbp),%r14
    e604:	48 89 f3             	mov    %rsi,%rbx
    e607:	49 89 d4             	mov    %rdx,%r12
    e60a:	31 f6                	xor    %esi,%esi
    e60c:	ba 18 00 00 00       	mov    $0x18,%edx
    e611:	49 89 fd             	mov    %rdi,%r13
    e614:	4c 89 f7             	mov    %r14,%rdi
    e617:	e8 44 7e 00 00       	callq  16460 <memset>
    e61c:	48 8d 53 20          	lea    0x20(%rbx),%rdx
    e620:	41 b9 10 00 00 00    	mov    $0x10,%r9d
    e626:	4d 89 f0             	mov    %r14,%r8
    e629:	b9 20 00 00 00       	mov    $0x20,%ecx
    e62e:	be 10 00 00 00       	mov    $0x10,%esi
    e633:	4c 89 e7             	mov    %r12,%rdi
    e636:	e8 25 a4 00 00       	callq  18a60 <lib_AESCMAC>
    e63b:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
    e63f:	ba 18 00 00 00       	mov    $0x18,%edx
    e644:	4c 89 f6             	mov    %r14,%rsi
    e647:	e8 44 70 00 00       	callq  15690 <memcmp>
    e64c:	85 c0                	test   %eax,%eax
    e64e:	75 94                	jne    e5e4 <check_child_mrenclave+0x14>
    e650:	48 8d 05 29 02 22 04 	lea    0x4220229(%rip),%rax        # 422e880 <pal_sec>
    e657:	ba 20 00 00 00       	mov    $0x20,%edx
    e65c:	4c 89 ef             	mov    %r13,%rdi
    e65f:	48 8d b0 1f 01 00 00 	lea    0x11f(%rax),%rsi
    e666:	e8 25 70 00 00       	callq  15690 <memcmp>
    e66b:	85 c0                	test   %eax,%eax
    e66d:	89 c3                	mov    %eax,%ebx
    e66f:	0f 84 74 ff ff ff    	je     e5e9 <check_child_mrenclave+0x19>
    e675:	48 8d 3d 44 d3 21 04 	lea    0x421d344(%rip),%rdi        # 422b9c0 <trusted_children_lock>
    e67c:	e8 5f 26 00 00       	callq  10ce0 <_DkSpinLock>
    e681:	4c 8b 25 40 d3 21 04 	mov    0x421d340(%rip),%r12        # 422b9c8 <trusted_children>
    e688:	4d 85 e4             	test   %r12,%r12
    e68b:	74 1f                	je     e6ac <check_child_mrenclave+0xdc>
    e68d:	0f 1f 00             	nopl   (%rax)
    e690:	49 8d 74 24 10       	lea    0x10(%r12),%rsi
    e695:	ba 20 00 00 00       	mov    $0x20,%edx
    e69a:	4c 89 ef             	mov    %r13,%rdi
    e69d:	e8 ee 6f 00 00       	callq  15690 <memcmp>
    e6a2:	85 c0                	test   %eax,%eax
    e6a4:	89 c3                	mov    %eax,%ebx
    e6a6:	74 28                	je     e6d0 <check_child_mrenclave+0x100>
    e6a8:	4d 8b 24 24          	mov    (%r12),%r12
    e6ac:	4c 3b 25 15 d3 21 04 	cmp    0x421d315(%rip),%r12        # 422b9c8 <trusted_children>
    e6b3:	75 db                	jne    e690 <check_child_mrenclave+0xc0>
    e6b5:	48 8d 3d 04 d3 21 04 	lea    0x421d304(%rip),%rdi        # 422b9c0 <trusted_children_lock>
    e6bc:	e8 4f 26 00 00       	callq  10d10 <_DkSpinUnlock>
    e6c1:	e9 1e ff ff ff       	jmpq   e5e4 <check_child_mrenclave+0x14>
    e6c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e6cd:	00 00 00 
    e6d0:	48 8d 3d e9 d2 21 04 	lea    0x421d2e9(%rip),%rdi        # 422b9c0 <trusted_children_lock>
    e6d7:	e8 34 26 00 00       	callq  10d10 <_DkSpinUnlock>
    e6dc:	e9 08 ff ff ff       	jmpq   e5e9 <check_child_mrenclave+0x19>
    e6e1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e6e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e6ed:	00 00 00 

000000000000e6f0 <register_trusted_child>:
    e6f0:	55                   	push   %rbp
    e6f1:	48 89 e5             	mov    %rsp,%rbp
    e6f4:	41 57                	push   %r15
    e6f6:	41 56                	push   %r14
    e6f8:	41 55                	push   %r13
    e6fa:	41 54                	push   %r12
    e6fc:	49 89 f5             	mov    %rsi,%r13
    e6ff:	53                   	push   %rbx
    e700:	49 89 fc             	mov    %rdi,%r12
    e703:	48 83 ec 68          	sub    $0x68,%rsp
    e707:	e8 64 6f 00 00       	callq  15670 <strlen>
    e70c:	48 8d 3d ad d2 21 04 	lea    0x421d2ad(%rip),%rdi        # 422b9c0 <trusted_children_lock>
    e713:	41 89 c7             	mov    %eax,%r15d
    e716:	49 89 c6             	mov    %rax,%r14
    e719:	e8 c2 25 00 00       	callq  10ce0 <_DkSpinLock>
    e71e:	48 8b 1d a3 d2 21 04 	mov    0x421d2a3(%rip),%rbx        # 422b9c8 <trusted_children>
    e725:	31 c0                	xor    %eax,%eax
    e727:	48 85 db             	test   %rbx,%rbx
    e72a:	0f 95 c0             	setne  %al
    e72d:	41 83 c7 01          	add    $0x1,%r15d
    e731:	85 c0                	test   %eax,%eax
    e733:	4d 63 ff             	movslq %r15d,%r15
    e736:	74 0b                	je     e743 <register_trusted_child+0x53>
    e738:	eb 12                	jmp    e74c <register_trusted_child+0x5c>
    e73a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e740:	48 8b 1b             	mov    (%rbx),%rbx
    e743:	48 3b 1d 7e d2 21 04 	cmp    0x421d27e(%rip),%rbx        # 422b9c8 <trusted_children>
    e74a:	74 34                	je     e780 <register_trusted_child+0x90>
    e74c:	48 8d 7b 30          	lea    0x30(%rbx),%rdi
    e750:	4c 89 fa             	mov    %r15,%rdx
    e753:	4c 89 e6             	mov    %r12,%rsi
    e756:	e8 35 6f 00 00       	callq  15690 <memcmp>
    e75b:	85 c0                	test   %eax,%eax
    e75d:	75 e1                	jne    e740 <register_trusted_child+0x50>
    e75f:	48 8d 3d 5a d2 21 04 	lea    0x421d25a(%rip),%rdi        # 422b9c0 <trusted_children_lock>
    e766:	45 31 f6             	xor    %r14d,%r14d
    e769:	e8 a2 25 00 00       	callq  10d10 <_DkSpinUnlock>
    e76e:	48 83 c4 68          	add    $0x68,%rsp
    e772:	44 89 f0             	mov    %r14d,%eax
    e775:	5b                   	pop    %rbx
    e776:	41 5c                	pop    %r12
    e778:	41 5d                	pop    %r13
    e77a:	41 5e                	pop    %r14
    e77c:	41 5f                	pop    %r15
    e77e:	5d                   	pop    %rbp
    e77f:	c3                   	retq   
    e780:	48 8d 3d 39 d2 21 04 	lea    0x421d239(%rip),%rdi        # 422b9c0 <trusted_children_lock>
    e787:	e8 84 25 00 00       	callq  10d10 <_DkSpinUnlock>
    e78c:	49 63 fe             	movslq %r14d,%rdi
    e78f:	48 83 c7 30          	add    $0x30,%rdi
    e793:	e8 88 a8 ff ff       	callq  9020 <malloc>
    e798:	48 85 c0             	test   %rax,%rax
    e79b:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    e7a2:	0f 84 05 02 00 00    	je     e9ad <register_trusted_child+0x2bd>
    e7a8:	41 8d 5e 01          	lea    0x1(%r14),%ebx
    e7ac:	48 8d 78 30          	lea    0x30(%rax),%rdi
    e7b0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    e7b7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    e7be:	00 
    e7bf:	4c 89 e6             	mov    %r12,%rsi
    e7c2:	48 63 db             	movslq %ebx,%rbx
    e7c5:	48 89 da             	mov    %rbx,%rdx
    e7c8:	e8 23 74 00 00       	callq  15bf0 <memcpy>
    e7cd:	0f b7 05 11 a9 01 00 	movzwl 0x1a911(%rip),%eax        # 290e5 <slab_levels+0x565>
    e7d4:	48 8d 7d 84          	lea    -0x7c(%rbp),%rdi
    e7d8:	b9 07 00 00 00       	mov    $0x7,%ecx
    e7dd:	41 0f b6 55 01       	movzbl 0x1(%r13),%edx
    e7e2:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%rbp)
    e7e9:	48 83 c7 04          	add    $0x4,%rdi
    e7ed:	66 89 45 80          	mov    %ax,-0x80(%rbp)
    e7f1:	31 c0                	xor    %eax,%eax
    e7f3:	66 89 45 82          	mov    %ax,-0x7e(%rbp)
    e7f7:	31 c0                	xor    %eax,%eax
    e7f9:	84 d2                	test   %dl,%dl
    e7fb:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    e7fe:	41 0f b6 45 00       	movzbl 0x0(%r13),%eax
    e803:	c6 07 00             	movb   $0x0,(%rdi)
    e806:	0f 84 e6 00 00 00    	je     e8f2 <register_trusted_child+0x202>
    e80c:	84 c0                	test   %al,%al
    e80e:	0f 84 de 00 00 00    	je     e8f2 <register_trusted_child+0x202>
    e814:	44 8d 58 9f          	lea    -0x61(%rax),%r11d
    e818:	8d 48 d0             	lea    -0x30(%rax),%ecx
    e81b:	41 80 fb 05          	cmp    $0x5,%r11b
    e81f:	76 09                	jbe    e82a <register_trusted_child+0x13a>
    e821:	80 f9 09             	cmp    $0x9,%cl
    e824:	0f 87 c8 00 00 00    	ja     e8f2 <register_trusted_child+0x202>
    e82a:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
    e831:	4c 8d 75 80          	lea    -0x80(%rbp),%r14
    e835:	49 83 c5 03          	add    $0x3,%r13
    e839:	4c 8d 7e 10          	lea    0x10(%rsi),%r15
    e83d:	49 8d 76 3e          	lea    0x3e(%r14),%rsi
    e841:	48 89 b5 78 ff ff ff 	mov    %rsi,-0x88(%rbp)
    e848:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e84f:	00 
    e850:	8d 72 d0             	lea    -0x30(%rdx),%esi
    e853:	8d 7a 9f             	lea    -0x61(%rdx),%edi
    e856:	40 80 fe 09          	cmp    $0x9,%sil
    e85a:	76 0a                	jbe    e866 <register_trusted_child+0x176>
    e85c:	40 80 ff 05          	cmp    $0x5,%dil
    e860:	0f 87 8c 00 00 00    	ja     e8f2 <register_trusted_child+0x202>
    e866:	80 f9 0a             	cmp    $0xa,%cl
    e869:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    e86f:	41 0f 43 c8          	cmovae %r8d,%ecx
    e873:	83 e8 57             	sub    $0x57,%eax
    e876:	41 80 fb 05          	cmp    $0x5,%r11b
    e87a:	0f 46 c8             	cmovbe %eax,%ecx
    e87d:	c1 e1 04             	shl    $0x4,%ecx
    e880:	40 80 fe 09          	cmp    $0x9,%sil
    e884:	8d 04 31             	lea    (%rcx,%rsi,1),%eax
    e887:	be 03 00 00 00       	mov    $0x3,%esi
    e88c:	0f 46 c8             	cmovbe %eax,%ecx
    e88f:	40 80 ff 05          	cmp    $0x5,%dil
    e893:	4c 89 f7             	mov    %r14,%rdi
    e896:	8d 54 11 a9          	lea    -0x57(%rcx,%rdx,1),%edx
    e89a:	0f 46 ca             	cmovbe %edx,%ecx
    e89d:	48 8d 15 3c a8 01 00 	lea    0x1a83c(%rip),%rdx        # 290e0 <slab_levels+0x560>
    e8a4:	31 c0                	xor    %eax,%eax
    e8a6:	41 88 0f             	mov    %cl,(%r15)
    e8a9:	0f b6 c9             	movzbl %cl,%ecx
    e8ac:	e8 6f 87 00 00       	callq  17020 <snprintf>
    e8b1:	4c 3b b5 78 ff ff ff 	cmp    -0x88(%rbp),%r14
    e8b8:	74 4f                	je     e909 <register_trusted_child+0x219>
    e8ba:	41 0f b6 45 ff       	movzbl -0x1(%r13),%eax
    e8bf:	41 0f b6 55 00       	movzbl 0x0(%r13),%edx
    e8c4:	84 c0                	test   %al,%al
    e8c6:	74 2a                	je     e8f2 <register_trusted_child+0x202>
    e8c8:	84 d2                	test   %dl,%dl
    e8ca:	74 26                	je     e8f2 <register_trusted_child+0x202>
    e8cc:	8d 48 d0             	lea    -0x30(%rax),%ecx
    e8cf:	49 83 c5 02          	add    $0x2,%r13
    e8d3:	49 83 c7 01          	add    $0x1,%r15
    e8d7:	49 83 c6 02          	add    $0x2,%r14
    e8db:	44 8d 58 9f          	lea    -0x61(%rax),%r11d
    e8df:	80 f9 09             	cmp    $0x9,%cl
    e8e2:	0f 86 68 ff ff ff    	jbe    e850 <register_trusted_child+0x160>
    e8e8:	41 80 fb 05          	cmp    $0x5,%r11b
    e8ec:	0f 86 5e ff ff ff    	jbe    e850 <register_trusted_child+0x160>
    e8f2:	48 8b bd 70 ff ff ff 	mov    -0x90(%rbp),%rdi
    e8f9:	41 be fc ff ff ff    	mov    $0xfffffffc,%r14d
    e8ff:	e8 5c ab ff ff       	callq  9460 <free>
    e904:	e9 65 fe ff ff       	jmpq   e76e <register_trusted_child+0x7e>
    e909:	48 8d 3d b0 d0 21 04 	lea    0x421d0b0(%rip),%rdi        # 422b9c0 <trusted_children_lock>
    e910:	e8 cb 23 00 00       	callq  10ce0 <_DkSpinLock>
    e915:	4c 8b 2d ac d0 21 04 	mov    0x421d0ac(%rip),%r13        # 422b9c8 <trusted_children>
    e91c:	4d 85 ed             	test   %r13,%r13
    e91f:	74 0b                	je     e92c <register_trusted_child+0x23c>
    e921:	eb 12                	jmp    e935 <register_trusted_child+0x245>
    e923:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e928:	4d 8b 6d 00          	mov    0x0(%r13),%r13
    e92c:	4c 3b 2d 95 d0 21 04 	cmp    0x421d095(%rip),%r13        # 422b9c8 <trusted_children>
    e933:	74 3b                	je     e970 <register_trusted_child+0x280>
    e935:	49 8d 7d 30          	lea    0x30(%r13),%rdi
    e939:	48 89 da             	mov    %rbx,%rdx
    e93c:	4c 89 e6             	mov    %r12,%rsi
    e93f:	e8 4c 6d 00 00       	callq  15690 <memcmp>
    e944:	85 c0                	test   %eax,%eax
    e946:	41 89 c6             	mov    %eax,%r14d
    e949:	75 dd                	jne    e928 <register_trusted_child+0x238>
    e94b:	48 8d 3d 6e d0 21 04 	lea    0x421d06e(%rip),%rdi        # 422b9c0 <trusted_children_lock>
    e952:	e8 b9 23 00 00       	callq  10d10 <_DkSpinUnlock>
    e957:	48 8b bd 70 ff ff ff 	mov    -0x90(%rbp),%rdi
    e95e:	e8 fd aa ff ff       	callq  9460 <free>
    e963:	e9 06 fe ff ff       	jmpq   e76e <register_trusted_child+0x7e>
    e968:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e96f:	00 
    e970:	4d 85 ed             	test   %r13,%r13
    e973:	74 1e                	je     e993 <register_trusted_child+0x2a3>
    e975:	49 8b 45 08          	mov    0x8(%r13),%rax
    e979:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
    e980:	48 89 30             	mov    %rsi,(%rax)
    e983:	49 89 75 08          	mov    %rsi,0x8(%r13)
    e987:	4c 89 2e             	mov    %r13,(%rsi)
    e98a:	48 89 46 08          	mov    %rax,0x8(%rsi)
    e98e:	e9 cc fd ff ff       	jmpq   e75f <register_trusted_child+0x6f>
    e993:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    e99a:	48 89 05 27 d0 21 04 	mov    %rax,0x421d027(%rip)        # 422b9c8 <trusted_children>
    e9a1:	48 89 00             	mov    %rax,(%rax)
    e9a4:	48 89 40 08          	mov    %rax,0x8(%rax)
    e9a8:	e9 b2 fd ff ff       	jmpq   e75f <register_trusted_child+0x6f>
    e9ad:	41 be f0 ff ff ff    	mov    $0xfffffff0,%r14d
    e9b3:	e9 b6 fd ff ff       	jmpq   e76e <register_trusted_child+0x7e>
    e9b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e9bf:	00 

000000000000e9c0 <_DkProcessCreate>:
    e9c0:	55                   	push   %rbp
    e9c1:	ba 05 00 00 00       	mov    $0x5,%edx
    e9c6:	48 89 e5             	mov    %rsp,%rbp
    e9c9:	41 57                	push   %r15
    e9cb:	41 56                	push   %r14
    e9cd:	41 55                	push   %r13
    e9cf:	41 54                	push   %r12
    e9d1:	49 89 f4             	mov    %rsi,%r12
    e9d4:	53                   	push   %rbx
    e9d5:	48 8d 35 4a a3 01 00 	lea    0x1a34a(%rip),%rsi        # 28d26 <slab_levels+0x1a6>
    e9dc:	49 89 fd             	mov    %rdi,%r13
    e9df:	4c 89 e7             	mov    %r12,%rdi
    e9e2:	49 89 ce             	mov    %rcx,%r14
    e9e5:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    e9ec:	e8 9f 6c 00 00       	callq  15690 <memcmp>
    e9f1:	85 c0                	test   %eax,%eax
    e9f3:	0f 85 5e 01 00 00    	jne    eb57 <_DkProcessCreate+0x197>
    e9f9:	4d 85 f6             	test   %r14,%r14
    e9fc:	89 c3                	mov    %eax,%ebx
    e9fe:	0f 84 4c 01 00 00    	je     eb50 <_DkProcessCreate+0x190>
    ea04:	49 83 3e 00          	cmpq   $0x0,(%r14)
    ea08:	0f 84 42 01 00 00    	je     eb50 <_DkProcessCreate+0x190>
    ea0e:	4c 89 f0             	mov    %r14,%rax
    ea11:	31 f6                	xor    %esi,%esi
    ea13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ea18:	48 83 c0 08          	add    $0x8,%rax
    ea1c:	83 c6 01             	add    $0x1,%esi
    ea1f:	48 83 38 00          	cmpq   $0x0,(%rax)
    ea23:	75 f3                	jne    ea18 <_DkProcessCreate+0x58>
    ea25:	48 8d 8d 60 ff ff ff 	lea    -0xa0(%rbp),%rcx
    ea2c:	4c 8d 85 5c ff ff ff 	lea    -0xa4(%rbp),%r8
    ea33:	4c 89 f2             	mov    %r14,%rdx
    ea36:	4c 89 e7             	mov    %r12,%rdi
    ea39:	e8 a2 2c 00 00       	callq  116e0 <ocall_create_process>
    ea3e:	85 c0                	test   %eax,%eax
    ea40:	0f 88 f2 00 00 00    	js     eb38 <_DkProcessCreate+0x178>
    ea46:	bf 58 00 00 00       	mov    $0x58,%edi
    ea4b:	e8 d0 a5 ff ff       	callq  9020 <malloc>
    ea50:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    ea56:	49 89 c7             	mov    %rax,%r15
    ea59:	c7 40 04 b5 01 00 00 	movl   $0x1b5,0x4(%rax)
    ea60:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
    ea66:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
    ea6a:	41 c6 47 18 00       	movb   $0x0,0x18(%r15)
    ea6f:	4c 89 ff             	mov    %r15,%rdi
    ea72:	48 89 ce             	mov    %rcx,%rsi
    ea75:	48 89 8d 48 ff ff ff 	mov    %rcx,-0xb8(%rbp)
    ea7c:	41 89 47 08          	mov    %eax,0x8(%r15)
    ea80:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
    ea86:	41 89 47 0c          	mov    %eax,0xc(%r15)
    ea8a:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
    ea90:	41 89 47 10          	mov    %eax,0x10(%r15)
    ea94:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    ea9a:	41 89 47 14          	mov    %eax,0x14(%r15)
    ea9e:	e8 5d 52 00 00       	callq  13d00 <_DkStreamKeyExchange>
    eaa3:	85 c0                	test   %eax,%eax
    eaa5:	0f 88 8d 00 00 00    	js     eb38 <_DkProcessCreate+0x178>
    eaab:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    eab2:	4c 8d b5 70 ff ff ff 	lea    -0x90(%rbp),%r14
    eab9:	31 c0                	xor    %eax,%eax
    eabb:	48 8d 71 10          	lea    0x10(%rcx),%rsi
    eabf:	90                   	nop
    eac0:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
    eac4:	32 14 06             	xor    (%rsi,%rax,1),%dl
    eac7:	41 88 14 06          	mov    %dl,(%r14,%rax,1)
    eacb:	48 83 c0 01          	add    $0x1,%rax
    eacf:	48 83 f8 10          	cmp    $0x10,%rax
    ead3:	75 eb                	jne    eac0 <_DkProcessCreate+0x100>
    ead5:	4c 89 65 80          	mov    %r12,-0x80(%rbp)
    ead9:	4c 8d 65 90          	lea    -0x70(%rbp),%r12
    eadd:	31 f6                	xor    %esi,%esi
    eadf:	ba 18 00 00 00       	mov    $0x18,%edx
    eae4:	4c 89 e7             	mov    %r12,%rdi
    eae7:	e8 74 79 00 00       	callq  16460 <memset>
    eaec:	48 8d 05 8d 03 22 04 	lea    0x422038d(%rip),%rax        # 422ee80 <pal_enclave_state>
    eaf3:	41 b9 10 00 00 00    	mov    $0x10,%r9d
    eaf9:	4d 89 e0             	mov    %r12,%r8
    eafc:	b9 20 00 00 00       	mov    $0x20,%ecx
    eb01:	be 10 00 00 00       	mov    $0x10,%esi
    eb06:	4c 89 f7             	mov    %r14,%rdi
    eb09:	48 8d 50 20          	lea    0x20(%rax),%rdx
    eb0d:	e8 4e 9f 00 00       	callq  18a60 <lib_AESCMAC>
    eb12:	48 8d 15 b7 fa ff ff 	lea    -0x549(%rip),%rdx        # e5d0 <check_child_mrenclave>
    eb19:	4c 89 f1             	mov    %r14,%rcx
    eb1c:	4c 89 e6             	mov    %r12,%rsi
    eb1f:	4c 89 ff             	mov    %r15,%rdi
    eb22:	e8 09 54 00 00       	callq  13f30 <_DkStreamAttestationRequest>
    eb27:	85 c0                	test   %eax,%eax
    eb29:	78 0d                	js     eb38 <_DkProcessCreate+0x178>
    eb2b:	4d 89 7d 00          	mov    %r15,0x0(%r13)
    eb2f:	eb 09                	jmp    eb3a <_DkProcessCreate+0x17a>
    eb31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    eb38:	89 c3                	mov    %eax,%ebx
    eb3a:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    eb41:	89 d8                	mov    %ebx,%eax
    eb43:	5b                   	pop    %rbx
    eb44:	41 5c                	pop    %r12
    eb46:	41 5d                	pop    %r13
    eb48:	41 5e                	pop    %r14
    eb4a:	41 5f                	pop    %r15
    eb4c:	5d                   	pop    %rbp
    eb4d:	c3                   	retq   
    eb4e:	66 90                	xchg   %ax,%ax
    eb50:	31 f6                	xor    %esi,%esi
    eb52:	e9 ce fe ff ff       	jmpq   ea25 <_DkProcessCreate+0x65>
    eb57:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx
    eb5c:	eb dc                	jmp    eb3a <_DkProcessCreate+0x17a>
    eb5e:	66 90                	xchg   %ax,%ax

000000000000eb60 <init_child_process>:
    eb60:	55                   	push   %rbp
    eb61:	48 89 e5             	mov    %rsp,%rbp
    eb64:	41 56                	push   %r14
    eb66:	41 55                	push   %r13
    eb68:	41 54                	push   %r12
    eb6a:	53                   	push   %rbx
    eb6b:	49 89 fc             	mov    %rdi,%r12
    eb6e:	bf 58 00 00 00       	mov    $0x58,%edi
    eb73:	48 8d 5d c0          	lea    -0x40(%rbp),%rbx
    eb77:	48 83 ec 50          	sub    $0x50,%rsp
    eb7b:	e8 a0 a4 ff ff       	callq  9020 <malloc>
    eb80:	49 89 c6             	mov    %rax,%r14
    eb83:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    eb89:	c7 40 04 b5 01 00 00 	movl   $0x1b5,0x4(%rax)
    eb90:	48 8d 05 e9 fc 21 04 	lea    0x421fce9(%rip),%rax        # 422e880 <pal_sec>
    eb97:	48 89 de             	mov    %rbx,%rsi
    eb9a:	4c 89 f7             	mov    %r14,%rdi
    eb9d:	8b 90 b0 03 00 00    	mov    0x3b0(%rax),%edx
    eba3:	41 89 56 08          	mov    %edx,0x8(%r14)
    eba7:	8b 90 b4 03 00 00    	mov    0x3b4(%rax),%edx
    ebad:	41 89 56 0c          	mov    %edx,0xc(%r14)
    ebb1:	8b 90 b8 03 00 00    	mov    0x3b8(%rax),%edx
    ebb7:	8b 40 08             	mov    0x8(%rax),%eax
    ebba:	41 c6 46 18 00       	movb   $0x0,0x18(%r14)
    ebbf:	41 89 56 10          	mov    %edx,0x10(%r14)
    ebc3:	41 89 46 14          	mov    %eax,0x14(%r14)
    ebc7:	e8 34 51 00 00       	callq  13d00 <_DkStreamKeyExchange>
    ebcc:	85 c0                	test   %eax,%eax
    ebce:	78 7e                	js     ec4e <init_child_process+0xee>
    ebd0:	4c 8d 6d 90          	lea    -0x70(%rbp),%r13
    ebd4:	48 8d 4b 10          	lea    0x10(%rbx),%rcx
    ebd8:	31 c0                	xor    %eax,%eax
    ebda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ebe0:	0f b6 14 03          	movzbl (%rbx,%rax,1),%edx
    ebe4:	32 14 01             	xor    (%rcx,%rax,1),%dl
    ebe7:	41 88 54 05 00       	mov    %dl,0x0(%r13,%rax,1)
    ebec:	48 83 c0 01          	add    $0x1,%rax
    ebf0:	48 83 f8 10          	cmp    $0x10,%rax
    ebf4:	75 ea                	jne    ebe0 <init_child_process+0x80>
    ebf6:	48 8d 5d a0          	lea    -0x60(%rbp),%rbx
    ebfa:	31 f6                	xor    %esi,%esi
    ebfc:	ba 18 00 00 00       	mov    $0x18,%edx
    ec01:	48 89 df             	mov    %rbx,%rdi
    ec04:	e8 57 78 00 00       	callq  16460 <memset>
    ec09:	48 8d 05 70 02 22 04 	lea    0x4220270(%rip),%rax        # 422ee80 <pal_enclave_state>
    ec10:	41 b9 10 00 00 00    	mov    $0x10,%r9d
    ec16:	49 89 d8             	mov    %rbx,%r8
    ec19:	b9 20 00 00 00       	mov    $0x20,%ecx
    ec1e:	be 10 00 00 00       	mov    $0x10,%esi
    ec23:	4c 89 ef             	mov    %r13,%rdi
    ec26:	48 8d 50 20          	lea    0x20(%rax),%rdx
    ec2a:	e8 31 9e 00 00       	callq  18a60 <lib_AESCMAC>
    ec2f:	48 8d 15 6a f6 ff ff 	lea    -0x996(%rip),%rdx        # e2a0 <check_parent_mrenclave>
    ec36:	4c 89 e9             	mov    %r13,%rcx
    ec39:	48 89 de             	mov    %rbx,%rsi
    ec3c:	4c 89 f7             	mov    %r14,%rdi
    ec3f:	e8 3c 55 00 00       	callq  14180 <_DkStreamAttestationRespond>
    ec44:	85 c0                	test   %eax,%eax
    ec46:	78 06                	js     ec4e <init_child_process+0xee>
    ec48:	4d 89 34 24          	mov    %r14,(%r12)
    ec4c:	31 c0                	xor    %eax,%eax
    ec4e:	48 83 c4 50          	add    $0x50,%rsp
    ec52:	5b                   	pop    %rbx
    ec53:	41 5c                	pop    %r12
    ec55:	41 5d                	pop    %r13
    ec57:	41 5e                	pop    %r14
    ec59:	5d                   	pop    %rbp
    ec5a:	c3                   	retq   
    ec5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ec60 <_DkProcessExit>:
    ec60:	55                   	push   %rbp
    ec61:	48 89 e5             	mov    %rsp,%rbp
    ec64:	5d                   	pop    %rbp
    ec65:	e9 b6 20 00 00       	jmpq   10d20 <ocall_exit>
    ec6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000ec70 <_DkProcessSandboxCreate>:
    ec70:	55                   	push   %rbp
    ec71:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    ec76:	48 89 e5             	mov    %rsp,%rbp
    ec79:	5d                   	pop    %rbp
    ec7a:	c3                   	retq   
    ec7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ec80 <_DkObjectsWaitAny>:
    ec80:	85 ff                	test   %edi,%edi
    ec82:	0f 8e 21 03 00 00    	jle    efa9 <_DkObjectsWaitAny+0x329>
    ec88:	55                   	push   %rbp
    ec89:	45 31 c9             	xor    %r9d,%r9d
    ec8c:	45 31 db             	xor    %r11d,%r11d
    ec8f:	48 89 e5             	mov    %rsp,%rbp
    ec92:	41 57                	push   %r15
    ec94:	41 56                	push   %r14
    ec96:	41 55                	push   %r13
    ec98:	41 54                	push   %r12
    ec9a:	53                   	push   %rbx
    ec9b:	48 83 ec 68          	sub    $0x68,%rsp
    ec9f:	83 ff 01             	cmp    $0x1,%edi
    eca2:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
    eca9:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
    ecad:	0f 84 f9 02 00 00    	je     efac <_DkObjectsWaitAny+0x32c>
    ecb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ecb8:	4a 8b 0c ce          	mov    (%rsi,%r9,8),%rcx
    ecbc:	45 89 c8             	mov    %r9d,%r8d
    ecbf:	48 85 c9             	test   %rcx,%rcx
    ecc2:	74 5c                	je     ed20 <_DkObjectsWaitAny+0xa0>
    ecc4:	44 8b 51 04          	mov    0x4(%rcx),%r10d
    ecc8:	41 f6 c2 3f          	test   $0x3f,%r10b
    eccc:	0f 84 93 02 00 00    	je     ef65 <_DkObjectsWaitAny+0x2e5>
    ecd2:	45 85 c9             	test   %r9d,%r9d
    ecd5:	74 23                	je     ecfa <_DkObjectsWaitAny+0x7a>
    ecd7:	31 c0                	xor    %eax,%eax
    ecd9:	48 39 0e             	cmp    %rcx,(%rsi)
    ecdc:	48 8d 56 08          	lea    0x8(%rsi),%rdx
    ece0:	75 10                	jne    ecf2 <_DkObjectsWaitAny+0x72>
    ece2:	eb 3c                	jmp    ed20 <_DkObjectsWaitAny+0xa0>
    ece4:	0f 1f 40 00          	nopl   0x0(%rax)
    ece8:	48 83 c2 08          	add    $0x8,%rdx
    ecec:	48 3b 4a f8          	cmp    -0x8(%rdx),%rcx
    ecf0:	74 2e                	je     ed20 <_DkObjectsWaitAny+0xa0>
    ecf2:	83 c0 01             	add    $0x1,%eax
    ecf5:	44 39 c0             	cmp    %r8d,%eax
    ecf8:	75 ee                	jne    ece8 <_DkObjectsWaitAny+0x68>
    ecfa:	44 89 d0             	mov    %r10d,%eax
    ecfd:	83 e0 09             	and    $0x9,%eax
    ed00:	83 f8 01             	cmp    $0x1,%eax
    ed03:	44 89 d0             	mov    %r10d,%eax
    ed06:	41 83 db ff          	sbb    $0xffffffff,%r11d
    ed0a:	83 e0 12             	and    $0x12,%eax
    ed0d:	83 f8 01             	cmp    $0x1,%eax
    ed10:	41 83 db ff          	sbb    $0xffffffff,%r11d
    ed14:	41 83 e2 24          	and    $0x24,%r10d
    ed18:	41 83 fa 01          	cmp    $0x1,%r10d
    ed1c:	41 83 db ff          	sbb    $0xffffffff,%r11d
    ed20:	49 83 c1 01          	add    $0x1,%r9
    ed24:	44 39 cf             	cmp    %r9d,%edi
    ed27:	7f 8f                	jg     ecb8 <_DkObjectsWaitAny+0x38>
    ed29:	4d 63 db             	movslq %r11d,%r11
    ed2c:	49 89 f2             	mov    %rsi,%r10
    ed2f:	31 db                	xor    %ebx,%ebx
    ed31:	4a 8d 04 dd 1e 00 00 	lea    0x1e(,%r11,8),%rax
    ed38:	00 
    ed39:	45 31 c0             	xor    %r8d,%r8d
    ed3c:	41 be 01 00 00 00    	mov    $0x1,%r14d
    ed42:	48 c1 e8 04          	shr    $0x4,%rax
    ed46:	48 c1 e0 04          	shl    $0x4,%rax
    ed4a:	48 29 c4             	sub    %rax,%rsp
    ed4d:	4c 8d 64 24 0f       	lea    0xf(%rsp),%r12
    ed52:	48 29 c4             	sub    %rax,%rsp
    ed55:	48 8d 44 24 0f       	lea    0xf(%rsp),%rax
    ed5a:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    ed5e:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    ed62:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    ed66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ed6d:	00 00 00 
    ed70:	49 8b 02             	mov    (%r10),%rax
    ed73:	48 85 c0             	test   %rax,%rax
    ed76:	0f 84 d3 00 00 00    	je     ee4f <_DkObjectsWaitAny+0x1cf>
    ed7c:	45 85 c0             	test   %r8d,%r8d
    ed7f:	7e 32                	jle    edb3 <_DkObjectsWaitAny+0x133>
    ed81:	48 39 06             	cmp    %rax,(%rsi)
    ed84:	0f 84 c5 00 00 00    	je     ee4f <_DkObjectsWaitAny+0x1cf>
    ed8a:	41 8d 48 ff          	lea    -0x1(%r8),%ecx
    ed8e:	48 8d 56 08          	lea    0x8(%rsi),%rdx
    ed92:	48 8d 4c ce 08       	lea    0x8(%rsi,%rcx,8),%rcx
    ed97:	eb 15                	jmp    edae <_DkObjectsWaitAny+0x12e>
    ed99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    eda0:	48 83 c2 08          	add    $0x8,%rdx
    eda4:	48 3b 42 f8          	cmp    -0x8(%rdx),%rax
    eda8:	0f 84 a1 00 00 00    	je     ee4f <_DkObjectsWaitAny+0x1cf>
    edae:	48 39 d1             	cmp    %rdx,%rcx
    edb1:	75 ed                	jne    eda0 <_DkObjectsWaitAny+0x120>
    edb3:	44 8b 48 04          	mov    0x4(%rax),%r9d
    edb7:	31 d2                	xor    %edx,%edx
    edb9:	45 89 f7             	mov    %r14d,%r15d
    edbc:	89 d1                	mov    %edx,%ecx
    edbe:	41 89 d3             	mov    %edx,%r11d
    edc1:	41 d3 e7             	shl    %cl,%r15d
    edc4:	45 85 cf             	test   %r9d,%r15d
    edc7:	0f 84 2b 01 00 00    	je     eef8 <_DkObjectsWaitAny+0x278>
    edcd:	41 bd 00 02 00 00    	mov    $0x200,%r13d
    edd3:	89 d1                	mov    %edx,%ecx
    edd5:	41 d3 e5             	shl    %cl,%r13d
    edd8:	45 85 cd             	test   %r9d,%r13d
    eddb:	0f 85 17 01 00 00    	jne    eef8 <_DkObjectsWaitAny+0x278>
    ede1:	41 bf 08 00 00 00    	mov    $0x8,%r15d
    ede7:	89 d1                	mov    %edx,%ecx
    ede9:	41 d3 e7             	shl    %cl,%r15d
    edec:	45 85 cf             	test   %r9d,%r15d
    edef:	0f 84 4d 03 00 00    	je     f142 <_DkObjectsWaitAny+0x4c2>
    edf5:	89 d1                	mov    %edx,%ecx
    edf7:	41 bf 40 00 00 00    	mov    $0x40,%r15d
    edfd:	41 d3 e7             	shl    %cl,%r15d
    ee00:	45 09 fd             	or     %r15d,%r13d
    ee03:	45 21 cd             	and    %r9d,%r13d
    ee06:	41 83 fd 01          	cmp    $0x1,%r13d
    ee0a:	19 c9                	sbb    %ecx,%ecx
    ee0c:	83 e1 04             	and    $0x4,%ecx
    ee0f:	83 c1 01             	add    $0x1,%ecx
    ee12:	44 8b 7c 90 08       	mov    0x8(%rax,%rdx,4),%r15d
    ee17:	41 83 ff ff          	cmp    $0xffffffff,%r15d
    ee1b:	74 24                	je     ee41 <_DkObjectsWaitAny+0x1c1>
    ee1d:	4c 63 eb             	movslq %ebx,%r13
    ee20:	83 c9 18             	or     $0x18,%ecx
    ee23:	83 c3 01             	add    $0x1,%ebx
    ee26:	4f 8d 1c ec          	lea    (%r12,%r13,8),%r11
    ee2a:	66 41 89 4b 04       	mov    %cx,0x4(%r11)
    ee2f:	31 c9                	xor    %ecx,%ecx
    ee31:	45 89 3b             	mov    %r15d,(%r11)
    ee34:	66 41 89 4b 06       	mov    %cx,0x6(%r11)
    ee39:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
    ee3d:	4a 89 04 e9          	mov    %rax,(%rcx,%r13,8)
    ee41:	48 83 c2 01          	add    $0x1,%rdx
    ee45:	48 83 fa 03          	cmp    $0x3,%rdx
    ee49:	0f 85 6a ff ff ff    	jne    edb9 <_DkObjectsWaitAny+0x139>
    ee4f:	41 83 c0 01          	add    $0x1,%r8d
    ee53:	49 83 c2 08          	add    $0x8,%r10
    ee57:	44 39 c7             	cmp    %r8d,%edi
    ee5a:	0f 85 10 ff ff ff    	jne    ed70 <_DkObjectsWaitAny+0xf0>
    ee60:	85 db                	test   %ebx,%ebx
    ee62:	0f 84 5d 02 00 00    	je     f0c5 <_DkObjectsWaitAny+0x445>
    ee68:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    ee6c:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    ee70:	89 de                	mov    %ebx,%esi
    ee72:	4c 89 e7             	mov    %r12,%rdi
    ee75:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    ee79:	e8 a2 38 00 00       	callq  12720 <ocall_poll>
    ee7e:	85 c0                	test   %eax,%eax
    ee80:	78 64                	js     eee6 <_DkObjectsWaitAny+0x266>
    ee82:	0f 84 3d 02 00 00    	je     f0c5 <_DkObjectsWaitAny+0x445>
    ee88:	4c 8b 5d 88          	mov    -0x78(%rbp),%r11
    ee8c:	31 c0                	xor    %eax,%eax
    ee8e:	31 f6                	xor    %esi,%esi
    ee90:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    ee96:	41 b9 08 00 00 00    	mov    $0x8,%r9d
    ee9c:	41 be 00 02 00 00    	mov    $0x200,%r14d
    eea2:	41 bd 40 00 00 00    	mov    $0x40,%r13d
    eea8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    eeaf:	00 
    eeb0:	41 0f b7 54 c4 06    	movzwl 0x6(%r12,%rax,8),%edx
    eeb6:	66 85 d2             	test   %dx,%dx
    eeb9:	74 0e                	je     eec9 <_DkObjectsWaitAny+0x249>
    eebb:	48 85 f6             	test   %rsi,%rsi
    eebe:	49 8b 3c c3          	mov    (%r11,%rax,8),%rdi
    eec2:	74 6f                	je     ef33 <_DkObjectsWaitAny+0x2b3>
    eec4:	48 39 fe             	cmp    %rdi,%rsi
    eec7:	74 6a                	je     ef33 <_DkObjectsWaitAny+0x2b3>
    eec9:	48 83 c0 01          	add    $0x1,%rax
    eecd:	39 c3                	cmp    %eax,%ebx
    eecf:	7f df                	jg     eeb0 <_DkObjectsWaitAny+0x230>
    eed1:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    eed8:	48 85 f6             	test   %rsi,%rsi
    eedb:	48 89 30             	mov    %rsi,(%rax)
    eede:	0f 84 e1 01 00 00    	je     f0c5 <_DkObjectsWaitAny+0x445>
    eee4:	31 c0                	xor    %eax,%eax
    eee6:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    eeea:	5b                   	pop    %rbx
    eeeb:	41 5c                	pop    %r12
    eeed:	41 5d                	pop    %r13
    eeef:	41 5e                	pop    %r14
    eef1:	41 5f                	pop    %r15
    eef3:	5d                   	pop    %rbp
    eef4:	c3                   	retq   
    eef5:	0f 1f 00             	nopl   (%rax)
    eef8:	41 bf 08 00 00 00    	mov    $0x8,%r15d
    eefe:	44 89 d9             	mov    %r11d,%ecx
    ef01:	41 d3 e7             	shl    %cl,%r15d
    ef04:	45 85 cf             	test   %r9d,%r15d
    ef07:	0f 84 34 ff ff ff    	je     ee41 <_DkObjectsWaitAny+0x1c1>
    ef0d:	41 bd 40 00 00 00    	mov    $0x40,%r13d
    ef13:	44 89 d9             	mov    %r11d,%ecx
    ef16:	41 81 cd 00 02 00 00 	or     $0x200,%r13d
    ef1d:	41 d3 e5             	shl    %cl,%r13d
    ef20:	45 85 cd             	test   %r9d,%r13d
    ef23:	0f 85 18 ff ff ff    	jne    ee41 <_DkObjectsWaitAny+0x1c1>
    ef29:	b9 04 00 00 00       	mov    $0x4,%ecx
    ef2e:	e9 df fe ff ff       	jmpq   ee12 <_DkObjectsWaitAny+0x192>
    ef33:	44 8b 47 04          	mov    0x4(%rdi),%r8d
    ef37:	31 c9                	xor    %ecx,%ecx
    ef39:	44 89 ce             	mov    %r9d,%esi
    ef3c:	41 89 cf             	mov    %ecx,%r15d
    ef3f:	44 09 d6             	or     %r10d,%esi
    ef42:	d3 e6                	shl    %cl,%esi
    ef44:	44 85 c6             	test   %r8d,%esi
    ef47:	74 0a                	je     ef53 <_DkObjectsWaitAny+0x2d3>
    ef49:	41 8b 34 c4          	mov    (%r12,%rax,8),%esi
    ef4d:	39 74 8f 08          	cmp    %esi,0x8(%rdi,%rcx,4)
    ef51:	74 26                	je     ef79 <_DkObjectsWaitAny+0x2f9>
    ef53:	48 83 c1 01          	add    $0x1,%rcx
    ef57:	48 83 f9 03          	cmp    $0x3,%rcx
    ef5b:	75 dc                	jne    ef39 <_DkObjectsWaitAny+0x2b9>
    ef5d:	48 89 fe             	mov    %rdi,%rsi
    ef60:	e9 64 ff ff ff       	jmpq   eec9 <_DkObjectsWaitAny+0x249>
    ef65:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    ef69:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    ef6e:	5b                   	pop    %rbx
    ef6f:	41 5c                	pop    %r12
    ef71:	41 5d                	pop    %r13
    ef73:	41 5e                	pop    %r14
    ef75:	41 5f                	pop    %r15
    ef77:	5d                   	pop    %rbp
    ef78:	c3                   	retq   
    ef79:	f6 c2 04             	test   $0x4,%dl
    ef7c:	74 0f                	je     ef8d <_DkObjectsWaitAny+0x30d>
    ef7e:	44 89 ee             	mov    %r13d,%esi
    ef81:	44 89 f9             	mov    %r15d,%ecx
    ef84:	d3 e6                	shl    %cl,%esi
    ef86:	41 09 f0             	or     %esi,%r8d
    ef89:	44 89 47 04          	mov    %r8d,0x4(%rdi)
    ef8d:	83 e2 18             	and    $0x18,%edx
    ef90:	48 89 fe             	mov    %rdi,%rsi
    ef93:	0f 84 30 ff ff ff    	je     eec9 <_DkObjectsWaitAny+0x249>
    ef99:	44 89 f2             	mov    %r14d,%edx
    ef9c:	44 89 f9             	mov    %r15d,%ecx
    ef9f:	d3 e2                	shl    %cl,%edx
    efa1:	09 57 04             	or     %edx,0x4(%rdi)
    efa4:	e9 20 ff ff ff       	jmpq   eec9 <_DkObjectsWaitAny+0x249>
    efa9:	31 c0                	xor    %eax,%eax
    efab:	c3                   	retq   
    efac:	48 8b 06             	mov    (%rsi),%rax
    efaf:	48 89 01             	mov    %rax,(%rcx)
    efb2:	48 8b 1e             	mov    (%rsi),%rbx
    efb5:	8b 73 04             	mov    0x4(%rbx),%esi
    efb8:	40 f6 c6 3f          	test   $0x3f,%sil
    efbc:	0f 84 0d 01 00 00    	je     f0cf <_DkObjectsWaitAny+0x44f>
    efc2:	31 d2                	xor    %edx,%edx
    efc4:	45 31 e4             	xor    %r12d,%r12d
    efc7:	41 bb 01 00 00 00    	mov    $0x1,%r11d
    efcd:	41 ba 08 00 00 00    	mov    $0x8,%r10d
    efd3:	41 b9 00 02 00 00    	mov    $0x200,%r9d
    efd9:	41 b8 40 00 00 00    	mov    $0x40,%r8d
    efdf:	44 89 d8             	mov    %r11d,%eax
    efe2:	89 d1                	mov    %edx,%ecx
    efe4:	89 d7                	mov    %edx,%edi
    efe6:	d3 e0                	shl    %cl,%eax
    efe8:	85 f0                	test   %esi,%eax
    efea:	0f 84 13 01 00 00    	je     f103 <_DkObjectsWaitAny+0x483>
    eff0:	44 89 c8             	mov    %r9d,%eax
    eff3:	d3 e0                	shl    %cl,%eax
    eff5:	85 c6                	test   %eax,%esi
    eff7:	0f 85 06 01 00 00    	jne    f103 <_DkObjectsWaitAny+0x483>
    effd:	45 89 d6             	mov    %r10d,%r14d
    f000:	89 d1                	mov    %edx,%ecx
    f002:	41 d3 e6             	shl    %cl,%r14d
    f005:	41 85 f6             	test   %esi,%r14d
    f008:	0f 84 2a 01 00 00    	je     f138 <_DkObjectsWaitAny+0x4b8>
    f00e:	45 89 c6             	mov    %r8d,%r14d
    f011:	89 d1                	mov    %edx,%ecx
    f013:	41 d3 e6             	shl    %cl,%r14d
    f016:	44 09 f0             	or     %r14d,%eax
    f019:	21 f0                	and    %esi,%eax
    f01b:	83 f8 01             	cmp    $0x1,%eax
    f01e:	19 c0                	sbb    %eax,%eax
    f020:	83 e0 04             	and    $0x4,%eax
    f023:	83 c0 19             	add    $0x19,%eax
    f026:	44 8b 6c 93 08       	mov    0x8(%rbx,%rdx,4),%r13d
    f02b:	49 63 cc             	movslq %r12d,%rcx
    f02e:	41 83 c4 01          	add    $0x1,%r12d
    f032:	66 89 44 cd b4       	mov    %ax,-0x4c(%rbp,%rcx,8)
    f037:	89 7c 8d a0          	mov    %edi,-0x60(%rbp,%rcx,4)
    f03b:	44 89 6c cd b0       	mov    %r13d,-0x50(%rbp,%rcx,8)
    f040:	45 31 ed             	xor    %r13d,%r13d
    f043:	66 44 89 6c cd b6    	mov    %r13w,-0x4a(%rbp,%rcx,8)
    f049:	48 83 c2 01          	add    $0x1,%rdx
    f04d:	48 83 fa 03          	cmp    $0x3,%rdx
    f051:	75 8c                	jne    efdf <_DkObjectsWaitAny+0x35f>
    f053:	45 85 e4             	test   %r12d,%r12d
    f056:	74 6d                	je     f0c5 <_DkObjectsWaitAny+0x445>
    f058:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f05c:	4c 8d 6d b0          	lea    -0x50(%rbp),%r13
    f060:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    f064:	44 89 e6             	mov    %r12d,%esi
    f067:	4c 89 ef             	mov    %r13,%rdi
    f06a:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    f06e:	e8 ad 36 00 00       	callq  12720 <ocall_poll>
    f073:	85 c0                	test   %eax,%eax
    f075:	0f 88 6b fe ff ff    	js     eee6 <_DkObjectsWaitAny+0x266>
    f07b:	74 48                	je     f0c5 <_DkObjectsWaitAny+0x445>
    f07d:	31 c0                	xor    %eax,%eax
    f07f:	bf 00 02 00 00       	mov    $0x200,%edi
    f084:	be 40 00 00 00       	mov    $0x40,%esi
    f089:	41 0f b7 54 c5 06    	movzwl 0x6(%r13,%rax,8),%edx
    f08f:	66 85 d2             	test   %dx,%dx
    f092:	74 23                	je     f0b7 <_DkObjectsWaitAny+0x437>
    f094:	f6 c2 04             	test   $0x4,%dl
    f097:	74 0e                	je     f0a7 <_DkObjectsWaitAny+0x427>
    f099:	8b 4c 85 a0          	mov    -0x60(%rbp,%rax,4),%ecx
    f09d:	41 89 f6             	mov    %esi,%r14d
    f0a0:	41 d3 e6             	shl    %cl,%r14d
    f0a3:	44 09 73 04          	or     %r14d,0x4(%rbx)
    f0a7:	83 e2 18             	and    $0x18,%edx
    f0aa:	74 0b                	je     f0b7 <_DkObjectsWaitAny+0x437>
    f0ac:	8b 4c 85 a0          	mov    -0x60(%rbp,%rax,4),%ecx
    f0b0:	89 fa                	mov    %edi,%edx
    f0b2:	d3 e2                	shl    %cl,%edx
    f0b4:	09 53 04             	or     %edx,0x4(%rbx)
    f0b7:	48 83 c0 01          	add    $0x1,%rax
    f0bb:	41 39 c4             	cmp    %eax,%r12d
    f0be:	7f c9                	jg     f089 <_DkObjectsWaitAny+0x409>
    f0c0:	e9 1f fe ff ff       	jmpq   eee4 <_DkObjectsWaitAny+0x264>
    f0c5:	b8 ed ff ff ff       	mov    $0xffffffed,%eax
    f0ca:	e9 17 fe ff ff       	jmpq   eee6 <_DkObjectsWaitAny+0x266>
    f0cf:	48 63 03             	movslq (%rbx),%rax
    f0d2:	8d 50 ff             	lea    -0x1(%rax),%edx
    f0d5:	83 fa 10             	cmp    $0x10,%edx
    f0d8:	77 54                	ja     f12e <_DkObjectsWaitAny+0x4ae>
    f0da:	48 8d 15 9f b5 21 00 	lea    0x21b59f(%rip),%rdx        # 22a680 <pal_handle_ops>
    f0e1:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
    f0e5:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    f0ec:	48 85 c0             	test   %rax,%rax
    f0ef:	0f 84 70 fe ff ff    	je     ef65 <_DkObjectsWaitAny+0x2e5>
    f0f5:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
    f0f9:	48 89 df             	mov    %rbx,%rdi
    f0fc:	ff d0                	callq  *%rax
    f0fe:	e9 e3 fd ff ff       	jmpq   eee6 <_DkObjectsWaitAny+0x266>
    f103:	44 89 d0             	mov    %r10d,%eax
    f106:	89 f9                	mov    %edi,%ecx
    f108:	d3 e0                	shl    %cl,%eax
    f10a:	85 f0                	test   %esi,%eax
    f10c:	0f 84 37 ff ff ff    	je     f049 <_DkObjectsWaitAny+0x3c9>
    f112:	44 89 c0             	mov    %r8d,%eax
    f115:	89 f9                	mov    %edi,%ecx
    f117:	44 09 c8             	or     %r9d,%eax
    f11a:	d3 e0                	shl    %cl,%eax
    f11c:	85 f0                	test   %esi,%eax
    f11e:	0f 85 25 ff ff ff    	jne    f049 <_DkObjectsWaitAny+0x3c9>
    f124:	b8 1c 00 00 00       	mov    $0x1c,%eax
    f129:	e9 f8 fe ff ff       	jmpq   f026 <_DkObjectsWaitAny+0x3a6>
    f12e:	48 8b 04 25 80 00 00 	mov    0x80,%rax
    f135:	00 
    f136:	0f 0b                	ud2    
    f138:	b8 19 00 00 00       	mov    $0x19,%eax
    f13d:	e9 e4 fe ff ff       	jmpq   f026 <_DkObjectsWaitAny+0x3a6>
    f142:	b9 01 00 00 00       	mov    $0x1,%ecx
    f147:	e9 c6 fc ff ff       	jmpq   ee12 <_DkObjectsWaitAny+0x192>
    f14c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000f150 <loader_filter>:
    f150:	0f b6 17             	movzbl (%rdi),%edx
    f153:	55                   	push   %rbp
    f154:	b8 01 00 00 00       	mov    $0x1,%eax
    f159:	48 89 e5             	mov    %rsp,%rbp
    f15c:	80 fa 6c             	cmp    $0x6c,%dl
    f15f:	74 2f                	je     f190 <loader_filter+0x40>
    f161:	80 fa 73             	cmp    $0x73,%dl
    f164:	74 0a                	je     f170 <loader_filter+0x20>
    f166:	5d                   	pop    %rbp
    f167:	c3                   	retq   
    f168:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f16f:	00 
    f170:	80 7f 01 67          	cmpb   $0x67,0x1(%rdi)
    f174:	75 f0                	jne    f166 <loader_filter+0x16>
    f176:	80 7f 02 78          	cmpb   $0x78,0x2(%rdi)
    f17a:	75 ea                	jne    f166 <loader_filter+0x16>
    f17c:	31 c0                	xor    %eax,%eax
    f17e:	80 7f 03 2e          	cmpb   $0x2e,0x3(%rdi)
    f182:	5d                   	pop    %rbp
    f183:	0f 95 c0             	setne  %al
    f186:	c3                   	retq   
    f187:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f18e:	00 00 
    f190:	80 7f 01 6f          	cmpb   $0x6f,0x1(%rdi)
    f194:	75 d0                	jne    f166 <loader_filter+0x16>
    f196:	80 7f 02 61          	cmpb   $0x61,0x2(%rdi)
    f19a:	75 ca                	jne    f166 <loader_filter+0x16>
    f19c:	80 7f 03 64          	cmpb   $0x64,0x3(%rdi)
    f1a0:	75 c4                	jne    f166 <loader_filter+0x16>
    f1a2:	80 7f 04 65          	cmpb   $0x65,0x4(%rdi)
    f1a6:	75 be                	jne    f166 <loader_filter+0x16>
    f1a8:	80 7f 05 72          	cmpb   $0x72,0x5(%rdi)
    f1ac:	75 b8                	jne    f166 <loader_filter+0x16>
    f1ae:	31 c0                	xor    %eax,%eax
    f1b0:	80 7f 06 2e          	cmpb   $0x2e,0x6(%rdi)
    f1b4:	5d                   	pop    %rbp
    f1b5:	0f 95 c0             	setne  %al
    f1b8:	c3                   	retq   
    f1b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000f1c0 <setup_file_handle>:
    f1c0:	55                   	push   %rbp
    f1c1:	ba 05 00 00 00       	mov    $0x5,%edx
    f1c6:	48 89 e5             	mov    %rsp,%rbp
    f1c9:	41 56                	push   %r14
    f1cb:	41 55                	push   %r13
    f1cd:	41 89 f5             	mov    %esi,%r13d
    f1d0:	41 54                	push   %r12
    f1d2:	48 8d 35 4d 9b 01 00 	lea    0x19b4d(%rip),%rsi        # 28d26 <slab_levels+0x1a6>
    f1d9:	53                   	push   %rbx
    f1da:	49 89 fc             	mov    %rdi,%r12
    f1dd:	31 db                	xor    %ebx,%ebx
    f1df:	e8 ac 64 00 00       	callq  15690 <memcmp>
    f1e4:	85 c0                	test   %eax,%eax
    f1e6:	75 60                	jne    f248 <setup_file_handle+0x88>
    f1e8:	49 83 c4 05          	add    $0x5,%r12
    f1ec:	4c 89 e7             	mov    %r12,%rdi
    f1ef:	e8 7c 64 00 00       	callq  15670 <strlen>
    f1f4:	48 63 f8             	movslq %eax,%rdi
    f1f7:	49 89 c6             	mov    %rax,%r14
    f1fa:	48 83 c7 59          	add    $0x59,%rdi
    f1fe:	e8 1d 9e ff ff       	callq  9020 <malloc>
    f203:	44 89 68 08          	mov    %r13d,0x8(%rax)
    f207:	4c 8d 68 58          	lea    0x58(%rax),%r13
    f20b:	41 8d 4e 01          	lea    0x1(%r14),%ecx
    f20f:	48 89 c3             	mov    %rax,%rbx
    f212:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    f218:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    f21f:	c6 40 0c 00          	movb   $0x0,0xc(%rax)
    f223:	c6 40 0d 00          	movb   $0x0,0xd(%rax)
    f227:	31 d2                	xor    %edx,%edx
    f229:	4c 89 ee             	mov    %r13,%rsi
    f22c:	4c 89 e7             	mov    %r12,%rdi
    f22f:	e8 5c 94 00 00       	callq  18690 <get_norm_path>
    f234:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    f238:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
    f23f:	00 
    f240:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    f247:	00 
    f248:	48 89 d8             	mov    %rbx,%rax
    f24b:	5b                   	pop    %rbx
    f24c:	41 5c                	pop    %r12
    f24e:	41 5d                	pop    %r13
    f250:	41 5e                	pop    %r14
    f252:	5d                   	pop    %rbp
    f253:	c3                   	retq   
    f254:	66 90                	xchg   %ax,%ax
    f256:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f25d:	00 00 00 

000000000000f260 <_DkGetPagesize>:
    f260:	48 8d 05 89 be 21 00 	lea    0x21be89(%rip),%rax        # 22b0f0 <pagesz>
    f267:	55                   	push   %rbp
    f268:	48 89 e5             	mov    %rsp,%rbp
    f26b:	8b 00                	mov    (%rax),%eax
    f26d:	5d                   	pop    %rbp
    f26e:	c3                   	retq   
    f26f:	90                   	nop

000000000000f270 <_DkGetAllocationAlignment>:
    f270:	48 8d 05 79 be 21 00 	lea    0x21be79(%rip),%rax        # 22b0f0 <pagesz>
    f277:	55                   	push   %rbp
    f278:	48 89 e5             	mov    %rsp,%rbp
    f27b:	8b 00                	mov    (%rax),%eax
    f27d:	5d                   	pop    %rbp
    f27e:	c3                   	retq   
    f27f:	90                   	nop

000000000000f280 <_DkGetAvailableUserAddressRange>:
    f280:	55                   	push   %rbp
    f281:	48 89 e5             	mov    %rsp,%rbp
    f284:	53                   	push   %rbx
    f285:	48 89 f3             	mov    %rsi,%rbx
    f288:	48 83 ec 08          	sub    $0x8,%rsp
    f28c:	48 8d 05 ed f5 21 04 	lea    0x421f5ed(%rip),%rax        # 422e880 <pal_sec>
    f293:	48 8b 80 70 01 00 00 	mov    0x170(%rax),%rax
    f29a:	48 89 07             	mov    %rax,(%rdi)
    f29d:	48 8d 05 4c be 21 00 	lea    0x21be4c(%rip),%rax        # 22b0f0 <pagesz>
    f2a4:	31 ff                	xor    %edi,%edi
    f2a6:	8b 30                	mov    (%rax),%esi
    f2a8:	e8 a3 51 00 00       	callq  14450 <get_reserved_pages>
    f2ad:	48 89 03             	mov    %rax,(%rbx)
    f2b0:	48 83 c4 08          	add    $0x8,%rsp
    f2b4:	5b                   	pop    %rbx
    f2b5:	5d                   	pop    %rbp
    f2b6:	c3                   	retq   
    f2b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f2be:	00 00 

000000000000f2c0 <_DkGetProcessId>:
    f2c0:	48 8d 05 99 fa 21 04 	lea    0x421fa99(%rip),%rax        # 422ed60 <linux_state>
    f2c7:	55                   	push   %rbp
    f2c8:	48 89 e5             	mov    %rsp,%rbp
    f2cb:	48 8b 40 08          	mov    0x8(%rax),%rax
    f2cf:	5d                   	pop    %rbp
    f2d0:	c3                   	retq   
    f2d1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f2d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f2dd:	00 00 00 

000000000000f2e0 <_DkGetHostId>:
    f2e0:	55                   	push   %rbp
    f2e1:	31 c0                	xor    %eax,%eax
    f2e3:	48 89 e5             	mov    %rsp,%rbp
    f2e6:	5d                   	pop    %rbp
    f2e7:	c3                   	retq   
    f2e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f2ef:	00 

000000000000f2f0 <pal_linux_main>:
    f2f0:	55                   	push   %rbp
    f2f1:	48 89 e5             	mov    %rsp,%rbp
    f2f4:	41 57                	push   %r15
    f2f6:	41 56                	push   %r14
    f2f8:	41 55                	push   %r13
    f2fa:	41 54                	push   %r12
    f2fc:	53                   	push   %rbx
    f2fd:	48 89 d3             	mov    %rdx,%rbx
    f300:	48 83 ec 38          	sub    $0x38,%rsp
    f304:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
    f308:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    f30c:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
    f310:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    f317:	00 
    f318:	e8 23 15 00 00       	callq  10840 <_DkSystemTimeQuery>
    f31d:	48 8b 73 18          	mov    0x18(%rbx),%rsi
    f321:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    f325:	48 89 d8             	mov    %rbx,%rax
    f328:	48 83 c0 20          	add    $0x20,%rax
    f32c:	48 89 05 b5 c6 21 04 	mov    %rax,0x421c6b5(%rip)        # 422b9e8 <pal_map+0x8>
    f333:	48 89 f2             	mov    %rsi,%rdx
    f336:	48 03 15 9b b1 21 00 	add    0x21b19b(%rip),%rdx        # 22a4d8 <data_start+0x20>
    f33d:	48 89 35 9c c6 21 04 	mov    %rsi,0x421c69c(%rip)        # 422b9e0 <pal_map>
    f344:	48 8b 02             	mov    (%rdx),%rax
    f347:	48 85 c0             	test   %rax,%rax
    f34a:	0f 84 8a 00 00 00    	je     f3da <pal_linux_main+0xea>
    f350:	48 8d 0d 89 c6 21 04 	lea    0x421c689(%rip),%rcx        # 422b9e0 <pal_map>
    f357:	49 bc 38 fa ff 7f 03 	movabs $0x37ffffa38,%r12
    f35e:	00 00 00 
    f361:	49 b9 d8 f1 ff 7f 03 	movabs $0x37ffff1d8,%r9
    f368:	00 00 00 
    f36b:	bf ff ff ff 6f       	mov    $0x6fffffff,%edi
    f370:	41 bb ff fd ff 6f    	mov    $0x6ffffdff,%r11d
    f376:	bb ff fe ff 6f       	mov    $0x6ffffeff,%ebx
    f37b:	49 01 cc             	add    %rcx,%r12
    f37e:	49 01 c9             	add    %rcx,%r9
    f381:	41 ba 31 00 00 00    	mov    $0x31,%r10d
    f387:	41 b8 21 00 00 70    	mov    $0x70000021,%r8d
    f38d:	eb 18                	jmp    f3a7 <pal_linux_main+0xb7>
    f38f:	90                   	nop
    f390:	48 8d 0d 81 c6 21 04 	lea    0x421c681(%rip),%rcx        # 422ba18 <pal_map+0x38>
    f397:	48 89 14 c1          	mov    %rdx,(%rcx,%rax,8)
    f39b:	48 83 c2 10          	add    $0x10,%rdx
    f39f:	48 8b 02             	mov    (%rdx),%rax
    f3a2:	48 85 c0             	test   %rax,%rax
    f3a5:	74 33                	je     f3da <pal_linux_main+0xea>
    f3a7:	48 83 f8 21          	cmp    $0x21,%rax
    f3ab:	76 e3                	jbe    f390 <pal_linux_main+0xa0>
    f3ad:	48 89 f9             	mov    %rdi,%rcx
    f3b0:	48 29 c1             	sub    %rax,%rcx
    f3b3:	48 83 f9 0f          	cmp    $0xf,%rcx
    f3b7:	0f 87 a3 04 00 00    	ja     f860 <pal_linux_main+0x570>
    f3bd:	4c 89 c1             	mov    %r8,%rcx
    f3c0:	48 29 c1             	sub    %rax,%rcx
    f3c3:	48 8d 05 4e c6 21 04 	lea    0x421c64e(%rip),%rax        # 422ba18 <pal_map+0x38>
    f3ca:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
    f3ce:	48 83 c2 10          	add    $0x10,%rdx
    f3d2:	48 8b 02             	mov    (%rdx),%rax
    f3d5:	48 85 c0             	test   %rax,%rax
    f3d8:	75 cd                	jne    f3a7 <pal_linux_main+0xb7>
    f3da:	48 85 f6             	test   %rsi,%rsi
    f3dd:	0f 84 80 00 00 00    	je     f463 <pal_linux_main+0x173>
    f3e3:	48 8b 05 4e c6 21 04 	mov    0x421c64e(%rip),%rax        # 422ba38 <pal_map+0x58>
    f3ea:	48 85 c0             	test   %rax,%rax
    f3ed:	74 04                	je     f3f3 <pal_linux_main+0x103>
    f3ef:	48 01 70 08          	add    %rsi,0x8(%rax)
    f3f3:	48 8b 05 36 c6 21 04 	mov    0x421c636(%rip),%rax        # 422ba30 <pal_map+0x50>
    f3fa:	48 85 c0             	test   %rax,%rax
    f3fd:	74 04                	je     f403 <pal_linux_main+0x113>
    f3ff:	48 01 70 08          	add    %rsi,0x8(%rax)
    f403:	48 8b 05 36 c6 21 04 	mov    0x421c636(%rip),%rax        # 422ba40 <pal_map+0x60>
    f40a:	48 85 c0             	test   %rax,%rax
    f40d:	74 04                	je     f413 <pal_linux_main+0x123>
    f40f:	48 01 70 08          	add    %rsi,0x8(%rax)
    f413:	48 8b 05 2e c6 21 04 	mov    0x421c62e(%rip),%rax        # 422ba48 <pal_map+0x68>
    f41a:	48 85 c0             	test   %rax,%rax
    f41d:	74 04                	je     f423 <pal_linux_main+0x133>
    f41f:	48 01 70 08          	add    %rsi,0x8(%rax)
    f423:	48 8b 05 26 c6 21 04 	mov    0x421c626(%rip),%rax        # 422ba50 <pal_map+0x70>
    f42a:	48 85 c0             	test   %rax,%rax
    f42d:	74 04                	je     f433 <pal_linux_main+0x143>
    f42f:	48 01 70 08          	add    %rsi,0x8(%rax)
    f433:	48 8b 05 96 c6 21 04 	mov    0x421c696(%rip),%rax        # 422bad0 <pal_map+0xf0>
    f43a:	48 85 c0             	test   %rax,%rax
    f43d:	74 04                	je     f443 <pal_linux_main+0x153>
    f43f:	48 01 70 08          	add    %rsi,0x8(%rax)
    f443:	48 8b 05 56 c7 21 04 	mov    0x421c756(%rip),%rax        # 422bba0 <pal_map+0x1c0>
    f44a:	48 85 c0             	test   %rax,%rax
    f44d:	74 04                	je     f453 <pal_linux_main+0x163>
    f44f:	48 01 70 08          	add    %rsi,0x8(%rax)
    f453:	48 8b 05 16 c8 21 04 	mov    0x421c816(%rip),%rax        # 422bc70 <pal_map+0x290>
    f45a:	48 85 c0             	test   %rax,%rax
    f45d:	74 04                	je     f463 <pal_linux_main+0x173>
    f45f:	48 01 70 08          	add    %rsi,0x8(%rax)
    f463:	48 8b 05 4e c6 21 04 	mov    0x421c64e(%rip),%rax        # 422bab8 <pal_map+0xd8>
    f46a:	48 85 c0             	test   %rax,%rax
    f46d:	74 21                	je     f490 <pal_linux_main+0x1a0>
    f46f:	48 83 78 08 07       	cmpq   $0x7,0x8(%rax)
    f474:	74 1a                	je     f490 <pal_linux_main+0x1a0>
    f476:	48 8d 3d 3b 9d 01 00 	lea    0x19d3b(%rip),%rdi        # 291b8 <slab_levels+0x638>
    f47d:	31 d2                	xor    %edx,%edx
    f47f:	be 89 00 00 00       	mov    $0x89,%esi
    f484:	31 c0                	xor    %eax,%eax
    f486:	e8 c5 7c ff ff       	callq  7150 <warn>
    f48b:	e8 b0 7c ff ff       	callq  7140 <__abort>
    f490:	48 83 3d b8 c5 21 04 	cmpq   $0x0,0x421c5b8(%rip)        # 422ba50 <pal_map+0x70>
    f497:	00 
    f498:	74 28                	je     f4c2 <pal_linux_main+0x1d2>
    f49a:	48 8b 05 bf c5 21 04 	mov    0x421c5bf(%rip),%rax        # 422ba60 <pal_map+0x80>
    f4a1:	48 83 78 08 18       	cmpq   $0x18,0x8(%rax)
    f4a6:	74 1a                	je     f4c2 <pal_linux_main+0x1d2>
    f4a8:	48 8d 3d 69 9d 01 00 	lea    0x19d69(%rip),%rdi        # 29218 <slab_levels+0x698>
    f4af:	31 d2                	xor    %edx,%edx
    f4b1:	be 93 00 00 00       	mov    $0x93,%esi
    f4b6:	31 c0                	xor    %eax,%eax
    f4b8:	e8 93 7c ff ff       	callq  7150 <warn>
    f4bd:	e8 7e 7c ff ff       	callq  7140 <__abort>
    f4c2:	48 8b 05 7f c6 21 04 	mov    0x421c67f(%rip),%rax        # 422bb48 <pal_map+0x168>
    f4c9:	48 85 c0             	test   %rax,%rax
    f4cc:	74 21                	je     f4ef <pal_linux_main+0x1ff>
    f4ce:	48 83 78 08 01       	cmpq   $0x1,0x8(%rax)
    f4d3:	74 1a                	je     f4ef <pal_linux_main+0x1ff>
    f4d5:	48 8d 3d 04 9f 01 00 	lea    0x19f04(%rip),%rdi        # 293e0 <slab_levels+0x860>
    f4dc:	31 d2                	xor    %edx,%edx
    f4de:	be 9e 00 00 00       	mov    $0x9e,%esi
    f4e3:	31 c0                	xor    %eax,%eax
    f4e5:	e8 66 7c ff ff       	callq  7150 <warn>
    f4ea:	e8 51 7c ff ff       	callq  7140 <__abort>
    f4ef:	48 8b 05 12 c6 21 04 	mov    0x421c612(%rip),%rax        # 422bb08 <pal_map+0x128>
    f4f6:	48 85 c0             	test   %rax,%rax
    f4f9:	74 21                	je     f51c <pal_linux_main+0x22c>
    f4fb:	48 83 78 08 08       	cmpq   $0x8,0x8(%rax)
    f500:	74 1a                	je     f51c <pal_linux_main+0x22c>
    f502:	48 8d 3d 67 9f 01 00 	lea    0x19f67(%rip),%rdi        # 29470 <slab_levels+0x8f0>
    f509:	31 d2                	xor    %edx,%edx
    f50b:	be a0 00 00 00       	mov    $0xa0,%esi
    f510:	31 c0                	xor    %eax,%eax
    f512:	e8 39 7c ff ff       	callq  7150 <warn>
    f517:	e8 24 7c ff ff       	callq  7140 <__abort>
    f51c:	48 83 3d dc c5 21 04 	cmpq   $0x0,0x421c5dc(%rip)        # 422bb00 <pal_map+0x120>
    f523:	00 
    f524:	74 1a                	je     f540 <pal_linux_main+0x250>
    f526:	48 8d 3d 53 9d 01 00 	lea    0x19d53(%rip),%rdi        # 29280 <slab_levels+0x700>
    f52d:	31 d2                	xor    %edx,%edx
    f52f:	be a2 00 00 00       	mov    $0xa2,%esi
    f534:	31 c0                	xor    %eax,%eax
    f536:	e8 15 7c ff ff       	callq  7150 <warn>
    f53b:	e8 00 7c ff ff       	callq  7140 <__abort>
    f540:	48 83 3d 48 c5 21 04 	cmpq   $0x0,0x421c548(%rip)        # 422ba90 <pal_map+0xb0>
    f547:	00 
    f548:	74 1a                	je     f564 <pal_linux_main+0x274>
    f54a:	48 8d 3d 77 9d 01 00 	lea    0x19d77(%rip),%rdi        # 292c8 <slab_levels+0x748>
    f551:	31 d2                	xor    %edx,%edx
    f553:	be a3 00 00 00       	mov    $0xa3,%esi
    f558:	31 c0                	xor    %eax,%eax
    f55a:	e8 f1 7b ff ff       	callq  7150 <warn>
    f55f:	e8 dc 7b ff ff       	callq  7140 <__abort>
    f564:	48 8b 05 e5 c4 21 04 	mov    0x421c4e5(%rip),%rax        # 422ba50 <pal_map+0x70>
    f56b:	48 85 c0             	test   %rax,%rax
    f56e:	0f 84 e4 03 00 00    	je     f958 <pal_linux_main+0x668>
    f574:	4c 8b 78 08          	mov    0x8(%rax),%r15
    f578:	48 8b 05 d9 c4 21 04 	mov    0x421c4d9(%rip),%rax        # 422ba58 <pal_map+0x78>
    f57f:	48 8b 58 08          	mov    0x8(%rax),%rbx
    f583:	48 8b 05 2e c5 21 04 	mov    0x421c52e(%rip),%rax        # 422bab8 <pal_map+0xd8>
    f58a:	48 85 c0             	test   %rax,%rax
    f58d:	74 0b                	je     f59a <pal_linux_main+0x2aa>
    f58f:	48 83 78 08 07       	cmpq   $0x7,0x8(%rax)
    f594:	0f 84 3e 03 00 00    	je     f8d8 <pal_linux_main+0x5e8>
    f59a:	48 8b 05 a7 c4 21 04 	mov    0x421c4a7(%rip),%rax        # 422ba48 <pal_map+0x68>
    f5a1:	48 85 c0             	test   %rax,%rax
    f5a4:	0f 84 f1 00 00 00    	je     f69b <pal_linux_main+0x3ab>
    f5aa:	4c 8b 60 08          	mov    0x8(%rax),%r12
    f5ae:	48 8b 05 a3 c5 21 04 	mov    0x421c5a3(%rip),%rax        # 422bb58 <pal_map+0x178>
    f5b5:	48 63 d3             	movslq %ebx,%rdx
    f5b8:	4d 89 fd             	mov    %r15,%r13
    f5bb:	49 8d 1c 17          	lea    (%r15,%rdx,1),%rbx
    f5bf:	48 85 c0             	test   %rax,%rax
    f5c2:	74 72                	je     f636 <pal_linux_main+0x346>
    f5c4:	8b 70 08             	mov    0x8(%rax),%esi
    f5c7:	48 b9 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rcx
    f5ce:	aa aa aa 
    f5d1:	48 89 d0             	mov    %rdx,%rax
    f5d4:	48 f7 e1             	mul    %rcx
    f5d7:	48 c1 ea 04          	shr    $0x4,%rdx
    f5db:	48 39 d6             	cmp    %rdx,%rsi
    f5de:	48 0f 46 d6          	cmovbe %rsi,%rdx
    f5e2:	48 8d 04 52          	lea    (%rdx,%rdx,2),%rax
    f5e6:	4d 8d 3c c7          	lea    (%r15,%rax,8),%r15
    f5ea:	4d 39 fd             	cmp    %r15,%r13
    f5ed:	73 47                	jae    f636 <pal_linux_main+0x346>
    f5ef:	90                   	nop
    f5f0:	48 8b 05 e9 c3 21 04 	mov    0x421c3e9(%rip),%rax        # 422b9e0 <pal_map>
    f5f7:	49 89 c6             	mov    %rax,%r14
    f5fa:	4d 03 75 00          	add    0x0(%r13),%r14
    f5fe:	41 83 7d 08 08       	cmpl   $0x8,0x8(%r13)
    f603:	74 21                	je     f626 <pal_linux_main+0x336>
    f605:	48 8d 3d 64 9d 01 00 	lea    0x19d64(%rip),%rdi        # 29370 <slab_levels+0x7f0>
    f60c:	31 c0                	xor    %eax,%eax
    f60e:	31 d2                	xor    %edx,%edx
    f610:	be aa 00 00 00       	mov    $0xaa,%esi
    f615:	e8 36 7b ff ff       	callq  7150 <warn>
    f61a:	e8 21 7b ff ff       	callq  7140 <__abort>
    f61f:	48 8b 05 ba c3 21 04 	mov    0x421c3ba(%rip),%rax        # 422b9e0 <pal_map>
    f626:	49 03 45 10          	add    0x10(%r13),%rax
    f62a:	49 83 c5 18          	add    $0x18,%r13
    f62e:	4d 39 ef             	cmp    %r13,%r15
    f631:	49 89 06             	mov    %rax,(%r14)
    f634:	77 ba                	ja     f5f0 <pal_linux_main+0x300>
    f636:	4c 39 fb             	cmp    %r15,%rbx
    f639:	76 60                	jbe    f69b <pal_linux_main+0x3ab>
    f63b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f640:	49 8b 57 08          	mov    0x8(%r15),%rdx
    f644:	48 8b 05 95 c3 21 04 	mov    0x421c395(%rip),%rax        # 422b9e0 <pal_map>
    f64b:	48 89 d1             	mov    %rdx,%rcx
    f64e:	49 89 c6             	mov    %rax,%r14
    f651:	4d 03 37             	add    (%r15),%r14
    f654:	48 c1 e9 20          	shr    $0x20,%rcx
    f658:	f7 c2 f7 ff ff ff    	test   $0xfffffff7,%edx
    f65e:	41 89 d5             	mov    %edx,%r13d
    f661:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
    f665:	49 8d 0c cc          	lea    (%r12,%rcx,8),%rcx
    f669:	74 27                	je     f692 <pal_linux_main+0x3a2>
    f66b:	0f b6 51 04          	movzbl 0x4(%rcx),%edx
    f66f:	48 03 41 08          	add    0x8(%rcx),%rax
    f673:	83 e2 0f             	and    $0xf,%edx
    f676:	80 fa 0a             	cmp    $0xa,%dl
    f679:	0f 84 21 02 00 00    	je     f8a0 <pal_linux_main+0x5b0>
    f67f:	49 83 fd 06          	cmp    $0x6,%r13
    f683:	74 06                	je     f68b <pal_linux_main+0x39b>
    f685:	49 83 fd 07          	cmp    $0x7,%r13
    f689:	75 07                	jne    f692 <pal_linux_main+0x3a2>
    f68b:	49 03 47 10          	add    0x10(%r15),%rax
    f68f:	49 89 06             	mov    %rax,(%r14)
    f692:	49 83 c7 18          	add    $0x18,%r15
    f696:	4c 39 fb             	cmp    %r15,%rbx
    f699:	77 a5                	ja     f640 <pal_linux_main+0x350>
    f69b:	4c 8d 35 de f1 21 04 	lea    0x421f1de(%rip),%r14        # 422e880 <pal_sec>
    f6a2:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    f6a6:	ba c8 04 00 00       	mov    $0x4c8,%edx
    f6ab:	4c 89 f7             	mov    %r14,%rdi
    f6ae:	e8 3d 65 00 00       	callq  15bf0 <memcpy>
    f6b3:	48 8d 1d 36 ba 21 00 	lea    0x21ba36(%rip),%rbx        # 22b0f0 <pagesz>
    f6ba:	8b 3b                	mov    (%rbx),%edi
    f6bc:	e8 0f 98 ff ff       	callq  8ed0 <init_slab_mgr>
    f6c1:	8b 3b                	mov    (%rbx),%edi
    f6c3:	e8 d8 54 00 00       	callq  14ba0 <init_untrusted_slab_mgr>
    f6c8:	e8 b3 4c 00 00       	callq  14380 <init_pages>
    f6cd:	e8 ce 39 00 00       	callq  130a0 <init_enclave_key>
    f6d2:	48 8d 3d 07 c3 21 04 	lea    0x421c307(%rip),%rdi        # 422b9e0 <pal_map>
    f6d9:	e8 82 09 00 00       	callq  10060 <setup_pal_map>
    f6de:	e8 fd 44 00 00       	callq  13be0 <init_enclave>
    f6e3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f6e7:	4c 8d 3d f2 ef 21 04 	lea    0x421eff2(%rip),%r15        # 422e6e0 <pal_state>
    f6ee:	49 89 47 70          	mov    %rax,0x70(%r15)
    f6f2:	41 8b 46 08          	mov    0x8(%r14),%eax
    f6f6:	85 c0                	test   %eax,%eax
    f6f8:	0f 85 1a 02 00 00    	jne    f918 <pal_linux_main+0x628>
    f6fe:	48 8d 05 5b f6 21 04 	lea    0x421f65b(%rip),%rax        # 422ed60 <linux_state>
    f705:	41 8b 56 10          	mov    0x10(%r14),%edx
    f709:	49 8d be 98 02 00 00 	lea    0x298(%r14),%rdi
    f710:	4c 8b 6d b8          	mov    -0x48(%rbp),%r13
    f714:	41 8b b6 98 03 00 00 	mov    0x398(%r14),%esi
    f71b:	45 31 e4             	xor    %r12d,%r12d
    f71e:	89 50 18             	mov    %edx,0x18(%rax)
    f721:	41 8b 56 14          	mov    0x14(%r14),%edx
    f725:	66 45 31 ed          	xor    %r13w,%r13w
    f729:	89 50 1c             	mov    %edx,0x1c(%rax)
    f72c:	41 8b 56 0c          	mov    0xc(%r14),%edx
    f730:	49 09 d5             	or     %rdx,%r13
    f733:	4c 89 68 08          	mov    %r13,0x8(%rax)
    f737:	48 8d 05 42 f7 21 04 	lea    0x421f742(%rip),%rax        # 422ee80 <pal_enclave_state>
    f73e:	48 83 08 01          	orq    $0x1,(%rax)
    f742:	e8 79 fa ff ff       	callq  f1c0 <setup_file_handle>
    f747:	41 8b b6 80 02 00 00 	mov    0x280(%r14),%esi
    f74e:	49 89 c5             	mov    %rax,%r13
    f751:	83 fe ff             	cmp    $0xffffffff,%esi
    f754:	74 0f                	je     f765 <pal_linux_main+0x475>
    f756:	49 8d be 80 01 00 00 	lea    0x180(%r14),%rdi
    f75d:	e8 5e fa ff ff       	callq  f1c0 <setup_file_handle>
    f762:	49 89 c4             	mov    %rax,%r12
    f765:	bf 30 00 00 00       	mov    $0x30,%edi
    f76a:	e8 b1 98 ff ff       	callq  9020 <malloc>
    f76f:	48 89 c3             	mov    %rax,%rbx
    f772:	49 8b 86 a0 03 00 00 	mov    0x3a0(%r14),%rax
    f779:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    f77d:	48 8d 35 cc f9 ff ff 	lea    -0x634(%rip),%rsi        # f150 <loader_filter>
    f784:	48 89 df             	mov    %rbx,%rdi
    f787:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    f78e:	00 
    f78f:	48 89 43 10          	mov    %rax,0x10(%rbx)
    f793:	49 8b 86 a8 03 00 00 	mov    0x3a8(%r14),%rax
    f79a:	89 43 18             	mov    %eax,0x18(%rbx)
    f79d:	48 8d 05 7c 98 ff ff 	lea    -0x6784(%rip),%rax        # 9020 <malloc>
    f7a4:	48 89 43 20          	mov    %rax,0x20(%rbx)
    f7a8:	48 8d 05 b1 9c ff ff 	lea    -0x634f(%rip),%rax        # 9460 <free>
    f7af:	48 89 43 28          	mov    %rax,0x28(%rbx)
    f7b3:	e8 88 89 00 00       	callq  18140 <read_config>
    f7b8:	85 c0                	test   %eax,%eax
    f7ba:	0f 88 78 01 00 00    	js     f938 <pal_linux_main+0x648>
    f7c0:	49 8b 86 a0 03 00 00 	mov    0x3a0(%r14),%rax
    f7c7:	49 89 5f 40          	mov    %rbx,0x40(%r15)
    f7cb:	48 8d 1d 8e ef 21 04 	lea    0x421ef8e(%rip),%rbx        # 422e760 <__pal_control>
    f7d2:	48 89 43 68          	mov    %rax,0x68(%rbx)
    f7d6:	49 03 86 a8 03 00 00 	add    0x3a8(%r14),%rax
    f7dd:	48 89 43 70          	mov    %rax,0x70(%rbx)
    f7e1:	e8 ba 3e 00 00       	callq  136a0 <init_trusted_files>
    f7e6:	e8 45 42 00 00       	callq  13a30 <init_trusted_children>
    f7eb:	bf 58 00 00 00       	mov    $0x58,%edi
    f7f0:	e8 2b 98 ff ff       	callq  9020 <malloc>
    f7f5:	48 8d 15 0c f7 21 04 	lea    0x421f70c(%rip),%rdx        # 422ef08 <enclave_base>
    f7fc:	49 89 c1             	mov    %rax,%r9
    f7ff:	c7 00 0e 00 00 00    	movl   $0xe,(%rax)
    f805:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    f80c:	65 48 8b 04 25 08 00 	mov    %gs:0x8,%rax
    f813:	00 00 
    f815:	48 03 02             	add    (%rdx),%rax
    f818:	49 89 41 18          	mov    %rax,0x18(%r9)
    f81c:	4c 89 4b 30          	mov    %r9,0x30(%rbx)
    f820:	65 4c 89 0c 25 58 00 	mov    %r9,%gs:0x58
    f827:	00 00 
    f829:	49 8b 8e 88 02 00 00 	mov    0x288(%r14),%rcx
    f830:	4c 8b 45 c0          	mov    -0x40(%rbp),%r8
    f834:	4c 89 e2             	mov    %r12,%rdx
    f837:	49 8b 3e             	mov    (%r14),%rdi
    f83a:	ff 75 a8             	pushq  -0x58(%rbp)
    f83d:	4c 89 ee             	mov    %r13,%rsi
    f840:	ff 75 b0             	pushq  -0x50(%rbp)
    f843:	e8 48 62 ff ff       	callq  5a90 <pal_main>
    f848:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    f84c:	5b                   	pop    %rbx
    f84d:	41 5c                	pop    %r12
    f84f:	41 5d                	pop    %r13
    f851:	41 5e                	pop    %r14
    f853:	41 5f                	pop    %r15
    f855:	5d                   	pop    %rbp
    f856:	c3                   	retq   
    f857:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f85e:	00 00 
    f860:	8d 0c 00             	lea    (%rax,%rax,1),%ecx
    f863:	d1 f9                	sar    %ecx
    f865:	83 f9 fc             	cmp    $0xfffffffc,%ecx
    f868:	76 1e                	jbe    f888 <pal_linux_main+0x598>
    f86a:	44 89 d0             	mov    %r10d,%eax
    f86d:	29 c8                	sub    %ecx,%eax
    f86f:	48 89 c1             	mov    %rax,%rcx
    f872:	48 8d 05 9f c1 21 04 	lea    0x421c19f(%rip),%rax        # 422ba18 <pal_map+0x38>
    f879:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
    f87d:	e9 19 fb ff ff       	jmpq   f39b <pal_linux_main+0xab>
    f882:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f888:	4c 89 d9             	mov    %r11,%rcx
    f88b:	48 29 c1             	sub    %rax,%rcx
    f88e:	48 83 f9 0b          	cmp    $0xb,%rcx
    f892:	77 24                	ja     f8b8 <pal_linux_main+0x5c8>
    f894:	48 f7 d8             	neg    %rax
    f897:	49 89 14 c1          	mov    %rdx,(%r9,%rax,8)
    f89b:	e9 fb fa ff ff       	jmpq   f39b <pal_linux_main+0xab>
    f8a0:	66 83 79 06 00       	cmpw   $0x0,0x6(%rcx)
    f8a5:	0f 84 d4 fd ff ff    	je     f67f <pal_linux_main+0x38f>
    f8ab:	ff d0                	callq  *%rax
    f8ad:	e9 cd fd ff ff       	jmpq   f67f <pal_linux_main+0x38f>
    f8b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f8b8:	48 89 d9             	mov    %rbx,%rcx
    f8bb:	48 29 c1             	sub    %rax,%rcx
    f8be:	48 83 f9 0a          	cmp    $0xa,%rcx
    f8c2:	0f 87 d3 fa ff ff    	ja     f39b <pal_linux_main+0xab>
    f8c8:	48 f7 d8             	neg    %rax
    f8cb:	49 89 14 c4          	mov    %rdx,(%r12,%rax,8)
    f8cf:	e9 c7 fa ff ff       	jmpq   f39b <pal_linux_main+0xab>
    f8d4:	0f 1f 40 00          	nopl   0x0(%rax)
    f8d8:	48 8b 15 f1 c1 21 04 	mov    0x421c1f1(%rip),%rdx        # 422bad0 <pal_map+0xf0>
    f8df:	4a 8d 04 3b          	lea    (%rbx,%r15,1),%rax
    f8e3:	48 39 42 08          	cmp    %rax,0x8(%rdx)
    f8e7:	74 1a                	je     f903 <pal_linux_main+0x613>
    f8e9:	48 8d 3d 20 9a 01 00 	lea    0x19a20(%rip),%rdi        # 29310 <slab_levels+0x790>
    f8f0:	31 d2                	xor    %edx,%edx
    f8f2:	be eb 00 00 00       	mov    $0xeb,%esi
    f8f7:	31 c0                	xor    %eax,%eax
    f8f9:	e8 52 78 ff ff       	callq  7150 <warn>
    f8fe:	e8 3d 78 ff ff       	callq  7140 <__abort>
    f903:	48 8b 05 1e c1 21 04 	mov    0x421c11e(%rip),%rax        # 422ba28 <pal_map+0x48>
    f90a:	48 03 58 08          	add    0x8(%rax),%rbx
    f90e:	e9 87 fc ff ff       	jmpq   f59a <pal_linux_main+0x2aa>
    f913:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f918:	48 8d 7d c0          	lea    -0x40(%rbp),%rdi
    f91c:	e8 3f f2 ff ff       	callq  eb60 <init_child_process>
    f921:	85 c0                	test   %eax,%eax
    f923:	0f 89 d5 fd ff ff    	jns    f6fe <pal_linux_main+0x40e>
    f929:	e8 f2 13 00 00       	callq  10d20 <ocall_exit>
    f92e:	e9 cb fd ff ff       	jmpq   f6fe <pal_linux_main+0x40e>
    f933:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f938:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    f93c:	48 8d 3d e3 97 01 00 	lea    0x197e3(%rip),%rdi        # 29126 <slab_levels+0x5a6>
    f943:	31 c0                	xor    %eax,%eax
    f945:	e8 e6 9c ff ff       	callq  9630 <pal_printf>
    f94a:	e8 d1 13 00 00       	callq  10d20 <ocall_exit>
    f94f:	e9 6c fe ff ff       	jmpq   f7c0 <pal_linux_main+0x4d0>
    f954:	0f 1f 40 00          	nopl   0x0(%rax)
    f958:	31 db                	xor    %ebx,%ebx
    f95a:	45 31 ff             	xor    %r15d,%r15d
    f95d:	e9 21 fc ff ff       	jmpq   f583 <pal_linux_main+0x293>
    f962:	0f 1f 40 00          	nopl   0x0(%rax)
    f966:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f96d:	00 00 00 

000000000000f970 <_DkGetCPUInfo>:
    f970:	55                   	push   %rbp
    f971:	48 89 e5             	mov    %rsp,%rbp
    f974:	41 57                	push   %r15
    f976:	41 56                	push   %r14
    f978:	41 55                	push   %r13
    f97a:	41 54                	push   %r12
    f97c:	4c 8d 65 c0          	lea    -0x40(%rbp),%r12
    f980:	53                   	push   %rbx
    f981:	49 89 ff             	mov    %rdi,%r15
    f984:	4c 8d 35 b4 97 01 00 	lea    0x197b4(%rip),%r14        # 2913f <slab_levels+0x5bf>
    f98b:	48 83 ec 38          	sub    $0x38,%rsp
    f98f:	48 89 7d a0          	mov    %rdi,-0x60(%rbp)
    f993:	bf 0c 00 00 00       	mov    $0xc,%edi
    f998:	e8 83 96 ff ff       	callq  9020 <malloc>
    f99d:	4c 89 e2             	mov    %r12,%rdx
    f9a0:	31 f6                	xor    %esi,%esi
    f9a2:	31 ff                	xor    %edi,%edi
    f9a4:	48 89 c3             	mov    %rax,%rbx
    f9a7:	e8 54 12 00 00       	callq  10c00 <_DkCpuIdRetrieve>
    f9ac:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    f9af:	bf 30 00 00 00       	mov    $0x30,%edi
    f9b4:	88 03                	mov    %al,(%rbx)
    f9b6:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    f9b9:	c1 e8 08             	shr    $0x8,%eax
    f9bc:	88 43 01             	mov    %al,0x1(%rbx)
    f9bf:	0f b7 45 c6          	movzwl -0x3a(%rbp),%eax
    f9c3:	88 43 02             	mov    %al,0x2(%rbx)
    f9c6:	0f b6 45 c7          	movzbl -0x39(%rbp),%eax
    f9ca:	88 43 03             	mov    %al,0x3(%rbx)
    f9cd:	8b 45 cc             	mov    -0x34(%rbp),%eax
    f9d0:	88 43 04             	mov    %al,0x4(%rbx)
    f9d3:	8b 45 cc             	mov    -0x34(%rbp),%eax
    f9d6:	c1 e8 08             	shr    $0x8,%eax
    f9d9:	88 43 05             	mov    %al,0x5(%rbx)
    f9dc:	0f b7 45 ce          	movzwl -0x32(%rbp),%eax
    f9e0:	88 43 06             	mov    %al,0x6(%rbx)
    f9e3:	0f b6 45 cf          	movzbl -0x31(%rbp),%eax
    f9e7:	88 43 07             	mov    %al,0x7(%rbx)
    f9ea:	8b 45 c8             	mov    -0x38(%rbp),%eax
    f9ed:	88 43 08             	mov    %al,0x8(%rbx)
    f9f0:	8b 45 c8             	mov    -0x38(%rbp),%eax
    f9f3:	c1 e8 08             	shr    $0x8,%eax
    f9f6:	88 43 09             	mov    %al,0x9(%rbx)
    f9f9:	0f b7 45 ca          	movzwl -0x36(%rbp),%eax
    f9fd:	88 43 0a             	mov    %al,0xa(%rbx)
    fa00:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax
    fa04:	88 43 0b             	mov    %al,0xb(%rbx)
    fa07:	49 89 5f 08          	mov    %rbx,0x8(%r15)
    fa0b:	e8 10 96 ff ff       	callq  9020 <malloc>
    fa10:	4c 89 e2             	mov    %r12,%rdx
    fa13:	48 89 c3             	mov    %rax,%rbx
    fa16:	31 f6                	xor    %esi,%esi
    fa18:	bf 02 00 00 80       	mov    $0x80000002,%edi
    fa1d:	e8 de 11 00 00       	callq  10c00 <_DkCpuIdRetrieve>
    fa22:	48 89 df             	mov    %rbx,%rdi
    fa25:	ba 10 00 00 00       	mov    $0x10,%edx
    fa2a:	4c 89 e6             	mov    %r12,%rsi
    fa2d:	e8 be 61 00 00       	callq  15bf0 <memcpy>
    fa32:	4c 89 e2             	mov    %r12,%rdx
    fa35:	31 f6                	xor    %esi,%esi
    fa37:	bf 03 00 00 80       	mov    $0x80000003,%edi
    fa3c:	e8 bf 11 00 00       	callq  10c00 <_DkCpuIdRetrieve>
    fa41:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    fa45:	ba 10 00 00 00       	mov    $0x10,%edx
    fa4a:	4c 89 e6             	mov    %r12,%rsi
    fa4d:	e8 9e 61 00 00       	callq  15bf0 <memcpy>
    fa52:	4c 89 e2             	mov    %r12,%rdx
    fa55:	31 f6                	xor    %esi,%esi
    fa57:	bf 04 00 00 80       	mov    $0x80000004,%edi
    fa5c:	e8 9f 11 00 00       	callq  10c00 <_DkCpuIdRetrieve>
    fa61:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
    fa65:	ba 10 00 00 00       	mov    $0x10,%edx
    fa6a:	4c 89 e6             	mov    %r12,%rsi
    fa6d:	e8 7e 61 00 00       	callq  15bf0 <memcpy>
    fa72:	49 89 5f 10          	mov    %rbx,0x10(%r15)
    fa76:	31 f6                	xor    %esi,%esi
    fa78:	4c 89 e2             	mov    %r12,%rdx
    fa7b:	bf 01 00 00 00       	mov    $0x1,%edi
    fa80:	48 8d 1d 81 b6 21 00 	lea    0x21b681(%rip),%rbx        # 22b108 <cpu_flags+0x8>
    fa87:	e8 74 11 00 00       	callq  10c00 <_DkCpuIdRetrieve>
    fa8c:	0f b6 45 c6          	movzbl -0x3a(%rbp),%eax
    fa90:	bf 50 00 00 00       	mov    $0x50,%edi
    fa95:	49 89 07             	mov    %rax,(%r15)
    fa98:	8b 45 c0             	mov    -0x40(%rbp),%eax
    fa9b:	89 c2                	mov    %eax,%edx
    fa9d:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    faa3:	48 c1 ea 08          	shr    $0x8,%rdx
    faa7:	49 89 57 18          	mov    %rdx,0x18(%r15)
    faab:	0f b6 d0             	movzbl %al,%edx
    faae:	83 e0 0f             	and    $0xf,%eax
    fab1:	48 c1 ea 04          	shr    $0x4,%rdx
    fab5:	49 89 47 28          	mov    %rax,0x28(%r15)
    fab9:	49 89 57 20          	mov    %rdx,0x20(%r15)
    fabd:	45 31 ff             	xor    %r15d,%r15d
    fac0:	e8 5b 95 ff ff       	callq  9020 <malloc>
    fac5:	31 f6                	xor    %esi,%esi
    fac7:	49 89 c5             	mov    %rax,%r13
    faca:	c7 45 bc 50 00 00 00 	movl   $0x50,-0x44(%rbp)
    fad1:	eb 14                	jmp    fae7 <_DkGetCPUInfo+0x177>
    fad3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fad8:	4c 8b 33             	mov    (%rbx),%r14
    fadb:	48 83 c3 08          	add    $0x8,%rbx
    fadf:	44 89 e6             	mov    %r12d,%esi
    fae2:	4d 85 f6             	test   %r14,%r14
    fae5:	74 6a                	je     fb51 <_DkGetCPUInfo+0x1e1>
    fae7:	44 8d 66 01          	lea    0x1(%rsi),%r12d
    faeb:	b8 01 00 00 00       	mov    $0x1,%eax
    faf0:	44 89 e1             	mov    %r12d,%ecx
    faf3:	48 d3 e0             	shl    %cl,%rax
    faf6:	89 f1                	mov    %esi,%ecx
    faf8:	48 83 e8 01          	sub    $0x1,%rax
    fafc:	23 45 cc             	and    -0x34(%rbp),%eax
    faff:	48 d3 e8             	shr    %cl,%rax
    fb02:	48 85 c0             	test   %rax,%rax
    fb05:	74 d1                	je     fad8 <_DkGetCPUInfo+0x168>
    fb07:	4c 89 f7             	mov    %r14,%rdi
    fb0a:	e8 61 5b 00 00       	callq  15670 <strlen>
    fb0f:	45 8d 14 07          	lea    (%r15,%rax,1),%r10d
    fb13:	44 3b 55 bc          	cmp    -0x44(%rbp),%r10d
    fb17:	49 89 c3             	mov    %rax,%r11
    fb1a:	7d 64                	jge    fb80 <_DkGetCPUInfo+0x210>
    fb1c:	4d 63 ff             	movslq %r15d,%r15
    fb1f:	4b 8d 7c 3d 00       	lea    0x0(%r13,%r15,1),%rdi
    fb24:	4c 89 f6             	mov    %r14,%rsi
    fb27:	49 63 d3             	movslq %r11d,%rdx
    fb2a:	44 89 55 b0          	mov    %r10d,-0x50(%rbp)
    fb2e:	48 83 c3 08          	add    $0x8,%rbx
    fb32:	e8 b9 60 00 00       	callq  15bf0 <memcpy>
    fb37:	4c 63 55 b0          	movslq -0x50(%rbp),%r10
    fb3b:	44 89 e6             	mov    %r12d,%esi
    fb3e:	43 c6 44 15 00 20    	movb   $0x20,0x0(%r13,%r10,1)
    fb44:	4c 8b 73 f8          	mov    -0x8(%rbx),%r14
    fb48:	45 8d 7a 01          	lea    0x1(%r10),%r15d
    fb4c:	4d 85 f6             	test   %r14,%r14
    fb4f:	75 96                	jne    fae7 <_DkGetCPUInfo+0x177>
    fb51:	31 c9                	xor    %ecx,%ecx
    fb53:	45 85 ff             	test   %r15d,%r15d
    fb56:	74 07                	je     fb5f <_DkGetCPUInfo+0x1ef>
    fb58:	41 8d 4f ff          	lea    -0x1(%r15),%ecx
    fb5c:	48 63 c9             	movslq %ecx,%rcx
    fb5f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    fb63:	41 c6 44 0d 00 00    	movb   $0x0,0x0(%r13,%rcx,1)
    fb69:	4c 89 68 30          	mov    %r13,0x30(%rax)
    fb6d:	48 83 c4 38          	add    $0x38,%rsp
    fb71:	5b                   	pop    %rbx
    fb72:	41 5c                	pop    %r12
    fb74:	41 5d                	pop    %r13
    fb76:	41 5e                	pop    %r14
    fb78:	41 5f                	pop    %r15
    fb7a:	5d                   	pop    %rbp
    fb7b:	c3                   	retq   
    fb7c:	0f 1f 40 00          	nopl   0x0(%rax)
    fb80:	d1 65 bc             	shll   -0x44(%rbp)
    fb83:	4d 63 ff             	movslq %r15d,%r15
    fb86:	44 89 55 b8          	mov    %r10d,-0x48(%rbp)
    fb8a:	48 63 7d bc          	movslq -0x44(%rbp),%rdi
    fb8e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    fb92:	e8 89 94 ff ff       	callq  9020 <malloc>
    fb97:	4c 89 ee             	mov    %r13,%rsi
    fb9a:	4c 89 fa             	mov    %r15,%rdx
    fb9d:	48 89 c7             	mov    %rax,%rdi
    fba0:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    fba4:	e8 47 60 00 00       	callq  15bf0 <memcpy>
    fba9:	4c 89 ef             	mov    %r13,%rdi
    fbac:	e8 af 98 ff ff       	callq  9460 <free>
    fbb1:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    fbb5:	44 8b 55 b8          	mov    -0x48(%rbp),%r10d
    fbb9:	4c 8b 5d a8          	mov    -0x58(%rbp),%r11
    fbbd:	49 89 cd             	mov    %rcx,%r13
    fbc0:	e9 5a ff ff ff       	jmpq   fb1f <_DkGetCPUInfo+0x1af>
    fbc5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    fbcc:	00 00 00 
    fbcf:	90                   	nop

000000000000fbd0 <_DkDebugAddMap>:
    fbd0:	55                   	push   %rbp
    fbd1:	31 d2                	xor    %edx,%edx
    fbd3:	31 f6                	xor    %esi,%esi
    fbd5:	48 89 e5             	mov    %rsp,%rbp
    fbd8:	41 57                	push   %r15
    fbda:	41 56                	push   %r14
    fbdc:	41 55                	push   %r13
    fbde:	41 54                	push   %r12
    fbe0:	49 89 fe             	mov    %rdi,%r14
    fbe3:	53                   	push   %rbx
    fbe4:	48 81 ec 38 10 00 00 	sub    $0x1038,%rsp
    fbeb:	4c 8b bf b0 02 00 00 	mov    0x2b0(%rdi),%r15
    fbf2:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    fbf6:	41 0f b7 5f 3c       	movzwl 0x3c(%r15),%ebx
    fbfb:	4d 8b 6f 20          	mov    0x20(%r15),%r13
    fbff:	e8 0c 14 00 00       	callq  11010 <ocall_open>
    fc04:	85 c0                	test   %eax,%eax
    fc06:	0f 88 98 00 00 00    	js     fca4 <_DkDebugAddMap+0xd4>
    fc0c:	41 0f b7 57 38       	movzwl 0x38(%r15),%edx
    fc11:	41 89 c2             	mov    %eax,%r10d
    fc14:	4d 01 fd             	add    %r15,%r13
    fc17:	c1 e3 06             	shl    $0x6,%ebx
    fc1a:	49 8b 77 28          	mov    0x28(%r15),%rsi
    fc1e:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    fc25:	00 
    fc26:	48 c1 e2 06          	shl    $0x6,%rdx
    fc2a:	48 29 c2             	sub    %rax,%rdx
    fc2d:	4c 01 ea             	add    %r13,%rdx
    fc30:	4c 39 ea             	cmp    %r13,%rdx
    fc33:	0f 86 7f 00 00 00    	jbe    fcb8 <_DkDebugAddMap+0xe8>
    fc39:	4c 89 e8             	mov    %r13,%rax
    fc3c:	eb 0b                	jmp    fc49 <_DkDebugAddMap+0x79>
    fc3e:	66 90                	xchg   %ax,%ax
    fc40:	48 83 c0 38          	add    $0x38,%rax
    fc44:	48 39 c2             	cmp    %rax,%rdx
    fc47:	76 6f                	jbe    fcb8 <_DkDebugAddMap+0xe8>
    fc49:	83 38 01             	cmpl   $0x1,(%rax)
    fc4c:	75 f2                	jne    fc40 <_DkDebugAddMap+0x70>
    fc4e:	48 8b 48 08          	mov    0x8(%rax),%rcx
    fc52:	48 39 f1             	cmp    %rsi,%rcx
    fc55:	77 e9                	ja     fc40 <_DkDebugAddMap+0x70>
    fc57:	48 89 cf             	mov    %rcx,%rdi
    fc5a:	48 03 78 20          	add    0x20(%rax),%rdi
    fc5e:	48 39 f7             	cmp    %rsi,%rdi
    fc61:	76 dd                	jbe    fc40 <_DkDebugAddMap+0x70>
    fc63:	49 89 f4             	mov    %rsi,%r12
    fc66:	4c 03 60 10          	add    0x10(%rax),%r12
    fc6a:	4d 03 26             	add    (%r14),%r12
    fc6d:	49 29 cc             	sub    %rcx,%r12
    fc70:	74 46                	je     fcb8 <_DkDebugAddMap+0xe8>
    fc72:	41 0f b7 4f 3e       	movzwl 0x3e(%r15),%ecx
    fc77:	4c 01 e3             	add    %r12,%rbx
    fc7a:	48 c1 e1 06          	shl    $0x6,%rcx
    fc7e:	4c 01 e1             	add    %r12,%rcx
    fc81:	8b 41 18             	mov    0x18(%rcx),%eax
    fc84:	48 8b 49 20          	mov    0x20(%rcx),%rcx
    fc88:	48 89 8d c0 ef ff ff 	mov    %rcx,-0x1040(%rbp)
    fc8f:	e9 21 01 00 00       	jmpq   fdb5 <_DkDebugAddMap+0x1e5>
    fc94:	0f 1f 40 00          	nopl   0x0(%rax)
    fc98:	48 8b bd c8 ef ff ff 	mov    -0x1038(%rbp),%rdi
    fc9f:	e8 4c 2d 00 00       	callq  129f0 <ocall_load_debug>
    fca4:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    fca8:	5b                   	pop    %rbx
    fca9:	41 5c                	pop    %r12
    fcab:	41 5d                	pop    %r13
    fcad:	41 5e                	pop    %r14
    fcaf:	41 5f                	pop    %r15
    fcb1:	5d                   	pop    %rbp
    fcb2:	c3                   	retq   
    fcb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fcb8:	4c 8d 1d 21 ea 21 04 	lea    0x421ea21(%rip),%r11        # 422e6e0 <pal_state>
    fcbf:	48 8d 43 1e          	lea    0x1e(%rbx),%rax
    fcc3:	48 89 da             	mov    %rbx,%rdx
    fcc6:	44 89 d7             	mov    %r10d,%edi
    fcc9:	b9 01 00 00 00       	mov    $0x1,%ecx
    fcce:	44 89 95 b8 ef ff ff 	mov    %r10d,-0x1048(%rbp)
    fcd5:	25 f0 ff 7f 00       	and    $0x7ffff0,%eax
    fcda:	49 03 53 58          	add    0x58(%r11),%rdx
    fcde:	48 29 c4             	sub    %rax,%rsp
    fce1:	49 8b 43 60          	mov    0x60(%r11),%rax
    fce5:	4c 89 9d a8 ef ff ff 	mov    %r11,-0x1058(%rbp)
    fcec:	4c 8d 64 24 0f       	lea    0xf(%rsp),%r12
    fcf1:	49 89 c1             	mov    %rax,%r9
    fcf4:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    fcf8:	49 21 f1             	and    %rsi,%r9
    fcfb:	48 01 d6             	add    %rdx,%rsi
    fcfe:	48 21 c6             	and    %rax,%rsi
    fd01:	48 8d 85 d0 ef ff ff 	lea    -0x1030(%rbp),%rax
    fd08:	4c 89 8d b0 ef ff ff 	mov    %r9,-0x1050(%rbp)
    fd0f:	4c 29 ce             	sub    %r9,%rsi
    fd12:	49 89 c0             	mov    %rax,%r8
    fd15:	48 89 f2             	mov    %rsi,%rdx
    fd18:	48 89 b5 c0 ef ff ff 	mov    %rsi,-0x1040(%rbp)
    fd1f:	4c 89 ce             	mov    %r9,%rsi
    fd22:	48 89 85 c8 ef ff ff 	mov    %rax,-0x1038(%rbp)
    fd29:	e8 42 11 00 00       	callq  10e70 <ocall_map_untrusted>
    fd2e:	4c 8b 8d b0 ef ff ff 	mov    -0x1050(%rbp),%r9
    fd35:	49 8b 47 28          	mov    0x28(%r15),%rax
    fd39:	48 89 da             	mov    %rbx,%rdx
    fd3c:	4c 89 e7             	mov    %r12,%rdi
    fd3f:	4c 01 e3             	add    %r12,%rbx
    fd42:	4c 29 c8             	sub    %r9,%rax
    fd45:	48 89 c6             	mov    %rax,%rsi
    fd48:	48 03 b5 d0 ef ff ff 	add    -0x1030(%rbp),%rsi
    fd4f:	e8 9c 5e 00 00       	callq  15bf0 <memcpy>
    fd54:	48 8b b5 c0 ef ff ff 	mov    -0x1040(%rbp),%rsi
    fd5b:	48 8b bd d0 ef ff ff 	mov    -0x1030(%rbp),%rdi
    fd62:	e8 a9 11 00 00       	callq  10f10 <ocall_unmap_untrusted>
    fd67:	41 0f b7 57 3e       	movzwl 0x3e(%r15),%edx
    fd6c:	44 8b 95 b8 ef ff ff 	mov    -0x1048(%rbp),%r10d
    fd73:	4c 8b 9d a8 ef ff ff 	mov    -0x1058(%rbp),%r11
    fd7a:	48 c1 e2 06          	shl    $0x6,%rdx
    fd7e:	4c 01 e2             	add    %r12,%rdx
    fd81:	48 8b 4a 18          	mov    0x18(%rdx),%rcx
    fd85:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    fd89:	41 0f b7 57 38       	movzwl 0x38(%r15),%edx
    fd8e:	48 89 b5 c0 ef ff ff 	mov    %rsi,-0x1040(%rbp)
    fd95:	89 c8                	mov    %ecx,%eax
    fd97:	4c 63 c9             	movslq %ecx,%r9
    fd9a:	48 8d 34 d5 00 00 00 	lea    0x0(,%rdx,8),%rsi
    fda1:	00 
    fda2:	48 c1 e2 06          	shl    $0x6,%rdx
    fda6:	48 29 f2             	sub    %rsi,%rdx
    fda9:	4c 01 ea             	add    %r13,%rdx
    fdac:	4c 39 ea             	cmp    %r13,%rdx
    fdaf:	0f 86 b0 01 00 00    	jbe    ff65 <_DkDebugAddMap+0x395>
    fdb5:	4c 63 c8             	movslq %eax,%r9
    fdb8:	eb 13                	jmp    fdcd <_DkDebugAddMap+0x1fd>
    fdba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fdc0:	49 83 c5 38          	add    $0x38,%r13
    fdc4:	4c 39 ea             	cmp    %r13,%rdx
    fdc7:	0f 86 83 01 00 00    	jbe    ff50 <_DkDebugAddMap+0x380>
    fdcd:	41 83 7d 00 01       	cmpl   $0x1,0x0(%r13)
    fdd2:	75 ec                	jne    fdc0 <_DkDebugAddMap+0x1f0>
    fdd4:	49 8b 45 08          	mov    0x8(%r13),%rax
    fdd8:	4c 39 c8             	cmp    %r9,%rax
    fddb:	77 e3                	ja     fdc0 <_DkDebugAddMap+0x1f0>
    fddd:	48 89 c1             	mov    %rax,%rcx
    fde0:	49 03 4d 20          	add    0x20(%r13),%rcx
    fde4:	4c 39 c9             	cmp    %r9,%rcx
    fde7:	76 d7                	jbe    fdc0 <_DkDebugAddMap+0x1f0>
    fde9:	49 8b 16             	mov    (%r14),%rdx
    fdec:	49 03 55 10          	add    0x10(%r13),%rdx
    fdf0:	49 89 d5             	mov    %rdx,%r13
    fdf3:	4d 01 cd             	add    %r9,%r13
    fdf6:	49 29 c5             	sub    %rax,%r13
    fdf9:	4d 85 ed             	test   %r13,%r13
    fdfc:	0f 84 4e 01 00 00    	je     ff50 <_DkDebugAddMap+0x380>
    fe02:	44 89 d7             	mov    %r10d,%edi
    fe05:	e8 c6 12 00 00       	callq  110d0 <ocall_close>
    fe0a:	49 39 dc             	cmp    %rbx,%r12
    fe0d:	0f 83 91 fe ff ff    	jae    fca4 <_DkDebugAddMap+0xd4>
    fe13:	4d 89 e7             	mov    %r12,%r15
    fe16:	eb 15                	jmp    fe2d <_DkDebugAddMap+0x25d>
    fe18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fe1f:	00 
    fe20:	49 83 c7 40          	add    $0x40,%r15
    fe24:	49 39 df             	cmp    %rbx,%r15
    fe27:	0f 83 77 fe ff ff    	jae    fca4 <_DkDebugAddMap+0xd4>
    fe2d:	41 8b 3f             	mov    (%r15),%edi
    fe30:	48 8d 35 ac 96 01 00 	lea    0x196ac(%rip),%rsi        # 294e3 <slab_levels+0x963>
    fe37:	ba 06 00 00 00       	mov    $0x6,%edx
    fe3c:	4c 01 ef             	add    %r13,%rdi
    fe3f:	e8 4c 58 00 00       	callq  15690 <memcmp>
    fe44:	85 c0                	test   %eax,%eax
    fe46:	75 d8                	jne    fe20 <_DkDebugAddMap+0x250>
    fe48:	4d 8b 47 10          	mov    0x10(%r15),%r8
    fe4c:	4d 03 06             	add    (%r14),%r8
    fe4f:	0f 84 4f fe ff ff    	je     fca4 <_DkDebugAddMap+0xd4>
    fe55:	48 8d 85 d0 ef ff ff 	lea    -0x1030(%rbp),%rax
    fe5c:	49 8b 4e 08          	mov    0x8(%r14),%rcx
    fe60:	48 8d 15 b1 96 01 00 	lea    0x196b1(%rip),%rdx        # 29518 <slab_levels+0x998>
    fe67:	be 00 10 00 00       	mov    $0x1000,%esi
    fe6c:	49 89 c7             	mov    %rax,%r15
    fe6f:	48 89 c7             	mov    %rax,%rdi
    fe72:	48 89 85 c8 ef ff ff 	mov    %rax,-0x1038(%rbp)
    fe79:	31 c0                	xor    %eax,%eax
    fe7b:	e8 a0 71 00 00       	callq  17020 <snprintf>
    fe80:	4c 89 ff             	mov    %r15,%rdi
    fe83:	e8 e8 57 00 00       	callq  15670 <strlen>
    fe88:	4c 01 f8             	add    %r15,%rax
    fe8b:	41 bf 00 10 00 00    	mov    $0x1000,%r15d
    fe91:	48 89 85 c0 ef ff ff 	mov    %rax,-0x1040(%rbp)
    fe98:	eb 13                	jmp    fead <_DkDebugAddMap+0x2dd>
    fe9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fea0:	49 83 c4 40          	add    $0x40,%r12
    fea4:	49 39 dc             	cmp    %rbx,%r12
    fea7:	0f 83 eb fd ff ff    	jae    fc98 <_DkDebugAddMap+0xc8>
    fead:	41 8b 04 24          	mov    (%r12),%eax
    feb1:	85 c0                	test   %eax,%eax
    feb3:	74 eb                	je     fea0 <_DkDebugAddMap+0x2d0>
    feb5:	49 83 7c 24 10 00    	cmpq   $0x0,0x10(%r12)
    febb:	74 e3                	je     fea0 <_DkDebugAddMap+0x2d0>
    febd:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    fec2:	48 8d 35 1a 96 01 00 	lea    0x1961a(%rip),%rsi        # 294e3 <slab_levels+0x963>
    fec9:	ba 06 00 00 00       	mov    $0x6,%edx
    fece:	e8 bd 57 00 00       	callq  15690 <memcmp>
    fed3:	85 c0                	test   %eax,%eax
    fed5:	74 c9                	je     fea0 <_DkDebugAddMap+0x2d0>
    fed7:	41 8b 44 24 04       	mov    0x4(%r12),%eax
    fedc:	85 c0                	test   %eax,%eax
    fede:	74 c0                	je     fea0 <_DkDebugAddMap+0x2d0>
    fee0:	41 8b 3c 24          	mov    (%r12),%edi
    fee4:	48 8d 35 fe 95 01 00 	lea    0x195fe(%rip),%rsi        # 294e9 <slab_levels+0x969>
    feeb:	ba 07 00 00 00       	mov    $0x7,%edx
    fef0:	4c 01 ef             	add    %r13,%rdi
    fef3:	e8 98 57 00 00       	callq  15690 <memcmp>
    fef8:	85 c0                	test   %eax,%eax
    fefa:	74 a4                	je     fea0 <_DkDebugAddMap+0x2d0>
    fefc:	48 8b bd c0 ef ff ff 	mov    -0x1040(%rbp),%rdi
    ff03:	41 8b 0c 24          	mov    (%r12),%ecx
    ff07:	48 8d 15 e3 95 01 00 	lea    0x195e3(%rip),%rdx        # 294f1 <slab_levels+0x971>
    ff0e:	4d 8b 44 24 10       	mov    0x10(%r12),%r8
    ff13:	4d 03 06             	add    (%r14),%r8
    ff16:	44 89 fe             	mov    %r15d,%esi
    ff19:	48 89 f8             	mov    %rdi,%rax
    ff1c:	48 2b 85 c8 ef ff ff 	sub    -0x1038(%rbp),%rax
    ff23:	4c 01 e9             	add    %r13,%rcx
    ff26:	29 c6                	sub    %eax,%esi
    ff28:	31 c0                	xor    %eax,%eax
    ff2a:	e8 f1 70 00 00       	callq  17020 <snprintf>
    ff2f:	48 8b bd c0 ef ff ff 	mov    -0x1040(%rbp),%rdi
    ff36:	e8 35 57 00 00       	callq  15670 <strlen>
    ff3b:	48 01 85 c0 ef ff ff 	add    %rax,-0x1040(%rbp)
    ff42:	e9 59 ff ff ff       	jmpq   fea0 <_DkDebugAddMap+0x2d0>
    ff47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ff4e:	00 00 
    ff50:	48 8d 85 d0 ef ff ff 	lea    -0x1030(%rbp),%rax
    ff57:	4c 8d 1d 82 e7 21 04 	lea    0x421e782(%rip),%r11        # 422e6e0 <pal_state>
    ff5e:	48 89 85 c8 ef ff ff 	mov    %rax,-0x1038(%rbp)
    ff65:	48 8b 8d c0 ef ff ff 	mov    -0x1040(%rbp),%rcx
    ff6c:	4c 8b 85 c8 ef ff ff 	mov    -0x1038(%rbp),%r8
    ff73:	44 89 d7             	mov    %r10d,%edi
    ff76:	44 89 95 c8 ef ff ff 	mov    %r10d,-0x1038(%rbp)
    ff7d:	4c 89 8d b0 ef ff ff 	mov    %r9,-0x1050(%rbp)
    ff84:	4a 8d 14 09          	lea    (%rcx,%r9,1),%rdx
    ff88:	48 89 c8             	mov    %rcx,%rax
    ff8b:	b9 01 00 00 00       	mov    $0x1,%ecx
    ff90:	48 83 c0 1e          	add    $0x1e,%rax
    ff94:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    ff98:	48 89 d6             	mov    %rdx,%rsi
    ff9b:	49 03 73 58          	add    0x58(%r11),%rsi
    ff9f:	48 29 c4             	sub    %rax,%rsp
    ffa2:	49 8b 43 60          	mov    0x60(%r11),%rax
    ffa6:	4c 8d 6c 24 0f       	lea    0xf(%rsp),%r13
    ffab:	49 89 c7             	mov    %rax,%r15
    ffae:	49 89 f3             	mov    %rsi,%r11
    ffb1:	49 83 e5 f0          	and    $0xfffffffffffffff0,%r13
    ffb5:	4d 21 cf             	and    %r9,%r15
    ffb8:	49 21 c3             	and    %rax,%r11
    ffbb:	4d 29 fb             	sub    %r15,%r11
    ffbe:	4c 89 fe             	mov    %r15,%rsi
    ffc1:	4c 89 da             	mov    %r11,%rdx
    ffc4:	4c 89 9d b8 ef ff ff 	mov    %r11,-0x1048(%rbp)
    ffcb:	e8 a0 0e 00 00       	callq  10e70 <ocall_map_untrusted>
    ffd0:	4c 8b 8d b0 ef ff ff 	mov    -0x1050(%rbp),%r9
    ffd7:	48 8b 95 c0 ef ff ff 	mov    -0x1040(%rbp),%rdx
    ffde:	4c 89 ef             	mov    %r13,%rdi
    ffe1:	4d 29 f9             	sub    %r15,%r9
    ffe4:	4c 89 ce             	mov    %r9,%rsi
    ffe7:	48 03 b5 d0 ef ff ff 	add    -0x1030(%rbp),%rsi
    ffee:	e8 fd 5b 00 00       	callq  15bf0 <memcpy>
    fff3:	4c 8b 9d b8 ef ff ff 	mov    -0x1048(%rbp),%r11
    fffa:	48 8b bd d0 ef ff ff 	mov    -0x1030(%rbp),%rdi
   10001:	4c 89 de             	mov    %r11,%rsi
   10004:	e8 07 0f 00 00       	callq  10f10 <ocall_unmap_untrusted>
   10009:	44 8b 95 c8 ef ff ff 	mov    -0x1038(%rbp),%r10d
   10010:	e9 ed fd ff ff       	jmpq   fe02 <_DkDebugAddMap+0x232>
   10015:	90                   	nop
   10016:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1001d:	00 00 00 

0000000000010020 <_DkDebugDelMap>:
   10020:	55                   	push   %rbp
   10021:	48 8d 15 da 94 01 00 	lea    0x194da(%rip),%rdx        # 29502 <slab_levels+0x982>
   10028:	be 00 10 00 00       	mov    $0x1000,%esi
   1002d:	31 c0                	xor    %eax,%eax
   1002f:	48 89 e5             	mov    %rsp,%rbp
   10032:	53                   	push   %rbx
   10033:	48 8d 9d f0 ef ff ff 	lea    -0x1010(%rbp),%rbx
   1003a:	48 81 ec 08 10 00 00 	sub    $0x1008,%rsp
   10041:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   10045:	48 89 df             	mov    %rbx,%rdi
   10048:	e8 d3 6f 00 00       	callq  17020 <snprintf>
   1004d:	48 89 df             	mov    %rbx,%rdi
   10050:	e8 9b 29 00 00       	callq  129f0 <ocall_load_debug>
   10055:	48 81 c4 08 10 00 00 	add    $0x1008,%rsp
   1005c:	5b                   	pop    %rbx
   1005d:	5d                   	pop    %rbp
   1005e:	c3                   	retq   
   1005f:	90                   	nop

0000000000010060 <setup_pal_map>:
   10060:	55                   	push   %rbp
   10061:	48 89 e5             	mov    %rsp,%rbp
   10064:	41 54                	push   %r12
   10066:	53                   	push   %rbx
   10067:	48 89 fb             	mov    %rdi,%rbx
   1006a:	4c 8d a5 f0 ef ff ff 	lea    -0x1010(%rbp),%r12
   10071:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
   10078:	48 8b 07             	mov    (%rdi),%rax
   1007b:	48 8b 15 56 a4 21 00 	mov    0x21a456(%rip),%rdx        # 22a4d8 <data_start+0x20>
   10082:	c7 47 28 00 00 00 00 	movl   $0x0,0x28(%rdi)
   10089:	48 89 57 30          	mov    %rdx,0x30(%rdi)
   1008d:	48 89 57 10          	mov    %rdx,0x10(%rdi)
   10091:	48 8b 50 18          	mov    0x18(%rax),%rdx
   10095:	48 89 97 a0 02 00 00 	mov    %rdx,0x2a0(%rdi)
   1009c:	48 89 c2             	mov    %rax,%rdx
   1009f:	48 03 50 20          	add    0x20(%rax),%rdx
   100a3:	0f b7 40 38          	movzwl 0x38(%rax),%eax
   100a7:	48 89 97 98 02 00 00 	mov    %rdx,0x298(%rdi)
   100ae:	66 89 87 a8 02 00 00 	mov    %ax,0x2a8(%rdi)
   100b5:	e8 a6 71 ff ff       	callq  7260 <setup_elf_hash>
   100ba:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   100be:	4c 8d 0d 3b 7b 01 00 	lea    0x17b3b(%rip),%r9        # 27c00 <section_rodata>
   100c5:	48 83 ec 08          	sub    $0x8,%rsp
   100c9:	4c 8d 05 b0 24 ff ff 	lea    -0xdb50(%rip),%r8        # 2580 <DkStreamAttributesSetbyHandle>
   100d0:	ff 35 1a a4 21 00    	pushq  0x21a41a(%rip)        # 22a4f0 <data_start+0x38>
   100d6:	48 8d 15 63 94 01 00 	lea    0x19463(%rip),%rdx        # 29540 <slab_levels+0x9c0>
   100dd:	ff 35 d5 a4 21 00    	pushq  0x21a4d5(%rip)        # 22a5b8 <data_start+0x100>
   100e3:	ff 35 1f a5 21 00    	pushq  0x21a51f(%rip)        # 22a608 <data_start+0x150>
   100e9:	4c 89 e7             	mov    %r12,%rdi
   100ec:	be 00 10 00 00       	mov    $0x1000,%esi
   100f1:	31 c0                	xor    %eax,%eax
   100f3:	e8 28 6f 00 00       	callq  17020 <snprintf>
   100f8:	48 83 c4 20          	add    $0x20,%rsp
   100fc:	4c 89 e7             	mov    %r12,%rdi
   100ff:	e8 ec 28 00 00       	callq  129f0 <ocall_load_debug>
   10104:	48 8d 05 a5 b3 21 00 	lea    0x21b3a5(%rip),%rax        # 22b4b0 <loaded_maps>
   1010b:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
   10112:	00 
   10113:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
   1011a:	00 
   1011b:	48 89 18             	mov    %rbx,(%rax)
   1011e:	48 8d 65 f0          	lea    -0x10(%rbp),%rsp
   10122:	5b                   	pop    %rbx
   10123:	41 5c                	pop    %r12
   10125:	5d                   	pop    %rbp
   10126:	c3                   	retq   
   10127:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1012e:	00 00 

0000000000010130 <resolve_rtld>:
   10130:	55                   	push   %rbp
   10131:	31 c0                	xor    %eax,%eax
   10133:	48 89 e5             	mov    %rsp,%rbp
   10136:	5d                   	pop    %rbp
   10137:	c3                   	retq   
   10138:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1013f:	00 

0000000000010140 <arch_exception_return_asm>:
   10140:	58                   	pop    %rax
   10141:	5b                   	pop    %rbx
   10142:	59                   	pop    %rcx
   10143:	5a                   	pop    %rdx
   10144:	5e                   	pop    %rsi
   10145:	5f                   	pop    %rdi
   10146:	41 58                	pop    %r8
   10148:	41 59                	pop    %r9
   1014a:	41 5a                	pop    %r10
   1014c:	41 5b                	pop    %r11
   1014e:	41 5c                	pop    %r12
   10150:	41 5d                	pop    %r13
   10152:	41 5e                	pop    %r14
   10154:	41 5f                	pop    %r15
   10156:	c3                   	retq   
   10157:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1015e:	00 00 

0000000000010160 <get_frame>:
   10160:	55                   	push   %rbp
   10161:	48 85 ff             	test   %rdi,%rdi
   10164:	48 89 e5             	mov    %rsp,%rbp
   10167:	74 7f                	je     101e8 <get_frame+0x88>
   10169:	48 8b 87 88 00 00 00 	mov    0x88(%rdi),%rax
   10170:	48 8b 0d 61 a4 21 00 	mov    0x21a461(%rip),%rcx        # 22a5d8 <data_start+0x120>
   10177:	48 8b 57 28          	mov    0x28(%rdi),%rdx
   1017b:	48 39 c8             	cmp    %rcx,%rax
   1017e:	73 61                	jae    101e1 <get_frame+0x81>
   10180:	48 3b 05 99 a3 21 00 	cmp    0x21a399(%rip),%rax        # 22a520 <data_start+0x68>
   10187:	76 58                	jbe    101e1 <get_frame+0x81>
   10189:	48 8b 42 08          	mov    0x8(%rdx),%rax
   1018d:	48 39 c8             	cmp    %rcx,%rax
   10190:	73 1f                	jae    101b1 <get_frame+0x51>
   10192:	48 8b 35 87 a3 21 00 	mov    0x21a387(%rip),%rsi        # 22a520 <data_start+0x68>
   10199:	eb 11                	jmp    101ac <get_frame+0x4c>
   1019b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   101a0:	48 8b 12             	mov    (%rdx),%rdx
   101a3:	48 8b 42 08          	mov    0x8(%rdx),%rax
   101a7:	48 39 c8             	cmp    %rcx,%rax
   101aa:	73 05                	jae    101b1 <get_frame+0x51>
   101ac:	48 39 f0             	cmp    %rsi,%rax
   101af:	77 ef                	ja     101a0 <get_frame+0x40>
   101b1:	48 8d 42 a0          	lea    -0x60(%rdx),%rax
   101b5:	48 be ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rsi
   101bc:	de ad de 
   101bf:	48 81 ea a0 00 00 00 	sub    $0xa0,%rdx
   101c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   101cd:	00 00 00 
   101d0:	48 8b 08             	mov    (%rax),%rcx
   101d3:	48 39 f1             	cmp    %rsi,%rcx
   101d6:	74 0b                	je     101e3 <get_frame+0x83>
   101d8:	48 83 e8 08          	sub    $0x8,%rax
   101dc:	48 39 d0             	cmp    %rdx,%rax
   101df:	75 ef                	jne    101d0 <get_frame+0x70>
   101e1:	31 c0                	xor    %eax,%eax
   101e3:	5d                   	pop    %rbp
   101e4:	c3                   	retq   
   101e5:	0f 1f 00             	nopl   (%rax)
   101e8:	48 89 ea             	mov    %rbp,%rdx
   101eb:	48 8b 0d e6 a3 21 00 	mov    0x21a3e6(%rip),%rcx        # 22a5d8 <data_start+0x120>
   101f2:	eb 95                	jmp    10189 <get_frame+0x29>
   101f4:	66 90                	xchg   %ax,%ax
   101f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   101fd:	00 00 00 

0000000000010200 <_DkGenericEventTrigger>:
   10200:	55                   	push   %rbp
   10201:	48 89 f0             	mov    %rsi,%rax
   10204:	48 89 d6             	mov    %rdx,%rsi
   10207:	4c 89 c2             	mov    %r8,%rdx
   1020a:	48 89 e5             	mov    %rsp,%rbp
   1020d:	48 83 ec 20          	sub    $0x20,%rsp
   10211:	89 7d e0             	mov    %edi,-0x20(%rbp)
   10214:	4c 89 45 e8          	mov    %r8,-0x18(%rbp)
   10218:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
   1021c:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
   10220:	ff d0                	callq  *%rax
   10222:	c9                   	leaveq 
   10223:	c3                   	retq   
   10224:	66 90                	xchg   %ax,%ax
   10226:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1022d:	00 00 00 

0000000000010230 <_DkExceptionRealHandler>:
   10230:	55                   	push   %rbp
   10231:	48 85 d2             	test   %rdx,%rdx
   10234:	48 89 e5             	mov    %rsp,%rbp
   10237:	41 56                	push   %r14
   10239:	49 89 f6             	mov    %rsi,%r14
   1023c:	41 55                	push   %r13
   1023e:	41 89 fd             	mov    %edi,%r13d
   10241:	41 54                	push   %r12
   10243:	49 89 d4             	mov    %rdx,%r12
   10246:	53                   	push   %rbx
   10247:	48 89 cb             	mov    %rcx,%rbx
   1024a:	0f 84 cc 00 00 00    	je     1031c <_DkExceptionRealHandler+0xec>
   10250:	48 83 ec 70          	sub    $0x70,%rsp
   10254:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
   1025b:	de ad de 
   1025e:	4c 8d 64 24 0f       	lea    0xf(%rsp),%r12
   10263:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
   10267:	49 89 04 24          	mov    %rax,(%r12)
   1026b:	48 8d 05 be ff ff ff 	lea    -0x42(%rip),%rax        # 10230 <_DkExceptionRealHandler>
   10272:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   10277:	48 8d 05 38 93 01 00 	lea    0x19338(%rip),%rax        # 295b6 <slab_levels+0xa36>
   1027e:	49 89 44 24 10       	mov    %rax,0x10(%r12)
   10283:	48 89 e0             	mov    %rsp,%rax
   10286:	49 89 44 24 18       	mov    %rax,0x18(%r12)
   1028b:	48 89 ea             	mov    %rbp,%rdx
   1028e:	48 8d 0d ab fe ff ff 	lea    -0x155(%rip),%rcx        # 10140 <arch_exception_return_asm>
   10295:	49 89 54 24 20       	mov    %rdx,0x20(%r12)
   1029a:	48 8d 42 08          	lea    0x8(%rdx),%rax
   1029e:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   102a2:	48 8b 53 68          	mov    0x68(%rbx),%rdx
   102a6:	48 89 50 08          	mov    %rdx,0x8(%rax)
   102aa:	48 8b 53 58          	mov    0x58(%rbx),%rdx
   102ae:	48 89 50 10          	mov    %rdx,0x10(%rax)
   102b2:	48 8b 53 70          	mov    0x70(%rbx),%rdx
   102b6:	48 89 50 18          	mov    %rdx,0x18(%rax)
   102ba:	48 8b 53 60          	mov    0x60(%rbx),%rdx
   102be:	48 89 50 20          	mov    %rdx,0x20(%rax)
   102c2:	48 8b 53 48          	mov    0x48(%rbx),%rdx
   102c6:	48 89 50 28          	mov    %rdx,0x28(%rax)
   102ca:	48 8b 53 40          	mov    0x40(%rbx),%rdx
   102ce:	48 89 50 30          	mov    %rdx,0x30(%rax)
   102d2:	48 8b 13             	mov    (%rbx),%rdx
   102d5:	48 89 50 38          	mov    %rdx,0x38(%rax)
   102d9:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   102dd:	48 89 50 40          	mov    %rdx,0x40(%rax)
   102e1:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   102e5:	48 89 50 48          	mov    %rdx,0x48(%rax)
   102e9:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   102ed:	48 89 50 50          	mov    %rdx,0x50(%rax)
   102f1:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   102f5:	48 89 50 58          	mov    %rdx,0x58(%rax)
   102f9:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   102fd:	48 89 50 60          	mov    %rdx,0x60(%rax)
   10301:	48 8b 53 30          	mov    0x30(%rbx),%rdx
   10305:	48 89 50 68          	mov    %rdx,0x68(%rax)
   10309:	48 8b 53 38          	mov    0x38(%rbx),%rdx
   1030d:	48 89 50 70          	mov    %rdx,0x70(%rax)
   10311:	48 8b 93 80 00 00 00 	mov    0x80(%rbx),%rdx
   10318:	48 89 50 78          	mov    %rdx,0x78(%rax)
   1031c:	49 63 fd             	movslq %r13d,%rdi
   1031f:	e8 cc 6d ff ff       	callq  70f0 <_DkGetExceptionHandler>
   10324:	48 85 c0             	test   %rax,%rax
   10327:	74 14                	je     1033d <_DkExceptionRealHandler+0x10d>
   10329:	49 89 d8             	mov    %rbx,%r8
   1032c:	4c 89 e1             	mov    %r12,%rcx
   1032f:	4c 89 f2             	mov    %r14,%rdx
   10332:	48 89 c6             	mov    %rax,%rsi
   10335:	44 89 ef             	mov    %r13d,%edi
   10338:	e8 c3 fe ff ff       	callq  10200 <_DkGenericEventTrigger>
   1033d:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
   10341:	5b                   	pop    %rbx
   10342:	41 5c                	pop    %r12
   10344:	41 5d                	pop    %r13
   10346:	41 5e                	pop    %r14
   10348:	5d                   	pop    %rbp
   10349:	c3                   	retq   
   1034a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010350 <_DkHandleExternelEvent>:
   10350:	55                   	push   %rbp
   10351:	48 89 e5             	mov    %rsp,%rbp
   10354:	41 54                	push   %r12
   10356:	53                   	push   %rbx
   10357:	49 89 fc             	mov    %rdi,%r12
   1035a:	48 89 f7             	mov    %rsi,%rdi
   1035d:	e8 fe fd ff ff       	callq  10160 <get_frame>
   10362:	49 83 fc 06          	cmp    $0x6,%r12
   10366:	48 89 c3             	mov    %rax,%rbx
   10369:	75 5d                	jne    103c8 <_DkHandleExternelEvent+0x78>
   1036b:	48 85 c0             	test   %rax,%rax
   1036e:	74 58                	je     103c8 <_DkHandleExternelEvent+0x78>
   10370:	48 8b 05 49 a1 21 00 	mov    0x21a149(%rip),%rax        # 22a4c0 <data_start+0x8>
   10377:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   1037b:	74 20                	je     1039d <_DkHandleExternelEvent+0x4d>
   1037d:	49 63 fc             	movslq %r12d,%rdi
   10380:	e8 6b 6d ff ff       	callq  70f0 <_DkGetExceptionHandler>
   10385:	48 85 c0             	test   %rax,%rax
   10388:	74 26                	je     103b0 <_DkHandleExternelEvent+0x60>
   1038a:	45 31 c0             	xor    %r8d,%r8d
   1038d:	48 89 d9             	mov    %rbx,%rcx
   10390:	31 d2                	xor    %edx,%edx
   10392:	48 89 c6             	mov    %rax,%rsi
   10395:	44 89 e7             	mov    %r12d,%edi
   10398:	e8 63 fe ff ff       	callq  10200 <_DkGenericEventTrigger>
   1039d:	48 8d 65 f0          	lea    -0x10(%rbp),%rsp
   103a1:	5b                   	pop    %rbx
   103a2:	41 5c                	pop    %r12
   103a4:	5d                   	pop    %rbp
   103a5:	c3                   	retq   
   103a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   103ad:	00 00 00 
   103b0:	49 83 fc 06          	cmp    $0x6,%r12
   103b4:	74 e7                	je     1039d <_DkHandleExternelEvent+0x4d>
   103b6:	e8 a5 d9 ff ff       	callq  dd60 <_DkThreadExit>
   103bb:	48 8d 65 f0          	lea    -0x10(%rbp),%rsp
   103bf:	5b                   	pop    %rbx
   103c0:	41 5c                	pop    %r12
   103c2:	5d                   	pop    %rbp
   103c3:	c3                   	retq   
   103c4:	0f 1f 40 00          	nopl   0x0(%rax)
   103c8:	48 85 db             	test   %rbx,%rbx
   103cb:	75 b0                	jne    1037d <_DkHandleExternelEvent+0x2d>
   103cd:	48 83 ec 70          	sub    $0x70,%rsp
   103d1:	48 b8 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rax
   103d8:	de ad de 
   103db:	48 8d 5c 24 0f       	lea    0xf(%rsp),%rbx
   103e0:	48 83 e3 f0          	and    $0xfffffffffffffff0,%rbx
   103e4:	48 89 03             	mov    %rax,(%rbx)
   103e7:	48 8d 05 62 ff ff ff 	lea    -0x9e(%rip),%rax        # 10350 <_DkHandleExternelEvent>
   103ee:	48 89 43 08          	mov    %rax,0x8(%rbx)
   103f2:	48 8d 05 d5 91 01 00 	lea    0x191d5(%rip),%rax        # 295ce <slab_levels+0xa4e>
   103f9:	48 89 43 10          	mov    %rax,0x10(%rbx)
   103fd:	48 89 e0             	mov    %rsp,%rax
   10400:	48 89 43 18          	mov    %rax,0x18(%rbx)
   10404:	48 89 e8             	mov    %rbp,%rax
   10407:	48 89 43 20          	mov    %rax,0x20(%rbx)
   1040b:	48 89 d8             	mov    %rbx,%rax
   1040e:	48 89 43 28          	mov    %rax,0x28(%rbx)
   10412:	48 89 f0             	mov    %rsi,%rax
   10415:	48 89 43 30          	mov    %rax,0x30(%rbx)
   10419:	48 89 f8             	mov    %rdi,%rax
   1041c:	48 89 43 38          	mov    %rax,0x38(%rbx)
   10420:	4c 89 e0             	mov    %r12,%rax
   10423:	48 89 43 40          	mov    %rax,0x40(%rbx)
   10427:	4c 89 e8             	mov    %r13,%rax
   1042a:	48 89 43 48          	mov    %rax,0x48(%rbx)
   1042e:	4c 89 f0             	mov    %r14,%rax
   10431:	48 89 43 50          	mov    %rax,0x50(%rbx)
   10435:	4c 89 f8             	mov    %r15,%rax
   10438:	48 89 43 58          	mov    %rax,0x58(%rbx)
   1043c:	e9 3c ff ff ff       	jmpq   1037d <_DkHandleExternelEvent+0x2d>
   10441:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10446:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1044d:	00 00 00 

0000000000010450 <restore_sgx_context>:
   10450:	48 8b 47 20          	mov    0x20(%rdi),%rax
   10454:	55                   	push   %rbp
   10455:	48 89 e5             	mov    %rsp,%rbp
   10458:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
   1045c:	48 89 57 20          	mov    %rdx,0x20(%rdi)
   10460:	48 8b 97 88 00 00 00 	mov    0x88(%rdi),%rdx
   10467:	48 89 50 f8          	mov    %rdx,-0x8(%rax)
   1046b:	48 89 fc             	mov    %rdi,%rsp
   1046e:	58                   	pop    %rax
   1046f:	59                   	pop    %rcx
   10470:	5a                   	pop    %rdx
   10471:	5b                   	pop    %rbx
   10472:	48 83 c4 08          	add    $0x8,%rsp
   10476:	5d                   	pop    %rbp
   10477:	5e                   	pop    %rsi
   10478:	5f                   	pop    %rdi
   10479:	41 58                	pop    %r8
   1047b:	41 59                	pop    %r9
   1047d:	41 5a                	pop    %r10
   1047f:	41 5b                	pop    %r11
   10481:	41 5c                	pop    %r12
   10483:	41 5d                	pop    %r13
   10485:	41 5e                	pop    %r14
   10487:	41 5f                	pop    %r15
   10489:	9d                   	popfq  
   1048a:	48 8b 64 24 98       	mov    -0x68(%rsp),%rsp
   1048f:	c3                   	retq   
   10490:	5d                   	pop    %rbp
   10491:	c3                   	retq   
   10492:	0f 1f 40 00          	nopl   0x0(%rax)
   10496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1049d:	00 00 00 

00000000000104a0 <_DkExceptionHandler>:
   104a0:	55                   	push   %rbp
   104a1:	89 f8                	mov    %edi,%eax
   104a3:	c1 e8 18             	shr    $0x18,%eax
   104a6:	48 89 e5             	mov    %rsp,%rbp
   104a9:	41 55                	push   %r13
   104ab:	41 54                	push   %r12
   104ad:	53                   	push   %rbx
   104ae:	49 89 f4             	mov    %rsi,%r12
   104b1:	41 89 fd             	mov    %edi,%r13d
   104b4:	48 83 ec 18          	sub    $0x18,%rsp
   104b8:	84 c0                	test   %al,%al
   104ba:	79 23                	jns    104df <_DkExceptionHandler+0x3f>
   104bc:	40 80 ff 06          	cmp    $0x6,%dil
   104c0:	0f 84 22 01 00 00    	je     105e8 <_DkExceptionHandler+0x148>
   104c6:	40 84 ff             	test   %dil,%dil
   104c9:	0f 84 09 01 00 00    	je     105d8 <_DkExceptionHandler+0x138>
   104cf:	40 80 ff 11          	cmp    $0x11,%dil
   104d3:	41 bd 02 00 00 00    	mov    $0x2,%r13d
   104d9:	0f 85 e3 00 00 00    	jne    105c2 <_DkExceptionHandler+0x122>
   104df:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
   104e6:	ba b8 00 00 00       	mov    $0xb8,%edx
   104eb:	31 f6                	xor    %esi,%esi
   104ed:	48 8d 5c 24 0f       	lea    0xf(%rsp),%rbx
   104f2:	48 83 e3 f0          	and    $0xfffffffffffffff0,%rbx
   104f6:	48 89 df             	mov    %rbx,%rdi
   104f9:	e8 62 5f 00 00       	callq  16460 <memset>
   104fe:	49 8b 04 24          	mov    (%r12),%rax
   10502:	4c 89 e7             	mov    %r12,%rdi
   10505:	48 89 43 68          	mov    %rax,0x68(%rbx)
   10509:	49 8b 44 24 18       	mov    0x18(%r12),%rax
   1050e:	48 89 43 58          	mov    %rax,0x58(%rbx)
   10512:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   10517:	48 89 43 70          	mov    %rax,0x70(%rbx)
   1051b:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   10520:	48 89 43 60          	mov    %rax,0x60(%rbx)
   10524:	49 8b 44 24 20       	mov    0x20(%r12),%rax
   10529:	48 89 43 78          	mov    %rax,0x78(%rbx)
   1052d:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   10532:	48 89 43 50          	mov    %rax,0x50(%rbx)
   10536:	49 8b 44 24 30       	mov    0x30(%r12),%rax
   1053b:	48 89 43 48          	mov    %rax,0x48(%rbx)
   1053f:	49 8b 44 24 38       	mov    0x38(%r12),%rax
   10544:	48 89 43 40          	mov    %rax,0x40(%rbx)
   10548:	49 8b 44 24 40       	mov    0x40(%r12),%rax
   1054d:	48 89 03             	mov    %rax,(%rbx)
   10550:	49 8b 44 24 48       	mov    0x48(%r12),%rax
   10555:	48 89 43 08          	mov    %rax,0x8(%rbx)
   10559:	49 8b 44 24 50       	mov    0x50(%r12),%rax
   1055e:	48 89 43 10          	mov    %rax,0x10(%rbx)
   10562:	49 8b 44 24 58       	mov    0x58(%r12),%rax
   10567:	48 89 43 18          	mov    %rax,0x18(%rbx)
   1056b:	49 8b 44 24 60       	mov    0x60(%r12),%rax
   10570:	48 89 43 20          	mov    %rax,0x20(%rbx)
   10574:	49 8b 44 24 68       	mov    0x68(%r12),%rax
   10579:	48 89 43 28          	mov    %rax,0x28(%rbx)
   1057d:	49 8b 44 24 70       	mov    0x70(%r12),%rax
   10582:	48 89 43 30          	mov    %rax,0x30(%rbx)
   10586:	49 8b 44 24 78       	mov    0x78(%r12),%rax
   1058b:	48 89 43 38          	mov    %rax,0x38(%rbx)
   1058f:	49 8b 84 24 80 00 00 	mov    0x80(%r12),%rax
   10596:	00 
   10597:	48 89 83 88 00 00 00 	mov    %rax,0x88(%rbx)
   1059e:	49 8b 84 24 88 00 00 	mov    0x88(%r12),%rax
   105a5:	00 
   105a6:	48 89 83 80 00 00 00 	mov    %rax,0x80(%rbx)
   105ad:	e8 ae fb ff ff       	callq  10160 <get_frame>
   105b2:	48 89 d9             	mov    %rbx,%rcx
   105b5:	48 89 c2             	mov    %rax,%rdx
   105b8:	31 f6                	xor    %esi,%esi
   105ba:	44 89 ef             	mov    %r13d,%edi
   105bd:	e8 6e fc ff ff       	callq  10230 <_DkExceptionRealHandler>
   105c2:	4c 89 e7             	mov    %r12,%rdi
   105c5:	e8 86 fe ff ff       	callq  10450 <restore_sgx_context>
   105ca:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
   105ce:	5b                   	pop    %rbx
   105cf:	41 5c                	pop    %r12
   105d1:	41 5d                	pop    %r13
   105d3:	5d                   	pop    %rbp
   105d4:	c3                   	retq   
   105d5:	0f 1f 00             	nopl   (%rax)
   105d8:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   105de:	e9 fc fe ff ff       	jmpq   104df <_DkExceptionHandler+0x3f>
   105e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   105e8:	48 8b 9e 88 00 00 00 	mov    0x88(%rsi),%rbx
   105ef:	0f b6 03             	movzbl (%rbx),%eax
   105f2:	3c cc                	cmp    $0xcc,%al
   105f4:	74 3a                	je     10630 <_DkExceptionHandler+0x190>
   105f6:	3c 0f                	cmp    $0xf,%al
   105f8:	75 c8                	jne    105c2 <_DkExceptionHandler+0x122>
   105fa:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
   105fe:	3c a2                	cmp    $0xa2,%al
   10600:	74 43                	je     10645 <_DkExceptionHandler+0x1a5>
   10602:	3c 31                	cmp    $0x31,%al
   10604:	75 bc                	jne    105c2 <_DkExceptionHandler+0x122>
   10606:	49 83 84 24 88 00 00 	addq   $0x2,0x88(%r12)
   1060d:	00 02 
   1060f:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
   10616:	00 00 
   10618:	4c 89 e7             	mov    %r12,%rdi
   1061b:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
   10622:	00 
   10623:	e8 28 fe ff ff       	callq  10450 <restore_sgx_context>
   10628:	eb a0                	jmp    105ca <_DkExceptionHandler+0x12a>
   1062a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10630:	48 83 c3 01          	add    $0x1,%rbx
   10634:	48 89 f7             	mov    %rsi,%rdi
   10637:	48 89 9e 88 00 00 00 	mov    %rbx,0x88(%rsi)
   1063e:	e8 0d fe ff ff       	callq  10450 <restore_sgx_context>
   10643:	eb 85                	jmp    105ca <_DkExceptionHandler+0x12a>
   10645:	8b 76 08             	mov    0x8(%rsi),%esi
   10648:	41 8b 3c 24          	mov    (%r12),%edi
   1064c:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   10650:	e8 ab 05 00 00       	callq  10c00 <_DkCpuIdRetrieve>
   10655:	85 c0                	test   %eax,%eax
   10657:	74 0f                	je     10668 <_DkExceptionHandler+0x1c8>
   10659:	80 3b 0f             	cmpb   $0xf,(%rbx)
   1065c:	0f 85 60 ff ff ff    	jne    105c2 <_DkExceptionHandler+0x122>
   10662:	0f b6 43 01          	movzbl 0x1(%rbx),%eax
   10666:	eb 9a                	jmp    10602 <_DkExceptionHandler+0x162>
   10668:	8b 45 d0             	mov    -0x30(%rbp),%eax
   1066b:	49 83 84 24 88 00 00 	addq   $0x2,0x88(%r12)
   10672:	00 02 
   10674:	4c 89 e7             	mov    %r12,%rdi
   10677:	49 89 04 24          	mov    %rax,(%r12)
   1067b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1067e:	49 89 44 24 18       	mov    %rax,0x18(%r12)
   10683:	8b 45 d8             	mov    -0x28(%rbp),%eax
   10686:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   1068b:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1068e:	49 89 44 24 10       	mov    %rax,0x10(%r12)
   10693:	e8 b8 fd ff ff       	callq  10450 <restore_sgx_context>
   10698:	e9 2d ff ff ff       	jmpq   105ca <_DkExceptionHandler+0x12a>
   1069d:	0f 1f 00             	nopl   (%rax)

00000000000106a0 <_DkRaiseFailure>:
   106a0:	55                   	push   %rbp
   106a1:	48 89 e5             	mov    %rsp,%rbp
   106a4:	53                   	push   %rbx
   106a5:	89 fb                	mov    %edi,%ebx
   106a7:	bf 07 00 00 00       	mov    $0x7,%edi
   106ac:	48 83 ec 28          	sub    $0x28,%rsp
   106b0:	e8 3b 6a ff ff       	callq  70f0 <_DkGetExceptionHandler>
   106b5:	48 85 c0             	test   %rax,%rax
   106b8:	74 22                	je     106dc <_DkRaiseFailure+0x3c>
   106ba:	c7 45 d0 07 00 00 00 	movl   $0x7,-0x30(%rbp)
   106c1:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   106c8:	00 
   106c9:	48 63 f3             	movslq %ebx,%rsi
   106cc:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   106d3:	00 
   106d4:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi
   106d8:	31 d2                	xor    %edx,%edx
   106da:	ff d0                	callq  *%rax
   106dc:	48 83 c4 28          	add    $0x28,%rsp
   106e0:	5b                   	pop    %rbx
   106e1:	5d                   	pop    %rbp
   106e2:	c3                   	retq   
   106e3:	0f 1f 00             	nopl   (%rax)
   106e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   106ed:	00 00 00 

00000000000106f0 <_DkExceptionReturn>:
   106f0:	55                   	push   %rbp
   106f1:	48 89 e5             	mov    %rsp,%rbp
   106f4:	41 57                	push   %r15
   106f6:	41 56                	push   %r14
   106f8:	41 55                	push   %r13
   106fa:	41 54                	push   %r12
   106fc:	53                   	push   %rbx
   106fd:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
   10704:	48 8b 47 08          	mov    0x8(%rdi),%rax
   10708:	48 85 c0             	test   %rax,%rax
   1070b:	0f 84 cf 00 00 00    	je     107e0 <_DkExceptionReturn+0xf0>
   10711:	48 8b 50 68          	mov    0x68(%rax),%rdx
   10715:	48 8d bd 40 ff ff ff 	lea    -0xc0(%rbp),%rdi
   1071c:	48 89 95 40 ff ff ff 	mov    %rdx,-0xc0(%rbp)
   10723:	48 8b 50 58          	mov    0x58(%rax),%rdx
   10727:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
   1072e:	48 8b 50 70          	mov    0x70(%rax),%rdx
   10732:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
   10739:	48 8b 50 60          	mov    0x60(%rax),%rdx
   1073d:	48 89 95 50 ff ff ff 	mov    %rdx,-0xb0(%rbp)
   10744:	48 8b 50 78          	mov    0x78(%rax),%rdx
   10748:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
   1074f:	48 8b 50 50          	mov    0x50(%rax),%rdx
   10753:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
   1075a:	48 8b 50 48          	mov    0x48(%rax),%rdx
   1075e:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
   10765:	48 8b 50 40          	mov    0x40(%rax),%rdx
   10769:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
   10770:	48 8b 10             	mov    (%rax),%rdx
   10773:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
   10777:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1077b:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
   1077f:	48 8b 50 10          	mov    0x10(%rax),%rdx
   10783:	48 89 55 90          	mov    %rdx,-0x70(%rbp)
   10787:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1078b:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   1078f:	48 8b 50 20          	mov    0x20(%rax),%rdx
   10793:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
   10797:	48 8b 50 28          	mov    0x28(%rax),%rdx
   1079b:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   1079f:	48 8b 50 30          	mov    0x30(%rax),%rdx
   107a3:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
   107a7:	48 8b 50 38          	mov    0x38(%rax),%rdx
   107ab:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   107af:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   107b6:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
   107bd:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   107c1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   107c5:	e8 86 fc ff ff       	callq  10450 <restore_sgx_context>
   107ca:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
   107d1:	5b                   	pop    %rbx
   107d2:	41 5c                	pop    %r12
   107d4:	41 5d                	pop    %r13
   107d6:	41 5e                	pop    %r14
   107d8:	41 5f                	pop    %r15
   107da:	5d                   	pop    %rbp
   107db:	c3                   	retq   
   107dc:	0f 1f 40 00          	nopl   0x0(%rax)
   107e0:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   107e4:	48 85 d2             	test   %rdx,%rdx
   107e7:	74 e1                	je     107ca <_DkExceptionReturn+0xda>
   107e9:	48 8b 32             	mov    (%rdx),%rsi
   107ec:	48 b9 ef be ef be ad 	movabs $0xdeaddeadbeefbeef,%rcx
   107f3:	de ad de 
   107f6:	48 39 ce             	cmp    %rcx,%rsi
   107f9:	74 35                	je     10830 <_DkExceptionReturn+0x140>
   107fb:	4c 8b 7a 58          	mov    0x58(%rdx),%r15
   107ff:	4c 8b 72 50          	mov    0x50(%rdx),%r14
   10803:	4c 8b 6a 48          	mov    0x48(%rdx),%r13
   10807:	4c 8b 62 40          	mov    0x40(%rdx),%r12
   1080b:	48 8b 7a 38          	mov    0x38(%rdx),%rdi
   1080f:	48 8b 72 30          	mov    0x30(%rdx),%rsi
   10813:	48 8b 5a 28          	mov    0x28(%rdx),%rbx
   10817:	48 8b 6a 20          	mov    0x20(%rdx),%rbp
   1081b:	48 8b 62 18          	mov    0x18(%rdx),%rsp
   1081f:	48 31 c0             	xor    %rax,%rax
   10822:	c9                   	leaveq 
   10823:	c3                   	retq   
   10824:	e9 e8 fe ff ff       	jmpq   10711 <_DkExceptionReturn+0x21>
   10829:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10830:	90                   	nop
   10831:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
   10838:	eb c1                	jmp    107fb <_DkExceptionReturn+0x10b>
   1083a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010840 <_DkSystemTimeQuery>:
   10840:	55                   	push   %rbp
   10841:	48 89 e5             	mov    %rsp,%rbp
   10844:	48 83 ec 10          	sub    $0x10,%rsp
   10848:	48 8d 7d f8          	lea    -0x8(%rbp),%rdi
   1084c:	e8 af 1d 00 00       	callq  12600 <ocall_gettime>
   10851:	85 c0                	test   %eax,%eax
   10853:	74 1a                	je     1086f <_DkSystemTimeQuery+0x2f>
   10855:	48 8d 3d 8c 8d 01 00 	lea    0x18d8c(%rip),%rdi        # 295e8 <slab_levels+0xa68>
   1085c:	31 d2                	xor    %edx,%edx
   1085e:	be 2b 00 00 00       	mov    $0x2b,%esi
   10863:	31 c0                	xor    %eax,%eax
   10865:	e8 e6 68 ff ff       	callq  7150 <warn>
   1086a:	e8 d1 68 ff ff       	callq  7140 <__abort>
   1086f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10873:	c9                   	leaveq 
   10874:	c3                   	retq   
   10875:	90                   	nop
   10876:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1087d:	00 00 00 

0000000000010880 <_DkRandomBitsRead>:
   10880:	55                   	push   %rbp
   10881:	48 89 e5             	mov    %rsp,%rbp
   10884:	41 57                	push   %r15
   10886:	41 56                	push   %r14
   10888:	41 55                	push   %r13
   1088a:	41 54                	push   %r12
   1088c:	53                   	push   %rbx
   1088d:	48 83 ec 18          	sub    $0x18,%rsp
   10891:	85 f6                	test   %esi,%esi
   10893:	0f 8e a8 00 00 00    	jle    10941 <_DkRandomBitsRead+0xc1>
   10899:	8d 46 ff             	lea    -0x1(%rsi),%eax
   1089c:	41 89 f5             	mov    %esi,%r13d
   1089f:	41 89 f6             	mov    %esi,%r14d
   108a2:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   108a6:	49 89 ff             	mov    %rdi,%r15
   108a9:	41 83 e5 fc          	and    $0xfffffffc,%r13d
   108ad:	c1 e8 02             	shr    $0x2,%eax
   108b0:	31 db                	xor    %ebx,%ebx
   108b2:	44 8d 24 85 04 00 00 	lea    0x4(,%rax,4),%r12d
   108b9:	00 
   108ba:	eb 13                	jmp    108cf <_DkRandomBitsRead+0x4f>
   108bc:	0f 1f 40 00          	nopl   0x0(%rax)
   108c0:	83 c3 04             	add    $0x4,%ebx
   108c3:	41 89 07             	mov    %eax,(%r15)
   108c6:	49 83 c7 04          	add    $0x4,%r15
   108ca:	44 39 e3             	cmp    %r12d,%ebx
   108cd:	74 22                	je     108f1 <_DkRandomBitsRead+0x71>
   108cf:	e8 2c 4a 00 00       	callq  15300 <rdrand>
   108d4:	44 39 eb             	cmp    %r13d,%ebx
   108d7:	75 e7                	jne    108c0 <_DkRandomBitsRead+0x40>
   108d9:	41 29 de             	sub    %ebx,%r14d
   108dc:	41 83 fe 02          	cmp    $0x2,%r14d
   108e0:	74 4e                	je     10930 <_DkRandomBitsRead+0xb0>
   108e2:	41 83 fe 03          	cmp    $0x3,%r14d
   108e6:	74 20                	je     10908 <_DkRandomBitsRead+0x88>
   108e8:	41 83 fe 01          	cmp    $0x1,%r14d
   108ec:	41 89 dc             	mov    %ebx,%r12d
   108ef:	74 29                	je     1091a <_DkRandomBitsRead+0x9a>
   108f1:	48 83 c4 18          	add    $0x18,%rsp
   108f5:	44 89 e0             	mov    %r12d,%eax
   108f8:	5b                   	pop    %rbx
   108f9:	41 5c                	pop    %r12
   108fb:	41 5d                	pop    %r13
   108fd:	41 5e                	pop    %r14
   108ff:	41 5f                	pop    %r15
   10901:	5d                   	pop    %rbp
   10902:	c3                   	retq   
   10903:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10908:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   1090c:	49 63 d5             	movslq %r13d,%rdx
   1090f:	41 83 c5 02          	add    $0x2,%r13d
   10913:	66 89 04 11          	mov    %ax,(%rcx,%rdx,1)
   10917:	c1 e8 10             	shr    $0x10,%eax
   1091a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   1091e:	49 63 d5             	movslq %r13d,%rdx
   10921:	45 8d 65 01          	lea    0x1(%r13),%r12d
   10925:	88 04 11             	mov    %al,(%rcx,%rdx,1)
   10928:	eb c7                	jmp    108f1 <_DkRandomBitsRead+0x71>
   1092a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10930:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   10934:	48 63 d3             	movslq %ebx,%rdx
   10937:	44 8d 63 02          	lea    0x2(%rbx),%r12d
   1093b:	66 89 04 11          	mov    %ax,(%rcx,%rdx,1)
   1093f:	eb b0                	jmp    108f1 <_DkRandomBitsRead+0x71>
   10941:	45 31 e4             	xor    %r12d,%r12d
   10944:	eb ab                	jmp    108f1 <_DkRandomBitsRead+0x71>
   10946:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1094d:	00 00 00 

0000000000010950 <_DkInstructionCacheFlush>:
   10950:	55                   	push   %rbp
   10951:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   10956:	48 89 e5             	mov    %rsp,%rbp
   10959:	5d                   	pop    %rbp
   1095a:	c3                   	retq   
   1095b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010960 <_DkSegmentRegisterSet>:
   10960:	83 ff 01             	cmp    $0x1,%edi
   10963:	75 1b                	jne    10980 <_DkSegmentRegisterSet+0x20>
   10965:	55                   	push   %rbp
   10966:	48 89 f7             	mov    %rsi,%rdi
   10969:	48 89 e5             	mov    %rsp,%rbp
   1096c:	65 48 89 34 25 38 00 	mov    %rsi,%gs:0x38
   10973:	00 00 
   10975:	e8 92 49 00 00       	callq  1530c <wrfsbase>
   1097a:	31 c0                	xor    %eax,%eax
   1097c:	5d                   	pop    %rbp
   1097d:	c3                   	retq   
   1097e:	66 90                	xchg   %ax,%ax
   10980:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   10985:	c3                   	retq   
   10986:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1098d:	00 00 00 

0000000000010990 <_DkSegmentRegisterGet>:
   10990:	55                   	push   %rbp
   10991:	83 ff 01             	cmp    $0x1,%edi
   10994:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   10999:	48 89 e5             	mov    %rsp,%rbp
   1099c:	75 0e                	jne    109ac <_DkSegmentRegisterGet+0x1c>
   1099e:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   109a5:	00 00 
   109a7:	48 89 06             	mov    %rax,(%rsi)
   109aa:	31 c0                	xor    %eax,%eax
   109ac:	5d                   	pop    %rbp
   109ad:	c3                   	retq   
   109ae:	66 90                	xchg   %ax,%ax

00000000000109b0 <get_cpuid_from_cache>:
   109b0:	55                   	push   %rbp
   109b1:	48 89 e5             	mov    %rsp,%rbp
   109b4:	41 55                	push   %r13
   109b6:	41 54                	push   %r12
   109b8:	53                   	push   %rbx
   109b9:	41 89 fc             	mov    %edi,%r12d
   109bc:	48 8d 3d 3d ba 21 04 	lea    0x421ba3d(%rip),%rdi        # 422c400 <cpuid_cache_lock>
   109c3:	48 89 d3             	mov    %rdx,%rbx
   109c6:	41 89 f5             	mov    %esi,%r13d
   109c9:	48 83 ec 08          	sub    $0x8,%rsp
   109cd:	e8 0e 03 00 00       	callq  10ce0 <_DkSpinLock>
   109d2:	8b 15 0c b3 21 04    	mov    0x421b30c(%rip),%edx        # 422bce4 <pal_cpuid_cache_top>
   109d8:	85 d2                	test   %edx,%edx
   109da:	0f 8e 88 00 00 00    	jle    10a68 <get_cpuid_from_cache+0xb8>
   109e0:	48 8d 05 1d b3 21 04 	lea    0x421b31d(%rip),%rax        # 422bd04 <pal_cpuid_cache+0x4>
   109e7:	31 c9                	xor    %ecx,%ecx
   109e9:	eb 10                	jmp    109fb <get_cpuid_from_cache+0x4b>
   109eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   109f0:	83 c1 01             	add    $0x1,%ecx
   109f3:	48 83 c0 1c          	add    $0x1c,%rax
   109f7:	39 d1                	cmp    %edx,%ecx
   109f9:	74 6d                	je     10a68 <get_cpuid_from_cache+0xb8>
   109fb:	44 39 20             	cmp    %r12d,(%rax)
   109fe:	75 f0                	jne    109f0 <get_cpuid_from_cache+0x40>
   10a00:	44 39 68 04          	cmp    %r13d,0x4(%rax)
   10a04:	75 ea                	jne    109f0 <get_cpuid_from_cache+0x40>
   10a06:	48 63 c9             	movslq %ecx,%rcx
   10a09:	8b 35 d1 b2 21 04    	mov    0x421b2d1(%rip),%esi        # 422bce0 <pal_cpuid_clock>
   10a0f:	48 8d 3d ea b9 21 04 	lea    0x421b9ea(%rip),%rdi        # 422c400 <cpuid_cache_lock>
   10a16:	48 8d 04 8d 00 00 00 	lea    0x0(,%rcx,4),%rax
   10a1d:	00 
   10a1e:	48 c1 e1 05          	shl    $0x5,%rcx
   10a22:	48 29 c1             	sub    %rax,%rcx
   10a25:	48 8d 05 d4 b2 21 04 	lea    0x421b2d4(%rip),%rax        # 422bd00 <pal_cpuid_cache>
   10a2c:	48 01 c8             	add    %rcx,%rax
   10a2f:	8b 50 0c             	mov    0xc(%rax),%edx
   10a32:	89 13                	mov    %edx,(%rbx)
   10a34:	8b 50 10             	mov    0x10(%rax),%edx
   10a37:	89 53 04             	mov    %edx,0x4(%rbx)
   10a3a:	8b 50 14             	mov    0x14(%rax),%edx
   10a3d:	89 53 08             	mov    %edx,0x8(%rbx)
   10a40:	8b 50 18             	mov    0x18(%rax),%edx
   10a43:	89 53 0c             	mov    %edx,0xc(%rbx)
   10a46:	8d 56 01             	lea    0x1(%rsi),%edx
   10a49:	89 10                	mov    %edx,(%rax)
   10a4b:	89 15 8f b2 21 04    	mov    %edx,0x421b28f(%rip)        # 422bce0 <pal_cpuid_clock>
   10a51:	e8 ba 02 00 00       	callq  10d10 <_DkSpinUnlock>
   10a56:	48 83 c4 08          	add    $0x8,%rsp
   10a5a:	31 c0                	xor    %eax,%eax
   10a5c:	5b                   	pop    %rbx
   10a5d:	41 5c                	pop    %r12
   10a5f:	41 5d                	pop    %r13
   10a61:	5d                   	pop    %rbp
   10a62:	c3                   	retq   
   10a63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10a68:	48 8d 3d 91 b9 21 04 	lea    0x421b991(%rip),%rdi        # 422c400 <cpuid_cache_lock>
   10a6f:	e8 9c 02 00 00       	callq  10d10 <_DkSpinUnlock>
   10a74:	48 83 c4 08          	add    $0x8,%rsp
   10a78:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   10a7d:	5b                   	pop    %rbx
   10a7e:	41 5c                	pop    %r12
   10a80:	41 5d                	pop    %r13
   10a82:	5d                   	pop    %rbp
   10a83:	c3                   	retq   
   10a84:	66 90                	xchg   %ax,%ax
   10a86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10a8d:	00 00 00 

0000000000010a90 <add_cpuid_to_cache>:
   10a90:	55                   	push   %rbp
   10a91:	48 89 e5             	mov    %rsp,%rbp
   10a94:	41 55                	push   %r13
   10a96:	41 54                	push   %r12
   10a98:	53                   	push   %rbx
   10a99:	89 fb                	mov    %edi,%ebx
   10a9b:	48 8d 3d 5e b9 21 04 	lea    0x421b95e(%rip),%rdi        # 422c400 <cpuid_cache_lock>
   10aa2:	41 89 f4             	mov    %esi,%r12d
   10aa5:	49 89 d5             	mov    %rdx,%r13
   10aa8:	48 83 ec 08          	sub    $0x8,%rsp
   10aac:	e8 2f 02 00 00       	callq  10ce0 <_DkSpinLock>
   10ab1:	48 63 0d 2c b2 21 04 	movslq 0x421b22c(%rip),%rcx        # 422bce4 <pal_cpuid_cache_top>
   10ab8:	83 f9 3f             	cmp    $0x3f,%ecx
   10abb:	7f 6b                	jg     10b28 <add_cpuid_to_cache+0x98>
   10abd:	85 c9                	test   %ecx,%ecx
   10abf:	48 8d 3d 3a b2 21 04 	lea    0x421b23a(%rip),%rdi        # 422bd00 <pal_cpuid_cache>
   10ac6:	0f 8e c4 00 00 00    	jle    10b90 <add_cpuid_to_cache+0x100>
   10acc:	8d 51 ff             	lea    -0x1(%rcx),%edx
   10acf:	48 8d 3d 2a b2 21 04 	lea    0x421b22a(%rip),%rdi        # 422bd00 <pal_cpuid_cache>
   10ad6:	48 8d 05 27 b2 21 04 	lea    0x421b227(%rip),%rax        # 422bd04 <pal_cpuid_cache+0x4>
   10add:	48 8d 34 95 00 00 00 	lea    0x0(,%rdx,4),%rsi
   10ae4:	00 
   10ae5:	48 c1 e2 05          	shl    $0x5,%rdx
   10ae9:	48 29 f2             	sub    %rsi,%rdx
   10aec:	48 8d 54 17 20       	lea    0x20(%rdi,%rdx,1),%rdx
   10af1:	eb 12                	jmp    10b05 <add_cpuid_to_cache+0x75>
   10af3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10af8:	48 83 c0 1c          	add    $0x1c,%rax
   10afc:	48 39 d0             	cmp    %rdx,%rax
   10aff:	0f 84 8b 00 00 00    	je     10b90 <add_cpuid_to_cache+0x100>
   10b05:	39 18                	cmp    %ebx,(%rax)
   10b07:	75 ef                	jne    10af8 <add_cpuid_to_cache+0x68>
   10b09:	44 39 60 04          	cmp    %r12d,0x4(%rax)
   10b0d:	75 e9                	jne    10af8 <add_cpuid_to_cache+0x68>
   10b0f:	48 83 c4 08          	add    $0x8,%rsp
   10b13:	48 8d 3d e6 b8 21 04 	lea    0x421b8e6(%rip),%rdi        # 422c400 <cpuid_cache_lock>
   10b1a:	5b                   	pop    %rbx
   10b1b:	41 5c                	pop    %r12
   10b1d:	41 5d                	pop    %r13
   10b1f:	5d                   	pop    %rbp
   10b20:	e9 eb 01 00 00       	jmpq   10d10 <_DkSpinUnlock>
   10b25:	0f 1f 00             	nopl   (%rax)
   10b28:	3b 1d d6 b1 21 04    	cmp    0x421b1d6(%rip),%ebx        # 422bd04 <pal_cpuid_cache+0x4>
   10b2e:	8b 15 cc b1 21 04    	mov    0x421b1cc(%rip),%edx        # 422bd00 <pal_cpuid_cache>
   10b34:	0f 84 ae 00 00 00    	je     10be8 <add_cpuid_to_cache+0x158>
   10b3a:	83 e9 02             	sub    $0x2,%ecx
   10b3d:	48 8d 3d bc b1 21 04 	lea    0x421b1bc(%rip),%rdi        # 422bd00 <pal_cpuid_cache>
   10b44:	48 8d 05 d1 b1 21 04 	lea    0x421b1d1(%rip),%rax        # 422bd1c <pal_cpuid_cache+0x1c>
   10b4b:	48 8d 34 8d 00 00 00 	lea    0x0(,%rcx,4),%rsi
   10b52:	00 
   10b53:	48 c1 e1 05          	shl    $0x5,%rcx
   10b57:	48 29 f1             	sub    %rsi,%rcx
   10b5a:	48 8d 74 0f 38       	lea    0x38(%rdi,%rcx,1),%rsi
   10b5f:	eb 1b                	jmp    10b7c <add_cpuid_to_cache+0xec>
   10b61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10b68:	8b 08                	mov    (%rax),%ecx
   10b6a:	39 d1                	cmp    %edx,%ecx
   10b6c:	76 05                	jbe    10b73 <add_cpuid_to_cache+0xe3>
   10b6e:	89 ca                	mov    %ecx,%edx
   10b70:	48 89 c7             	mov    %rax,%rdi
   10b73:	48 83 c0 1c          	add    $0x1c,%rax
   10b77:	48 39 f0             	cmp    %rsi,%rax
   10b7a:	74 2f                	je     10bab <add_cpuid_to_cache+0x11b>
   10b7c:	3b 58 04             	cmp    0x4(%rax),%ebx
   10b7f:	75 e7                	jne    10b68 <add_cpuid_to_cache+0xd8>
   10b81:	44 3b 60 08          	cmp    0x8(%rax),%r12d
   10b85:	75 e1                	jne    10b68 <add_cpuid_to_cache+0xd8>
   10b87:	eb 86                	jmp    10b0f <add_cpuid_to_cache+0x7f>
   10b89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10b90:	8d 41 01             	lea    0x1(%rcx),%eax
   10b93:	89 05 4b b1 21 04    	mov    %eax,0x421b14b(%rip)        # 422bce4 <pal_cpuid_cache_top>
   10b99:	48 8d 04 8d 00 00 00 	lea    0x0(,%rcx,4),%rax
   10ba0:	00 
   10ba1:	48 c1 e1 05          	shl    $0x5,%rcx
   10ba5:	48 29 c1             	sub    %rax,%rcx
   10ba8:	48 01 cf             	add    %rcx,%rdi
   10bab:	89 5f 04             	mov    %ebx,0x4(%rdi)
   10bae:	44 89 67 08          	mov    %r12d,0x8(%rdi)
   10bb2:	41 8b 45 00          	mov    0x0(%r13),%eax
   10bb6:	89 47 0c             	mov    %eax,0xc(%rdi)
   10bb9:	41 8b 45 04          	mov    0x4(%r13),%eax
   10bbd:	89 47 10             	mov    %eax,0x10(%rdi)
   10bc0:	41 8b 45 08          	mov    0x8(%r13),%eax
   10bc4:	89 47 14             	mov    %eax,0x14(%rdi)
   10bc7:	41 8b 45 0c          	mov    0xc(%r13),%eax
   10bcb:	89 47 18             	mov    %eax,0x18(%rdi)
   10bce:	8b 05 0c b1 21 04    	mov    0x421b10c(%rip),%eax        # 422bce0 <pal_cpuid_clock>
   10bd4:	83 c0 01             	add    $0x1,%eax
   10bd7:	89 05 03 b1 21 04    	mov    %eax,0x421b103(%rip)        # 422bce0 <pal_cpuid_clock>
   10bdd:	89 07                	mov    %eax,(%rdi)
   10bdf:	e9 2b ff ff ff       	jmpq   10b0f <add_cpuid_to_cache+0x7f>
   10be4:	0f 1f 40 00          	nopl   0x0(%rax)
   10be8:	44 3b 25 19 b1 21 04 	cmp    0x421b119(%rip),%r12d        # 422bd08 <pal_cpuid_cache+0x8>
   10bef:	0f 85 45 ff ff ff    	jne    10b3a <add_cpuid_to_cache+0xaa>
   10bf5:	e9 15 ff ff ff       	jmpq   10b0f <add_cpuid_to_cache+0x7f>
   10bfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010c00 <_DkCpuIdRetrieve>:
   10c00:	55                   	push   %rbp
   10c01:	8d 47 f9             	lea    -0x7(%rdi),%eax
   10c04:	48 89 e5             	mov    %rsp,%rbp
   10c07:	41 55                	push   %r13
   10c09:	41 54                	push   %r12
   10c0b:	53                   	push   %rbx
   10c0c:	41 89 f4             	mov    %esi,%r12d
   10c0f:	89 fb                	mov    %edi,%ebx
   10c11:	49 89 d5             	mov    %rdx,%r13
   10c14:	48 83 ec 08          	sub    $0x8,%rsp
   10c18:	83 e0 fb             	and    $0xfffffffb,%eax
   10c1b:	74 0c                	je     10c29 <_DkCpuIdRetrieve+0x29>
   10c1d:	83 ff 04             	cmp    $0x4,%edi
   10c20:	b8 00 00 00 00       	mov    $0x0,%eax
   10c25:	44 0f 45 e0          	cmovne %eax,%r12d
   10c29:	4c 89 ea             	mov    %r13,%rdx
   10c2c:	44 89 e6             	mov    %r12d,%esi
   10c2f:	89 df                	mov    %ebx,%edi
   10c31:	e8 7a fd ff ff       	callq  109b0 <get_cpuid_from_cache>
   10c36:	85 c0                	test   %eax,%eax
   10c38:	75 0e                	jne    10c48 <_DkCpuIdRetrieve+0x48>
   10c3a:	48 83 c4 08          	add    $0x8,%rsp
   10c3e:	5b                   	pop    %rbx
   10c3f:	41 5c                	pop    %r12
   10c41:	41 5d                	pop    %r13
   10c43:	5d                   	pop    %rbp
   10c44:	c3                   	retq   
   10c45:	0f 1f 00             	nopl   (%rax)
   10c48:	4c 89 ea             	mov    %r13,%rdx
   10c4b:	44 89 e6             	mov    %r12d,%esi
   10c4e:	89 df                	mov    %ebx,%edi
   10c50:	e8 2b 03 00 00       	callq  10f80 <ocall_cpuid>
   10c55:	85 c0                	test   %eax,%eax
   10c57:	78 1f                	js     10c78 <_DkCpuIdRetrieve+0x78>
   10c59:	4c 89 ea             	mov    %r13,%rdx
   10c5c:	44 89 e6             	mov    %r12d,%esi
   10c5f:	89 df                	mov    %ebx,%edi
   10c61:	e8 2a fe ff ff       	callq  10a90 <add_cpuid_to_cache>
   10c66:	48 83 c4 08          	add    $0x8,%rsp
   10c6a:	31 c0                	xor    %eax,%eax
   10c6c:	5b                   	pop    %rbx
   10c6d:	41 5c                	pop    %r12
   10c6f:	41 5d                	pop    %r13
   10c71:	5d                   	pop    %rbp
   10c72:	c3                   	retq   
   10c73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10c78:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   10c7d:	eb bb                	jmp    10c3a <_DkCpuIdRetrieve+0x3a>
   10c7f:	90                   	nop

0000000000010c80 <gipc_open>:
   10c80:	55                   	push   %rbp
   10c81:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   10c86:	48 89 e5             	mov    %rsp,%rbp
   10c89:	5d                   	pop    %rbp
   10c8a:	c3                   	retq   
   10c8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010c90 <gipc_close>:
   10c90:	55                   	push   %rbp
   10c91:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   10c96:	48 89 e5             	mov    %rsp,%rbp
   10c99:	5d                   	pop    %rbp
   10c9a:	c3                   	retq   
   10c9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010ca0 <gipc_getrealpath>:
   10ca0:	55                   	push   %rbp
   10ca1:	31 c0                	xor    %eax,%eax
   10ca3:	48 89 e5             	mov    %rsp,%rbp
   10ca6:	5d                   	pop    %rbp
   10ca7:	c3                   	retq   
   10ca8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10caf:	00 

0000000000010cb0 <_DkCreatePhysicalMemoryChannel>:
   10cb0:	55                   	push   %rbp
   10cb1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   10cb6:	48 89 e5             	mov    %rsp,%rbp
   10cb9:	5d                   	pop    %rbp
   10cba:	c3                   	retq   
   10cbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010cc0 <_DkPhysicalMemoryCommit>:
   10cc0:	55                   	push   %rbp
   10cc1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   10cc6:	48 89 e5             	mov    %rsp,%rbp
   10cc9:	5d                   	pop    %rbp
   10cca:	c3                   	retq   
   10ccb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010cd0 <_DkPhysicalMemoryMap>:
   10cd0:	55                   	push   %rbp
   10cd1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   10cd6:	48 89 e5             	mov    %rsp,%rbp
   10cd9:	5d                   	pop    %rbp
   10cda:	c3                   	retq   
   10cdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010ce0 <_DkSpinLock>:
   10ce0:	55                   	push   %rbp
   10ce1:	31 c9                	xor    %ecx,%ecx
   10ce3:	ba 01 00 00 00       	mov    $0x1,%edx
   10ce8:	48 89 e5             	mov    %rsp,%rbp
   10ceb:	eb 05                	jmp    10cf2 <_DkSpinLock+0x12>
   10ced:	0f 1f 00             	nopl   (%rax)
   10cf0:	f3 90                	pause  
   10cf2:	48 8b 07             	mov    (%rdi),%rax
   10cf5:	85 c0                	test   %eax,%eax
   10cf7:	75 f7                	jne    10cf0 <_DkSpinLock+0x10>
   10cf9:	48 89 c8             	mov    %rcx,%rax
   10cfc:	f0 48 0f b1 17       	lock cmpxchg %rdx,(%rdi)
   10d01:	48 85 c0             	test   %rax,%rax
   10d04:	75 ea                	jne    10cf0 <_DkSpinLock+0x10>
   10d06:	5d                   	pop    %rbp
   10d07:	c3                   	retq   
   10d08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10d0f:	00 

0000000000010d10 <_DkSpinUnlock>:
   10d10:	55                   	push   %rbp
   10d11:	31 c0                	xor    %eax,%eax
   10d13:	48 89 e5             	mov    %rsp,%rbp
   10d16:	48 89 07             	mov    %rax,(%rdi)
   10d19:	5d                   	pop    %rbp
   10d1a:	c3                   	retq   
   10d1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000010d20 <ocall_exit>:
   10d20:	55                   	push   %rbp
   10d21:	31 f6                	xor    %esi,%esi
   10d23:	31 ff                	xor    %edi,%edi
   10d25:	48 89 e5             	mov    %rsp,%rbp
   10d28:	e8 c0 44 00 00       	callq  151ed <sgx_ocall>
   10d2d:	31 c0                	xor    %eax,%eax
   10d2f:	5d                   	pop    %rbp
   10d30:	c3                   	retq   
   10d31:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10d36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10d3d:	00 00 00 

0000000000010d40 <ocall_print_string>:
   10d40:	55                   	push   %rbp
   10d41:	48 89 e5             	mov    %rsp,%rbp
   10d44:	41 57                	push   %r15
   10d46:	41 56                	push   %r14
   10d48:	41 55                	push   %r13
   10d4a:	41 54                	push   %r12
   10d4c:	49 89 fc             	mov    %rdi,%r12
   10d4f:	53                   	push   %rbx
   10d50:	bf 0c 00 00 00       	mov    $0xc,%edi
   10d55:	41 89 f5             	mov    %esi,%r13d
   10d58:	48 83 ec 08          	sub    $0x8,%rsp
   10d5c:	e8 9f 21 00 00       	callq  12f00 <sgx_ocalloc>
   10d61:	48 85 c0             	test   %rax,%rax
   10d64:	74 72                	je     10dd8 <ocall_print_string+0x98>
   10d66:	4d 85 e4             	test   %r12,%r12
   10d69:	74 6d                	je     10dd8 <ocall_print_string+0x98>
   10d6b:	45 85 ed             	test   %r13d,%r13d
   10d6e:	74 68                	je     10dd8 <ocall_print_string+0x98>
   10d70:	45 89 ee             	mov    %r13d,%r14d
   10d73:	4c 89 e7             	mov    %r12,%rdi
   10d76:	48 89 c3             	mov    %rax,%rbx
   10d79:	4c 89 f6             	mov    %r14,%rsi
   10d7c:	e8 4f 21 00 00       	callq  12ed0 <sgx_is_within_enclave>
   10d81:	84 c0                	test   %al,%al
   10d83:	74 21                	je     10da6 <ocall_print_string+0x66>
   10d85:	4c 89 f7             	mov    %r14,%rdi
   10d88:	e8 73 21 00 00       	callq  12f00 <sgx_ocalloc>
   10d8d:	48 85 c0             	test   %rax,%rax
   10d90:	49 89 c7             	mov    %rax,%r15
   10d93:	74 43                	je     10dd8 <ocall_print_string+0x98>
   10d95:	4c 89 e6             	mov    %r12,%rsi
   10d98:	4c 89 f2             	mov    %r14,%rdx
   10d9b:	48 89 c7             	mov    %rax,%rdi
   10d9e:	4d 89 fc             	mov    %r15,%r12
   10da1:	e8 4a 4e 00 00       	callq  15bf0 <memcpy>
   10da6:	48 89 de             	mov    %rbx,%rsi
   10da9:	4c 89 23             	mov    %r12,(%rbx)
   10dac:	44 89 6b 08          	mov    %r13d,0x8(%rbx)
   10db0:	bf 01 00 00 00       	mov    $0x1,%edi
   10db5:	e8 33 44 00 00       	callq  151ed <sgx_ocall>
   10dba:	89 c3                	mov    %eax,%ebx
   10dbc:	e8 5f 21 00 00       	callq  12f20 <sgx_ocfree>
   10dc1:	89 d8                	mov    %ebx,%eax
   10dc3:	48 83 c4 08          	add    $0x8,%rsp
   10dc7:	5b                   	pop    %rbx
   10dc8:	41 5c                	pop    %r12
   10dca:	41 5d                	pop    %r13
   10dcc:	41 5e                	pop    %r14
   10dce:	41 5f                	pop    %r15
   10dd0:	5d                   	pop    %rbp
   10dd1:	c3                   	retq   
   10dd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10dd8:	e8 43 21 00 00       	callq  12f20 <sgx_ocfree>
   10ddd:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   10de2:	eb df                	jmp    10dc3 <ocall_print_string+0x83>
   10de4:	66 90                	xchg   %ax,%ax
   10de6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10ded:	00 00 00 

0000000000010df0 <ocall_alloc_untrusted>:
   10df0:	55                   	push   %rbp
   10df1:	48 89 e5             	mov    %rsp,%rbp
   10df4:	41 56                	push   %r14
   10df6:	41 55                	push   %r13
   10df8:	41 54                	push   %r12
   10dfa:	53                   	push   %rbx
   10dfb:	49 89 fd             	mov    %rdi,%r13
   10dfe:	bf 10 00 00 00       	mov    $0x10,%edi
   10e03:	49 89 f6             	mov    %rsi,%r14
   10e06:	e8 f5 20 00 00       	callq  12f00 <sgx_ocalloc>
   10e0b:	48 85 c0             	test   %rax,%rax
   10e0e:	74 48                	je     10e58 <ocall_alloc_untrusted+0x68>
   10e10:	4c 89 28             	mov    %r13,(%rax)
   10e13:	48 89 c6             	mov    %rax,%rsi
   10e16:	bf 02 00 00 00       	mov    $0x2,%edi
   10e1b:	48 89 c3             	mov    %rax,%rbx
   10e1e:	e8 ca 43 00 00       	callq  151ed <sgx_ocall>
   10e23:	85 c0                	test   %eax,%eax
   10e25:	41 89 c4             	mov    %eax,%r12d
   10e28:	75 17                	jne    10e41 <ocall_alloc_untrusted+0x51>
   10e2a:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   10e2e:	4c 89 ee             	mov    %r13,%rsi
   10e31:	e8 9a 20 00 00       	callq  12ed0 <sgx_is_within_enclave>
   10e36:	84 c0                	test   %al,%al
   10e38:	75 1e                	jne    10e58 <ocall_alloc_untrusted+0x68>
   10e3a:	48 8b 43 08          	mov    0x8(%rbx),%rax
   10e3e:	49 89 06             	mov    %rax,(%r14)
   10e41:	e8 da 20 00 00       	callq  12f20 <sgx_ocfree>
   10e46:	44 89 e0             	mov    %r12d,%eax
   10e49:	5b                   	pop    %rbx
   10e4a:	41 5c                	pop    %r12
   10e4c:	41 5d                	pop    %r13
   10e4e:	41 5e                	pop    %r14
   10e50:	5d                   	pop    %rbp
   10e51:	c3                   	retq   
   10e52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10e58:	e8 c3 20 00 00       	callq  12f20 <sgx_ocfree>
   10e5d:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   10e62:	eb e5                	jmp    10e49 <ocall_alloc_untrusted+0x59>
   10e64:	66 90                	xchg   %ax,%ax
   10e66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10e6d:	00 00 00 

0000000000010e70 <ocall_map_untrusted>:
   10e70:	55                   	push   %rbp
   10e71:	48 89 e5             	mov    %rsp,%rbp
   10e74:	41 57                	push   %r15
   10e76:	41 56                	push   %r14
   10e78:	41 55                	push   %r13
   10e7a:	41 54                	push   %r12
   10e7c:	41 89 ff             	mov    %edi,%r15d
   10e7f:	53                   	push   %rbx
   10e80:	bf 1e 00 00 00       	mov    $0x1e,%edi
   10e85:	49 89 d5             	mov    %rdx,%r13
   10e88:	41 89 cc             	mov    %ecx,%r12d
   10e8b:	4d 89 c6             	mov    %r8,%r14
   10e8e:	48 83 ec 18          	sub    $0x18,%rsp
   10e92:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
   10e96:	e8 65 20 00 00       	callq  12f00 <sgx_ocalloc>
   10e9b:	48 85 c0             	test   %rax,%rax
   10e9e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   10ea2:	74 5c                	je     10f00 <ocall_map_untrusted+0x90>
   10ea4:	48 89 70 04          	mov    %rsi,0x4(%rax)
   10ea8:	66 44 89 60 14       	mov    %r12w,0x14(%rax)
   10ead:	48 89 c6             	mov    %rax,%rsi
   10eb0:	44 89 38             	mov    %r15d,(%rax)
   10eb3:	4c 89 68 0c          	mov    %r13,0xc(%rax)
   10eb7:	bf 03 00 00 00       	mov    $0x3,%edi
   10ebc:	48 89 c3             	mov    %rax,%rbx
   10ebf:	e8 29 43 00 00       	callq  151ed <sgx_ocall>
   10ec4:	85 c0                	test   %eax,%eax
   10ec6:	41 89 c4             	mov    %eax,%r12d
   10ec9:	75 17                	jne    10ee2 <ocall_map_untrusted+0x72>
   10ecb:	48 8b 7b 16          	mov    0x16(%rbx),%rdi
   10ecf:	4c 89 ee             	mov    %r13,%rsi
   10ed2:	e8 f9 1f 00 00       	callq  12ed0 <sgx_is_within_enclave>
   10ed7:	84 c0                	test   %al,%al
   10ed9:	75 25                	jne    10f00 <ocall_map_untrusted+0x90>
   10edb:	48 8b 43 16          	mov    0x16(%rbx),%rax
   10edf:	49 89 06             	mov    %rax,(%r14)
   10ee2:	e8 39 20 00 00       	callq  12f20 <sgx_ocfree>
   10ee7:	44 89 e0             	mov    %r12d,%eax
   10eea:	48 83 c4 18          	add    $0x18,%rsp
   10eee:	5b                   	pop    %rbx
   10eef:	41 5c                	pop    %r12
   10ef1:	41 5d                	pop    %r13
   10ef3:	41 5e                	pop    %r14
   10ef5:	41 5f                	pop    %r15
   10ef7:	5d                   	pop    %rbp
   10ef8:	c3                   	retq   
   10ef9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10f00:	e8 1b 20 00 00       	callq  12f20 <sgx_ocfree>
   10f05:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   10f0a:	eb de                	jmp    10eea <ocall_map_untrusted+0x7a>
   10f0c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010f10 <ocall_unmap_untrusted>:
   10f10:	55                   	push   %rbp
   10f11:	48 89 e5             	mov    %rsp,%rbp
   10f14:	41 54                	push   %r12
   10f16:	53                   	push   %rbx
   10f17:	49 89 fc             	mov    %rdi,%r12
   10f1a:	48 89 f3             	mov    %rsi,%rbx
   10f1d:	e8 ae 1f 00 00       	callq  12ed0 <sgx_is_within_enclave>
   10f22:	84 c0                	test   %al,%al
   10f24:	75 3a                	jne    10f60 <ocall_unmap_untrusted+0x50>
   10f26:	bf 10 00 00 00       	mov    $0x10,%edi
   10f2b:	e8 d0 1f 00 00       	callq  12f00 <sgx_ocalloc>
   10f30:	48 85 c0             	test   %rax,%rax
   10f33:	74 37                	je     10f6c <ocall_unmap_untrusted+0x5c>
   10f35:	48 89 58 08          	mov    %rbx,0x8(%rax)
   10f39:	48 89 c6             	mov    %rax,%rsi
   10f3c:	bf 04 00 00 00       	mov    $0x4,%edi
   10f41:	4c 89 20             	mov    %r12,(%rax)
   10f44:	e8 a4 42 00 00       	callq  151ed <sgx_ocall>
   10f49:	89 c3                	mov    %eax,%ebx
   10f4b:	e8 d0 1f 00 00       	callq  12f20 <sgx_ocfree>
   10f50:	89 d8                	mov    %ebx,%eax
   10f52:	5b                   	pop    %rbx
   10f53:	41 5c                	pop    %r12
   10f55:	5d                   	pop    %rbp
   10f56:	c3                   	retq   
   10f57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10f5e:	00 00 
   10f60:	e8 bb 1f 00 00       	callq  12f20 <sgx_ocfree>
   10f65:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   10f6a:	eb e6                	jmp    10f52 <ocall_unmap_untrusted+0x42>
   10f6c:	e8 af 1f 00 00       	callq  12f20 <sgx_ocfree>
   10f71:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   10f76:	eb da                	jmp    10f52 <ocall_unmap_untrusted+0x42>
   10f78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10f7f:	00 

0000000000010f80 <ocall_cpuid>:
   10f80:	55                   	push   %rbp
   10f81:	48 89 e5             	mov    %rsp,%rbp
   10f84:	41 56                	push   %r14
   10f86:	41 55                	push   %r13
   10f88:	41 54                	push   %r12
   10f8a:	53                   	push   %rbx
   10f8b:	41 89 fe             	mov    %edi,%r14d
   10f8e:	bf 18 00 00 00       	mov    $0x18,%edi
   10f93:	41 89 f4             	mov    %esi,%r12d
   10f96:	49 89 d5             	mov    %rdx,%r13
   10f99:	e8 62 1f 00 00       	callq  12f00 <sgx_ocalloc>
   10f9e:	48 85 c0             	test   %rax,%rax
   10fa1:	74 53                	je     10ff6 <ocall_cpuid+0x76>
   10fa3:	44 89 60 04          	mov    %r12d,0x4(%rax)
   10fa7:	44 89 30             	mov    %r14d,(%rax)
   10faa:	48 89 c6             	mov    %rax,%rsi
   10fad:	bf 05 00 00 00       	mov    $0x5,%edi
   10fb2:	48 89 c3             	mov    %rax,%rbx
   10fb5:	e8 33 42 00 00       	callq  151ed <sgx_ocall>
   10fba:	85 c0                	test   %eax,%eax
   10fbc:	41 89 c4             	mov    %eax,%r12d
   10fbf:	74 17                	je     10fd8 <ocall_cpuid+0x58>
   10fc1:	e8 5a 1f 00 00       	callq  12f20 <sgx_ocfree>
   10fc6:	44 89 e0             	mov    %r12d,%eax
   10fc9:	5b                   	pop    %rbx
   10fca:	41 5c                	pop    %r12
   10fcc:	41 5d                	pop    %r13
   10fce:	41 5e                	pop    %r14
   10fd0:	5d                   	pop    %rbp
   10fd1:	c3                   	retq   
   10fd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10fd8:	8b 43 08             	mov    0x8(%rbx),%eax
   10fdb:	41 89 45 00          	mov    %eax,0x0(%r13)
   10fdf:	8b 43 0c             	mov    0xc(%rbx),%eax
   10fe2:	41 89 45 04          	mov    %eax,0x4(%r13)
   10fe6:	8b 43 10             	mov    0x10(%rbx),%eax
   10fe9:	41 89 45 08          	mov    %eax,0x8(%r13)
   10fed:	8b 43 14             	mov    0x14(%rbx),%eax
   10ff0:	41 89 45 0c          	mov    %eax,0xc(%r13)
   10ff4:	eb cb                	jmp    10fc1 <ocall_cpuid+0x41>
   10ff6:	e8 25 1f 00 00       	callq  12f20 <sgx_ocfree>
   10ffb:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   11000:	eb c7                	jmp    10fc9 <ocall_cpuid+0x49>
   11002:	0f 1f 40 00          	nopl   0x0(%rax)
   11006:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1100d:	00 00 00 

0000000000011010 <ocall_open>:
   11010:	55                   	push   %rbp
   11011:	48 89 e5             	mov    %rsp,%rbp
   11014:	41 57                	push   %r15
   11016:	41 56                	push   %r14
   11018:	41 55                	push   %r13
   1101a:	41 54                	push   %r12
   1101c:	49 89 fd             	mov    %rdi,%r13
   1101f:	53                   	push   %rbx
   11020:	31 db                	xor    %ebx,%ebx
   11022:	41 89 f7             	mov    %esi,%r15d
   11025:	41 89 d6             	mov    %edx,%r14d
   11028:	48 83 ec 18          	sub    $0x18,%rsp
   1102c:	48 85 ff             	test   %rdi,%rdi
   1102f:	74 08                	je     11039 <ocall_open+0x29>
   11031:	e8 3a 46 00 00       	callq  15670 <strlen>
   11036:	8d 58 01             	lea    0x1(%rax),%ebx
   11039:	bf 0e 00 00 00       	mov    $0xe,%edi
   1103e:	e8 bd 1e 00 00       	callq  12f00 <sgx_ocalloc>
   11043:	48 85 c0             	test   %rax,%rax
   11046:	49 89 c4             	mov    %rax,%r12
   11049:	74 75                	je     110c0 <ocall_open+0xb0>
   1104b:	48 63 db             	movslq %ebx,%rbx
   1104e:	4c 89 ef             	mov    %r13,%rdi
   11051:	48 89 de             	mov    %rbx,%rsi
   11054:	e8 77 1e 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11059:	84 c0                	test   %al,%al
   1105b:	74 26                	je     11083 <ocall_open+0x73>
   1105d:	48 89 df             	mov    %rbx,%rdi
   11060:	e8 9b 1e 00 00       	callq  12f00 <sgx_ocalloc>
   11065:	48 85 c0             	test   %rax,%rax
   11068:	74 56                	je     110c0 <ocall_open+0xb0>
   1106a:	4c 89 ee             	mov    %r13,%rsi
   1106d:	48 89 da             	mov    %rbx,%rdx
   11070:	48 89 c7             	mov    %rax,%rdi
   11073:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   11077:	e8 74 4b 00 00       	callq  15bf0 <memcpy>
   1107c:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   11080:	49 89 cd             	mov    %rcx,%r13
   11083:	4c 89 e6             	mov    %r12,%rsi
   11086:	bf 06 00 00 00       	mov    $0x6,%edi
   1108b:	4d 89 2c 24          	mov    %r13,(%r12)
   1108f:	45 89 7c 24 08       	mov    %r15d,0x8(%r12)
   11094:	66 45 89 74 24 0c    	mov    %r14w,0xc(%r12)
   1109a:	e8 4e 41 00 00       	callq  151ed <sgx_ocall>
   1109f:	89 c3                	mov    %eax,%ebx
   110a1:	e8 7a 1e 00 00       	callq  12f20 <sgx_ocfree>
   110a6:	89 d8                	mov    %ebx,%eax
   110a8:	48 83 c4 18          	add    $0x18,%rsp
   110ac:	5b                   	pop    %rbx
   110ad:	41 5c                	pop    %r12
   110af:	41 5d                	pop    %r13
   110b1:	41 5e                	pop    %r14
   110b3:	41 5f                	pop    %r15
   110b5:	5d                   	pop    %rbp
   110b6:	c3                   	retq   
   110b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   110be:	00 00 
   110c0:	e8 5b 1e 00 00       	callq  12f20 <sgx_ocfree>
   110c5:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   110ca:	eb dc                	jmp    110a8 <ocall_open+0x98>
   110cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000110d0 <ocall_close>:
   110d0:	55                   	push   %rbp
   110d1:	48 89 e5             	mov    %rsp,%rbp
   110d4:	53                   	push   %rbx
   110d5:	89 fb                	mov    %edi,%ebx
   110d7:	bf 04 00 00 00       	mov    $0x4,%edi
   110dc:	48 83 ec 08          	sub    $0x8,%rsp
   110e0:	e8 1b 1e 00 00       	callq  12f00 <sgx_ocalloc>
   110e5:	48 85 c0             	test   %rax,%rax
   110e8:	74 1f                	je     11109 <ocall_close+0x39>
   110ea:	89 18                	mov    %ebx,(%rax)
   110ec:	48 89 c6             	mov    %rax,%rsi
   110ef:	bf 07 00 00 00       	mov    $0x7,%edi
   110f4:	e8 f4 40 00 00       	callq  151ed <sgx_ocall>
   110f9:	89 c3                	mov    %eax,%ebx
   110fb:	e8 20 1e 00 00       	callq  12f20 <sgx_ocfree>
   11100:	89 d8                	mov    %ebx,%eax
   11102:	48 83 c4 08          	add    $0x8,%rsp
   11106:	5b                   	pop    %rbx
   11107:	5d                   	pop    %rbp
   11108:	c3                   	retq   
   11109:	e8 12 1e 00 00       	callq  12f20 <sgx_ocfree>
   1110e:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   11113:	eb ed                	jmp    11102 <ocall_close+0x32>
   11115:	90                   	nop
   11116:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1111d:	00 00 00 

0000000000011120 <ocall_read>:
   11120:	55                   	push   %rbp
   11121:	48 89 e5             	mov    %rsp,%rbp
   11124:	41 56                	push   %r14
   11126:	41 55                	push   %r13
   11128:	41 54                	push   %r12
   1112a:	53                   	push   %rbx
   1112b:	41 89 fc             	mov    %edi,%r12d
   1112e:	49 89 f6             	mov    %rsi,%r14
   11131:	89 d3                	mov    %edx,%ebx
   11133:	48 83 ec 10          	sub    $0x10,%rsp
   11137:	81 fa 00 10 00 00    	cmp    $0x1000,%edx
   1113d:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   11144:	00 
   11145:	76 22                	jbe    11169 <ocall_read+0x49>
   11147:	48 8d 05 92 d5 21 04 	lea    0x421d592(%rip),%rax        # 422e6e0 <pal_state>
   1114e:	89 d7                	mov    %edx,%edi
   11150:	48 8d 75 d8          	lea    -0x28(%rbp),%rsi
   11154:	48 03 78 58          	add    0x58(%rax),%rdi
   11158:	48 23 78 60          	and    0x60(%rax),%rdi
   1115c:	e8 8f fc ff ff       	callq  10df0 <ocall_alloc_untrusted>
   11161:	85 c0                	test   %eax,%eax
   11163:	0f 88 87 00 00 00    	js     111f0 <ocall_read+0xd0>
   11169:	bf 10 00 00 00       	mov    $0x10,%edi
   1116e:	e8 8d 1d 00 00       	callq  12f00 <sgx_ocalloc>
   11173:	48 85 c0             	test   %rax,%rax
   11176:	49 89 c5             	mov    %rax,%r13
   11179:	0f 84 85 00 00 00    	je     11204 <ocall_read+0xe4>
   1117f:	44 89 20             	mov    %r12d,(%rax)
   11182:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11186:	48 85 c0             	test   %rax,%rax
   11189:	74 6d                	je     111f8 <ocall_read+0xd8>
   1118b:	49 89 45 04          	mov    %rax,0x4(%r13)
   1118f:	41 89 5d 0c          	mov    %ebx,0xc(%r13)
   11193:	4c 89 ee             	mov    %r13,%rsi
   11196:	bf 08 00 00 00       	mov    $0x8,%edi
   1119b:	e8 4d 40 00 00       	callq  151ed <sgx_ocall>
   111a0:	85 c0                	test   %eax,%eax
   111a2:	41 89 c4             	mov    %eax,%r12d
   111a5:	7e 0f                	jle    111b6 <ocall_read+0x96>
   111a7:	49 8b 75 04          	mov    0x4(%r13),%rsi
   111ab:	48 63 d0             	movslq %eax,%rdx
   111ae:	4c 89 f7             	mov    %r14,%rdi
   111b1:	e8 3a 4a 00 00       	callq  15bf0 <memcpy>
   111b6:	e8 65 1d 00 00       	callq  12f20 <sgx_ocfree>
   111bb:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
   111bf:	48 85 ff             	test   %rdi,%rdi
   111c2:	74 16                	je     111da <ocall_read+0xba>
   111c4:	48 8d 05 15 d5 21 04 	lea    0x421d515(%rip),%rax        # 422e6e0 <pal_state>
   111cb:	89 de                	mov    %ebx,%esi
   111cd:	48 03 70 58          	add    0x58(%rax),%rsi
   111d1:	48 23 70 60          	and    0x60(%rax),%rsi
   111d5:	e8 36 fd ff ff       	callq  10f10 <ocall_unmap_untrusted>
   111da:	48 83 c4 10          	add    $0x10,%rsp
   111de:	44 89 e0             	mov    %r12d,%eax
   111e1:	5b                   	pop    %rbx
   111e2:	41 5c                	pop    %r12
   111e4:	41 5d                	pop    %r13
   111e6:	41 5e                	pop    %r14
   111e8:	5d                   	pop    %rbp
   111e9:	c3                   	retq   
   111ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   111f0:	41 89 c4             	mov    %eax,%r12d
   111f3:	eb e5                	jmp    111da <ocall_read+0xba>
   111f5:	0f 1f 00             	nopl   (%rax)
   111f8:	89 df                	mov    %ebx,%edi
   111fa:	e8 01 1d 00 00       	callq  12f00 <sgx_ocalloc>
   111ff:	48 85 c0             	test   %rax,%rax
   11202:	75 87                	jne    1118b <ocall_read+0x6b>
   11204:	e8 17 1d 00 00       	callq  12f20 <sgx_ocfree>
   11209:	41 bc fa ff ff ff    	mov    $0xfffffffa,%r12d
   1120f:	eb c9                	jmp    111da <ocall_read+0xba>
   11211:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11216:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1121d:	00 00 00 

0000000000011220 <ocall_write>:
   11220:	55                   	push   %rbp
   11221:	48 89 e5             	mov    %rsp,%rbp
   11224:	41 57                	push   %r15
   11226:	41 56                	push   %r14
   11228:	41 55                	push   %r13
   1122a:	41 54                	push   %r12
   1122c:	49 89 f6             	mov    %rsi,%r14
   1122f:	53                   	push   %rbx
   11230:	41 89 fc             	mov    %edi,%r12d
   11233:	41 89 d5             	mov    %edx,%r13d
   11236:	48 83 ec 18          	sub    $0x18,%rsp
   1123a:	81 fa 00 10 00 00    	cmp    $0x1000,%edx
   11240:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   11247:	00 
   11248:	76 22                	jbe    1126c <ocall_write+0x4c>
   1124a:	48 8d 05 8f d4 21 04 	lea    0x421d48f(%rip),%rax        # 422e6e0 <pal_state>
   11251:	89 d7                	mov    %edx,%edi
   11253:	48 8d 75 c8          	lea    -0x38(%rbp),%rsi
   11257:	48 03 78 58          	add    0x58(%rax),%rdi
   1125b:	48 23 78 60          	and    0x60(%rax),%rdi
   1125f:	e8 8c fb ff ff       	callq  10df0 <ocall_alloc_untrusted>
   11264:	85 c0                	test   %eax,%eax
   11266:	0f 88 84 00 00 00    	js     112f0 <ocall_write+0xd0>
   1126c:	bf 10 00 00 00       	mov    $0x10,%edi
   11271:	e8 8a 1c 00 00       	callq  12f00 <sgx_ocalloc>
   11276:	48 85 c0             	test   %rax,%rax
   11279:	48 89 c3             	mov    %rax,%rbx
   1127c:	0f 84 b1 00 00 00    	je     11333 <ocall_write+0x113>
   11282:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   11286:	44 89 20             	mov    %r12d,(%rax)
   11289:	48 85 ff             	test   %rdi,%rdi
   1128c:	74 6a                	je     112f8 <ocall_write+0xd8>
   1128e:	45 89 ec             	mov    %r13d,%r12d
   11291:	48 89 78 04          	mov    %rdi,0x4(%rax)
   11295:	4c 89 f6             	mov    %r14,%rsi
   11298:	4c 89 e2             	mov    %r12,%rdx
   1129b:	e8 50 49 00 00       	callq  15bf0 <memcpy>
   112a0:	48 89 de             	mov    %rbx,%rsi
   112a3:	bf 09 00 00 00       	mov    $0x9,%edi
   112a8:	44 89 6b 0c          	mov    %r13d,0xc(%rbx)
   112ac:	e8 3c 3f 00 00       	callq  151ed <sgx_ocall>
   112b1:	89 c3                	mov    %eax,%ebx
   112b3:	e8 68 1c 00 00       	callq  12f20 <sgx_ocfree>
   112b8:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   112bc:	48 85 ff             	test   %rdi,%rdi
   112bf:	74 17                	je     112d8 <ocall_write+0xb8>
   112c1:	48 8d 05 18 d4 21 04 	lea    0x421d418(%rip),%rax        # 422e6e0 <pal_state>
   112c8:	4c 89 e6             	mov    %r12,%rsi
   112cb:	48 03 70 58          	add    0x58(%rax),%rsi
   112cf:	48 23 70 60          	and    0x60(%rax),%rsi
   112d3:	e8 38 fc ff ff       	callq  10f10 <ocall_unmap_untrusted>
   112d8:	48 83 c4 18          	add    $0x18,%rsp
   112dc:	89 d8                	mov    %ebx,%eax
   112de:	5b                   	pop    %rbx
   112df:	41 5c                	pop    %r12
   112e1:	41 5d                	pop    %r13
   112e3:	41 5e                	pop    %r14
   112e5:	41 5f                	pop    %r15
   112e7:	5d                   	pop    %rbp
   112e8:	c3                   	retq   
   112e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   112f0:	89 c3                	mov    %eax,%ebx
   112f2:	eb e4                	jmp    112d8 <ocall_write+0xb8>
   112f4:	0f 1f 40 00          	nopl   0x0(%rax)
   112f8:	45 89 ec             	mov    %r13d,%r12d
   112fb:	4c 89 f7             	mov    %r14,%rdi
   112fe:	4c 89 e6             	mov    %r12,%rsi
   11301:	e8 ca 1b 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11306:	84 c0                	test   %al,%al
   11308:	75 06                	jne    11310 <ocall_write+0xf0>
   1130a:	4c 89 73 04          	mov    %r14,0x4(%rbx)
   1130e:	eb 90                	jmp    112a0 <ocall_write+0x80>
   11310:	4c 89 e7             	mov    %r12,%rdi
   11313:	e8 e8 1b 00 00       	callq  12f00 <sgx_ocalloc>
   11318:	48 85 c0             	test   %rax,%rax
   1131b:	49 89 c7             	mov    %rax,%r15
   1131e:	74 13                	je     11333 <ocall_write+0x113>
   11320:	4c 89 f6             	mov    %r14,%rsi
   11323:	4c 89 e2             	mov    %r12,%rdx
   11326:	48 89 c7             	mov    %rax,%rdi
   11329:	e8 c2 48 00 00       	callq  15bf0 <memcpy>
   1132e:	4d 89 fe             	mov    %r15,%r14
   11331:	eb d7                	jmp    1130a <ocall_write+0xea>
   11333:	e8 e8 1b 00 00       	callq  12f20 <sgx_ocfree>
   11338:	bb fa ff ff ff       	mov    $0xfffffffa,%ebx
   1133d:	eb 99                	jmp    112d8 <ocall_write+0xb8>
   1133f:	90                   	nop

0000000000011340 <ocall_fstat>:
   11340:	55                   	push   %rbp
   11341:	48 89 e5             	mov    %rsp,%rbp
   11344:	41 55                	push   %r13
   11346:	41 54                	push   %r12
   11348:	53                   	push   %rbx
   11349:	89 fb                	mov    %edi,%ebx
   1134b:	bf 94 00 00 00       	mov    $0x94,%edi
   11350:	49 89 f5             	mov    %rsi,%r13
   11353:	48 83 ec 08          	sub    $0x8,%rsp
   11357:	e8 a4 1b 00 00       	callq  12f00 <sgx_ocalloc>
   1135c:	48 85 c0             	test   %rax,%rax
   1135f:	74 43                	je     113a4 <ocall_fstat+0x64>
   11361:	89 18                	mov    %ebx,(%rax)
   11363:	48 89 c6             	mov    %rax,%rsi
   11366:	bf 0a 00 00 00       	mov    $0xa,%edi
   1136b:	49 89 c4             	mov    %rax,%r12
   1136e:	e8 7a 3e 00 00       	callq  151ed <sgx_ocall>
   11373:	85 c0                	test   %eax,%eax
   11375:	89 c3                	mov    %eax,%ebx
   11377:	74 17                	je     11390 <ocall_fstat+0x50>
   11379:	e8 a2 1b 00 00       	callq  12f20 <sgx_ocfree>
   1137e:	89 d8                	mov    %ebx,%eax
   11380:	48 83 c4 08          	add    $0x8,%rsp
   11384:	5b                   	pop    %rbx
   11385:	41 5c                	pop    %r12
   11387:	41 5d                	pop    %r13
   11389:	5d                   	pop    %rbp
   1138a:	c3                   	retq   
   1138b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11390:	49 8d 74 24 04       	lea    0x4(%r12),%rsi
   11395:	ba 90 00 00 00       	mov    $0x90,%edx
   1139a:	4c 89 ef             	mov    %r13,%rdi
   1139d:	e8 4e 48 00 00       	callq  15bf0 <memcpy>
   113a2:	eb d5                	jmp    11379 <ocall_fstat+0x39>
   113a4:	e8 77 1b 00 00       	callq  12f20 <sgx_ocfree>
   113a9:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   113ae:	eb d0                	jmp    11380 <ocall_fstat+0x40>

00000000000113b0 <ocall_fionread>:
   113b0:	55                   	push   %rbp
   113b1:	48 89 e5             	mov    %rsp,%rbp
   113b4:	53                   	push   %rbx
   113b5:	89 fb                	mov    %edi,%ebx
   113b7:	bf 04 00 00 00       	mov    $0x4,%edi
   113bc:	48 83 ec 08          	sub    $0x8,%rsp
   113c0:	e8 3b 1b 00 00       	callq  12f00 <sgx_ocalloc>
   113c5:	48 85 c0             	test   %rax,%rax
   113c8:	74 1f                	je     113e9 <ocall_fionread+0x39>
   113ca:	89 18                	mov    %ebx,(%rax)
   113cc:	48 89 c6             	mov    %rax,%rsi
   113cf:	bf 0b 00 00 00       	mov    $0xb,%edi
   113d4:	e8 14 3e 00 00       	callq  151ed <sgx_ocall>
   113d9:	89 c3                	mov    %eax,%ebx
   113db:	e8 40 1b 00 00       	callq  12f20 <sgx_ocfree>
   113e0:	89 d8                	mov    %ebx,%eax
   113e2:	48 83 c4 08          	add    $0x8,%rsp
   113e6:	5b                   	pop    %rbx
   113e7:	5d                   	pop    %rbp
   113e8:	c3                   	retq   
   113e9:	e8 32 1b 00 00       	callq  12f20 <sgx_ocfree>
   113ee:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   113f3:	eb ed                	jmp    113e2 <ocall_fionread+0x32>
   113f5:	90                   	nop
   113f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   113fd:	00 00 00 

0000000000011400 <ocall_fsetnonblock>:
   11400:	55                   	push   %rbp
   11401:	48 89 e5             	mov    %rsp,%rbp
   11404:	41 54                	push   %r12
   11406:	53                   	push   %rbx
   11407:	41 89 fc             	mov    %edi,%r12d
   1140a:	bf 08 00 00 00       	mov    $0x8,%edi
   1140f:	89 f3                	mov    %esi,%ebx
   11411:	e8 ea 1a 00 00       	callq  12f00 <sgx_ocalloc>
   11416:	48 85 c0             	test   %rax,%rax
   11419:	74 21                	je     1143c <ocall_fsetnonblock+0x3c>
   1141b:	89 58 04             	mov    %ebx,0x4(%rax)
   1141e:	48 89 c6             	mov    %rax,%rsi
   11421:	bf 0c 00 00 00       	mov    $0xc,%edi
   11426:	44 89 20             	mov    %r12d,(%rax)
   11429:	e8 bf 3d 00 00       	callq  151ed <sgx_ocall>
   1142e:	89 c3                	mov    %eax,%ebx
   11430:	e8 eb 1a 00 00       	callq  12f20 <sgx_ocfree>
   11435:	89 d8                	mov    %ebx,%eax
   11437:	5b                   	pop    %rbx
   11438:	41 5c                	pop    %r12
   1143a:	5d                   	pop    %rbp
   1143b:	c3                   	retq   
   1143c:	e8 df 1a 00 00       	callq  12f20 <sgx_ocfree>
   11441:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   11446:	eb ef                	jmp    11437 <ocall_fsetnonblock+0x37>
   11448:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1144f:	00 

0000000000011450 <ocall_fchmod>:
   11450:	55                   	push   %rbp
   11451:	48 89 e5             	mov    %rsp,%rbp
   11454:	41 54                	push   %r12
   11456:	53                   	push   %rbx
   11457:	41 89 fc             	mov    %edi,%r12d
   1145a:	bf 06 00 00 00       	mov    $0x6,%edi
   1145f:	89 f3                	mov    %esi,%ebx
   11461:	e8 9a 1a 00 00       	callq  12f00 <sgx_ocalloc>
   11466:	48 85 c0             	test   %rax,%rax
   11469:	74 22                	je     1148d <ocall_fchmod+0x3d>
   1146b:	66 89 58 04          	mov    %bx,0x4(%rax)
   1146f:	48 89 c6             	mov    %rax,%rsi
   11472:	bf 0d 00 00 00       	mov    $0xd,%edi
   11477:	44 89 20             	mov    %r12d,(%rax)
   1147a:	e8 6e 3d 00 00       	callq  151ed <sgx_ocall>
   1147f:	89 c3                	mov    %eax,%ebx
   11481:	e8 9a 1a 00 00       	callq  12f20 <sgx_ocfree>
   11486:	89 d8                	mov    %ebx,%eax
   11488:	5b                   	pop    %rbx
   11489:	41 5c                	pop    %r12
   1148b:	5d                   	pop    %rbp
   1148c:	c3                   	retq   
   1148d:	e8 8e 1a 00 00       	callq  12f20 <sgx_ocfree>
   11492:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   11497:	eb ef                	jmp    11488 <ocall_fchmod+0x38>
   11499:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000114a0 <ocall_fsync>:
   114a0:	55                   	push   %rbp
   114a1:	48 89 e5             	mov    %rsp,%rbp
   114a4:	53                   	push   %rbx
   114a5:	89 fb                	mov    %edi,%ebx
   114a7:	bf 04 00 00 00       	mov    $0x4,%edi
   114ac:	48 83 ec 08          	sub    $0x8,%rsp
   114b0:	e8 4b 1a 00 00       	callq  12f00 <sgx_ocalloc>
   114b5:	48 85 c0             	test   %rax,%rax
   114b8:	74 1f                	je     114d9 <ocall_fsync+0x39>
   114ba:	89 18                	mov    %ebx,(%rax)
   114bc:	48 89 c6             	mov    %rax,%rsi
   114bf:	bf 0e 00 00 00       	mov    $0xe,%edi
   114c4:	e8 24 3d 00 00       	callq  151ed <sgx_ocall>
   114c9:	89 c3                	mov    %eax,%ebx
   114cb:	e8 50 1a 00 00       	callq  12f20 <sgx_ocfree>
   114d0:	89 d8                	mov    %ebx,%eax
   114d2:	48 83 c4 08          	add    $0x8,%rsp
   114d6:	5b                   	pop    %rbx
   114d7:	5d                   	pop    %rbp
   114d8:	c3                   	retq   
   114d9:	e8 42 1a 00 00       	callq  12f20 <sgx_ocfree>
   114de:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   114e3:	eb ed                	jmp    114d2 <ocall_fsync+0x32>
   114e5:	90                   	nop
   114e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   114ed:	00 00 00 

00000000000114f0 <ocall_ftruncate>:
   114f0:	55                   	push   %rbp
   114f1:	48 89 e5             	mov    %rsp,%rbp
   114f4:	41 54                	push   %r12
   114f6:	53                   	push   %rbx
   114f7:	41 89 fc             	mov    %edi,%r12d
   114fa:	bf 0c 00 00 00       	mov    $0xc,%edi
   114ff:	48 89 f3             	mov    %rsi,%rbx
   11502:	e8 f9 19 00 00       	callq  12f00 <sgx_ocalloc>
   11507:	48 85 c0             	test   %rax,%rax
   1150a:	74 22                	je     1152e <ocall_ftruncate+0x3e>
   1150c:	48 89 58 04          	mov    %rbx,0x4(%rax)
   11510:	48 89 c6             	mov    %rax,%rsi
   11513:	bf 0f 00 00 00       	mov    $0xf,%edi
   11518:	44 89 20             	mov    %r12d,(%rax)
   1151b:	e8 cd 3c 00 00       	callq  151ed <sgx_ocall>
   11520:	89 c3                	mov    %eax,%ebx
   11522:	e8 f9 19 00 00       	callq  12f20 <sgx_ocfree>
   11527:	89 d8                	mov    %ebx,%eax
   11529:	5b                   	pop    %rbx
   1152a:	41 5c                	pop    %r12
   1152c:	5d                   	pop    %rbp
   1152d:	c3                   	retq   
   1152e:	e8 ed 19 00 00       	callq  12f20 <sgx_ocfree>
   11533:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   11538:	eb ef                	jmp    11529 <ocall_ftruncate+0x39>
   1153a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000011540 <ocall_mkdir>:
   11540:	55                   	push   %rbp
   11541:	48 89 e5             	mov    %rsp,%rbp
   11544:	41 57                	push   %r15
   11546:	41 56                	push   %r14
   11548:	41 55                	push   %r13
   1154a:	41 54                	push   %r12
   1154c:	49 89 fd             	mov    %rdi,%r13
   1154f:	53                   	push   %rbx
   11550:	31 db                	xor    %ebx,%ebx
   11552:	41 89 f6             	mov    %esi,%r14d
   11555:	48 83 ec 08          	sub    $0x8,%rsp
   11559:	48 85 ff             	test   %rdi,%rdi
   1155c:	74 08                	je     11566 <ocall_mkdir+0x26>
   1155e:	e8 0d 41 00 00       	callq  15670 <strlen>
   11563:	8d 58 01             	lea    0x1(%rax),%ebx
   11566:	bf 0a 00 00 00       	mov    $0xa,%edi
   1156b:	e8 90 19 00 00       	callq  12f00 <sgx_ocalloc>
   11570:	48 85 c0             	test   %rax,%rax
   11573:	49 89 c4             	mov    %rax,%r12
   11576:	74 68                	je     115e0 <ocall_mkdir+0xa0>
   11578:	48 63 db             	movslq %ebx,%rbx
   1157b:	4c 89 ef             	mov    %r13,%rdi
   1157e:	48 89 de             	mov    %rbx,%rsi
   11581:	e8 4a 19 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11586:	84 c0                	test   %al,%al
   11588:	74 21                	je     115ab <ocall_mkdir+0x6b>
   1158a:	48 89 df             	mov    %rbx,%rdi
   1158d:	e8 6e 19 00 00       	callq  12f00 <sgx_ocalloc>
   11592:	48 85 c0             	test   %rax,%rax
   11595:	49 89 c7             	mov    %rax,%r15
   11598:	74 46                	je     115e0 <ocall_mkdir+0xa0>
   1159a:	4c 89 ee             	mov    %r13,%rsi
   1159d:	48 89 da             	mov    %rbx,%rdx
   115a0:	48 89 c7             	mov    %rax,%rdi
   115a3:	4d 89 fd             	mov    %r15,%r13
   115a6:	e8 45 46 00 00       	callq  15bf0 <memcpy>
   115ab:	4c 89 e6             	mov    %r12,%rsi
   115ae:	bf 10 00 00 00       	mov    $0x10,%edi
   115b3:	4d 89 2c 24          	mov    %r13,(%r12)
   115b7:	66 45 89 74 24 08    	mov    %r14w,0x8(%r12)
   115bd:	e8 2b 3c 00 00       	callq  151ed <sgx_ocall>
   115c2:	89 c3                	mov    %eax,%ebx
   115c4:	e8 57 19 00 00       	callq  12f20 <sgx_ocfree>
   115c9:	89 d8                	mov    %ebx,%eax
   115cb:	48 83 c4 08          	add    $0x8,%rsp
   115cf:	5b                   	pop    %rbx
   115d0:	41 5c                	pop    %r12
   115d2:	41 5d                	pop    %r13
   115d4:	41 5e                	pop    %r14
   115d6:	41 5f                	pop    %r15
   115d8:	5d                   	pop    %rbp
   115d9:	c3                   	retq   
   115da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   115e0:	e8 3b 19 00 00       	callq  12f20 <sgx_ocfree>
   115e5:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   115ea:	eb df                	jmp    115cb <ocall_mkdir+0x8b>
   115ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000115f0 <ocall_getdents>:
   115f0:	55                   	push   %rbp
   115f1:	48 89 e5             	mov    %rsp,%rbp
   115f4:	41 56                	push   %r14
   115f6:	41 55                	push   %r13
   115f8:	41 54                	push   %r12
   115fa:	53                   	push   %rbx
   115fb:	41 89 fe             	mov    %edi,%r14d
   115fe:	bf 10 00 00 00       	mov    $0x10,%edi
   11603:	49 89 f5             	mov    %rsi,%r13
   11606:	41 89 d4             	mov    %edx,%r12d
   11609:	e8 f2 18 00 00       	callq  12f00 <sgx_ocalloc>
   1160e:	48 85 c0             	test   %rax,%rax
   11611:	74 72                	je     11685 <ocall_getdents+0x95>
   11613:	44 89 30             	mov    %r14d,(%rax)
   11616:	45 89 e6             	mov    %r12d,%r14d
   11619:	4c 89 ef             	mov    %r13,%rdi
   1161c:	4c 89 f6             	mov    %r14,%rsi
   1161f:	48 89 c3             	mov    %rax,%rbx
   11622:	e8 a9 18 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11627:	84 c0                	test   %al,%al
   11629:	75 4d                	jne    11678 <ocall_getdents+0x88>
   1162b:	4c 89 e8             	mov    %r13,%rax
   1162e:	44 89 63 0c          	mov    %r12d,0xc(%rbx)
   11632:	48 89 43 04          	mov    %rax,0x4(%rbx)
   11636:	48 89 de             	mov    %rbx,%rsi
   11639:	bf 11 00 00 00       	mov    $0x11,%edi
   1163e:	e8 aa 3b 00 00       	callq  151ed <sgx_ocall>
   11643:	85 c0                	test   %eax,%eax
   11645:	41 89 c4             	mov    %eax,%r12d
   11648:	7e 18                	jle    11662 <ocall_getdents+0x72>
   1164a:	48 8b 7b 04          	mov    0x4(%rbx),%rdi
   1164e:	49 39 fd             	cmp    %rdi,%r13
   11651:	74 0f                	je     11662 <ocall_getdents+0x72>
   11653:	4c 63 f0             	movslq %eax,%r14
   11656:	4c 89 f6             	mov    %r14,%rsi
   11659:	e8 72 18 00 00       	callq  12ed0 <sgx_is_within_enclave>
   1165e:	84 c0                	test   %al,%al
   11660:	74 36                	je     11698 <ocall_getdents+0xa8>
   11662:	e8 b9 18 00 00       	callq  12f20 <sgx_ocfree>
   11667:	44 89 e0             	mov    %r12d,%eax
   1166a:	5b                   	pop    %rbx
   1166b:	41 5c                	pop    %r12
   1166d:	41 5d                	pop    %r13
   1166f:	41 5e                	pop    %r14
   11671:	5d                   	pop    %rbp
   11672:	c3                   	retq   
   11673:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11678:	4c 89 f7             	mov    %r14,%rdi
   1167b:	e8 80 18 00 00       	callq  12f00 <sgx_ocalloc>
   11680:	48 85 c0             	test   %rax,%rax
   11683:	75 a9                	jne    1162e <ocall_getdents+0x3e>
   11685:	e8 96 18 00 00       	callq  12f20 <sgx_ocfree>
   1168a:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   1168f:	eb d9                	jmp    1166a <ocall_getdents+0x7a>
   11691:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11698:	4c 89 f6             	mov    %r14,%rsi
   1169b:	4c 89 ef             	mov    %r13,%rdi
   1169e:	e8 2d 18 00 00       	callq  12ed0 <sgx_is_within_enclave>
   116a3:	84 c0                	test   %al,%al
   116a5:	74 bb                	je     11662 <ocall_getdents+0x72>
   116a7:	48 8b 73 04          	mov    0x4(%rbx),%rsi
   116ab:	4c 89 f2             	mov    %r14,%rdx
   116ae:	4c 89 ef             	mov    %r13,%rdi
   116b1:	e8 3a 45 00 00       	callq  15bf0 <memcpy>
   116b6:	eb aa                	jmp    11662 <ocall_getdents+0x72>
   116b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   116bf:	00 

00000000000116c0 <ocall_wake_thread>:
   116c0:	55                   	push   %rbp
   116c1:	48 89 fe             	mov    %rdi,%rsi
   116c4:	bf 12 00 00 00       	mov    $0x12,%edi
   116c9:	48 89 e5             	mov    %rsp,%rbp
   116cc:	5d                   	pop    %rbp
   116cd:	e9 1b 3b 00 00       	jmpq   151ed <sgx_ocall>
   116d2:	0f 1f 40 00          	nopl   0x0(%rax)
   116d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   116dd:	00 00 00 

00000000000116e0 <ocall_create_process>:
   116e0:	55                   	push   %rbp
   116e1:	48 89 e5             	mov    %rsp,%rbp
   116e4:	41 57                	push   %r15
   116e6:	41 56                	push   %r14
   116e8:	41 55                	push   %r13
   116ea:	41 54                	push   %r12
   116ec:	49 89 d4             	mov    %rdx,%r12
   116ef:	53                   	push   %rbx
   116f0:	89 f3                	mov    %esi,%ebx
   116f2:	48 83 ec 28          	sub    $0x28,%rsp
   116f6:	48 85 ff             	test   %rdi,%rdi
   116f9:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
   116fd:	4c 89 45 b0          	mov    %r8,-0x50(%rbp)
   11701:	0f 84 71 01 00 00    	je     11878 <ocall_create_process+0x198>
   11707:	49 89 ff             	mov    %rdi,%r15
   1170a:	e8 61 3f 00 00       	callq  15670 <strlen>
   1170f:	44 8d 68 01          	lea    0x1(%rax),%r13d
   11713:	48 63 c3             	movslq %ebx,%rax
   11716:	48 8d 3c c5 1c 00 00 	lea    0x1c(,%rax,8),%rdi
   1171d:	00 
   1171e:	e8 dd 17 00 00       	callq  12f00 <sgx_ocalloc>
   11723:	48 85 c0             	test   %rax,%rax
   11726:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1172a:	0f 84 68 01 00 00    	je     11898 <ocall_create_process+0x1b8>
   11730:	4d 63 ed             	movslq %r13d,%r13
   11733:	4c 89 ff             	mov    %r15,%rdi
   11736:	4c 89 ee             	mov    %r13,%rsi
   11739:	e8 92 17 00 00       	callq  12ed0 <sgx_is_within_enclave>
   1173e:	84 c0                	test   %al,%al
   11740:	4c 89 fe             	mov    %r15,%rsi
   11743:	0f 85 ff 00 00 00    	jne    11848 <ocall_create_process+0x168>
   11749:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1174d:	85 db                	test   %ebx,%ebx
   1174f:	48 89 70 04          	mov    %rsi,0x4(%rax)
   11753:	89 58 18             	mov    %ebx,0x18(%rax)
   11756:	0f 8e 94 00 00 00    	jle    117f0 <ocall_create_process+0x110>
   1175c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11760:	4d 89 e7             	mov    %r12,%r15
   11763:	4c 8d 60 1c          	lea    0x1c(%rax),%r12
   11767:	8d 43 ff             	lea    -0x1(%rbx),%eax
   1176a:	4d 8d 6c c7 08       	lea    0x8(%r15,%rax,8),%r13
   1176f:	eb 3d                	jmp    117ae <ocall_create_process+0xce>
   11771:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11778:	e8 f3 3e 00 00       	callq  15670 <strlen>
   1177d:	4d 8b 37             	mov    (%r15),%r14
   11780:	8d 58 01             	lea    0x1(%rax),%ebx
   11783:	4d 85 f6             	test   %r14,%r14
   11786:	74 2e                	je     117b6 <ocall_create_process+0xd6>
   11788:	48 63 db             	movslq %ebx,%rbx
   1178b:	4c 89 f7             	mov    %r14,%rdi
   1178e:	48 89 de             	mov    %rbx,%rsi
   11791:	e8 3a 17 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11796:	84 c0                	test   %al,%al
   11798:	4c 89 f2             	mov    %r14,%rdx
   1179b:	75 23                	jne    117c0 <ocall_create_process+0xe0>
   1179d:	49 83 c7 08          	add    $0x8,%r15
   117a1:	49 89 14 24          	mov    %rdx,(%r12)
   117a5:	49 83 c4 08          	add    $0x8,%r12
   117a9:	4d 39 ef             	cmp    %r13,%r15
   117ac:	74 42                	je     117f0 <ocall_create_process+0x110>
   117ae:	49 8b 3f             	mov    (%r15),%rdi
   117b1:	48 85 ff             	test   %rdi,%rdi
   117b4:	75 c2                	jne    11778 <ocall_create_process+0x98>
   117b6:	31 d2                	xor    %edx,%edx
   117b8:	eb e3                	jmp    1179d <ocall_create_process+0xbd>
   117ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   117c0:	48 89 df             	mov    %rbx,%rdi
   117c3:	e8 38 17 00 00       	callq  12f00 <sgx_ocalloc>
   117c8:	48 85 c0             	test   %rax,%rax
   117cb:	0f 84 c7 00 00 00    	je     11898 <ocall_create_process+0x1b8>
   117d1:	49 8b 37             	mov    (%r15),%rsi
   117d4:	48 89 da             	mov    %rbx,%rdx
   117d7:	48 89 c7             	mov    %rax,%rdi
   117da:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   117de:	e8 0d 44 00 00       	callq  15bf0 <memcpy>
   117e3:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   117e7:	48 89 ca             	mov    %rcx,%rdx
   117ea:	eb b1                	jmp    1179d <ocall_create_process+0xbd>
   117ec:	0f 1f 40 00          	nopl   0x0(%rax)
   117f0:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   117f4:	bf 13 00 00 00       	mov    $0x13,%edi
   117f9:	e8 ef 39 00 00       	callq  151ed <sgx_ocall>
   117fe:	85 c0                	test   %eax,%eax
   11800:	89 c3                	mov    %eax,%ebx
   11802:	75 2a                	jne    1182e <ocall_create_process+0x14e>
   11804:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   11808:	48 85 f6             	test   %rsi,%rsi
   1180b:	74 08                	je     11815 <ocall_create_process+0x135>
   1180d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11811:	8b 00                	mov    (%rax),%eax
   11813:	89 06                	mov    %eax,(%rsi)
   11815:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   11819:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
   1181d:	8b 46 0c             	mov    0xc(%rsi),%eax
   11820:	89 01                	mov    %eax,(%rcx)
   11822:	8b 46 10             	mov    0x10(%rsi),%eax
   11825:	89 41 04             	mov    %eax,0x4(%rcx)
   11828:	8b 46 14             	mov    0x14(%rsi),%eax
   1182b:	89 41 08             	mov    %eax,0x8(%rcx)
   1182e:	e8 ed 16 00 00       	callq  12f20 <sgx_ocfree>
   11833:	48 83 c4 28          	add    $0x28,%rsp
   11837:	89 d8                	mov    %ebx,%eax
   11839:	5b                   	pop    %rbx
   1183a:	41 5c                	pop    %r12
   1183c:	41 5d                	pop    %r13
   1183e:	41 5e                	pop    %r14
   11840:	41 5f                	pop    %r15
   11842:	5d                   	pop    %rbp
   11843:	c3                   	retq   
   11844:	0f 1f 40 00          	nopl   0x0(%rax)
   11848:	4c 89 ef             	mov    %r13,%rdi
   1184b:	4c 89 7d c8          	mov    %r15,-0x38(%rbp)
   1184f:	e8 ac 16 00 00       	callq  12f00 <sgx_ocalloc>
   11854:	48 85 c0             	test   %rax,%rax
   11857:	49 89 c7             	mov    %rax,%r15
   1185a:	74 3c                	je     11898 <ocall_create_process+0x1b8>
   1185c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   11860:	4c 89 ea             	mov    %r13,%rdx
   11863:	48 89 c7             	mov    %rax,%rdi
   11866:	e8 85 43 00 00       	callq  15bf0 <memcpy>
   1186b:	4c 89 fe             	mov    %r15,%rsi
   1186e:	e9 d6 fe ff ff       	jmpq   11749 <ocall_create_process+0x69>
   11873:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11878:	48 63 c6             	movslq %esi,%rax
   1187b:	48 8d 3c c5 1c 00 00 	lea    0x1c(,%rax,8),%rdi
   11882:	00 
   11883:	e8 78 16 00 00       	callq  12f00 <sgx_ocalloc>
   11888:	48 85 c0             	test   %rax,%rax
   1188b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1188f:	74 07                	je     11898 <ocall_create_process+0x1b8>
   11891:	31 f6                	xor    %esi,%esi
   11893:	e9 b1 fe ff ff       	jmpq   11749 <ocall_create_process+0x69>
   11898:	e8 83 16 00 00       	callq  12f20 <sgx_ocfree>
   1189d:	48 83 c4 28          	add    $0x28,%rsp
   118a1:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   118a6:	5b                   	pop    %rbx
   118a7:	41 5c                	pop    %r12
   118a9:	41 5d                	pop    %r13
   118ab:	41 5e                	pop    %r14
   118ad:	41 5f                	pop    %r15
   118af:	5d                   	pop    %rbp
   118b0:	c3                   	retq   
   118b1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   118b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   118bd:	00 00 00 

00000000000118c0 <ocall_futex>:
   118c0:	55                   	push   %rbp
   118c1:	48 89 e5             	mov    %rsp,%rbp
   118c4:	41 57                	push   %r15
   118c6:	41 56                	push   %r14
   118c8:	41 55                	push   %r13
   118ca:	41 54                	push   %r12
   118cc:	49 89 fc             	mov    %rdi,%r12
   118cf:	53                   	push   %rbx
   118d0:	bf 18 00 00 00       	mov    $0x18,%edi
   118d5:	41 89 f7             	mov    %esi,%r15d
   118d8:	41 89 d6             	mov    %edx,%r14d
   118db:	49 89 cd             	mov    %rcx,%r13
   118de:	48 83 ec 08          	sub    $0x8,%rsp
   118e2:	e8 19 16 00 00       	callq  12f00 <sgx_ocalloc>
   118e7:	48 85 c0             	test   %rax,%rax
   118ea:	74 68                	je     11954 <ocall_futex+0x94>
   118ec:	be 04 00 00 00       	mov    $0x4,%esi
   118f1:	4c 89 e7             	mov    %r12,%rdi
   118f4:	48 89 c3             	mov    %rax,%rbx
   118f7:	e8 d4 15 00 00       	callq  12ed0 <sgx_is_within_enclave>
   118fc:	84 c0                	test   %al,%al
   118fe:	75 48                	jne    11948 <ocall_futex+0x88>
   11900:	4d 85 ed             	test   %r13,%r13
   11903:	4c 89 23             	mov    %r12,(%rbx)
   11906:	44 89 7b 08          	mov    %r15d,0x8(%rbx)
   1190a:	44 89 73 0c          	mov    %r14d,0xc(%rbx)
   1190e:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   11915:	74 04                	je     1191b <ocall_futex+0x5b>
   11917:	49 8b 45 00          	mov    0x0(%r13),%rax
   1191b:	48 89 de             	mov    %rbx,%rsi
   1191e:	48 89 43 10          	mov    %rax,0x10(%rbx)
   11922:	bf 14 00 00 00       	mov    $0x14,%edi
   11927:	e8 c1 38 00 00       	callq  151ed <sgx_ocall>
   1192c:	89 c3                	mov    %eax,%ebx
   1192e:	e8 ed 15 00 00       	callq  12f20 <sgx_ocfree>
   11933:	89 d8                	mov    %ebx,%eax
   11935:	48 83 c4 08          	add    $0x8,%rsp
   11939:	5b                   	pop    %rbx
   1193a:	41 5c                	pop    %r12
   1193c:	41 5d                	pop    %r13
   1193e:	41 5e                	pop    %r14
   11940:	41 5f                	pop    %r15
   11942:	5d                   	pop    %rbp
   11943:	c3                   	retq   
   11944:	0f 1f 40 00          	nopl   0x0(%rax)
   11948:	e8 d3 15 00 00       	callq  12f20 <sgx_ocfree>
   1194d:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   11952:	eb e1                	jmp    11935 <ocall_futex+0x75>
   11954:	e8 c7 15 00 00       	callq  12f20 <sgx_ocfree>
   11959:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   1195e:	eb d5                	jmp    11935 <ocall_futex+0x75>

0000000000011960 <ocall_socketpair>:
   11960:	55                   	push   %rbp
   11961:	48 89 e5             	mov    %rsp,%rbp
   11964:	41 57                	push   %r15
   11966:	41 56                	push   %r14
   11968:	41 55                	push   %r13
   1196a:	41 54                	push   %r12
   1196c:	41 89 ff             	mov    %edi,%r15d
   1196f:	53                   	push   %rbx
   11970:	bf 14 00 00 00       	mov    $0x14,%edi
   11975:	41 89 f6             	mov    %esi,%r14d
   11978:	41 89 d4             	mov    %edx,%r12d
   1197b:	49 89 cd             	mov    %rcx,%r13
   1197e:	48 83 ec 08          	sub    $0x8,%rsp
   11982:	e8 79 15 00 00       	callq  12f00 <sgx_ocalloc>
   11987:	48 85 c0             	test   %rax,%rax
   1198a:	74 4c                	je     119d8 <ocall_socketpair+0x78>
   1198c:	44 89 60 08          	mov    %r12d,0x8(%rax)
   11990:	44 89 38             	mov    %r15d,(%rax)
   11993:	48 89 c6             	mov    %rax,%rsi
   11996:	44 89 70 04          	mov    %r14d,0x4(%rax)
   1199a:	bf 15 00 00 00       	mov    $0x15,%edi
   1199f:	48 89 c3             	mov    %rax,%rbx
   119a2:	e8 46 38 00 00       	callq  151ed <sgx_ocall>
   119a7:	85 c0                	test   %eax,%eax
   119a9:	41 89 c4             	mov    %eax,%r12d
   119ac:	74 1a                	je     119c8 <ocall_socketpair+0x68>
   119ae:	e8 6d 15 00 00       	callq  12f20 <sgx_ocfree>
   119b3:	44 89 e0             	mov    %r12d,%eax
   119b6:	48 83 c4 08          	add    $0x8,%rsp
   119ba:	5b                   	pop    %rbx
   119bb:	41 5c                	pop    %r12
   119bd:	41 5d                	pop    %r13
   119bf:	41 5e                	pop    %r14
   119c1:	41 5f                	pop    %r15
   119c3:	5d                   	pop    %rbp
   119c4:	c3                   	retq   
   119c5:	0f 1f 00             	nopl   (%rax)
   119c8:	8b 43 0c             	mov    0xc(%rbx),%eax
   119cb:	41 89 45 00          	mov    %eax,0x0(%r13)
   119cf:	8b 43 10             	mov    0x10(%rbx),%eax
   119d2:	41 89 45 04          	mov    %eax,0x4(%r13)
   119d6:	eb d6                	jmp    119ae <ocall_socketpair+0x4e>
   119d8:	e8 43 15 00 00       	callq  12f20 <sgx_ocfree>
   119dd:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   119e2:	eb d2                	jmp    119b6 <ocall_socketpair+0x56>
   119e4:	66 90                	xchg   %ax,%ax
   119e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   119ed:	00 00 00 

00000000000119f0 <ocall_sock_listen>:
   119f0:	55                   	push   %rbp
   119f1:	48 89 e5             	mov    %rsp,%rbp
   119f4:	41 57                	push   %r15
   119f6:	41 56                	push   %r14
   119f8:	41 55                	push   %r13
   119fa:	41 54                	push   %r12
   119fc:	41 89 fd             	mov    %edi,%r13d
   119ff:	53                   	push   %rbx
   11a00:	bf 30 00 00 00       	mov    $0x30,%edi
   11a05:	48 89 cb             	mov    %rcx,%rbx
   11a08:	4d 89 cc             	mov    %r9,%r12
   11a0b:	48 83 ec 28          	sub    $0x28,%rsp
   11a0f:	89 75 c4             	mov    %esi,-0x3c(%rbp)
   11a12:	89 55 c8             	mov    %edx,-0x38(%rbp)
   11a15:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   11a19:	45 8b 30             	mov    (%r8),%r14d
   11a1c:	e8 df 14 00 00       	callq  12f00 <sgx_ocalloc>
   11a21:	48 85 c0             	test   %rax,%rax
   11a24:	8b 55 c8             	mov    -0x38(%rbp),%edx
   11a27:	8b 75 c4             	mov    -0x3c(%rbp),%esi
   11a2a:	0f 84 20 01 00 00    	je     11b50 <ocall_sock_listen+0x160>
   11a30:	44 89 28             	mov    %r13d,(%rax)
   11a33:	45 89 f5             	mov    %r14d,%r13d
   11a36:	89 70 04             	mov    %esi,0x4(%rax)
   11a39:	89 50 08             	mov    %edx,0x8(%rax)
   11a3c:	4c 89 ee             	mov    %r13,%rsi
   11a3f:	48 89 df             	mov    %rbx,%rdi
   11a42:	49 89 c7             	mov    %rax,%r15
   11a45:	e8 86 14 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11a4a:	84 c0                	test   %al,%al
   11a4c:	0f 85 9e 00 00 00    	jne    11af0 <ocall_sock_listen+0x100>
   11a52:	49 89 d8             	mov    %rbx,%r8
   11a55:	4d 89 47 0c          	mov    %r8,0xc(%r15)
   11a59:	45 89 77 14          	mov    %r14d,0x14(%r15)
   11a5d:	4c 89 fe             	mov    %r15,%rsi
   11a60:	bf 16 00 00 00       	mov    $0x16,%edi
   11a65:	e8 83 37 00 00       	callq  151ed <sgx_ocall>
   11a6a:	85 c0                	test   %eax,%eax
   11a6c:	89 45 c8             	mov    %eax,-0x38(%rbp)
   11a6f:	78 61                	js     11ad2 <ocall_sock_listen+0xe2>
   11a71:	49 8b 7f 0c          	mov    0xc(%r15),%rdi
   11a75:	4c 89 ee             	mov    %r13,%rsi
   11a78:	e8 53 14 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11a7d:	84 c0                	test   %al,%al
   11a7f:	0f 85 cb 00 00 00    	jne    11b50 <ocall_sock_listen+0x160>
   11a85:	41 8b 77 14          	mov    0x14(%r15),%esi
   11a89:	41 39 f6             	cmp    %esi,%r14d
   11a8c:	0f 82 be 00 00 00    	jb     11b50 <ocall_sock_listen+0x160>
   11a92:	48 85 db             	test   %rbx,%rbx
   11a95:	74 1c                	je     11ab3 <ocall_sock_listen+0xc3>
   11a97:	49 8b 7f 0c          	mov    0xc(%r15),%rdi
   11a9b:	48 39 fb             	cmp    %rdi,%rbx
   11a9e:	74 0d                	je     11aad <ocall_sock_listen+0xbd>
   11aa0:	e8 2b 14 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11aa5:	84 c0                	test   %al,%al
   11aa7:	74 77                	je     11b20 <ocall_sock_listen+0x130>
   11aa9:	41 8b 77 14          	mov    0x14(%r15),%esi
   11aad:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11ab1:	89 30                	mov    %esi,(%rax)
   11ab3:	4d 85 e4             	test   %r12,%r12
   11ab6:	74 1a                	je     11ad2 <ocall_sock_listen+0xe2>
   11ab8:	49 8b 47 18          	mov    0x18(%r15),%rax
   11abc:	49 89 04 24          	mov    %rax,(%r12)
   11ac0:	49 8b 47 20          	mov    0x20(%r15),%rax
   11ac4:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   11ac9:	49 8b 47 28          	mov    0x28(%r15),%rax
   11acd:	49 89 44 24 10       	mov    %rax,0x10(%r12)
   11ad2:	e8 49 14 00 00       	callq  12f20 <sgx_ocfree>
   11ad7:	8b 45 c8             	mov    -0x38(%rbp),%eax
   11ada:	48 83 c4 28          	add    $0x28,%rsp
   11ade:	5b                   	pop    %rbx
   11adf:	41 5c                	pop    %r12
   11ae1:	41 5d                	pop    %r13
   11ae3:	41 5e                	pop    %r14
   11ae5:	41 5f                	pop    %r15
   11ae7:	5d                   	pop    %rbp
   11ae8:	c3                   	retq   
   11ae9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11af0:	4c 89 ef             	mov    %r13,%rdi
   11af3:	e8 08 14 00 00       	callq  12f00 <sgx_ocalloc>
   11af8:	48 85 c0             	test   %rax,%rax
   11afb:	74 53                	je     11b50 <ocall_sock_listen+0x160>
   11afd:	4c 89 ea             	mov    %r13,%rdx
   11b00:	48 89 de             	mov    %rbx,%rsi
   11b03:	48 89 c7             	mov    %rax,%rdi
   11b06:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   11b0a:	e8 e1 40 00 00       	callq  15bf0 <memcpy>
   11b0f:	4c 8b 45 c8          	mov    -0x38(%rbp),%r8
   11b13:	e9 3d ff ff ff       	jmpq   11a55 <ocall_sock_listen+0x65>
   11b18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   11b1f:	00 
   11b20:	41 8b 77 14          	mov    0x14(%r15),%esi
   11b24:	48 89 df             	mov    %rbx,%rdi
   11b27:	e8 a4 13 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11b2c:	84 c0                	test   %al,%al
   11b2e:	0f 84 75 ff ff ff    	je     11aa9 <ocall_sock_listen+0xb9>
   11b34:	41 8b 57 14          	mov    0x14(%r15),%edx
   11b38:	49 8b 77 0c          	mov    0xc(%r15),%rsi
   11b3c:	48 89 df             	mov    %rbx,%rdi
   11b3f:	e8 ac 40 00 00       	callq  15bf0 <memcpy>
   11b44:	e9 60 ff ff ff       	jmpq   11aa9 <ocall_sock_listen+0xb9>
   11b49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11b50:	e8 cb 13 00 00       	callq  12f20 <sgx_ocfree>
   11b55:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   11b5a:	e9 7b ff ff ff       	jmpq   11ada <ocall_sock_listen+0xea>
   11b5f:	90                   	nop

0000000000011b60 <ocall_sock_accept>:
   11b60:	55                   	push   %rbp
   11b61:	48 89 e5             	mov    %rsp,%rbp
   11b64:	41 57                	push   %r15
   11b66:	41 56                	push   %r14
   11b68:	41 55                	push   %r13
   11b6a:	41 54                	push   %r12
   11b6c:	49 89 ce             	mov    %rcx,%r14
   11b6f:	53                   	push   %rbx
   11b70:	49 89 f4             	mov    %rsi,%r12
   11b73:	89 fb                	mov    %edi,%ebx
   11b75:	48 83 ec 18          	sub    $0x18,%rsp
   11b79:	48 85 d2             	test   %rdx,%rdx
   11b7c:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   11b80:	0f 84 1a 01 00 00    	je     11ca0 <ocall_sock_accept+0x140>
   11b86:	44 8b 2a             	mov    (%rdx),%r13d
   11b89:	bf 28 00 00 00       	mov    $0x28,%edi
   11b8e:	e8 6d 13 00 00       	callq  12f00 <sgx_ocalloc>
   11b93:	48 85 c0             	test   %rax,%rax
   11b96:	49 89 c7             	mov    %rax,%r15
   11b99:	0f 84 ec 00 00 00    	je     11c8b <ocall_sock_accept+0x12b>
   11b9f:	89 18                	mov    %ebx,(%rax)
   11ba1:	44 89 e8             	mov    %r13d,%eax
   11ba4:	4c 89 e7             	mov    %r12,%rdi
   11ba7:	48 89 c6             	mov    %rax,%rsi
   11baa:	48 89 c3             	mov    %rax,%rbx
   11bad:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   11bb1:	e8 1a 13 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11bb6:	84 c0                	test   %al,%al
   11bb8:	0f 85 82 00 00 00    	jne    11c40 <ocall_sock_accept+0xe0>
   11bbe:	4c 89 e3             	mov    %r12,%rbx
   11bc1:	49 89 5f 04          	mov    %rbx,0x4(%r15)
   11bc5:	45 89 6f 0c          	mov    %r13d,0xc(%r15)
   11bc9:	4c 89 fe             	mov    %r15,%rsi
   11bcc:	bf 17 00 00 00       	mov    $0x17,%edi
   11bd1:	e8 17 36 00 00       	callq  151ed <sgx_ocall>
   11bd6:	85 c0                	test   %eax,%eax
   11bd8:	89 c3                	mov    %eax,%ebx
   11bda:	78 4e                	js     11c2a <ocall_sock_accept+0xca>
   11bdc:	45 85 ed             	test   %r13d,%r13d
   11bdf:	0f 85 8b 00 00 00    	jne    11c70 <ocall_sock_accept+0x110>
   11be5:	4d 85 e4             	test   %r12,%r12
   11be8:	74 24                	je     11c0e <ocall_sock_accept+0xae>
   11bea:	49 8b 7f 04          	mov    0x4(%r15),%rdi
   11bee:	49 39 fc             	cmp    %rdi,%r12
   11bf1:	74 11                	je     11c04 <ocall_sock_accept+0xa4>
   11bf3:	41 8b 77 0c          	mov    0xc(%r15),%esi
   11bf7:	e8 d4 12 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11bfc:	84 c0                	test   %al,%al
   11bfe:	0f 84 ac 00 00 00    	je     11cb0 <ocall_sock_accept+0x150>
   11c04:	41 8b 47 0c          	mov    0xc(%r15),%eax
   11c08:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   11c0c:	89 01                	mov    %eax,(%rcx)
   11c0e:	4d 85 f6             	test   %r14,%r14
   11c11:	74 17                	je     11c2a <ocall_sock_accept+0xca>
   11c13:	49 8b 47 10          	mov    0x10(%r15),%rax
   11c17:	49 89 06             	mov    %rax,(%r14)
   11c1a:	49 8b 47 18          	mov    0x18(%r15),%rax
   11c1e:	49 89 46 08          	mov    %rax,0x8(%r14)
   11c22:	49 8b 47 20          	mov    0x20(%r15),%rax
   11c26:	49 89 46 10          	mov    %rax,0x10(%r14)
   11c2a:	e8 f1 12 00 00       	callq  12f20 <sgx_ocfree>
   11c2f:	89 d8                	mov    %ebx,%eax
   11c31:	48 83 c4 18          	add    $0x18,%rsp
   11c35:	5b                   	pop    %rbx
   11c36:	41 5c                	pop    %r12
   11c38:	41 5d                	pop    %r13
   11c3a:	41 5e                	pop    %r14
   11c3c:	41 5f                	pop    %r15
   11c3e:	5d                   	pop    %rbp
   11c3f:	c3                   	retq   
   11c40:	48 89 df             	mov    %rbx,%rdi
   11c43:	48 89 5d c8          	mov    %rbx,-0x38(%rbp)
   11c47:	e8 b4 12 00 00       	callq  12f00 <sgx_ocalloc>
   11c4c:	48 85 c0             	test   %rax,%rax
   11c4f:	48 89 c3             	mov    %rax,%rbx
   11c52:	74 37                	je     11c8b <ocall_sock_accept+0x12b>
   11c54:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11c58:	4c 89 e6             	mov    %r12,%rsi
   11c5b:	48 89 c7             	mov    %rax,%rdi
   11c5e:	e8 8d 3f 00 00       	callq  15bf0 <memcpy>
   11c63:	e9 59 ff ff ff       	jmpq   11bc1 <ocall_sock_accept+0x61>
   11c68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   11c6f:	00 
   11c70:	49 8b 7f 04          	mov    0x4(%r15),%rdi
   11c74:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   11c78:	e8 53 12 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11c7d:	84 c0                	test   %al,%al
   11c7f:	75 0a                	jne    11c8b <ocall_sock_accept+0x12b>
   11c81:	45 3b 6f 0c          	cmp    0xc(%r15),%r13d
   11c85:	0f 83 5a ff ff ff    	jae    11be5 <ocall_sock_accept+0x85>
   11c8b:	e8 90 12 00 00       	callq  12f20 <sgx_ocfree>
   11c90:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   11c95:	eb 9a                	jmp    11c31 <ocall_sock_accept+0xd1>
   11c97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11c9e:	00 00 
   11ca0:	45 31 ed             	xor    %r13d,%r13d
   11ca3:	e9 e1 fe ff ff       	jmpq   11b89 <ocall_sock_accept+0x29>
   11ca8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   11caf:	00 
   11cb0:	41 8b 77 0c          	mov    0xc(%r15),%esi
   11cb4:	4c 89 e7             	mov    %r12,%rdi
   11cb7:	e8 14 12 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11cbc:	84 c0                	test   %al,%al
   11cbe:	0f 84 40 ff ff ff    	je     11c04 <ocall_sock_accept+0xa4>
   11cc4:	41 8b 57 0c          	mov    0xc(%r15),%edx
   11cc8:	49 8b 77 04          	mov    0x4(%r15),%rsi
   11ccc:	4c 89 e7             	mov    %r12,%rdi
   11ccf:	e8 1c 3f 00 00       	callq  15bf0 <memcpy>
   11cd4:	e9 2b ff ff ff       	jmpq   11c04 <ocall_sock_accept+0xa4>
   11cd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000011ce0 <ocall_sock_connect>:
   11ce0:	55                   	push   %rbp
   11ce1:	48 89 e5             	mov    %rsp,%rbp
   11ce4:	41 57                	push   %r15
   11ce6:	41 56                	push   %r14
   11ce8:	41 55                	push   %r13
   11cea:	41 54                	push   %r12
   11cec:	41 89 ff             	mov    %edi,%r15d
   11cef:	53                   	push   %rbx
   11cf0:	49 89 cd             	mov    %rcx,%r13
   11cf3:	4c 89 cb             	mov    %r9,%rbx
   11cf6:	48 83 ec 18          	sub    $0x18,%rsp
   11cfa:	48 83 7d 10 00       	cmpq   $0x0,0x10(%rbp)
   11cff:	44 89 45 cc          	mov    %r8d,-0x34(%rbp)
   11d03:	0f 84 d7 01 00 00    	je     11ee0 <ocall_sock_connect+0x200>
   11d09:	48 8b 45 10          	mov    0x10(%rbp),%rax
   11d0d:	44 8b 20             	mov    (%rax),%r12d
   11d10:	bf 3c 00 00 00       	mov    $0x3c,%edi
   11d15:	89 55 c8             	mov    %edx,-0x38(%rbp)
   11d18:	89 75 c0             	mov    %esi,-0x40(%rbp)
   11d1b:	e8 e0 11 00 00       	callq  12f00 <sgx_ocalloc>
   11d20:	48 85 c0             	test   %rax,%rax
   11d23:	49 89 c6             	mov    %rax,%r14
   11d26:	8b 75 c0             	mov    -0x40(%rbp),%esi
   11d29:	8b 55 c8             	mov    -0x38(%rbp),%edx
   11d2c:	0f 84 40 01 00 00    	je     11e72 <ocall_sock_connect+0x192>
   11d32:	44 89 38             	mov    %r15d,(%rax)
   11d35:	44 8b 7d cc          	mov    -0x34(%rbp),%r15d
   11d39:	4c 89 ef             	mov    %r13,%rdi
   11d3c:	89 70 04             	mov    %esi,0x4(%rax)
   11d3f:	89 50 08             	mov    %edx,0x8(%rax)
   11d42:	4c 89 fe             	mov    %r15,%rsi
   11d45:	e8 86 11 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11d4a:	84 c0                	test   %al,%al
   11d4c:	0f 85 be 00 00 00    	jne    11e10 <ocall_sock_connect+0x130>
   11d52:	8b 45 cc             	mov    -0x34(%rbp),%eax
   11d55:	48 85 db             	test   %rbx,%rbx
   11d58:	4d 89 6e 0c          	mov    %r13,0xc(%r14)
   11d5c:	41 89 46 14          	mov    %eax,0x14(%r14)
   11d60:	0f 84 e4 00 00 00    	je     11e4a <ocall_sock_connect+0x16a>
   11d66:	45 89 e5             	mov    %r12d,%r13d
   11d69:	48 89 df             	mov    %rbx,%rdi
   11d6c:	4c 89 ee             	mov    %r13,%rsi
   11d6f:	e8 5c 11 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11d74:	84 c0                	test   %al,%al
   11d76:	48 89 df             	mov    %rbx,%rdi
   11d79:	0f 85 09 01 00 00    	jne    11e88 <ocall_sock_connect+0x1a8>
   11d7f:	49 89 7e 18          	mov    %rdi,0x18(%r14)
   11d83:	45 89 66 20          	mov    %r12d,0x20(%r14)
   11d87:	4c 89 f6             	mov    %r14,%rsi
   11d8a:	bf 18 00 00 00       	mov    $0x18,%edi
   11d8f:	e8 59 34 00 00       	callq  151ed <sgx_ocall>
   11d94:	85 c0                	test   %eax,%eax
   11d96:	41 89 c5             	mov    %eax,%r13d
   11d99:	78 54                	js     11def <ocall_sock_connect+0x10f>
   11d9b:	45 85 e4             	test   %r12d,%r12d
   11d9e:	0f 85 b4 00 00 00    	jne    11e58 <ocall_sock_connect+0x178>
   11da4:	48 85 db             	test   %rbx,%rbx
   11da7:	74 24                	je     11dcd <ocall_sock_connect+0xed>
   11da9:	49 8b 7e 18          	mov    0x18(%r14),%rdi
   11dad:	48 39 fb             	cmp    %rdi,%rbx
   11db0:	74 11                	je     11dc3 <ocall_sock_connect+0xe3>
   11db2:	41 8b 76 20          	mov    0x20(%r14),%esi
   11db6:	e8 15 11 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11dbb:	84 c0                	test   %al,%al
   11dbd:	0f 84 ed 00 00 00    	je     11eb0 <ocall_sock_connect+0x1d0>
   11dc3:	41 8b 46 20          	mov    0x20(%r14),%eax
   11dc7:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
   11dcb:	89 01                	mov    %eax,(%rcx)
   11dcd:	48 83 7d 18 00       	cmpq   $0x0,0x18(%rbp)
   11dd2:	74 1b                	je     11def <ocall_sock_connect+0x10f>
   11dd4:	49 8b 46 24          	mov    0x24(%r14),%rax
   11dd8:	48 8b 4d 18          	mov    0x18(%rbp),%rcx
   11ddc:	48 89 01             	mov    %rax,(%rcx)
   11ddf:	49 8b 46 2c          	mov    0x2c(%r14),%rax
   11de3:	48 89 41 08          	mov    %rax,0x8(%rcx)
   11de7:	49 8b 46 34          	mov    0x34(%r14),%rax
   11deb:	48 89 41 10          	mov    %rax,0x10(%rcx)
   11def:	e8 2c 11 00 00       	callq  12f20 <sgx_ocfree>
   11df4:	44 89 e8             	mov    %r13d,%eax
   11df7:	48 83 c4 18          	add    $0x18,%rsp
   11dfb:	5b                   	pop    %rbx
   11dfc:	41 5c                	pop    %r12
   11dfe:	41 5d                	pop    %r13
   11e00:	41 5e                	pop    %r14
   11e02:	41 5f                	pop    %r15
   11e04:	5d                   	pop    %rbp
   11e05:	c3                   	retq   
   11e06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11e0d:	00 00 00 
   11e10:	4c 89 ff             	mov    %r15,%rdi
   11e13:	e8 e8 10 00 00       	callq  12f00 <sgx_ocalloc>
   11e18:	48 85 c0             	test   %rax,%rax
   11e1b:	74 55                	je     11e72 <ocall_sock_connect+0x192>
   11e1d:	4c 89 ee             	mov    %r13,%rsi
   11e20:	4c 89 fa             	mov    %r15,%rdx
   11e23:	48 89 c7             	mov    %rax,%rdi
   11e26:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   11e2a:	e8 c1 3d 00 00       	callq  15bf0 <memcpy>
   11e2f:	4c 8b 45 c0          	mov    -0x40(%rbp),%r8
   11e33:	8b 45 cc             	mov    -0x34(%rbp),%eax
   11e36:	48 85 db             	test   %rbx,%rbx
   11e39:	4d 89 c5             	mov    %r8,%r13
   11e3c:	41 89 46 14          	mov    %eax,0x14(%r14)
   11e40:	4d 89 6e 0c          	mov    %r13,0xc(%r14)
   11e44:	0f 85 1c ff ff ff    	jne    11d66 <ocall_sock_connect+0x86>
   11e4a:	31 ff                	xor    %edi,%edi
   11e4c:	e9 2e ff ff ff       	jmpq   11d7f <ocall_sock_connect+0x9f>
   11e51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11e58:	49 8b 7e 18          	mov    0x18(%r14),%rdi
   11e5c:	44 89 e6             	mov    %r12d,%esi
   11e5f:	e8 6c 10 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11e64:	84 c0                	test   %al,%al
   11e66:	75 0a                	jne    11e72 <ocall_sock_connect+0x192>
   11e68:	45 3b 66 20          	cmp    0x20(%r14),%r12d
   11e6c:	0f 83 32 ff ff ff    	jae    11da4 <ocall_sock_connect+0xc4>
   11e72:	e8 a9 10 00 00       	callq  12f20 <sgx_ocfree>
   11e77:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   11e7c:	e9 76 ff ff ff       	jmpq   11df7 <ocall_sock_connect+0x117>
   11e81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11e88:	4c 89 ef             	mov    %r13,%rdi
   11e8b:	e8 70 10 00 00       	callq  12f00 <sgx_ocalloc>
   11e90:	48 85 c0             	test   %rax,%rax
   11e93:	49 89 c7             	mov    %rax,%r15
   11e96:	74 da                	je     11e72 <ocall_sock_connect+0x192>
   11e98:	48 89 c7             	mov    %rax,%rdi
   11e9b:	4c 89 ea             	mov    %r13,%rdx
   11e9e:	48 89 de             	mov    %rbx,%rsi
   11ea1:	e8 4a 3d 00 00       	callq  15bf0 <memcpy>
   11ea6:	4c 89 ff             	mov    %r15,%rdi
   11ea9:	e9 d1 fe ff ff       	jmpq   11d7f <ocall_sock_connect+0x9f>
   11eae:	66 90                	xchg   %ax,%ax
   11eb0:	41 8b 76 20          	mov    0x20(%r14),%esi
   11eb4:	48 89 df             	mov    %rbx,%rdi
   11eb7:	e8 14 10 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11ebc:	84 c0                	test   %al,%al
   11ebe:	0f 84 ff fe ff ff    	je     11dc3 <ocall_sock_connect+0xe3>
   11ec4:	41 8b 56 20          	mov    0x20(%r14),%edx
   11ec8:	49 8b 76 18          	mov    0x18(%r14),%rsi
   11ecc:	48 89 df             	mov    %rbx,%rdi
   11ecf:	e8 1c 3d 00 00       	callq  15bf0 <memcpy>
   11ed4:	e9 ea fe ff ff       	jmpq   11dc3 <ocall_sock_connect+0xe3>
   11ed9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11ee0:	45 31 e4             	xor    %r12d,%r12d
   11ee3:	e9 28 fe ff ff       	jmpq   11d10 <ocall_sock_connect+0x30>
   11ee8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   11eef:	00 

0000000000011ef0 <ocall_sock_recv>:
   11ef0:	55                   	push   %rbp
   11ef1:	48 89 e5             	mov    %rsp,%rbp
   11ef4:	41 57                	push   %r15
   11ef6:	41 56                	push   %r14
   11ef8:	41 55                	push   %r13
   11efa:	41 54                	push   %r12
   11efc:	41 89 d7             	mov    %edx,%r15d
   11eff:	53                   	push   %rbx
   11f00:	4d 89 c4             	mov    %r8,%r12
   11f03:	48 89 cb             	mov    %rcx,%rbx
   11f06:	48 83 ec 18          	sub    $0x18,%rsp
   11f0a:	4d 85 c0             	test   %r8,%r8
   11f0d:	89 7d c0             	mov    %edi,-0x40(%rbp)
   11f10:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
   11f14:	0f 84 ae 01 00 00    	je     120c8 <ocall_sock_recv+0x1d8>
   11f1a:	45 8b 28             	mov    (%r8),%r13d
   11f1d:	bf 1c 00 00 00       	mov    $0x1c,%edi
   11f22:	e8 d9 0f 00 00       	callq  12f00 <sgx_ocalloc>
   11f27:	48 85 c0             	test   %rax,%rax
   11f2a:	49 89 c6             	mov    %rax,%r14
   11f2d:	0f 84 ed 00 00 00    	je     12020 <ocall_sock_recv+0x130>
   11f33:	8b 45 c0             	mov    -0x40(%rbp),%eax
   11f36:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   11f3a:	41 89 06             	mov    %eax,(%r14)
   11f3d:	44 89 f8             	mov    %r15d,%eax
   11f40:	48 89 c6             	mov    %rax,%rsi
   11f43:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   11f47:	e8 84 0f 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11f4c:	84 c0                	test   %al,%al
   11f4e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11f52:	0f 85 b0 00 00 00    	jne    12008 <ocall_sock_recv+0x118>
   11f58:	48 85 db             	test   %rbx,%rbx
   11f5b:	49 89 56 04          	mov    %rdx,0x4(%r14)
   11f5f:	45 89 7e 0c          	mov    %r15d,0xc(%r14)
   11f63:	0f 84 67 01 00 00    	je     120d0 <ocall_sock_recv+0x1e0>
   11f69:	45 89 ef             	mov    %r13d,%r15d
   11f6c:	48 89 df             	mov    %rbx,%rdi
   11f6f:	4c 89 fe             	mov    %r15,%rsi
   11f72:	e8 59 0f 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11f77:	84 c0                	test   %al,%al
   11f79:	48 89 da             	mov    %rbx,%rdx
   11f7c:	0f 85 ce 00 00 00    	jne    12050 <ocall_sock_recv+0x160>
   11f82:	49 89 56 10          	mov    %rdx,0x10(%r14)
   11f86:	45 89 6e 18          	mov    %r13d,0x18(%r14)
   11f8a:	4c 89 f6             	mov    %r14,%rsi
   11f8d:	bf 19 00 00 00       	mov    $0x19,%edi
   11f92:	e8 56 32 00 00       	callq  151ed <sgx_ocall>
   11f97:	85 c0                	test   %eax,%eax
   11f99:	41 89 c7             	mov    %eax,%r15d
   11f9c:	78 4d                	js     11feb <ocall_sock_recv+0xfb>
   11f9e:	45 85 ed             	test   %r13d,%r13d
   11fa1:	0f 85 89 00 00 00    	jne    12030 <ocall_sock_recv+0x140>
   11fa7:	49 8b 7e 04          	mov    0x4(%r14),%rdi
   11fab:	48 39 7d c8          	cmp    %rdi,-0x38(%rbp)
   11faf:	74 13                	je     11fc4 <ocall_sock_recv+0xd4>
   11fb1:	4d 63 ef             	movslq %r15d,%r13
   11fb4:	4c 89 ee             	mov    %r13,%rsi
   11fb7:	e8 14 0f 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11fbc:	84 c0                	test   %al,%al
   11fbe:	0f 84 d4 00 00 00    	je     12098 <ocall_sock_recv+0x1a8>
   11fc4:	49 8b 7e 10          	mov    0x10(%r14),%rdi
   11fc8:	48 39 fb             	cmp    %rdi,%rbx
   11fcb:	74 11                	je     11fde <ocall_sock_recv+0xee>
   11fcd:	41 8b 76 18          	mov    0x18(%r14),%esi
   11fd1:	e8 fa 0e 00 00       	callq  12ed0 <sgx_is_within_enclave>
   11fd6:	84 c0                	test   %al,%al
   11fd8:	0f 84 8a 00 00 00    	je     12068 <ocall_sock_recv+0x178>
   11fde:	4d 85 e4             	test   %r12,%r12
   11fe1:	74 08                	je     11feb <ocall_sock_recv+0xfb>
   11fe3:	41 8b 46 18          	mov    0x18(%r14),%eax
   11fe7:	41 89 04 24          	mov    %eax,(%r12)
   11feb:	e8 30 0f 00 00       	callq  12f20 <sgx_ocfree>
   11ff0:	44 89 f8             	mov    %r15d,%eax
   11ff3:	48 83 c4 18          	add    $0x18,%rsp
   11ff7:	5b                   	pop    %rbx
   11ff8:	41 5c                	pop    %r12
   11ffa:	41 5d                	pop    %r13
   11ffc:	41 5e                	pop    %r14
   11ffe:	41 5f                	pop    %r15
   12000:	5d                   	pop    %rbp
   12001:	c3                   	retq   
   12002:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12008:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
   1200c:	e8 ef 0e 00 00       	callq  12f00 <sgx_ocalloc>
   12011:	48 85 c0             	test   %rax,%rax
   12014:	48 89 c2             	mov    %rax,%rdx
   12017:	0f 85 3b ff ff ff    	jne    11f58 <ocall_sock_recv+0x68>
   1201d:	0f 1f 00             	nopl   (%rax)
   12020:	e8 fb 0e 00 00       	callq  12f20 <sgx_ocfree>
   12025:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   1202a:	eb c7                	jmp    11ff3 <ocall_sock_recv+0x103>
   1202c:	0f 1f 40 00          	nopl   0x0(%rax)
   12030:	49 8b 7e 10          	mov    0x10(%r14),%rdi
   12034:	44 89 ee             	mov    %r13d,%esi
   12037:	e8 94 0e 00 00       	callq  12ed0 <sgx_is_within_enclave>
   1203c:	84 c0                	test   %al,%al
   1203e:	75 e0                	jne    12020 <ocall_sock_recv+0x130>
   12040:	45 3b 6e 18          	cmp    0x18(%r14),%r13d
   12044:	0f 83 5d ff ff ff    	jae    11fa7 <ocall_sock_recv+0xb7>
   1204a:	eb d4                	jmp    12020 <ocall_sock_recv+0x130>
   1204c:	0f 1f 40 00          	nopl   0x0(%rax)
   12050:	4c 89 ff             	mov    %r15,%rdi
   12053:	e8 a8 0e 00 00       	callq  12f00 <sgx_ocalloc>
   12058:	48 85 c0             	test   %rax,%rax
   1205b:	74 c3                	je     12020 <ocall_sock_recv+0x130>
   1205d:	48 89 c2             	mov    %rax,%rdx
   12060:	e9 1d ff ff ff       	jmpq   11f82 <ocall_sock_recv+0x92>
   12065:	0f 1f 00             	nopl   (%rax)
   12068:	41 8b 76 18          	mov    0x18(%r14),%esi
   1206c:	48 89 df             	mov    %rbx,%rdi
   1206f:	e8 5c 0e 00 00       	callq  12ed0 <sgx_is_within_enclave>
   12074:	84 c0                	test   %al,%al
   12076:	0f 84 62 ff ff ff    	je     11fde <ocall_sock_recv+0xee>
   1207c:	41 8b 56 18          	mov    0x18(%r14),%edx
   12080:	49 8b 76 10          	mov    0x10(%r14),%rsi
   12084:	48 89 df             	mov    %rbx,%rdi
   12087:	e8 64 3b 00 00       	callq  15bf0 <memcpy>
   1208c:	e9 4d ff ff ff       	jmpq   11fde <ocall_sock_recv+0xee>
   12091:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12098:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   1209c:	4c 89 ee             	mov    %r13,%rsi
   1209f:	e8 2c 0e 00 00       	callq  12ed0 <sgx_is_within_enclave>
   120a4:	84 c0                	test   %al,%al
   120a6:	0f 84 18 ff ff ff    	je     11fc4 <ocall_sock_recv+0xd4>
   120ac:	49 8b 76 04          	mov    0x4(%r14),%rsi
   120b0:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   120b4:	4c 89 ea             	mov    %r13,%rdx
   120b7:	e8 34 3b 00 00       	callq  15bf0 <memcpy>
   120bc:	e9 03 ff ff ff       	jmpq   11fc4 <ocall_sock_recv+0xd4>
   120c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   120c8:	45 31 ed             	xor    %r13d,%r13d
   120cb:	e9 4d fe ff ff       	jmpq   11f1d <ocall_sock_recv+0x2d>
   120d0:	31 d2                	xor    %edx,%edx
   120d2:	e9 ab fe ff ff       	jmpq   11f82 <ocall_sock_recv+0x92>
   120d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   120de:	00 00 

00000000000120e0 <ocall_sock_send>:
   120e0:	55                   	push   %rbp
   120e1:	48 89 e5             	mov    %rsp,%rbp
   120e4:	41 57                	push   %r15
   120e6:	41 56                	push   %r14
   120e8:	41 55                	push   %r13
   120ea:	41 54                	push   %r12
   120ec:	41 89 ff             	mov    %edi,%r15d
   120ef:	53                   	push   %rbx
   120f0:	bf 1c 00 00 00       	mov    $0x1c,%edi
   120f5:	49 89 f4             	mov    %rsi,%r12
   120f8:	41 89 d5             	mov    %edx,%r13d
   120fb:	48 89 cb             	mov    %rcx,%rbx
   120fe:	48 83 ec 18          	sub    $0x18,%rsp
   12102:	44 89 45 cc          	mov    %r8d,-0x34(%rbp)
   12106:	e8 f5 0d 00 00       	callq  12f00 <sgx_ocalloc>
   1210b:	48 85 c0             	test   %rax,%rax
   1210e:	0f 84 dc 00 00 00    	je     121f0 <ocall_sock_send+0x110>
   12114:	44 89 38             	mov    %r15d,(%rax)
   12117:	45 89 ef             	mov    %r13d,%r15d
   1211a:	4c 89 e7             	mov    %r12,%rdi
   1211d:	4c 89 fe             	mov    %r15,%rsi
   12120:	49 89 c6             	mov    %rax,%r14
   12123:	e8 a8 0d 00 00       	callq  12ed0 <sgx_is_within_enclave>
   12128:	84 c0                	test   %al,%al
   1212a:	75 54                	jne    12180 <ocall_sock_send+0xa0>
   1212c:	48 85 db             	test   %rbx,%rbx
   1212f:	4d 89 66 04          	mov    %r12,0x4(%r14)
   12133:	45 89 6e 0c          	mov    %r13d,0xc(%r14)
   12137:	74 7a                	je     121b3 <ocall_sock_send+0xd3>
   12139:	44 8b 65 cc          	mov    -0x34(%rbp),%r12d
   1213d:	48 89 df             	mov    %rbx,%rdi
   12140:	4c 89 e6             	mov    %r12,%rsi
   12143:	e8 88 0d 00 00       	callq  12ed0 <sgx_is_within_enclave>
   12148:	84 c0                	test   %al,%al
   1214a:	75 74                	jne    121c0 <ocall_sock_send+0xe0>
   1214c:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1214f:	49 89 5e 10          	mov    %rbx,0x10(%r14)
   12153:	4c 89 f6             	mov    %r14,%rsi
   12156:	bf 1a 00 00 00       	mov    $0x1a,%edi
   1215b:	41 89 46 18          	mov    %eax,0x18(%r14)
   1215f:	e8 89 30 00 00       	callq  151ed <sgx_ocall>
   12164:	89 c3                	mov    %eax,%ebx
   12166:	e8 b5 0d 00 00       	callq  12f20 <sgx_ocfree>
   1216b:	89 d8                	mov    %ebx,%eax
   1216d:	48 83 c4 18          	add    $0x18,%rsp
   12171:	5b                   	pop    %rbx
   12172:	41 5c                	pop    %r12
   12174:	41 5d                	pop    %r13
   12176:	41 5e                	pop    %r14
   12178:	41 5f                	pop    %r15
   1217a:	5d                   	pop    %rbp
   1217b:	c3                   	retq   
   1217c:	0f 1f 40 00          	nopl   0x0(%rax)
   12180:	4c 89 ff             	mov    %r15,%rdi
   12183:	e8 78 0d 00 00       	callq  12f00 <sgx_ocalloc>
   12188:	48 85 c0             	test   %rax,%rax
   1218b:	74 63                	je     121f0 <ocall_sock_send+0x110>
   1218d:	4c 89 e6             	mov    %r12,%rsi
   12190:	4c 89 fa             	mov    %r15,%rdx
   12193:	48 89 c7             	mov    %rax,%rdi
   12196:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1219a:	e8 51 3a 00 00       	callq  15bf0 <memcpy>
   1219f:	4c 8b 45 c0          	mov    -0x40(%rbp),%r8
   121a3:	48 85 db             	test   %rbx,%rbx
   121a6:	45 89 6e 0c          	mov    %r13d,0xc(%r14)
   121aa:	4d 89 c4             	mov    %r8,%r12
   121ad:	4d 89 66 04          	mov    %r12,0x4(%r14)
   121b1:	75 86                	jne    12139 <ocall_sock_send+0x59>
   121b3:	31 db                	xor    %ebx,%ebx
   121b5:	eb 95                	jmp    1214c <ocall_sock_send+0x6c>
   121b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   121be:	00 00 
   121c0:	4c 89 e7             	mov    %r12,%rdi
   121c3:	e8 38 0d 00 00       	callq  12f00 <sgx_ocalloc>
   121c8:	48 85 c0             	test   %rax,%rax
   121cb:	49 89 c5             	mov    %rax,%r13
   121ce:	74 20                	je     121f0 <ocall_sock_send+0x110>
   121d0:	48 89 de             	mov    %rbx,%rsi
   121d3:	4c 89 e2             	mov    %r12,%rdx
   121d6:	48 89 c7             	mov    %rax,%rdi
   121d9:	e8 12 3a 00 00       	callq  15bf0 <memcpy>
   121de:	4c 89 eb             	mov    %r13,%rbx
   121e1:	e9 66 ff ff ff       	jmpq   1214c <ocall_sock_send+0x6c>
   121e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   121ed:	00 00 00 
   121f0:	e8 2b 0d 00 00       	callq  12f20 <sgx_ocfree>
   121f5:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   121fa:	e9 6e ff ff ff       	jmpq   1216d <ocall_sock_send+0x8d>
   121ff:	90                   	nop

0000000000012200 <ocall_sock_recv_fd>:
   12200:	55                   	push   %rbp
   12201:	48 89 e5             	mov    %rsp,%rbp
   12204:	41 57                	push   %r15
   12206:	41 56                	push   %r14
   12208:	41 55                	push   %r13
   1220a:	41 54                	push   %r12
   1220c:	41 89 ff             	mov    %edi,%r15d
   1220f:	53                   	push   %rbx
   12210:	bf 1c 00 00 00       	mov    $0x1c,%edi
   12215:	89 d3                	mov    %edx,%ebx
   12217:	49 89 cd             	mov    %rcx,%r13
   1221a:	4d 89 c4             	mov    %r8,%r12
   1221d:	48 83 ec 18          	sub    $0x18,%rsp
   12221:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
   12225:	e8 d6 0c 00 00       	callq  12f00 <sgx_ocalloc>
   1222a:	48 85 c0             	test   %rax,%rax
   1222d:	0f 84 05 01 00 00    	je     12338 <ocall_sock_recv_fd+0x138>
   12233:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   12237:	44 89 38             	mov    %r15d,(%rax)
   1223a:	41 89 df             	mov    %ebx,%r15d
   1223d:	4c 89 fe             	mov    %r15,%rsi
   12240:	49 89 c6             	mov    %rax,%r14
   12243:	e8 88 0c 00 00       	callq  12ed0 <sgx_is_within_enclave>
   12248:	84 c0                	test   %al,%al
   1224a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1224e:	0f 85 cc 00 00 00    	jne    12320 <ocall_sock_recv_fd+0x120>
   12254:	4d 85 ed             	test   %r13,%r13
   12257:	49 89 56 04          	mov    %rdx,0x4(%r14)
   1225b:	41 89 5e 0c          	mov    %ebx,0xc(%r14)
   1225f:	0f 84 03 01 00 00    	je     12368 <ocall_sock_recv_fd+0x168>
   12265:	41 8b 34 24          	mov    (%r12),%esi
   12269:	4c 89 ef             	mov    %r13,%rdi
   1226c:	48 c1 e6 02          	shl    $0x2,%rsi
   12270:	e8 5b 0c 00 00       	callq  12ed0 <sgx_is_within_enclave>
   12275:	84 c0                	test   %al,%al
   12277:	4c 89 ea             	mov    %r13,%rdx
   1227a:	0f 85 c8 00 00 00    	jne    12348 <ocall_sock_recv_fd+0x148>
   12280:	41 8b 04 24          	mov    (%r12),%eax
   12284:	49 89 56 10          	mov    %rdx,0x10(%r14)
   12288:	4c 89 f6             	mov    %r14,%rsi
   1228b:	bf 1b 00 00 00       	mov    $0x1b,%edi
   12290:	41 89 46 18          	mov    %eax,0x18(%r14)
   12294:	e8 54 2f 00 00       	callq  151ed <sgx_ocall>
   12299:	85 c0                	test   %eax,%eax
   1229b:	89 c3                	mov    %eax,%ebx
   1229d:	78 66                	js     12305 <ocall_sock_recv_fd+0x105>
   1229f:	41 8b 34 24          	mov    (%r12),%esi
   122a3:	49 8b 7e 10          	mov    0x10(%r14),%rdi
   122a7:	48 c1 e6 02          	shl    $0x2,%rsi
   122ab:	e8 20 0c 00 00       	callq  12ed0 <sgx_is_within_enclave>
   122b0:	84 c0                	test   %al,%al
   122b2:	0f 85 80 00 00 00    	jne    12338 <ocall_sock_recv_fd+0x138>
   122b8:	41 8b 76 18          	mov    0x18(%r14),%esi
   122bc:	41 3b 34 24          	cmp    (%r12),%esi
   122c0:	77 76                	ja     12338 <ocall_sock_recv_fd+0x138>
   122c2:	49 8b 7e 04          	mov    0x4(%r14),%rdi
   122c6:	48 39 7d c8          	cmp    %rdi,-0x38(%rbp)
   122ca:	74 17                	je     122e3 <ocall_sock_recv_fd+0xe3>
   122cc:	4c 63 fb             	movslq %ebx,%r15
   122cf:	4c 89 fe             	mov    %r15,%rsi
   122d2:	e8 f9 0b 00 00       	callq  12ed0 <sgx_is_within_enclave>
   122d7:	84 c0                	test   %al,%al
   122d9:	0f 84 91 00 00 00    	je     12370 <ocall_sock_recv_fd+0x170>
   122df:	41 8b 76 18          	mov    0x18(%r14),%esi
   122e3:	49 8b 7e 10          	mov    0x10(%r14),%rdi
   122e7:	49 39 fd             	cmp    %rdi,%r13
   122ea:	74 15                	je     12301 <ocall_sock_recv_fd+0x101>
   122ec:	48 c1 e6 02          	shl    $0x2,%rsi
   122f0:	e8 db 0b 00 00       	callq  12ed0 <sgx_is_within_enclave>
   122f5:	84 c0                	test   %al,%al
   122f7:	0f 84 a3 00 00 00    	je     123a0 <ocall_sock_recv_fd+0x1a0>
   122fd:	41 8b 76 18          	mov    0x18(%r14),%esi
   12301:	41 89 34 24          	mov    %esi,(%r12)
   12305:	e8 16 0c 00 00       	callq  12f20 <sgx_ocfree>
   1230a:	89 d8                	mov    %ebx,%eax
   1230c:	48 83 c4 18          	add    $0x18,%rsp
   12310:	5b                   	pop    %rbx
   12311:	41 5c                	pop    %r12
   12313:	41 5d                	pop    %r13
   12315:	41 5e                	pop    %r14
   12317:	41 5f                	pop    %r15
   12319:	5d                   	pop    %rbp
   1231a:	c3                   	retq   
   1231b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12320:	4c 89 ff             	mov    %r15,%rdi
   12323:	e8 d8 0b 00 00       	callq  12f00 <sgx_ocalloc>
   12328:	48 85 c0             	test   %rax,%rax
   1232b:	48 89 c2             	mov    %rax,%rdx
   1232e:	0f 85 20 ff ff ff    	jne    12254 <ocall_sock_recv_fd+0x54>
   12334:	0f 1f 40 00          	nopl   0x0(%rax)
   12338:	e8 e3 0b 00 00       	callq  12f20 <sgx_ocfree>
   1233d:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   12342:	eb c8                	jmp    1230c <ocall_sock_recv_fd+0x10c>
   12344:	0f 1f 40 00          	nopl   0x0(%rax)
   12348:	41 8b 3c 24          	mov    (%r12),%edi
   1234c:	48 c1 e7 02          	shl    $0x2,%rdi
   12350:	e8 ab 0b 00 00       	callq  12f00 <sgx_ocalloc>
   12355:	48 85 c0             	test   %rax,%rax
   12358:	74 de                	je     12338 <ocall_sock_recv_fd+0x138>
   1235a:	48 89 c2             	mov    %rax,%rdx
   1235d:	e9 1e ff ff ff       	jmpq   12280 <ocall_sock_recv_fd+0x80>
   12362:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12368:	31 d2                	xor    %edx,%edx
   1236a:	e9 11 ff ff ff       	jmpq   12280 <ocall_sock_recv_fd+0x80>
   1236f:	90                   	nop
   12370:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   12374:	4c 89 fe             	mov    %r15,%rsi
   12377:	e8 54 0b 00 00       	callq  12ed0 <sgx_is_within_enclave>
   1237c:	84 c0                	test   %al,%al
   1237e:	0f 84 5b ff ff ff    	je     122df <ocall_sock_recv_fd+0xdf>
   12384:	49 8b 76 04          	mov    0x4(%r14),%rsi
   12388:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   1238c:	4c 89 fa             	mov    %r15,%rdx
   1238f:	e8 5c 38 00 00       	callq  15bf0 <memcpy>
   12394:	e9 46 ff ff ff       	jmpq   122df <ocall_sock_recv_fd+0xdf>
   12399:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   123a0:	41 8b 76 18          	mov    0x18(%r14),%esi
   123a4:	4c 89 ef             	mov    %r13,%rdi
   123a7:	48 c1 e6 02          	shl    $0x2,%rsi
   123ab:	e8 20 0b 00 00       	callq  12ed0 <sgx_is_within_enclave>
   123b0:	84 c0                	test   %al,%al
   123b2:	0f 84 45 ff ff ff    	je     122fd <ocall_sock_recv_fd+0xfd>
   123b8:	41 8b 56 18          	mov    0x18(%r14),%edx
   123bc:	49 8b 76 10          	mov    0x10(%r14),%rsi
   123c0:	4c 89 ef             	mov    %r13,%rdi
   123c3:	48 c1 e2 02          	shl    $0x2,%rdx
   123c7:	e8 24 38 00 00       	callq  15bf0 <memcpy>
   123cc:	e9 2c ff ff ff       	jmpq   122fd <ocall_sock_recv_fd+0xfd>
   123d1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   123d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   123dd:	00 00 00 

00000000000123e0 <ocall_sock_send_fd>:
   123e0:	55                   	push   %rbp
   123e1:	48 89 e5             	mov    %rsp,%rbp
   123e4:	41 57                	push   %r15
   123e6:	41 56                	push   %r14
   123e8:	41 55                	push   %r13
   123ea:	41 54                	push   %r12
   123ec:	41 89 ff             	mov    %edi,%r15d
   123ef:	53                   	push   %rbx
   123f0:	bf 1c 00 00 00       	mov    $0x1c,%edi
   123f5:	49 89 f4             	mov    %rsi,%r12
   123f8:	41 89 d5             	mov    %edx,%r13d
   123fb:	48 89 cb             	mov    %rcx,%rbx
   123fe:	48 83 ec 18          	sub    $0x18,%rsp
   12402:	44 89 45 cc          	mov    %r8d,-0x34(%rbp)
   12406:	e8 f5 0a 00 00       	callq  12f00 <sgx_ocalloc>
   1240b:	48 85 c0             	test   %rax,%rax
   1240e:	0f 84 dc 00 00 00    	je     124f0 <ocall_sock_send_fd+0x110>
   12414:	44 89 38             	mov    %r15d,(%rax)
   12417:	45 89 ef             	mov    %r13d,%r15d
   1241a:	4c 89 e7             	mov    %r12,%rdi
   1241d:	4c 89 fe             	mov    %r15,%rsi
   12420:	49 89 c6             	mov    %rax,%r14
   12423:	e8 a8 0a 00 00       	callq  12ed0 <sgx_is_within_enclave>
   12428:	84 c0                	test   %al,%al
   1242a:	75 54                	jne    12480 <ocall_sock_send_fd+0xa0>
   1242c:	48 85 db             	test   %rbx,%rbx
   1242f:	4d 89 66 04          	mov    %r12,0x4(%r14)
   12433:	45 89 6e 0c          	mov    %r13d,0xc(%r14)
   12437:	74 7a                	je     124b3 <ocall_sock_send_fd+0xd3>
   12439:	44 8b 65 cc          	mov    -0x34(%rbp),%r12d
   1243d:	48 89 df             	mov    %rbx,%rdi
   12440:	49 c1 e4 02          	shl    $0x2,%r12
   12444:	4c 89 e6             	mov    %r12,%rsi
   12447:	e8 84 0a 00 00       	callq  12ed0 <sgx_is_within_enclave>
   1244c:	84 c0                	test   %al,%al
   1244e:	75 70                	jne    124c0 <ocall_sock_send_fd+0xe0>
   12450:	8b 45 cc             	mov    -0x34(%rbp),%eax
   12453:	49 89 5e 10          	mov    %rbx,0x10(%r14)
   12457:	4c 89 f6             	mov    %r14,%rsi
   1245a:	bf 1c 00 00 00       	mov    $0x1c,%edi
   1245f:	41 89 46 18          	mov    %eax,0x18(%r14)
   12463:	e8 85 2d 00 00       	callq  151ed <sgx_ocall>
   12468:	89 c3                	mov    %eax,%ebx
   1246a:	e8 b1 0a 00 00       	callq  12f20 <sgx_ocfree>
   1246f:	89 d8                	mov    %ebx,%eax
   12471:	48 83 c4 18          	add    $0x18,%rsp
   12475:	5b                   	pop    %rbx
   12476:	41 5c                	pop    %r12
   12478:	41 5d                	pop    %r13
   1247a:	41 5e                	pop    %r14
   1247c:	41 5f                	pop    %r15
   1247e:	5d                   	pop    %rbp
   1247f:	c3                   	retq   
   12480:	4c 89 ff             	mov    %r15,%rdi
   12483:	e8 78 0a 00 00       	callq  12f00 <sgx_ocalloc>
   12488:	48 85 c0             	test   %rax,%rax
   1248b:	74 63                	je     124f0 <ocall_sock_send_fd+0x110>
   1248d:	4c 89 e6             	mov    %r12,%rsi
   12490:	4c 89 fa             	mov    %r15,%rdx
   12493:	48 89 c7             	mov    %rax,%rdi
   12496:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1249a:	e8 51 37 00 00       	callq  15bf0 <memcpy>
   1249f:	4c 8b 45 c0          	mov    -0x40(%rbp),%r8
   124a3:	48 85 db             	test   %rbx,%rbx
   124a6:	45 89 6e 0c          	mov    %r13d,0xc(%r14)
   124aa:	4d 89 c4             	mov    %r8,%r12
   124ad:	4d 89 66 04          	mov    %r12,0x4(%r14)
   124b1:	75 86                	jne    12439 <ocall_sock_send_fd+0x59>
   124b3:	31 db                	xor    %ebx,%ebx
   124b5:	eb 99                	jmp    12450 <ocall_sock_send_fd+0x70>
   124b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   124be:	00 00 
   124c0:	4c 89 e7             	mov    %r12,%rdi
   124c3:	e8 38 0a 00 00       	callq  12f00 <sgx_ocalloc>
   124c8:	48 85 c0             	test   %rax,%rax
   124cb:	49 89 c5             	mov    %rax,%r13
   124ce:	74 20                	je     124f0 <ocall_sock_send_fd+0x110>
   124d0:	48 89 de             	mov    %rbx,%rsi
   124d3:	4c 89 e2             	mov    %r12,%rdx
   124d6:	48 89 c7             	mov    %rax,%rdi
   124d9:	e8 12 37 00 00       	callq  15bf0 <memcpy>
   124de:	4c 89 eb             	mov    %r13,%rbx
   124e1:	e9 6a ff ff ff       	jmpq   12450 <ocall_sock_send_fd+0x70>
   124e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   124ed:	00 00 00 
   124f0:	e8 2b 0a 00 00       	callq  12f20 <sgx_ocfree>
   124f5:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   124fa:	e9 72 ff ff ff       	jmpq   12471 <ocall_sock_send_fd+0x91>
   124ff:	90                   	nop

0000000000012500 <ocall_sock_setopt>:
   12500:	55                   	push   %rbp
   12501:	48 89 e5             	mov    %rsp,%rbp
   12504:	41 57                	push   %r15
   12506:	41 56                	push   %r14
   12508:	41 55                	push   %r13
   1250a:	41 54                	push   %r12
   1250c:	41 89 ff             	mov    %edi,%r15d
   1250f:	53                   	push   %rbx
   12510:	bf 18 00 00 00       	mov    $0x18,%edi
   12515:	41 89 d6             	mov    %edx,%r14d
   12518:	49 89 cc             	mov    %rcx,%r12
   1251b:	45 89 c5             	mov    %r8d,%r13d
   1251e:	48 83 ec 18          	sub    $0x18,%rsp
   12522:	89 75 cc             	mov    %esi,-0x34(%rbp)
   12525:	e8 d6 09 00 00       	callq  12f00 <sgx_ocalloc>
   1252a:	48 85 c0             	test   %rax,%rax
   1252d:	8b 75 cc             	mov    -0x34(%rbp),%esi
   12530:	74 6e                	je     125a0 <ocall_sock_setopt+0xa0>
   12532:	44 89 70 08          	mov    %r14d,0x8(%rax)
   12536:	45 89 ee             	mov    %r13d,%r14d
   12539:	89 70 04             	mov    %esi,0x4(%rax)
   1253c:	44 89 38             	mov    %r15d,(%rax)
   1253f:	4c 89 f6             	mov    %r14,%rsi
   12542:	4c 89 e7             	mov    %r12,%rdi
   12545:	48 89 c3             	mov    %rax,%rbx
   12548:	e8 83 09 00 00       	callq  12ed0 <sgx_is_within_enclave>
   1254d:	84 c0                	test   %al,%al
   1254f:	74 21                	je     12572 <ocall_sock_setopt+0x72>
   12551:	4c 89 f7             	mov    %r14,%rdi
   12554:	e8 a7 09 00 00       	callq  12f00 <sgx_ocalloc>
   12559:	48 85 c0             	test   %rax,%rax
   1255c:	49 89 c7             	mov    %rax,%r15
   1255f:	74 3f                	je     125a0 <ocall_sock_setopt+0xa0>
   12561:	4c 89 e6             	mov    %r12,%rsi
   12564:	4c 89 f2             	mov    %r14,%rdx
   12567:	48 89 c7             	mov    %rax,%rdi
   1256a:	4d 89 fc             	mov    %r15,%r12
   1256d:	e8 7e 36 00 00       	callq  15bf0 <memcpy>
   12572:	48 89 de             	mov    %rbx,%rsi
   12575:	4c 89 63 0c          	mov    %r12,0xc(%rbx)
   12579:	44 89 6b 14          	mov    %r13d,0x14(%rbx)
   1257d:	bf 1d 00 00 00       	mov    $0x1d,%edi
   12582:	e8 66 2c 00 00       	callq  151ed <sgx_ocall>
   12587:	89 c3                	mov    %eax,%ebx
   12589:	e8 92 09 00 00       	callq  12f20 <sgx_ocfree>
   1258e:	89 d8                	mov    %ebx,%eax
   12590:	48 83 c4 18          	add    $0x18,%rsp
   12594:	5b                   	pop    %rbx
   12595:	41 5c                	pop    %r12
   12597:	41 5d                	pop    %r13
   12599:	41 5e                	pop    %r14
   1259b:	41 5f                	pop    %r15
   1259d:	5d                   	pop    %rbp
   1259e:	c3                   	retq   
   1259f:	90                   	nop
   125a0:	e8 7b 09 00 00       	callq  12f20 <sgx_ocfree>
   125a5:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   125aa:	eb e4                	jmp    12590 <ocall_sock_setopt+0x90>
   125ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000125b0 <ocall_sock_shutdown>:
   125b0:	55                   	push   %rbp
   125b1:	48 89 e5             	mov    %rsp,%rbp
   125b4:	41 54                	push   %r12
   125b6:	53                   	push   %rbx
   125b7:	41 89 fc             	mov    %edi,%r12d
   125ba:	bf 08 00 00 00       	mov    $0x8,%edi
   125bf:	89 f3                	mov    %esi,%ebx
   125c1:	e8 3a 09 00 00       	callq  12f00 <sgx_ocalloc>
   125c6:	48 85 c0             	test   %rax,%rax
   125c9:	74 21                	je     125ec <ocall_sock_shutdown+0x3c>
   125cb:	89 58 04             	mov    %ebx,0x4(%rax)
   125ce:	48 89 c6             	mov    %rax,%rsi
   125d1:	bf 1e 00 00 00       	mov    $0x1e,%edi
   125d6:	44 89 20             	mov    %r12d,(%rax)
   125d9:	e8 0f 2c 00 00       	callq  151ed <sgx_ocall>
   125de:	89 c3                	mov    %eax,%ebx
   125e0:	e8 3b 09 00 00       	callq  12f20 <sgx_ocfree>
   125e5:	89 d8                	mov    %ebx,%eax
   125e7:	5b                   	pop    %rbx
   125e8:	41 5c                	pop    %r12
   125ea:	5d                   	pop    %rbp
   125eb:	c3                   	retq   
   125ec:	e8 2f 09 00 00       	callq  12f20 <sgx_ocfree>
   125f1:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   125f6:	eb ef                	jmp    125e7 <ocall_sock_shutdown+0x37>
   125f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   125ff:	00 

0000000000012600 <ocall_gettime>:
   12600:	55                   	push   %rbp
   12601:	48 89 e5             	mov    %rsp,%rbp
   12604:	41 55                	push   %r13
   12606:	41 54                	push   %r12
   12608:	53                   	push   %rbx
   12609:	49 89 fd             	mov    %rdi,%r13
   1260c:	bf 08 00 00 00       	mov    $0x8,%edi
   12611:	48 83 ec 08          	sub    $0x8,%rsp
   12615:	e8 e6 08 00 00       	callq  12f00 <sgx_ocalloc>
   1261a:	48 85 c0             	test   %rax,%rax
   1261d:	74 3b                	je     1265a <ocall_gettime+0x5a>
   1261f:	48 89 c6             	mov    %rax,%rsi
   12622:	bf 1f 00 00 00       	mov    $0x1f,%edi
   12627:	49 89 c4             	mov    %rax,%r12
   1262a:	e8 be 2b 00 00       	callq  151ed <sgx_ocall>
   1262f:	85 c0                	test   %eax,%eax
   12631:	89 c3                	mov    %eax,%ebx
   12633:	74 1b                	je     12650 <ocall_gettime+0x50>
   12635:	e8 e6 08 00 00       	callq  12f20 <sgx_ocfree>
   1263a:	89 d8                	mov    %ebx,%eax
   1263c:	48 83 c4 08          	add    $0x8,%rsp
   12640:	5b                   	pop    %rbx
   12641:	41 5c                	pop    %r12
   12643:	41 5d                	pop    %r13
   12645:	5d                   	pop    %rbp
   12646:	c3                   	retq   
   12647:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1264e:	00 00 
   12650:	49 8b 04 24          	mov    (%r12),%rax
   12654:	49 89 45 00          	mov    %rax,0x0(%r13)
   12658:	eb db                	jmp    12635 <ocall_gettime+0x35>
   1265a:	e8 c1 08 00 00       	callq  12f20 <sgx_ocfree>
   1265f:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   12664:	eb d6                	jmp    1263c <ocall_gettime+0x3c>
   12666:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1266d:	00 00 00 

0000000000012670 <ocall_sleep>:
   12670:	55                   	push   %rbp
   12671:	48 89 e5             	mov    %rsp,%rbp
   12674:	41 55                	push   %r13
   12676:	41 54                	push   %r12
   12678:	53                   	push   %rbx
   12679:	49 89 fd             	mov    %rdi,%r13
   1267c:	bf 08 00 00 00       	mov    $0x8,%edi
   12681:	48 83 ec 08          	sub    $0x8,%rsp
   12685:	e8 76 08 00 00       	callq  12f00 <sgx_ocalloc>
   1268a:	48 85 c0             	test   %rax,%rax
   1268d:	74 7b                	je     1270a <ocall_sleep+0x9a>
   1268f:	4d 85 ed             	test   %r13,%r13
   12692:	49 89 c4             	mov    %rax,%r12
   12695:	74 49                	je     126e0 <ocall_sleep+0x70>
   12697:	49 8b 45 00          	mov    0x0(%r13),%rax
   1269b:	4c 89 e6             	mov    %r12,%rsi
   1269e:	bf 20 00 00 00       	mov    $0x20,%edi
   126a3:	49 89 04 24          	mov    %rax,(%r12)
   126a7:	e8 41 2b 00 00       	callq  151ed <sgx_ocall>
   126ac:	85 c0                	test   %eax,%eax
   126ae:	89 c3                	mov    %eax,%ebx
   126b0:	74 1e                	je     126d0 <ocall_sleep+0x60>
   126b2:	83 f8 fc             	cmp    $0xfffffffc,%eax
   126b5:	74 49                	je     12700 <ocall_sleep+0x90>
   126b7:	e8 64 08 00 00       	callq  12f20 <sgx_ocfree>
   126bc:	89 d8                	mov    %ebx,%eax
   126be:	48 83 c4 08          	add    $0x8,%rsp
   126c2:	5b                   	pop    %rbx
   126c3:	41 5c                	pop    %r12
   126c5:	41 5d                	pop    %r13
   126c7:	5d                   	pop    %rbp
   126c8:	c3                   	retq   
   126c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   126d0:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   126d7:	00 
   126d8:	eb dd                	jmp    126b7 <ocall_sleep+0x47>
   126da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   126e0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   126e7:	48 89 c6             	mov    %rax,%rsi
   126ea:	bf 20 00 00 00       	mov    $0x20,%edi
   126ef:	e8 f9 2a 00 00       	callq  151ed <sgx_ocall>
   126f4:	89 c3                	mov    %eax,%ebx
   126f6:	eb bf                	jmp    126b7 <ocall_sleep+0x47>
   126f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   126ff:	00 
   12700:	49 8b 04 24          	mov    (%r12),%rax
   12704:	49 89 45 00          	mov    %rax,0x0(%r13)
   12708:	eb ad                	jmp    126b7 <ocall_sleep+0x47>
   1270a:	e8 11 08 00 00       	callq  12f20 <sgx_ocfree>
   1270f:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   12714:	eb a8                	jmp    126be <ocall_sleep+0x4e>
   12716:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1271d:	00 00 00 

0000000000012720 <ocall_poll>:
   12720:	55                   	push   %rbp
   12721:	48 89 e5             	mov    %rsp,%rbp
   12724:	41 57                	push   %r15
   12726:	41 56                	push   %r14
   12728:	41 55                	push   %r13
   1272a:	41 54                	push   %r12
   1272c:	49 89 fe             	mov    %rdi,%r14
   1272f:	53                   	push   %rbx
   12730:	bf 14 00 00 00       	mov    $0x14,%edi
   12735:	41 89 f4             	mov    %esi,%r12d
   12738:	49 89 d7             	mov    %rdx,%r15
   1273b:	48 83 ec 18          	sub    $0x18,%rsp
   1273f:	e8 bc 07 00 00       	callq  12f00 <sgx_ocalloc>
   12744:	48 85 c0             	test   %rax,%rax
   12747:	0f 84 eb 00 00 00    	je     12838 <ocall_poll+0x118>
   1274d:	4d 63 ec             	movslq %r12d,%r13
   12750:	4c 89 f7             	mov    %r14,%rdi
   12753:	48 89 c3             	mov    %rax,%rbx
   12756:	49 c1 e5 03          	shl    $0x3,%r13
   1275a:	4c 89 ee             	mov    %r13,%rsi
   1275d:	e8 6e 07 00 00       	callq  12ed0 <sgx_is_within_enclave>
   12762:	84 c0                	test   %al,%al
   12764:	4c 89 f1             	mov    %r14,%rcx
   12767:	0f 85 a3 00 00 00    	jne    12810 <ocall_poll+0xf0>
   1276d:	4d 85 ff             	test   %r15,%r15
   12770:	48 89 0b             	mov    %rcx,(%rbx)
   12773:	44 89 63 08          	mov    %r12d,0x8(%rbx)
   12777:	74 3f                	je     127b8 <ocall_poll+0x98>
   12779:	49 8b 07             	mov    (%r15),%rax
   1277c:	48 89 de             	mov    %rbx,%rsi
   1277f:	bf 21 00 00 00       	mov    $0x21,%edi
   12784:	48 89 43 0c          	mov    %rax,0xc(%rbx)
   12788:	e8 60 2a 00 00       	callq  151ed <sgx_ocall>
   1278d:	83 f8 fc             	cmp    $0xfffffffc,%eax
   12790:	41 89 c4             	mov    %eax,%r12d
   12793:	75 3b                	jne    127d0 <ocall_poll+0xb0>
   12795:	48 8b 43 0c          	mov    0xc(%rbx),%rax
   12799:	49 89 07             	mov    %rax,(%r15)
   1279c:	e8 7f 07 00 00       	callq  12f20 <sgx_ocfree>
   127a1:	44 89 e0             	mov    %r12d,%eax
   127a4:	48 83 c4 18          	add    $0x18,%rsp
   127a8:	5b                   	pop    %rbx
   127a9:	41 5c                	pop    %r12
   127ab:	41 5d                	pop    %r13
   127ad:	41 5e                	pop    %r14
   127af:	41 5f                	pop    %r15
   127b1:	5d                   	pop    %rbp
   127b2:	c3                   	retq   
   127b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   127b8:	48 c7 43 0c ff ff ff 	movq   $0xffffffffffffffff,0xc(%rbx)
   127bf:	ff 
   127c0:	48 89 de             	mov    %rbx,%rsi
   127c3:	bf 21 00 00 00       	mov    $0x21,%edi
   127c8:	e8 20 2a 00 00       	callq  151ed <sgx_ocall>
   127cd:	41 89 c4             	mov    %eax,%r12d
   127d0:	45 85 e4             	test   %r12d,%r12d
   127d3:	78 c7                	js     1279c <ocall_poll+0x7c>
   127d5:	48 8b 3b             	mov    (%rbx),%rdi
   127d8:	49 39 fe             	cmp    %rdi,%r14
   127db:	74 bf                	je     1279c <ocall_poll+0x7c>
   127dd:	4c 89 ee             	mov    %r13,%rsi
   127e0:	e8 eb 06 00 00       	callq  12ed0 <sgx_is_within_enclave>
   127e5:	84 c0                	test   %al,%al
   127e7:	75 b3                	jne    1279c <ocall_poll+0x7c>
   127e9:	4c 89 ee             	mov    %r13,%rsi
   127ec:	4c 89 f7             	mov    %r14,%rdi
   127ef:	e8 dc 06 00 00       	callq  12ed0 <sgx_is_within_enclave>
   127f4:	84 c0                	test   %al,%al
   127f6:	74 a4                	je     1279c <ocall_poll+0x7c>
   127f8:	48 8b 33             	mov    (%rbx),%rsi
   127fb:	4c 89 ea             	mov    %r13,%rdx
   127fe:	4c 89 f7             	mov    %r14,%rdi
   12801:	e8 ea 33 00 00       	callq  15bf0 <memcpy>
   12806:	eb 94                	jmp    1279c <ocall_poll+0x7c>
   12808:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1280f:	00 
   12810:	4c 89 ef             	mov    %r13,%rdi
   12813:	e8 e8 06 00 00       	callq  12f00 <sgx_ocalloc>
   12818:	48 85 c0             	test   %rax,%rax
   1281b:	74 1b                	je     12838 <ocall_poll+0x118>
   1281d:	4c 89 ea             	mov    %r13,%rdx
   12820:	4c 89 f6             	mov    %r14,%rsi
   12823:	48 89 c7             	mov    %rax,%rdi
   12826:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1282a:	e8 c1 33 00 00       	callq  15bf0 <memcpy>
   1282f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   12833:	e9 35 ff ff ff       	jmpq   1276d <ocall_poll+0x4d>
   12838:	e8 e3 06 00 00       	callq  12f20 <sgx_ocfree>
   1283d:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   12842:	e9 5d ff ff ff       	jmpq   127a4 <ocall_poll+0x84>
   12847:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1284e:	00 00 

0000000000012850 <ocall_rename>:
   12850:	55                   	push   %rbp
   12851:	48 89 e5             	mov    %rsp,%rbp
   12854:	41 57                	push   %r15
   12856:	41 56                	push   %r14
   12858:	41 55                	push   %r13
   1285a:	41 54                	push   %r12
   1285c:	49 89 ff             	mov    %rdi,%r15
   1285f:	53                   	push   %rbx
   12860:	31 db                	xor    %ebx,%ebx
   12862:	49 89 f5             	mov    %rsi,%r13
   12865:	48 83 ec 18          	sub    $0x18,%rsp
   12869:	48 85 ff             	test   %rdi,%rdi
   1286c:	74 08                	je     12876 <ocall_rename+0x26>
   1286e:	e8 fd 2d 00 00       	callq  15670 <strlen>
   12873:	8d 58 01             	lea    0x1(%rax),%ebx
   12876:	45 31 e4             	xor    %r12d,%r12d
   12879:	4d 85 ed             	test   %r13,%r13
   1287c:	74 0c                	je     1288a <ocall_rename+0x3a>
   1287e:	4c 89 ef             	mov    %r13,%rdi
   12881:	e8 ea 2d 00 00       	callq  15670 <strlen>
   12886:	44 8d 60 01          	lea    0x1(%rax),%r12d
   1288a:	bf 10 00 00 00       	mov    $0x10,%edi
   1288f:	e8 6c 06 00 00       	callq  12f00 <sgx_ocalloc>
   12894:	48 85 c0             	test   %rax,%rax
   12897:	49 89 c6             	mov    %rax,%r14
   1289a:	0f 84 a0 00 00 00    	je     12940 <ocall_rename+0xf0>
   128a0:	48 63 db             	movslq %ebx,%rbx
   128a3:	4c 89 ff             	mov    %r15,%rdi
   128a6:	48 89 de             	mov    %rbx,%rsi
   128a9:	e8 22 06 00 00       	callq  12ed0 <sgx_is_within_enclave>
   128ae:	84 c0                	test   %al,%al
   128b0:	74 2a                	je     128dc <ocall_rename+0x8c>
   128b2:	48 89 df             	mov    %rbx,%rdi
   128b5:	e8 46 06 00 00       	callq  12f00 <sgx_ocalloc>
   128ba:	48 85 c0             	test   %rax,%rax
   128bd:	0f 84 7d 00 00 00    	je     12940 <ocall_rename+0xf0>
   128c3:	4c 89 fe             	mov    %r15,%rsi
   128c6:	48 89 da             	mov    %rbx,%rdx
   128c9:	48 89 c7             	mov    %rax,%rdi
   128cc:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   128d0:	e8 1b 33 00 00       	callq  15bf0 <memcpy>
   128d5:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   128d9:	49 89 cf             	mov    %rcx,%r15
   128dc:	49 63 dc             	movslq %r12d,%rbx
   128df:	4d 89 3e             	mov    %r15,(%r14)
   128e2:	4c 89 ef             	mov    %r13,%rdi
   128e5:	48 89 de             	mov    %rbx,%rsi
   128e8:	e8 e3 05 00 00       	callq  12ed0 <sgx_is_within_enclave>
   128ed:	84 c0                	test   %al,%al
   128ef:	74 21                	je     12912 <ocall_rename+0xc2>
   128f1:	48 89 df             	mov    %rbx,%rdi
   128f4:	e8 07 06 00 00       	callq  12f00 <sgx_ocalloc>
   128f9:	48 85 c0             	test   %rax,%rax
   128fc:	49 89 c4             	mov    %rax,%r12
   128ff:	74 3f                	je     12940 <ocall_rename+0xf0>
   12901:	4c 89 ee             	mov    %r13,%rsi
   12904:	48 89 da             	mov    %rbx,%rdx
   12907:	48 89 c7             	mov    %rax,%rdi
   1290a:	4d 89 e5             	mov    %r12,%r13
   1290d:	e8 de 32 00 00       	callq  15bf0 <memcpy>
   12912:	4c 89 f6             	mov    %r14,%rsi
   12915:	bf 22 00 00 00       	mov    $0x22,%edi
   1291a:	4d 89 6e 08          	mov    %r13,0x8(%r14)
   1291e:	e8 ca 28 00 00       	callq  151ed <sgx_ocall>
   12923:	89 c3                	mov    %eax,%ebx
   12925:	e8 f6 05 00 00       	callq  12f20 <sgx_ocfree>
   1292a:	89 d8                	mov    %ebx,%eax
   1292c:	48 83 c4 18          	add    $0x18,%rsp
   12930:	5b                   	pop    %rbx
   12931:	41 5c                	pop    %r12
   12933:	41 5d                	pop    %r13
   12935:	41 5e                	pop    %r14
   12937:	41 5f                	pop    %r15
   12939:	5d                   	pop    %rbp
   1293a:	c3                   	retq   
   1293b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12940:	e8 db 05 00 00       	callq  12f20 <sgx_ocfree>
   12945:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   1294a:	eb e0                	jmp    1292c <ocall_rename+0xdc>
   1294c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000012950 <ocall_delete>:
   12950:	55                   	push   %rbp
   12951:	48 89 e5             	mov    %rsp,%rbp
   12954:	41 56                	push   %r14
   12956:	41 55                	push   %r13
   12958:	41 54                	push   %r12
   1295a:	53                   	push   %rbx
   1295b:	31 db                	xor    %ebx,%ebx
   1295d:	48 85 ff             	test   %rdi,%rdi
   12960:	49 89 fc             	mov    %rdi,%r12
   12963:	74 08                	je     1296d <ocall_delete+0x1d>
   12965:	e8 06 2d 00 00       	callq  15670 <strlen>
   1296a:	8d 58 01             	lea    0x1(%rax),%ebx
   1296d:	bf 08 00 00 00       	mov    $0x8,%edi
   12972:	e8 89 05 00 00       	callq  12f00 <sgx_ocalloc>
   12977:	48 85 c0             	test   %rax,%rax
   1297a:	49 89 c5             	mov    %rax,%r13
   1297d:	74 59                	je     129d8 <ocall_delete+0x88>
   1297f:	48 63 db             	movslq %ebx,%rbx
   12982:	4c 89 e7             	mov    %r12,%rdi
   12985:	48 89 de             	mov    %rbx,%rsi
   12988:	e8 43 05 00 00       	callq  12ed0 <sgx_is_within_enclave>
   1298d:	84 c0                	test   %al,%al
   1298f:	74 21                	je     129b2 <ocall_delete+0x62>
   12991:	48 89 df             	mov    %rbx,%rdi
   12994:	e8 67 05 00 00       	callq  12f00 <sgx_ocalloc>
   12999:	48 85 c0             	test   %rax,%rax
   1299c:	49 89 c6             	mov    %rax,%r14
   1299f:	74 37                	je     129d8 <ocall_delete+0x88>
   129a1:	4c 89 e6             	mov    %r12,%rsi
   129a4:	48 89 da             	mov    %rbx,%rdx
   129a7:	48 89 c7             	mov    %rax,%rdi
   129aa:	4d 89 f4             	mov    %r14,%r12
   129ad:	e8 3e 32 00 00       	callq  15bf0 <memcpy>
   129b2:	4c 89 ee             	mov    %r13,%rsi
   129b5:	bf 23 00 00 00       	mov    $0x23,%edi
   129ba:	4d 89 65 00          	mov    %r12,0x0(%r13)
   129be:	e8 2a 28 00 00       	callq  151ed <sgx_ocall>
   129c3:	89 c3                	mov    %eax,%ebx
   129c5:	e8 56 05 00 00       	callq  12f20 <sgx_ocfree>
   129ca:	89 d8                	mov    %ebx,%eax
   129cc:	5b                   	pop    %rbx
   129cd:	41 5c                	pop    %r12
   129cf:	41 5d                	pop    %r13
   129d1:	41 5e                	pop    %r14
   129d3:	5d                   	pop    %rbp
   129d4:	c3                   	retq   
   129d5:	0f 1f 00             	nopl   (%rax)
   129d8:	e8 43 05 00 00       	callq  12f20 <sgx_ocfree>
   129dd:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   129e2:	eb e8                	jmp    129cc <ocall_delete+0x7c>
   129e4:	66 90                	xchg   %ax,%ax
   129e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   129ed:	00 00 00 

00000000000129f0 <ocall_load_debug>:
   129f0:	55                   	push   %rbp
   129f1:	48 89 e5             	mov    %rsp,%rbp
   129f4:	41 55                	push   %r13
   129f6:	41 54                	push   %r12
   129f8:	53                   	push   %rbx
   129f9:	49 89 fc             	mov    %rdi,%r12
   129fc:	48 83 ec 08          	sub    $0x8,%rsp
   12a00:	e8 6b 2c 00 00       	callq  15670 <strlen>
   12a05:	8d 58 01             	lea    0x1(%rax),%ebx
   12a08:	4c 89 e7             	mov    %r12,%rdi
   12a0b:	48 63 db             	movslq %ebx,%rbx
   12a0e:	48 89 de             	mov    %rbx,%rsi
   12a11:	e8 ba 04 00 00       	callq  12ed0 <sgx_is_within_enclave>
   12a16:	84 c0                	test   %al,%al
   12a18:	74 21                	je     12a3b <ocall_load_debug+0x4b>
   12a1a:	48 89 df             	mov    %rbx,%rdi
   12a1d:	e8 de 04 00 00       	callq  12f00 <sgx_ocalloc>
   12a22:	48 85 c0             	test   %rax,%rax
   12a25:	49 89 c5             	mov    %rax,%r13
   12a28:	74 32                	je     12a5c <ocall_load_debug+0x6c>
   12a2a:	4c 89 e6             	mov    %r12,%rsi
   12a2d:	48 89 da             	mov    %rbx,%rdx
   12a30:	48 89 c7             	mov    %rax,%rdi
   12a33:	4d 89 ec             	mov    %r13,%r12
   12a36:	e8 b5 31 00 00       	callq  15bf0 <memcpy>
   12a3b:	4c 89 e6             	mov    %r12,%rsi
   12a3e:	bf 24 00 00 00       	mov    $0x24,%edi
   12a43:	e8 a5 27 00 00       	callq  151ed <sgx_ocall>
   12a48:	89 c3                	mov    %eax,%ebx
   12a4a:	e8 d1 04 00 00       	callq  12f20 <sgx_ocfree>
   12a4f:	89 d8                	mov    %ebx,%eax
   12a51:	48 83 c4 08          	add    $0x8,%rsp
   12a55:	5b                   	pop    %rbx
   12a56:	41 5c                	pop    %r12
   12a58:	41 5d                	pop    %r13
   12a5a:	5d                   	pop    %rbp
   12a5b:	c3                   	retq   
   12a5c:	e8 bf 04 00 00       	callq  12f20 <sgx_ocfree>
   12a61:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   12a66:	eb e9                	jmp    12a51 <ocall_load_debug+0x61>
   12a68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   12a6f:	00 

0000000000012a70 <register_trusted_file>:
   12a70:	55                   	push   %rbp
   12a71:	48 89 e5             	mov    %rsp,%rbp
   12a74:	41 57                	push   %r15
   12a76:	41 56                	push   %r14
   12a78:	41 55                	push   %r13
   12a7a:	41 54                	push   %r12
   12a7c:	49 89 f4             	mov    %rsi,%r12
   12a7f:	53                   	push   %rbx
   12a80:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
   12a87:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
   12a8e:	e8 dd 2b 00 00       	callq  15670 <strlen>
   12a93:	48 8d 3d 7e 99 21 04 	lea    0x421997e(%rip),%rdi        # 422c418 <trusted_file_lock>
   12a9a:	4c 63 f0             	movslq %eax,%r14
   12a9d:	49 89 c7             	mov    %rax,%r15
   12aa0:	4d 89 f5             	mov    %r14,%r13
   12aa3:	e8 38 e2 ff ff       	callq  10ce0 <_DkSpinLock>
   12aa8:	48 8b 1d 71 99 21 04 	mov    0x4219971(%rip),%rbx        # 422c420 <trusted_file_list>
   12aaf:	48 85 db             	test   %rbx,%rbx
   12ab2:	74 0f                	je     12ac3 <register_trusted_file+0x53>
   12ab4:	eb 16                	jmp    12acc <register_trusted_file+0x5c>
   12ab6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   12abd:	00 00 00 
   12ac0:	48 8b 1b             	mov    (%rbx),%rbx
   12ac3:	48 3b 1d 56 99 21 04 	cmp    0x4219956(%rip),%rbx        # 422c420 <trusted_file_list>
   12aca:	74 44                	je     12b10 <register_trusted_file+0xa0>
   12acc:	44 3b 6b 20          	cmp    0x20(%rbx),%r13d
   12ad0:	75 ee                	jne    12ac0 <register_trusted_file+0x50>
   12ad2:	48 8b b5 28 ff ff ff 	mov    -0xd8(%rbp),%rsi
   12ad9:	48 8d 7b 24          	lea    0x24(%rbx),%rdi
   12add:	4c 89 f2             	mov    %r14,%rdx
   12ae0:	e8 ab 2b 00 00       	callq  15690 <memcmp>
   12ae5:	85 c0                	test   %eax,%eax
   12ae7:	75 d7                	jne    12ac0 <register_trusted_file+0x50>
   12ae9:	48 8d 3d 28 99 21 04 	lea    0x4219928(%rip),%rdi        # 422c418 <trusted_file_lock>
   12af0:	45 31 ff             	xor    %r15d,%r15d
   12af3:	e8 18 e2 ff ff       	callq  10d10 <_DkSpinUnlock>
   12af8:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
   12aff:	44 89 f8             	mov    %r15d,%eax
   12b02:	5b                   	pop    %rbx
   12b03:	41 5c                	pop    %r12
   12b05:	41 5d                	pop    %r13
   12b07:	41 5e                	pop    %r14
   12b09:	41 5f                	pop    %r15
   12b0b:	5d                   	pop    %rbp
   12b0c:	c3                   	retq   
   12b0d:	0f 1f 00             	nopl   (%rax)
   12b10:	48 8d 3d 01 99 21 04 	lea    0x4219901(%rip),%rdi        # 422c418 <trusted_file_lock>
   12b17:	e8 f4 e1 ff ff       	callq  10d10 <_DkSpinUnlock>
   12b1c:	bf 50 01 00 00       	mov    $0x150,%edi
   12b21:	e8 fa 64 ff ff       	callq  9020 <malloc>
   12b26:	48 85 c0             	test   %rax,%rax
   12b29:	49 89 c6             	mov    %rax,%r14
   12b2c:	0f 84 81 02 00 00    	je     12db3 <register_trusted_file+0x343>
   12b32:	48 8b 9d 28 ff ff ff 	mov    -0xd8(%rbp),%rbx
   12b39:	41 8d 57 01          	lea    0x1(%r15),%edx
   12b3d:	48 8d 78 24          	lea    0x24(%rax),%rdi
   12b41:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12b48:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   12b4f:	00 
   12b50:	44 89 78 20          	mov    %r15d,0x20(%rax)
   12b54:	48 63 d2             	movslq %edx,%rdx
   12b57:	48 89 de             	mov    %rbx,%rsi
   12b5a:	e8 91 30 00 00       	callq  15bf0 <memcpy>
   12b5f:	4d 85 e4             	test   %r12,%r12
   12b62:	49 c7 46 18 00 00 00 	movq   $0x0,0x18(%r14)
   12b69:	00 
   12b6a:	49 c7 86 48 01 00 00 	movq   $0x0,0x148(%r14)
   12b71:	00 00 00 00 
   12b75:	0f 84 05 02 00 00    	je     12d80 <register_trusted_file+0x310>
   12b7b:	48 8d 75 80          	lea    -0x80(%rbp),%rsi
   12b7f:	48 89 df             	mov    %rbx,%rdi
   12b82:	e8 99 0b ff ff       	callq  3720 <_DkStreamAttributesQuery>
   12b87:	85 c0                	test   %eax,%eax
   12b89:	0f 84 e4 01 00 00    	je     12d73 <register_trusted_file+0x303>
   12b8f:	0f b7 05 2b 6b 01 00 	movzwl 0x16b2b(%rip),%eax        # 296c1 <slab_levels+0xb41>
   12b96:	48 8d bd 34 ff ff ff 	lea    -0xcc(%rbp),%rdi
   12b9d:	b9 07 00 00 00       	mov    $0x7,%ecx
   12ba2:	c7 85 34 ff ff ff 00 	movl   $0x0,-0xcc(%rbp)
   12ba9:	00 00 00 
   12bac:	41 0f b6 54 24 01    	movzbl 0x1(%r12),%edx
   12bb2:	48 83 c7 04          	add    $0x4,%rdi
   12bb6:	66 89 85 30 ff ff ff 	mov    %ax,-0xd0(%rbp)
   12bbd:	31 c0                	xor    %eax,%eax
   12bbf:	66 89 85 32 ff ff ff 	mov    %ax,-0xce(%rbp)
   12bc6:	31 c0                	xor    %eax,%eax
   12bc8:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   12bcb:	41 0f b6 04 24       	movzbl (%r12),%eax
   12bd0:	84 c0                	test   %al,%al
   12bd2:	c6 07 00             	movb   $0x0,(%rdi)
   12bd5:	0f 84 e5 00 00 00    	je     12cc0 <register_trusted_file+0x250>
   12bdb:	84 d2                	test   %dl,%dl
   12bdd:	0f 84 dd 00 00 00    	je     12cc0 <register_trusted_file+0x250>
   12be3:	8d 48 d0             	lea    -0x30(%rax),%ecx
   12be6:	8d 78 9f             	lea    -0x61(%rax),%edi
   12be9:	80 f9 09             	cmp    $0x9,%cl
   12bec:	76 0a                	jbe    12bf8 <register_trusted_file+0x188>
   12bee:	40 80 ff 05          	cmp    $0x5,%dil
   12bf2:	0f 87 c8 00 00 00    	ja     12cc0 <register_trusted_file+0x250>
   12bf8:	4c 8d bd 30 ff ff ff 	lea    -0xd0(%rbp),%r15
   12bff:	49 8d 5c 24 03       	lea    0x3(%r12),%rbx
   12c04:	4d 8d a6 24 01 00 00 	lea    0x124(%r14),%r12
   12c0b:	49 8d 77 3e          	lea    0x3e(%r15),%rsi
   12c0f:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
   12c16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   12c1d:	00 00 00 
   12c20:	8d 72 d0             	lea    -0x30(%rdx),%esi
   12c23:	44 8d 5a 9f          	lea    -0x61(%rdx),%r11d
   12c27:	40 80 fe 09          	cmp    $0x9,%sil
   12c2b:	76 0a                	jbe    12c37 <register_trusted_file+0x1c7>
   12c2d:	41 80 fb 05          	cmp    $0x5,%r11b
   12c31:	0f 87 89 00 00 00    	ja     12cc0 <register_trusted_file+0x250>
   12c37:	80 f9 0a             	cmp    $0xa,%cl
   12c3a:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   12c40:	41 0f 43 c8          	cmovae %r8d,%ecx
   12c44:	83 e8 57             	sub    $0x57,%eax
   12c47:	40 80 ff 05          	cmp    $0x5,%dil
   12c4b:	0f 46 c8             	cmovbe %eax,%ecx
   12c4e:	4c 89 ff             	mov    %r15,%rdi
   12c51:	c1 e1 04             	shl    $0x4,%ecx
   12c54:	40 80 fe 09          	cmp    $0x9,%sil
   12c58:	8d 04 31             	lea    (%rcx,%rsi,1),%eax
   12c5b:	be 03 00 00 00       	mov    $0x3,%esi
   12c60:	0f 46 c8             	cmovbe %eax,%ecx
   12c63:	41 80 fb 05          	cmp    $0x5,%r11b
   12c67:	8d 54 11 a9          	lea    -0x57(%rcx,%rdx,1),%edx
   12c6b:	0f 46 ca             	cmovbe %edx,%ecx
   12c6e:	48 8d 15 6b 64 01 00 	lea    0x1646b(%rip),%rdx        # 290e0 <slab_levels+0x560>
   12c75:	31 c0                	xor    %eax,%eax
   12c77:	41 88 0c 24          	mov    %cl,(%r12)
   12c7b:	0f b6 c9             	movzbl %cl,%ecx
   12c7e:	e8 9d 43 00 00       	callq  17020 <snprintf>
   12c83:	4c 3b bd 20 ff ff ff 	cmp    -0xe0(%rbp),%r15
   12c8a:	74 47                	je     12cd3 <register_trusted_file+0x263>
   12c8c:	0f b6 43 ff          	movzbl -0x1(%rbx),%eax
   12c90:	0f b6 13             	movzbl (%rbx),%edx
   12c93:	84 c0                	test   %al,%al
   12c95:	74 29                	je     12cc0 <register_trusted_file+0x250>
   12c97:	84 d2                	test   %dl,%dl
   12c99:	74 25                	je     12cc0 <register_trusted_file+0x250>
   12c9b:	8d 48 d0             	lea    -0x30(%rax),%ecx
   12c9e:	48 83 c3 02          	add    $0x2,%rbx
   12ca2:	49 83 c4 01          	add    $0x1,%r12
   12ca6:	49 83 c7 02          	add    $0x2,%r15
   12caa:	8d 78 9f             	lea    -0x61(%rax),%edi
   12cad:	80 f9 09             	cmp    $0x9,%cl
   12cb0:	0f 86 6a ff ff ff    	jbe    12c20 <register_trusted_file+0x1b0>
   12cb6:	40 80 ff 05          	cmp    $0x5,%dil
   12cba:	0f 86 60 ff ff ff    	jbe    12c20 <register_trusted_file+0x1b0>
   12cc0:	4c 89 f7             	mov    %r14,%rdi
   12cc3:	41 bf fc ff ff ff    	mov    $0xfffffffc,%r15d
   12cc9:	e8 92 67 ff ff       	callq  9460 <free>
   12cce:	e9 25 fe ff ff       	jmpq   12af8 <register_trusted_file+0x88>
   12cd3:	8b 05 37 97 21 04    	mov    0x4219737(%rip),%eax        # 422c410 <trusted_file_indexes>
   12cd9:	83 c0 01             	add    $0x1,%eax
   12cdc:	89 05 2e 97 21 04    	mov    %eax,0x421972e(%rip)        # 422c410 <trusted_file_indexes>
   12ce2:	48 98                	cltq   
   12ce4:	49 89 46 10          	mov    %rax,0x10(%r14)
   12ce8:	48 8d 3d 29 97 21 04 	lea    0x4219729(%rip),%rdi        # 422c418 <trusted_file_lock>
   12cef:	4d 63 e5             	movslq %r13d,%r12
   12cf2:	e8 e9 df ff ff       	callq  10ce0 <_DkSpinLock>
   12cf7:	48 8b 1d 22 97 21 04 	mov    0x4219722(%rip),%rbx        # 422c420 <trusted_file_list>
   12cfe:	48 85 db             	test   %rbx,%rbx
   12d01:	74 0e                	je     12d11 <register_trusted_file+0x2a1>
   12d03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12d08:	44 3b 6b 20          	cmp    0x20(%rbx),%r13d
   12d0c:	74 32                	je     12d40 <register_trusted_file+0x2d0>
   12d0e:	48 8b 1b             	mov    (%rbx),%rbx
   12d11:	48 3b 1d 08 97 21 04 	cmp    0x4219708(%rip),%rbx        # 422c420 <trusted_file_list>
   12d18:	75 ee                	jne    12d08 <register_trusted_file+0x298>
   12d1a:	48 85 db             	test   %rbx,%rbx
   12d1d:	0f 84 7d 00 00 00    	je     12da0 <register_trusted_file+0x330>
   12d23:	48 8b 43 08          	mov    0x8(%rbx),%rax
   12d27:	4c 89 30             	mov    %r14,(%rax)
   12d2a:	4c 89 73 08          	mov    %r14,0x8(%rbx)
   12d2e:	49 89 1e             	mov    %rbx,(%r14)
   12d31:	49 89 46 08          	mov    %rax,0x8(%r14)
   12d35:	e9 af fd ff ff       	jmpq   12ae9 <register_trusted_file+0x79>
   12d3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12d40:	48 8b b5 28 ff ff ff 	mov    -0xd8(%rbp),%rsi
   12d47:	48 8d 7b 24          	lea    0x24(%rbx),%rdi
   12d4b:	4c 89 e2             	mov    %r12,%rdx
   12d4e:	e8 3d 29 00 00       	callq  15690 <memcmp>
   12d53:	85 c0                	test   %eax,%eax
   12d55:	41 89 c7             	mov    %eax,%r15d
   12d58:	75 b4                	jne    12d0e <register_trusted_file+0x29e>
   12d5a:	48 8d 3d b7 96 21 04 	lea    0x42196b7(%rip),%rdi        # 422c418 <trusted_file_lock>
   12d61:	e8 aa df ff ff       	callq  10d10 <_DkSpinUnlock>
   12d66:	4c 89 f7             	mov    %r14,%rdi
   12d69:	e8 f2 66 ff ff       	callq  9460 <free>
   12d6e:	e9 85 fd ff ff       	jmpq   12af8 <register_trusted_file+0x88>
   12d73:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   12d77:	49 89 46 18          	mov    %rax,0x18(%r14)
   12d7b:	e9 0f fe ff ff       	jmpq   12b8f <register_trusted_file+0x11f>
   12d80:	49 8d be 24 01 00 00 	lea    0x124(%r14),%rdi
   12d87:	ba 20 00 00 00       	mov    $0x20,%edx
   12d8c:	31 f6                	xor    %esi,%esi
   12d8e:	e8 cd 36 00 00       	callq  16460 <memset>
   12d93:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
   12d9a:	00 
   12d9b:	e9 48 ff ff ff       	jmpq   12ce8 <register_trusted_file+0x278>
   12da0:	4c 89 35 79 96 21 04 	mov    %r14,0x4219679(%rip)        # 422c420 <trusted_file_list>
   12da7:	4d 89 36             	mov    %r14,(%r14)
   12daa:	4d 89 76 08          	mov    %r14,0x8(%r14)
   12dae:	e9 36 fd ff ff       	jmpq   12ae9 <register_trusted_file+0x79>
   12db3:	41 bf f0 ff ff ff    	mov    $0xfffffff0,%r15d
   12db9:	e9 3a fd ff ff       	jmpq   12af8 <register_trusted_file+0x88>
   12dbe:	66 90                	xchg   %ax,%ax

0000000000012dc0 <init_trusted_file>:
   12dc0:	55                   	push   %rbp
   12dc1:	ba 16 00 00 00       	mov    $0x16,%edx
   12dc6:	48 89 e5             	mov    %rsp,%rbp
   12dc9:	41 56                	push   %r14
   12dcb:	41 55                	push   %r13
   12dcd:	4c 8d b5 e0 fc ff ff 	lea    -0x320(%rbp),%r14
   12dd4:	41 54                	push   %r12
   12dd6:	53                   	push   %rbx
   12dd7:	49 89 f4             	mov    %rsi,%r12
   12dda:	48 8d 35 33 68 01 00 	lea    0x16833(%rip),%rsi        # 29614 <slab_levels+0xa94>
   12de1:	49 89 fd             	mov    %rdi,%r13
   12de4:	48 81 ec 00 03 00 00 	sub    $0x300,%rsp
   12deb:	4c 89 f7             	mov    %r14,%rdi
   12dee:	e8 fd 2d 00 00       	callq  15bf0 <memcpy>
   12df3:	4c 89 ef             	mov    %r13,%rdi
   12df6:	48 89 c3             	mov    %rax,%rbx
   12df9:	e8 72 28 00 00       	callq  15670 <strlen>
   12dfe:	48 8d 7b 15          	lea    0x15(%rbx),%rdi
   12e02:	48 8d 50 01          	lea    0x1(%rax),%rdx
   12e06:	4c 89 ee             	mov    %r13,%rsi
   12e09:	48 8d 9d e0 fd ff ff 	lea    -0x220(%rbp),%rbx
   12e10:	e8 db 2d 00 00       	callq  15bf0 <memcpy>
   12e15:	48 8d 05 c4 b8 21 04 	lea    0x421b8c4(%rip),%rax        # 422e6e0 <pal_state>
   12e1c:	48 89 da             	mov    %rbx,%rdx
   12e1f:	b9 00 10 00 00       	mov    $0x1000,%ecx
   12e24:	4c 89 f6             	mov    %r14,%rsi
   12e27:	48 8b 78 40          	mov    0x40(%rax),%rdi
   12e2b:	e8 60 50 00 00       	callq  17e90 <get_config>
   12e30:	31 d2                	xor    %edx,%edx
   12e32:	48 85 c0             	test   %rax,%rax
   12e35:	78 64                	js     12e9b <init_trusted_file+0xdb>
   12e37:	48 8d 35 e8 5e 01 00 	lea    0x15ee8(%rip),%rsi        # 28d26 <slab_levels+0x1a6>
   12e3e:	ba 05 00 00 00       	mov    $0x5,%edx
   12e43:	4c 89 e7             	mov    %r12,%rdi
   12e46:	e8 45 28 00 00       	callq  15690 <memcmp>
   12e4b:	85 c0                	test   %eax,%eax
   12e4d:	75 61                	jne    12eb0 <init_trusted_file+0xf0>
   12e4f:	4c 8d ad e0 fe ff ff 	lea    -0x120(%rbp),%r13
   12e56:	49 8d 7c 24 05       	lea    0x5(%r12),%rdi
   12e5b:	31 d2                	xor    %edx,%edx
   12e5d:	b9 00 01 00 00       	mov    $0x100,%ecx
   12e62:	c6 85 e0 fe ff ff 66 	movb   $0x66,-0x120(%rbp)
   12e69:	c6 85 e1 fe ff ff 69 	movb   $0x69,-0x11f(%rbp)
   12e70:	49 8d 75 05          	lea    0x5(%r13),%rsi
   12e74:	c6 85 e2 fe ff ff 6c 	movb   $0x6c,-0x11e(%rbp)
   12e7b:	c6 85 e3 fe ff ff 65 	movb   $0x65,-0x11d(%rbp)
   12e82:	c6 85 e4 fe ff ff 3a 	movb   $0x3a,-0x11c(%rbp)
   12e89:	e8 02 58 00 00       	callq  18690 <get_norm_path>
   12e8e:	48 89 de             	mov    %rbx,%rsi
   12e91:	4c 89 ef             	mov    %r13,%rdi
   12e94:	e8 d7 fb ff ff       	callq  12a70 <register_trusted_file>
   12e99:	89 c2                	mov    %eax,%edx
   12e9b:	48 81 c4 00 03 00 00 	add    $0x300,%rsp
   12ea2:	89 d0                	mov    %edx,%eax
   12ea4:	5b                   	pop    %rbx
   12ea5:	41 5c                	pop    %r12
   12ea7:	41 5d                	pop    %r13
   12ea9:	41 5e                	pop    %r14
   12eab:	5d                   	pop    %rbp
   12eac:	c3                   	retq   
   12ead:	0f 1f 00             	nopl   (%rax)
   12eb0:	48 8d 3d 51 68 01 00 	lea    0x16851(%rip),%rdi        # 29708 <slab_levels+0xb88>
   12eb7:	4c 89 e6             	mov    %r12,%rsi
   12eba:	31 c0                	xor    %eax,%eax
   12ebc:	e8 6f 67 ff ff       	callq  9630 <pal_printf>
   12ec1:	ba fc ff ff ff       	mov    $0xfffffffc,%edx
   12ec6:	eb d3                	jmp    12e9b <init_trusted_file+0xdb>
   12ec8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   12ecf:	00 

0000000000012ed0 <sgx_is_within_enclave>:
   12ed0:	48 8d 15 31 c0 21 04 	lea    0x421c031(%rip),%rdx        # 422ef08 <enclave_base>
   12ed7:	55                   	push   %rbp
   12ed8:	31 c0                	xor    %eax,%eax
   12eda:	48 89 e5             	mov    %rsp,%rbp
   12edd:	48 39 3a             	cmp    %rdi,(%rdx)
   12ee0:	77 10                	ja     12ef2 <sgx_is_within_enclave+0x22>
   12ee2:	48 8d 05 17 c0 21 04 	lea    0x421c017(%rip),%rax        # 422ef00 <enclave_top>
   12ee9:	48 01 fe             	add    %rdi,%rsi
   12eec:	48 39 30             	cmp    %rsi,(%rax)
   12eef:	0f 93 c0             	setae  %al
   12ef2:	5d                   	pop    %rbp
   12ef3:	c3                   	retq   
   12ef4:	66 90                	xchg   %ax,%ax
   12ef6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   12efd:	00 00 00 

0000000000012f00 <sgx_ocalloc>:
   12f00:	55                   	push   %rbp
   12f01:	65 48 8b 04 25 50 00 	mov    %gs:0x50,%rax
   12f08:	00 00 
   12f0a:	48 89 e5             	mov    %rsp,%rbp
   12f0d:	48 29 f8             	sub    %rdi,%rax
   12f10:	65 48 89 04 25 50 00 	mov    %rax,%gs:0x50
   12f17:	00 00 
   12f19:	5d                   	pop    %rbp
   12f1a:	c3                   	retq   
   12f1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000012f20 <sgx_ocfree>:
   12f20:	55                   	push   %rbp
   12f21:	65 48 8b 04 25 48 00 	mov    %gs:0x48,%rax
   12f28:	00 00 
   12f2a:	48 89 e5             	mov    %rsp,%rbp
   12f2d:	65 48 89 04 25 50 00 	mov    %rax,%gs:0x50
   12f34:	00 00 
   12f36:	5d                   	pop    %rbp
   12f37:	c3                   	retq   
   12f38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   12f3f:	00 

0000000000012f40 <sgx_get_report>:
   12f40:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
   12f45:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   12f4c:	41 ff 72 f8          	pushq  -0x8(%r10)
   12f50:	55                   	push   %rbp
   12f51:	48 89 e5             	mov    %rsp,%rbp
   12f54:	41 57                	push   %r15
   12f56:	41 56                	push   %r14
   12f58:	41 55                	push   %r13
   12f5a:	41 54                	push   %r12
   12f5c:	49 89 ff             	mov    %rdi,%r15
   12f5f:	41 52                	push   %r10
   12f61:	53                   	push   %rbx
   12f62:	48 8d 9d 10 fc ff ff 	lea    -0x3f0(%rbp),%rbx
   12f69:	49 89 f4             	mov    %rsi,%r12
   12f6c:	49 89 d6             	mov    %rdx,%r14
   12f6f:	31 f6                	xor    %esi,%esi
   12f71:	48 81 ec c0 05 00 00 	sub    $0x5c0,%rsp
   12f78:	48 89 df             	mov    %rbx,%rdi
   12f7b:	ba 00 02 00 00       	mov    $0x200,%edx
   12f80:	49 89 cd             	mov    %rcx,%r13
   12f83:	e8 d8 34 00 00       	callq  16460 <memset>
   12f88:	4c 89 fe             	mov    %r15,%rsi
   12f8b:	48 89 df             	mov    %rbx,%rdi
   12f8e:	ba 20 00 00 00       	mov    $0x20,%edx
   12f93:	e8 58 2c 00 00       	callq  15bf0 <memcpy>
   12f98:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   12f9c:	4c 89 e6             	mov    %r12,%rsi
   12f9f:	ba 10 00 00 00       	mov    $0x10,%edx
   12fa4:	4c 8d a5 90 fb ff ff 	lea    -0x470(%rbp),%r12
   12fab:	e8 40 2c 00 00       	callq  15bf0 <memcpy>
   12fb0:	48 8d 35 c9 be 21 04 	lea    0x421bec9(%rip),%rsi        # 422ee80 <pal_enclave_state>
   12fb7:	4c 89 e7             	mov    %r12,%rdi
   12fba:	ba 80 00 00 00       	mov    $0x80,%edx
   12fbf:	e8 2c 2c 00 00       	callq  15bf0 <memcpy>
   12fc4:	49 8d 7c 24 08       	lea    0x8(%r12),%rdi
   12fc9:	4c 89 f6             	mov    %r14,%rsi
   12fcc:	ba 18 00 00 00       	mov    $0x18,%edx
   12fd1:	e8 1a 2c 00 00       	callq  15bf0 <memcpy>
   12fd6:	4c 89 ea             	mov    %r13,%rdx
   12fd9:	4c 89 e6             	mov    %r12,%rsi
   12fdc:	48 89 df             	mov    %rbx,%rdi
   12fdf:	e8 f2 22 00 00       	callq  152d6 <sgx_report>
   12fe4:	83 f8 01             	cmp    $0x1,%eax
   12fe7:	19 c0                	sbb    %eax,%eax
   12fe9:	48 81 c4 c0 05 00 00 	add    $0x5c0,%rsp
   12ff0:	5b                   	pop    %rbx
   12ff1:	41 5a                	pop    %r10
   12ff3:	f7 d0                	not    %eax
   12ff5:	41 5c                	pop    %r12
   12ff7:	83 e0 fa             	and    $0xfffffffa,%eax
   12ffa:	41 5d                	pop    %r13
   12ffc:	41 5e                	pop    %r14
   12ffe:	41 5f                	pop    %r15
   13000:	5d                   	pop    %rbp
   13001:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
   13005:	c3                   	retq   
   13006:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1300d:	00 00 00 

0000000000013010 <sgx_verify_report>:
   13010:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
   13015:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   1301c:	31 f6                	xor    %esi,%esi
   1301e:	ba 00 02 00 00       	mov    $0x200,%edx
   13023:	41 ff 72 f8          	pushq  -0x8(%r10)
   13027:	55                   	push   %rbp
   13028:	48 89 e5             	mov    %rsp,%rbp
   1302b:	41 54                	push   %r12
   1302d:	41 52                	push   %r10
   1302f:	53                   	push   %rbx
   13030:	48 8d 9d 10 fc ff ff 	lea    -0x3f0(%rbp),%rbx
   13037:	49 89 fc             	mov    %rdi,%r12
   1303a:	48 81 ec d8 03 00 00 	sub    $0x3d8,%rsp
   13041:	48 89 df             	mov    %rbx,%rdi
   13044:	e8 17 34 00 00       	callq  16460 <memset>
   13049:	49 8d b4 24 80 01 00 	lea    0x180(%r12),%rsi
   13050:	00 
   13051:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
   13055:	b8 03 00 00 00       	mov    $0x3,%eax
   1305a:	ba 20 00 00 00       	mov    $0x20,%edx
   1305f:	66 89 85 10 fc ff ff 	mov    %ax,-0x3f0(%rbp)
   13066:	e8 85 2b 00 00       	callq  15bf0 <memcpy>
   1306b:	48 8d 35 be 93 21 04 	lea    0x42193be(%rip),%rsi        # 422c430 <enclave_key>
   13072:	48 89 df             	mov    %rbx,%rdi
   13075:	e8 71 22 00 00       	callq  152eb <sgx_getkey>
   1307a:	83 f8 01             	cmp    $0x1,%eax
   1307d:	19 c0                	sbb    %eax,%eax
   1307f:	48 81 c4 d8 03 00 00 	add    $0x3d8,%rsp
   13086:	5b                   	pop    %rbx
   13087:	41 5a                	pop    %r10
   13089:	f7 d0                	not    %eax
   1308b:	41 5c                	pop    %r12
   1308d:	83 e0 fa             	and    $0xfffffffa,%eax
   13090:	5d                   	pop    %rbp
   13091:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
   13095:	c3                   	retq   
   13096:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1309d:	00 00 00 

00000000000130a0 <init_enclave_key>:
   130a0:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
   130a5:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   130ac:	31 f6                	xor    %esi,%esi
   130ae:	ba 00 02 00 00       	mov    $0x200,%edx
   130b3:	41 ff 72 f8          	pushq  -0x8(%r10)
   130b7:	55                   	push   %rbp
   130b8:	48 89 e5             	mov    %rsp,%rbp
   130bb:	41 52                	push   %r10
   130bd:	53                   	push   %rbx
   130be:	48 8d 9d 10 fc ff ff 	lea    -0x3f0(%rbp),%rbx
   130c5:	48 81 ec e0 03 00 00 	sub    $0x3e0,%rsp
   130cc:	48 89 df             	mov    %rbx,%rdi
   130cf:	e8 8c 33 00 00       	callq  16460 <memset>
   130d4:	48 8d 35 55 93 21 04 	lea    0x4219355(%rip),%rsi        # 422c430 <enclave_key>
   130db:	b8 04 00 00 00       	mov    $0x4,%eax
   130e0:	48 89 df             	mov    %rbx,%rdi
   130e3:	66 89 85 10 fc ff ff 	mov    %ax,-0x3f0(%rbp)
   130ea:	e8 fc 21 00 00       	callq  152eb <sgx_getkey>
   130ef:	83 f8 01             	cmp    $0x1,%eax
   130f2:	19 c0                	sbb    %eax,%eax
   130f4:	48 81 c4 e0 03 00 00 	add    $0x3e0,%rsp
   130fb:	5b                   	pop    %rbx
   130fc:	41 5a                	pop    %r10
   130fe:	f7 d0                	not    %eax
   13100:	83 e0 fa             	and    $0xfffffffa,%eax
   13103:	5d                   	pop    %rbp
   13104:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
   13108:	c3                   	retq   
   13109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000013110 <load_trusted_file>:
   13110:	55                   	push   %rbp
   13111:	48 89 e5             	mov    %rsp,%rbp
   13114:	41 57                	push   %r15
   13116:	41 56                	push   %r14
   13118:	41 55                	push   %r13
   1311a:	41 54                	push   %r12
   1311c:	53                   	push   %rbx
   1311d:	bb fa ff ff ff       	mov    $0xfffffffa,%ebx
   13122:	48 81 ec d8 02 00 00 	sub    $0x2d8,%rsp
   13129:	f6 47 04 01          	testb  $0x1,0x4(%rdi)
   1312d:	8b 47 08             	mov    0x8(%rdi),%eax
   13130:	89 85 2c fd ff ff    	mov    %eax,-0x2d4(%rbp)
   13136:	0f 84 ee 00 00 00    	je     1322a <load_trusted_file+0x11a>
   1313c:	4c 8d a5 d0 fd ff ff 	lea    -0x230(%rbp),%r12
   13143:	48 89 95 10 fd ff ff 	mov    %rdx,-0x2f0(%rbp)
   1314a:	48 89 b5 18 fd ff ff 	mov    %rsi,-0x2e8(%rbp)
   13151:	ba 00 01 00 00       	mov    $0x100,%edx
   13156:	4c 89 e6             	mov    %r12,%rsi
   13159:	e8 f2 09 ff ff       	callq  3b50 <_DkStreamGetName>
   1315e:	85 c0                	test   %eax,%eax
   13160:	89 c3                	mov    %eax,%ebx
   13162:	0f 88 c2 00 00 00    	js     1322a <load_trusted_file+0x11a>
   13168:	48 8d 35 b7 5b 01 00 	lea    0x15bb7(%rip),%rsi        # 28d26 <slab_levels+0x1a6>
   1316f:	ba 05 00 00 00       	mov    $0x5,%edx
   13174:	4c 89 e7             	mov    %r12,%rdi
   13177:	e8 14 25 00 00       	callq  15690 <memcmp>
   1317c:	85 c0                	test   %eax,%eax
   1317e:	89 c3                	mov    %eax,%ebx
   13180:	0f 85 d4 03 00 00    	jne    1355a <load_trusted_file+0x44a>
   13186:	4c 8d b5 d0 fe ff ff 	lea    -0x130(%rbp),%r14
   1318d:	49 8d 7c 24 05       	lea    0x5(%r12),%rdi
   13192:	31 d2                	xor    %edx,%edx
   13194:	b9 00 01 00 00       	mov    $0x100,%ecx
   13199:	c6 85 d0 fe ff ff 66 	movb   $0x66,-0x130(%rbp)
   131a0:	c6 85 d1 fe ff ff 69 	movb   $0x69,-0x12f(%rbp)
   131a7:	49 8d 76 05          	lea    0x5(%r14),%rsi
   131ab:	c6 85 d2 fe ff ff 6c 	movb   $0x6c,-0x12e(%rbp)
   131b2:	c6 85 d3 fe ff ff 65 	movb   $0x65,-0x12d(%rbp)
   131b9:	c6 85 d4 fe ff ff 3a 	movb   $0x3a,-0x12c(%rbp)
   131c0:	e8 cb 54 00 00       	callq  18690 <get_norm_path>
   131c5:	48 8d 3d 4c 92 21 04 	lea    0x421924c(%rip),%rdi        # 422c418 <trusted_file_lock>
   131cc:	41 89 c4             	mov    %eax,%r12d
   131cf:	44 8d 78 05          	lea    0x5(%rax),%r15d
   131d3:	e8 08 db ff ff       	callq  10ce0 <_DkSpinLock>
   131d8:	4c 8b 2d 41 92 21 04 	mov    0x4219241(%rip),%r13        # 422c420 <trusted_file_list>
   131df:	31 c0                	xor    %eax,%eax
   131e1:	4d 85 ed             	test   %r13,%r13
   131e4:	0f 95 c0             	setne  %al
   131e7:	41 83 c4 06          	add    $0x6,%r12d
   131eb:	85 c0                	test   %eax,%eax
   131ed:	4d 63 e4             	movslq %r12d,%r12
   131f0:	74 1e                	je     13210 <load_trusted_file+0x100>
   131f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   131f8:	49 83 bd 48 01 00 00 	cmpq   $0x0,0x148(%r13)
   131ff:	00 
   13200:	74 3e                	je     13240 <load_trusted_file+0x130>
   13202:	45 3b 7d 20          	cmp    0x20(%r13),%r15d
   13206:	0f 84 bc 00 00 00    	je     132c8 <load_trusted_file+0x1b8>
   1320c:	4d 8b 6d 00          	mov    0x0(%r13),%r13
   13210:	4c 3b 2d 09 92 21 04 	cmp    0x4219209(%rip),%r13        # 422c420 <trusted_file_list>
   13217:	75 df                	jne    131f8 <load_trusted_file+0xe8>
   13219:	48 8d 3d f8 91 21 04 	lea    0x42191f8(%rip),%rdi        # 422c418 <trusted_file_lock>
   13220:	bb fa ff ff ff       	mov    $0xfffffffa,%ebx
   13225:	e8 e6 da ff ff       	callq  10d10 <_DkSpinUnlock>
   1322a:	48 81 c4 d8 02 00 00 	add    $0x2d8,%rsp
   13231:	89 d8                	mov    %ebx,%eax
   13233:	5b                   	pop    %rbx
   13234:	41 5c                	pop    %r12
   13236:	41 5d                	pop    %r13
   13238:	41 5e                	pop    %r14
   1323a:	41 5f                	pop    %r15
   1323c:	5d                   	pop    %rbp
   1323d:	c3                   	retq   
   1323e:	66 90                	xchg   %ax,%ax
   13240:	49 63 55 20          	movslq 0x20(%r13),%rdx
   13244:	41 39 d7             	cmp    %edx,%r15d
   13247:	7c c3                	jl     1320c <load_trusted_file+0xfc>
   13249:	49 8d 7d 24          	lea    0x24(%r13),%rdi
   1324d:	4c 89 f6             	mov    %r14,%rsi
   13250:	e8 3b 24 00 00       	callq  15690 <memcmp>
   13255:	85 c0                	test   %eax,%eax
   13257:	75 b3                	jne    1320c <load_trusted_file+0xfc>
   13259:	49 63 45 20          	movslq 0x20(%r13),%rax
   1325d:	0f b6 84 05 d0 fe ff 	movzbl -0x130(%rbp,%rax,1),%eax
   13264:	ff 
   13265:	84 c0                	test   %al,%al
   13267:	74 04                	je     1326d <load_trusted_file+0x15d>
   13269:	3c 2f                	cmp    $0x2f,%al
   1326b:	75 9f                	jne    1320c <load_trusted_file+0xfc>
   1326d:	48 8d 3d a4 91 21 04 	lea    0x42191a4(%rip),%rdi        # 422c418 <trusted_file_lock>
   13274:	e8 97 da ff ff       	callq  10d10 <_DkSpinUnlock>
   13279:	49 8b 45 10          	mov    0x10(%r13),%rax
   1327d:	48 85 c0             	test   %rax,%rax
   13280:	0f 88 84 00 00 00    	js     1330a <load_trusted_file+0x1fa>
   13286:	75 59                	jne    132e1 <load_trusted_file+0x1d1>
   13288:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
   1328f:	48 8d b5 60 fd ff ff 	lea    -0x2a0(%rbp),%rsi
   13296:	4c 89 f7             	mov    %r14,%rdi
   13299:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   132a0:	e8 7b 04 ff ff       	callq  3720 <_DkStreamAttributesQuery>
   132a5:	85 c0                	test   %eax,%eax
   132a7:	0f 85 8d 02 00 00    	jne    1353a <load_trusted_file+0x42a>
   132ad:	48 8b 85 70 fd ff ff 	mov    -0x290(%rbp),%rax
   132b4:	48 8b 8d 10 fd ff ff 	mov    -0x2f0(%rbp),%rcx
   132bb:	48 89 01             	mov    %rax,(%rcx)
   132be:	e9 67 ff ff ff       	jmpq   1322a <load_trusted_file+0x11a>
   132c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   132c8:	49 8d 7d 24          	lea    0x24(%r13),%rdi
   132cc:	4c 89 e2             	mov    %r12,%rdx
   132cf:	4c 89 f6             	mov    %r14,%rsi
   132d2:	e8 b9 23 00 00       	callq  15690 <memcmp>
   132d7:	85 c0                	test   %eax,%eax
   132d9:	0f 85 2d ff ff ff    	jne    1320c <load_trusted_file+0xfc>
   132df:	eb 8c                	jmp    1326d <load_trusted_file+0x15d>
   132e1:	49 8b 85 48 01 00 00 	mov    0x148(%r13),%rax
   132e8:	48 85 c0             	test   %rax,%rax
   132eb:	74 24                	je     13311 <load_trusted_file+0x201>
   132ed:	48 8b 8d 18 fd ff ff 	mov    -0x2e8(%rbp),%rcx
   132f4:	48 89 01             	mov    %rax,(%rcx)
   132f7:	49 8b 45 18          	mov    0x18(%r13),%rax
   132fb:	48 8b 8d 10 fd ff ff 	mov    -0x2f0(%rbp),%rcx
   13302:	48 89 01             	mov    %rax,(%rcx)
   13305:	e9 20 ff ff ff       	jmpq   1322a <load_trusted_file+0x11a>
   1330a:	89 c3                	mov    %eax,%ebx
   1330c:	e9 19 ff ff ff       	jmpq   1322a <load_trusted_file+0x11a>
   13311:	49 8b 45 18          	mov    0x18(%r13),%rax
   13315:	31 ff                	xor    %edi,%edi
   13317:	a9 ff 3f 00 00       	test   $0x3fff,%eax
   1331c:	40 0f 95 c7          	setne  %dil
   13320:	48 c1 e8 0e          	shr    $0xe,%rax
   13324:	01 c7                	add    %eax,%edi
   13326:	48 63 ff             	movslq %edi,%rdi
   13329:	48 c1 e7 04          	shl    $0x4,%rdi
   1332d:	e8 ee 5c ff ff       	callq  9020 <malloc>
   13332:	48 85 c0             	test   %rax,%rax
   13335:	48 89 85 00 fd ff ff 	mov    %rax,-0x300(%rbp)
   1333c:	0f 84 33 02 00 00    	je     13575 <load_trusted_file+0x465>
   13342:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
   13349:	48 89 c7             	mov    %rax,%rdi
   1334c:	48 89 85 08 fd ff ff 	mov    %rax,-0x2f8(%rbp)
   13353:	e8 78 56 00 00       	callq  189d0 <lib_SHA256Init>
   13358:	85 c0                	test   %eax,%eax
   1335a:	41 89 c6             	mov    %eax,%r14d
   1335d:	0f 88 e4 00 00 00    	js     13447 <load_trusted_file+0x337>
   13363:	49 8b 5d 18          	mov    0x18(%r13),%rbx
   13367:	48 85 db             	test   %rbx,%rbx
   1336a:	0f 84 2f 01 00 00    	je     1349f <load_trusted_file+0x38f>
   13370:	48 8d 85 38 fd ff ff 	lea    -0x2c8(%rbp),%rax
   13377:	45 31 ff             	xor    %r15d,%r15d
   1337a:	4c 8b a5 00 fd ff ff 	mov    -0x300(%rbp),%r12
   13381:	4d 89 fe             	mov    %r15,%r14
   13384:	48 89 85 20 fd ff ff 	mov    %rax,-0x2e0(%rbp)
   1338b:	eb 70                	jmp    133fd <load_trusted_file+0x2ed>
   1338d:	0f 1f 00             	nopl   (%rax)
   13390:	48 8b 95 38 fd ff ff 	mov    -0x2c8(%rbp),%rdx
   13397:	48 8d 3d 92 90 21 04 	lea    0x4219092(%rip),%rdi        # 422c430 <enclave_key>
   1339e:	41 b9 10 00 00 00    	mov    $0x10,%r9d
   133a4:	4d 89 e0             	mov    %r12,%r8
   133a7:	48 89 d9             	mov    %rbx,%rcx
   133aa:	be 10 00 00 00       	mov    $0x10,%esi
   133af:	e8 ac 56 00 00       	callq  18a60 <lib_AESCMAC>
   133b4:	48 8b b5 38 fd ff ff 	mov    -0x2c8(%rbp),%rsi
   133bb:	48 8b bd 08 fd ff ff 	mov    -0x2f8(%rbp),%rdi
   133c2:	48 89 da             	mov    %rbx,%rdx
   133c5:	e8 36 56 00 00       	callq  18a00 <lib_SHA256Update>
   133ca:	48 8b bd 38 fd ff ff 	mov    -0x2c8(%rbp),%rdi
   133d1:	41 89 c7             	mov    %eax,%r15d
   133d4:	48 89 de             	mov    %rbx,%rsi
   133d7:	e8 34 db ff ff       	callq  10f10 <ocall_unmap_untrusted>
   133dc:	45 85 ff             	test   %r15d,%r15d
   133df:	0f 88 aa 01 00 00    	js     1358f <load_trusted_file+0x47f>
   133e5:	49 8b 5d 18          	mov    0x18(%r13),%rbx
   133e9:	49 81 c6 00 40 00 00 	add    $0x4000,%r14
   133f0:	49 83 c4 10          	add    $0x10,%r12
   133f4:	4c 39 f3             	cmp    %r14,%rbx
   133f7:	0f 86 a2 00 00 00    	jbe    1349f <load_trusted_file+0x38f>
   133fd:	4c 29 f3             	sub    %r14,%rbx
   13400:	b8 00 40 00 00       	mov    $0x4000,%eax
   13405:	4c 8b 85 20 fd ff ff 	mov    -0x2e0(%rbp),%r8
   1340c:	48 81 fb 00 40 00 00 	cmp    $0x4000,%rbx
   13413:	8b bd 2c fd ff ff    	mov    -0x2d4(%rbp),%edi
   13419:	b9 01 00 00 00       	mov    $0x1,%ecx
   1341e:	48 0f 47 d8          	cmova  %rax,%rbx
   13422:	4c 89 f6             	mov    %r14,%rsi
   13425:	48 89 da             	mov    %rbx,%rdx
   13428:	e8 43 da ff ff       	callq  10e70 <ocall_map_untrusted>
   1342d:	85 c0                	test   %eax,%eax
   1342f:	0f 89 5b ff ff ff    	jns    13390 <load_trusted_file+0x280>
   13435:	48 8b bd 38 fd ff ff 	mov    -0x2c8(%rbp),%rdi
   1343c:	48 89 de             	mov    %rbx,%rsi
   1343f:	41 89 c6             	mov    %eax,%r14d
   13442:	e8 c9 da ff ff       	callq  10f10 <ocall_unmap_untrusted>
   13447:	48 8b bd 00 fd ff ff 	mov    -0x300(%rbp),%rdi
   1344e:	e8 0d 60 ff ff       	callq  9460 <free>
   13453:	48 8d 3d be 8f 21 04 	lea    0x4218fbe(%rip),%rdi        # 422c418 <trusted_file_lock>
   1345a:	e8 81 d8 ff ff       	callq  10ce0 <_DkSpinLock>
   1345f:	49 8b 85 48 01 00 00 	mov    0x148(%r13),%rax
   13466:	48 85 c0             	test   %rax,%rax
   13469:	0f 84 de 00 00 00    	je     1354d <load_trusted_file+0x43d>
   1346f:	48 8b 8d 18 fd ff ff 	mov    -0x2e8(%rbp),%rcx
   13476:	48 89 01             	mov    %rax,(%rcx)
   13479:	49 8b 45 18          	mov    0x18(%r13),%rax
   1347d:	48 8b 8d 10 fd ff ff 	mov    -0x2f0(%rbp),%rcx
   13484:	48 89 01             	mov    %rax,(%rcx)
   13487:	45 8b 75 10          	mov    0x10(%r13),%r14d
   1348b:	48 8d 3d 86 8f 21 04 	lea    0x4218f86(%rip),%rdi        # 422c418 <trusted_file_lock>
   13492:	44 89 f3             	mov    %r14d,%ebx
   13495:	e8 76 d8 ff ff       	callq  10d10 <_DkSpinUnlock>
   1349a:	e9 8b fd ff ff       	jmpq   1322a <load_trusted_file+0x11a>
   1349f:	48 8d 9d 40 fd ff ff 	lea    -0x2c0(%rbp),%rbx
   134a6:	48 8b bd 08 fd ff ff 	mov    -0x2f8(%rbp),%rdi
   134ad:	48 89 de             	mov    %rbx,%rsi
   134b0:	e8 7b 55 00 00       	callq  18a30 <lib_SHA256Final>
   134b5:	85 c0                	test   %eax,%eax
   134b7:	41 89 c6             	mov    %eax,%r14d
   134ba:	78 8b                	js     13447 <load_trusted_file+0x337>
   134bc:	49 8d b5 24 01 00 00 	lea    0x124(%r13),%rsi
   134c3:	ba 20 00 00 00       	mov    $0x20,%edx
   134c8:	48 89 df             	mov    %rbx,%rdi
   134cb:	41 be fa ff ff ff    	mov    $0xfffffffa,%r14d
   134d1:	e8 ba 21 00 00       	callq  15690 <memcmp>
   134d6:	85 c0                	test   %eax,%eax
   134d8:	0f 85 69 ff ff ff    	jne    13447 <load_trusted_file+0x337>
   134de:	48 8d 3d 33 8f 21 04 	lea    0x4218f33(%rip),%rdi        # 422c418 <trusted_file_lock>
   134e5:	e8 f6 d7 ff ff       	callq  10ce0 <_DkSpinLock>
   134ea:	49 8b bd 48 01 00 00 	mov    0x148(%r13),%rdi
   134f1:	48 85 ff             	test   %rdi,%rdi
   134f4:	0f 84 85 00 00 00    	je     1357f <load_trusted_file+0x46f>
   134fa:	e8 61 5f ff ff       	callq  9460 <free>
   134ff:	48 8b 85 00 fd ff ff 	mov    -0x300(%rbp),%rax
   13506:	48 8b 8d 18 fd ff ff 	mov    -0x2e8(%rbp),%rcx
   1350d:	48 8d 3d 04 8f 21 04 	lea    0x4218f04(%rip),%rdi        # 422c418 <trusted_file_lock>
   13514:	49 89 85 48 01 00 00 	mov    %rax,0x148(%r13)
   1351b:	48 89 01             	mov    %rax,(%rcx)
   1351e:	49 8b 45 18          	mov    0x18(%r13),%rax
   13522:	48 8b 8d 10 fd ff ff 	mov    -0x2f0(%rbp),%rcx
   13529:	48 89 01             	mov    %rax,(%rcx)
   1352c:	49 8b 5d 10          	mov    0x10(%r13),%rbx
   13530:	e8 db d7 ff ff       	callq  10d10 <_DkSpinUnlock>
   13535:	e9 f0 fc ff ff       	jmpq   1322a <load_trusted_file+0x11a>
   1353a:	48 8b 85 10 fd ff ff 	mov    -0x2f0(%rbp),%rax
   13541:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   13548:	e9 dd fc ff ff       	jmpq   1322a <load_trusted_file+0x11a>
   1354d:	49 c7 45 10 fa ff ff 	movq   $0xfffffffffffffffa,0x10(%r13)
   13554:	ff 
   13555:	e9 31 ff ff ff       	jmpq   1348b <load_trusted_file+0x37b>
   1355a:	48 8d 3d a7 61 01 00 	lea    0x161a7(%rip),%rdi        # 29708 <slab_levels+0xb88>
   13561:	4c 89 e6             	mov    %r12,%rsi
   13564:	31 c0                	xor    %eax,%eax
   13566:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx
   1356b:	e8 c0 60 ff ff       	callq  9630 <pal_printf>
   13570:	e9 b5 fc ff ff       	jmpq   1322a <load_trusted_file+0x11a>
   13575:	bb f0 ff ff ff       	mov    $0xfffffff0,%ebx
   1357a:	e9 ab fc ff ff       	jmpq   1322a <load_trusted_file+0x11a>
   1357f:	49 83 7d 10 fa       	cmpq   $0xfffffffffffffffa,0x10(%r13)
   13584:	0f 85 75 ff ff ff    	jne    134ff <load_trusted_file+0x3ef>
   1358a:	e9 6b ff ff ff       	jmpq   134fa <load_trusted_file+0x3ea>
   1358f:	45 89 fe             	mov    %r15d,%r14d
   13592:	e9 b0 fe ff ff       	jmpq   13447 <load_trusted_file+0x337>
   13597:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1359e:	00 00 

00000000000135a0 <verify_trusted_file>:
   135a0:	55                   	push   %rbp
   135a1:	48 8d 04 0a          	lea    (%rdx,%rcx,1),%rax
   135a5:	48 89 e5             	mov    %rsp,%rbp
   135a8:	41 57                	push   %r15
   135aa:	41 56                	push   %r14
   135ac:	41 55                	push   %r13
   135ae:	41 54                	push   %r12
   135b0:	53                   	push   %rbx
   135b1:	48 89 d3             	mov    %rdx,%rbx
   135b4:	48 c1 eb 0e          	shr    $0xe,%rbx
   135b8:	48 c1 e3 04          	shl    $0x4,%rbx
   135bc:	48 83 ec 48          	sub    $0x48,%rsp
   135c0:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   135c4:	4c 01 c3             	add    %r8,%rbx
   135c7:	48 39 c2             	cmp    %rax,%rdx
   135ca:	0f 83 b0 00 00 00    	jae    13680 <verify_trusted_file+0xe0>
   135d0:	4d 89 ce             	mov    %r9,%r14
   135d3:	49 89 d5             	mov    %rdx,%r13
   135d6:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
   135da:	49 29 d6             	sub    %rdx,%r14
   135dd:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   135e1:	4c 8d 65 b0          	lea    -0x50(%rbp),%r12
   135e5:	4d 89 f7             	mov    %r14,%r15
   135e8:	49 89 d6             	mov    %rdx,%r14
   135eb:	eb 1b                	jmp    13608 <verify_trusted_file+0x68>
   135ed:	0f 1f 00             	nopl   (%rax)
   135f0:	49 81 c5 00 40 00 00 	add    $0x4000,%r13
   135f7:	48 83 c3 10          	add    $0x10,%rbx
   135fb:	49 81 ef 00 40 00 00 	sub    $0x4000,%r15
   13602:	4c 3b 6d a0          	cmp    -0x60(%rbp),%r13
   13606:	73 78                	jae    13680 <verify_trusted_file+0xe0>
   13608:	49 81 ff ff 3f 00 00 	cmp    $0x3fff,%r15
   1360f:	b9 00 40 00 00       	mov    $0x4000,%ecx
   13614:	4c 89 ea             	mov    %r13,%rdx
   13617:	49 0f 46 cf          	cmovbe %r15,%rcx
   1361b:	4c 29 f2             	sub    %r14,%rdx
   1361e:	48 03 55 a8          	add    -0x58(%rbp),%rdx
   13622:	48 8d 3d 07 8e 21 04 	lea    0x4218e07(%rip),%rdi        # 422c430 <enclave_key>
   13629:	41 b9 20 00 00 00    	mov    $0x20,%r9d
   1362f:	4d 89 e0             	mov    %r12,%r8
   13632:	be 10 00 00 00       	mov    $0x10,%esi
   13637:	e8 24 54 00 00       	callq  18a60 <lib_AESCMAC>
   1363c:	ba 10 00 00 00       	mov    $0x10,%edx
   13641:	4c 89 e6             	mov    %r12,%rsi
   13644:	48 89 df             	mov    %rbx,%rdi
   13647:	e8 44 20 00 00       	callq  15690 <memcmp>
   1364c:	85 c0                	test   %eax,%eax
   1364e:	74 a0                	je     135f0 <verify_trusted_file+0x50>
   13650:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
   13654:	48 8d 3d ed 60 01 00 	lea    0x160ed(%rip),%rdi        # 29748 <slab_levels+0xbc8>
   1365b:	31 c0                	xor    %eax,%eax
   1365d:	e8 ce 5f ff ff       	callq  9630 <pal_printf>
   13662:	48 83 c4 48          	add    $0x48,%rsp
   13666:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   1366b:	5b                   	pop    %rbx
   1366c:	41 5c                	pop    %r12
   1366e:	41 5d                	pop    %r13
   13670:	41 5e                	pop    %r14
   13672:	41 5f                	pop    %r15
   13674:	5d                   	pop    %rbp
   13675:	c3                   	retq   
   13676:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1367d:	00 00 00 
   13680:	48 83 c4 48          	add    $0x48,%rsp
   13684:	31 c0                	xor    %eax,%eax
   13686:	5b                   	pop    %rbx
   13687:	41 5c                	pop    %r12
   13689:	41 5d                	pop    %r13
   1368b:	41 5e                	pop    %r14
   1368d:	41 5f                	pop    %r15
   1368f:	5d                   	pop    %rbp
   13690:	c3                   	retq   
   13691:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13696:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1369d:	00 00 00 

00000000000136a0 <init_trusted_files>:
   136a0:	55                   	push   %rbp
   136a1:	48 89 e5             	mov    %rsp,%rbp
   136a4:	41 57                	push   %r15
   136a6:	41 56                	push   %r14
   136a8:	41 55                	push   %r13
   136aa:	41 54                	push   %r12
   136ac:	53                   	push   %rbx
   136ad:	48 81 ec 28 20 00 00 	sub    $0x2028,%rsp
   136b4:	48 8d 05 25 b0 21 04 	lea    0x421b025(%rip),%rax        # 422e6e0 <pal_state>
   136bb:	4c 8b 68 40          	mov    0x40(%rax),%r13
   136bf:	48 8d 05 ba b1 21 04 	lea    0x421b1ba(%rip),%rax        # 422e880 <pal_sec>
   136c6:	83 b8 80 02 00 00 ff 	cmpl   $0xffffffff,0x280(%rax)
   136cd:	74 1b                	je     136ea <init_trusted_files+0x4a>
   136cf:	48 8d b0 80 01 00 00 	lea    0x180(%rax),%rsi
   136d6:	48 8d 3d b6 49 01 00 	lea    0x149b6(%rip),%rdi        # 28093 <section_rodata+0x493>
   136dd:	e8 de f6 ff ff       	callq  12dc0 <init_trusted_file>
   136e2:	85 c0                	test   %eax,%eax
   136e4:	0f 88 fe 02 00 00    	js     139e8 <init_trusted_files+0x348>
   136ea:	48 81 ec 10 10 00 00 	sub    $0x1010,%rsp
   136f1:	48 8d 35 ed 49 01 00 	lea    0x149ed(%rip),%rsi        # 280e5 <section_rodata+0x4e5>
   136f8:	b9 00 10 00 00       	mov    $0x1000,%ecx
   136fd:	4c 8d 7c 24 0f       	lea    0xf(%rsp),%r15
   13702:	4c 89 ef             	mov    %r13,%rdi
   13705:	49 83 e7 f0          	and    $0xfffffffffffffff0,%r15
   13709:	4c 89 fa             	mov    %r15,%rdx
   1370c:	e8 7f 47 00 00       	callq  17e90 <get_config>
   13711:	48 85 c0             	test   %rax,%rax
   13714:	0f 8e e7 00 00 00    	jle    13801 <init_trusted_files+0x161>
   1371a:	4d 8d 24 07          	lea    (%r15,%rax,1),%r12
   1371e:	48 8d 85 d0 ef ff ff 	lea    -0x1030(%rbp),%rax
   13725:	31 c9                	xor    %ecx,%ecx
   13727:	4d 39 fc             	cmp    %r15,%r12
   1372a:	48 89 85 b8 df ff ff 	mov    %rax,-0x2048(%rbp)
   13731:	0f 86 ca 00 00 00    	jbe    13801 <init_trusted_files+0x161>
   13737:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1373e:	00 00 
   13740:	41 0f b6 07          	movzbl (%r15),%eax
   13744:	4c 89 fb             	mov    %r15,%rbx
   13747:	3c 2c                	cmp    $0x2c,%al
   13749:	0f 84 a5 00 00 00    	je     137f4 <init_trusted_files+0x154>
   1374f:	84 c0                	test   %al,%al
   13751:	75 20                	jne    13773 <init_trusted_files+0xd3>
   13753:	e9 9c 00 00 00       	jmpq   137f4 <init_trusted_files+0x154>
   13758:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1375f:	00 
   13760:	0f b6 03             	movzbl (%rbx),%eax
   13763:	3c 2c                	cmp    $0x2c,%al
   13765:	0f 84 95 02 00 00    	je     13a00 <init_trusted_files+0x360>
   1376b:	84 c0                	test   %al,%al
   1376d:	0f 84 8d 02 00 00    	je     13a00 <init_trusted_files+0x360>
   13773:	48 83 c3 01          	add    $0x1,%rbx
   13777:	49 39 dc             	cmp    %rbx,%r12
   1377a:	75 e4                	jne    13760 <init_trusted_files+0xc0>
   1377c:	4c 89 e3             	mov    %r12,%rbx
   1377f:	49 89 de             	mov    %rbx,%r14
   13782:	48 89 a5 c8 df ff ff 	mov    %rsp,-0x2038(%rbp)
   13789:	4c 89 fe             	mov    %r15,%rsi
   1378c:	4d 29 fe             	sub    %r15,%r14
   1378f:	89 8d c0 df ff ff    	mov    %ecx,-0x2040(%rbp)
   13795:	49 8d 46 10          	lea    0x10(%r14),%rax
   13799:	4c 89 f2             	mov    %r14,%rdx
   1379c:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
   137a0:	48 29 c4             	sub    %rax,%rsp
   137a3:	48 89 e7             	mov    %rsp,%rdi
   137a6:	e8 45 24 00 00       	callq  15bf0 <memcpy>
   137ab:	42 c6 04 34 00       	movb   $0x0,(%rsp,%r14,1)
   137b0:	4c 8b b5 b8 df ff ff 	mov    -0x2048(%rbp),%r14
   137b7:	48 8d 15 6c 5e 01 00 	lea    0x15e6c(%rip),%rdx        # 2962a <slab_levels+0xaaa>
   137be:	8b 8d c0 df ff ff    	mov    -0x2040(%rbp),%ecx
   137c4:	be 0a 00 00 00       	mov    $0xa,%esi
   137c9:	31 c0                	xor    %eax,%eax
   137cb:	4c 89 f7             	mov    %r14,%rdi
   137ce:	44 8d 79 01          	lea    0x1(%rcx),%r15d
   137d2:	e8 49 38 00 00       	callq  17020 <snprintf>
   137d7:	48 89 e6             	mov    %rsp,%rsi
   137da:	4c 89 f7             	mov    %r14,%rdi
   137dd:	e8 de f5 ff ff       	callq  12dc0 <init_trusted_file>
   137e2:	85 c0                	test   %eax,%eax
   137e4:	0f 88 26 02 00 00    	js     13a10 <init_trusted_files+0x370>
   137ea:	48 8b a5 c8 df ff ff 	mov    -0x2038(%rbp),%rsp
   137f1:	44 89 f9             	mov    %r15d,%ecx
   137f4:	4c 8d 7b 01          	lea    0x1(%rbx),%r15
   137f8:	4d 39 fc             	cmp    %r15,%r12
   137fb:	0f 87 3f ff ff ff    	ja     13740 <init_trusted_files+0xa0>
   13801:	48 8d 35 2c 5e 01 00 	lea    0x15e2c(%rip),%rsi        # 29634 <slab_levels+0xab4>
   13808:	4c 89 ef             	mov    %r13,%rdi
   1380b:	e8 b0 47 00 00       	callq  17fc0 <get_config_entries_size>
   13810:	48 85 c0             	test   %rax,%rax
   13813:	0f 8e e8 00 00 00    	jle    13901 <init_trusted_files+0x261>
   13819:	48 8d 50 1e          	lea    0x1e(%rax),%rdx
   1381d:	48 8d 35 10 5e 01 00 	lea    0x15e10(%rip),%rsi        # 29634 <slab_levels+0xab4>
   13824:	48 89 c1             	mov    %rax,%rcx
   13827:	4c 89 ef             	mov    %r13,%rdi
   1382a:	48 83 e2 f0          	and    $0xfffffffffffffff0,%rdx
   1382e:	48 29 d4             	sub    %rdx,%rsp
   13831:	48 8d 5c 24 0f       	lea    0xf(%rsp),%rbx
   13836:	48 83 e3 f0          	and    $0xfffffffffffffff0,%rbx
   1383a:	48 89 da             	mov    %rbx,%rdx
   1383d:	e8 be 46 00 00       	callq  17f00 <get_config_entries>
   13842:	85 c0                	test   %eax,%eax
   13844:	89 85 c0 df ff ff    	mov    %eax,-0x2040(%rbp)
   1384a:	0f 8e b1 00 00 00    	jle    13901 <init_trusted_files+0x261>
   13850:	48 8d 85 d0 df ff ff 	lea    -0x2030(%rbp),%rax
   13857:	48 8d 35 e8 5d 01 00 	lea    0x15de8(%rip),%rsi        # 29646 <slab_levels+0xac6>
   1385e:	ba 13 00 00 00       	mov    $0x13,%edx
   13863:	4c 8d b5 d0 ef ff ff 	lea    -0x1030(%rbp),%r14
   1386a:	45 31 e4             	xor    %r12d,%r12d
   1386d:	48 89 c7             	mov    %rax,%rdi
   13870:	49 89 c7             	mov    %rax,%r15
   13873:	48 89 85 c8 df ff ff 	mov    %rax,-0x2038(%rbp)
   1387a:	e8 71 23 00 00       	callq  15bf0 <memcpy>
   1387f:	48 83 c0 12          	add    $0x12,%rax
   13883:	48 89 85 b8 df ff ff 	mov    %rax,-0x2048(%rbp)
   1388a:	4c 89 f8             	mov    %r15,%rax
   1388d:	48 83 c0 12          	add    $0x12,%rax
   13891:	48 89 85 b0 df ff ff 	mov    %rax,-0x2050(%rbp)
   13898:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1389f:	00 
   138a0:	48 89 df             	mov    %rbx,%rdi
   138a3:	e8 c8 1d 00 00       	callq  15670 <strlen>
   138a8:	48 8b bd b8 df ff ff 	mov    -0x2048(%rbp),%rdi
   138af:	4c 8d 78 01          	lea    0x1(%rax),%r15
   138b3:	48 89 de             	mov    %rbx,%rsi
   138b6:	4c 89 fa             	mov    %r15,%rdx
   138b9:	4c 01 fb             	add    %r15,%rbx
   138bc:	e8 2f 23 00 00       	callq  15bf0 <memcpy>
   138c1:	48 8b b5 c8 df ff ff 	mov    -0x2038(%rbp),%rsi
   138c8:	b9 00 10 00 00       	mov    $0x1000,%ecx
   138cd:	4c 89 f2             	mov    %r14,%rdx
   138d0:	4c 89 ef             	mov    %r13,%rdi
   138d3:	e8 b8 45 00 00       	callq  17e90 <get_config>
   138d8:	48 85 c0             	test   %rax,%rax
   138db:	7e 17                	jle    138f4 <init_trusted_files+0x254>
   138dd:	48 8b bd b0 df ff ff 	mov    -0x2050(%rbp),%rdi
   138e4:	4c 89 f6             	mov    %r14,%rsi
   138e7:	e8 d4 f4 ff ff       	callq  12dc0 <init_trusted_file>
   138ec:	85 c0                	test   %eax,%eax
   138ee:	0f 88 f4 00 00 00    	js     139e8 <init_trusted_files+0x348>
   138f4:	41 83 c4 01          	add    $0x1,%r12d
   138f8:	44 39 a5 c0 df ff ff 	cmp    %r12d,-0x2040(%rbp)
   138ff:	75 9f                	jne    138a0 <init_trusted_files+0x200>
   13901:	48 8d 35 51 5d 01 00 	lea    0x15d51(%rip),%rsi        # 29659 <slab_levels+0xad9>
   13908:	4c 89 ef             	mov    %r13,%rdi
   1390b:	e8 b0 46 00 00       	callq  17fc0 <get_config_entries_size>
   13910:	48 85 c0             	test   %rax,%rax
   13913:	0f 8e cd 00 00 00    	jle    139e6 <init_trusted_files+0x346>
   13919:	48 8d 50 1e          	lea    0x1e(%rax),%rdx
   1391d:	48 8d 35 35 5d 01 00 	lea    0x15d35(%rip),%rsi        # 29659 <slab_levels+0xad9>
   13924:	48 89 c1             	mov    %rax,%rcx
   13927:	4c 89 ef             	mov    %r13,%rdi
   1392a:	48 83 e2 f0          	and    $0xfffffffffffffff0,%rdx
   1392e:	48 29 d4             	sub    %rdx,%rsp
   13931:	48 8d 5c 24 0f       	lea    0xf(%rsp),%rbx
   13936:	48 83 e3 f0          	and    $0xfffffffffffffff0,%rbx
   1393a:	48 89 da             	mov    %rbx,%rdx
   1393d:	e8 be 45 00 00       	callq  17f00 <get_config_entries>
   13942:	85 c0                	test   %eax,%eax
   13944:	41 89 c7             	mov    %eax,%r15d
   13947:	0f 8e 99 00 00 00    	jle    139e6 <init_trusted_files+0x346>
   1394d:	48 8d 85 d0 df ff ff 	lea    -0x2030(%rbp),%rax
   13954:	48 8d 35 10 5d 01 00 	lea    0x15d10(%rip),%rsi        # 2966b <slab_levels+0xaeb>
   1395b:	ba 13 00 00 00       	mov    $0x13,%edx
   13960:	4c 8d b5 d0 ef ff ff 	lea    -0x1030(%rbp),%r14
   13967:	45 31 e4             	xor    %r12d,%r12d
   1396a:	48 89 c7             	mov    %rax,%rdi
   1396d:	48 89 85 c8 df ff ff 	mov    %rax,-0x2038(%rbp)
   13974:	e8 77 22 00 00       	callq  15bf0 <memcpy>
   13979:	48 83 c0 12          	add    $0x12,%rax
   1397d:	48 89 85 b8 df ff ff 	mov    %rax,-0x2048(%rbp)
   13984:	0f 1f 40 00          	nopl   0x0(%rax)
   13988:	48 89 df             	mov    %rbx,%rdi
   1398b:	e8 e0 1c 00 00       	callq  15670 <strlen>
   13990:	48 8b bd b8 df ff ff 	mov    -0x2048(%rbp),%rdi
   13997:	48 8d 48 01          	lea    0x1(%rax),%rcx
   1399b:	48 89 de             	mov    %rbx,%rsi
   1399e:	48 89 ca             	mov    %rcx,%rdx
   139a1:	48 89 8d c0 df ff ff 	mov    %rcx,-0x2040(%rbp)
   139a8:	e8 43 22 00 00       	callq  15bf0 <memcpy>
   139ad:	48 8b 8d c0 df ff ff 	mov    -0x2040(%rbp),%rcx
   139b4:	48 8b b5 c8 df ff ff 	mov    -0x2038(%rbp),%rsi
   139bb:	4c 89 f2             	mov    %r14,%rdx
   139be:	4c 89 ef             	mov    %r13,%rdi
   139c1:	48 01 cb             	add    %rcx,%rbx
   139c4:	b9 00 10 00 00       	mov    $0x1000,%ecx
   139c9:	e8 c2 44 00 00       	callq  17e90 <get_config>
   139ce:	48 85 c0             	test   %rax,%rax
   139d1:	7e 0a                	jle    139dd <init_trusted_files+0x33d>
   139d3:	31 f6                	xor    %esi,%esi
   139d5:	4c 89 f7             	mov    %r14,%rdi
   139d8:	e8 93 f0 ff ff       	callq  12a70 <register_trusted_file>
   139dd:	41 83 c4 01          	add    $0x1,%r12d
   139e1:	45 39 e7             	cmp    %r12d,%r15d
   139e4:	75 a2                	jne    13988 <init_trusted_files+0x2e8>
   139e6:	31 c0                	xor    %eax,%eax
   139e8:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   139ec:	5b                   	pop    %rbx
   139ed:	41 5c                	pop    %r12
   139ef:	41 5d                	pop    %r13
   139f1:	41 5e                	pop    %r14
   139f3:	41 5f                	pop    %r15
   139f5:	5d                   	pop    %rbp
   139f6:	c3                   	retq   
   139f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   139fe:	00 00 
   13a00:	49 39 df             	cmp    %rbx,%r15
   13a03:	0f 83 eb fd ff ff    	jae    137f4 <init_trusted_files+0x154>
   13a09:	e9 71 fd ff ff       	jmpq   1377f <init_trusted_files+0xdf>
   13a0e:	66 90                	xchg   %ax,%ax
   13a10:	48 8b a5 c8 df ff ff 	mov    -0x2038(%rbp),%rsp
   13a17:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   13a1b:	5b                   	pop    %rbx
   13a1c:	41 5c                	pop    %r12
   13a1e:	41 5d                	pop    %r13
   13a20:	41 5e                	pop    %r14
   13a22:	41 5f                	pop    %r15
   13a24:	5d                   	pop    %rbp
   13a25:	c3                   	retq   
   13a26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13a2d:	00 00 00 

0000000000013a30 <init_trusted_children>:
   13a30:	55                   	push   %rbp
   13a31:	48 8d 35 46 5c 01 00 	lea    0x15c46(%rip),%rsi        # 2967e <slab_levels+0xafe>
   13a38:	ba 16 00 00 00       	mov    $0x16,%edx
   13a3d:	48 89 e5             	mov    %rsp,%rbp
   13a40:	41 57                	push   %r15
   13a42:	41 56                	push   %r14
   13a44:	41 55                	push   %r13
   13a46:	41 54                	push   %r12
   13a48:	53                   	push   %rbx
   13a49:	48 81 ec 48 40 00 00 	sub    $0x4048,%rsp
   13a50:	48 8d 05 89 ac 21 04 	lea    0x421ac89(%rip),%rax        # 422e6e0 <pal_state>
   13a57:	4c 8b 68 40          	mov    0x40(%rax),%r13
   13a5b:	48 8d 85 d0 bf ff ff 	lea    -0x4030(%rbp),%rax
   13a62:	48 89 c7             	mov    %rax,%rdi
   13a65:	48 89 85 c8 bf ff ff 	mov    %rax,-0x4038(%rbp)
   13a6c:	e8 7f 21 00 00       	callq  15bf0 <memcpy>
   13a71:	49 89 c7             	mov    %rax,%r15
   13a74:	48 8d 85 d0 cf ff ff 	lea    -0x3030(%rbp),%rax
   13a7b:	48 8d 35 12 5c 01 00 	lea    0x15c12(%rip),%rsi        # 29694 <slab_levels+0xb14>
   13a82:	ba 17 00 00 00       	mov    $0x17,%edx
   13a87:	48 89 c7             	mov    %rax,%rdi
   13a8a:	48 89 85 a0 bf ff ff 	mov    %rax,-0x4060(%rbp)
   13a91:	e8 5a 21 00 00       	callq  15bf0 <memcpy>
   13a96:	48 8d 35 0e 5c 01 00 	lea    0x15c0e(%rip),%rsi        # 296ab <slab_levels+0xb2b>
   13a9d:	4c 89 ef             	mov    %r13,%rdi
   13aa0:	49 89 c6             	mov    %rax,%r14
   13aa3:	e8 18 45 00 00       	callq  17fc0 <get_config_entries_size>
   13aa8:	48 85 c0             	test   %rax,%rax
   13aab:	0f 8e 0f 01 00 00    	jle    13bc0 <init_trusted_children+0x190>
   13ab1:	48 8d 50 1e          	lea    0x1e(%rax),%rdx
   13ab5:	48 8d 35 ef 5b 01 00 	lea    0x15bef(%rip),%rsi        # 296ab <slab_levels+0xb2b>
   13abc:	48 89 c1             	mov    %rax,%rcx
   13abf:	4c 89 ef             	mov    %r13,%rdi
   13ac2:	48 83 e2 f0          	and    $0xfffffffffffffff0,%rdx
   13ac6:	48 29 d4             	sub    %rdx,%rsp
   13ac9:	48 8d 5c 24 0f       	lea    0xf(%rsp),%rbx
   13ace:	48 83 e3 f0          	and    $0xfffffffffffffff0,%rbx
   13ad2:	48 89 da             	mov    %rbx,%rdx
   13ad5:	e8 26 44 00 00       	callq  17f00 <get_config_entries>
   13ada:	85 c0                	test   %eax,%eax
   13adc:	89 85 c4 bf ff ff    	mov    %eax,-0x403c(%rbp)
   13ae2:	0f 8e d8 00 00 00    	jle    13bc0 <init_trusted_children+0x190>
   13ae8:	49 8d 47 15          	lea    0x15(%r15),%rax
   13aec:	45 31 e4             	xor    %r12d,%r12d
   13aef:	48 89 85 b0 bf ff ff 	mov    %rax,-0x4050(%rbp)
   13af6:	4c 89 f0             	mov    %r14,%rax
   13af9:	48 83 c0 16          	add    $0x16,%rax
   13afd:	48 89 85 a8 bf ff ff 	mov    %rax,-0x4058(%rbp)
   13b04:	48 8d 85 d0 df ff ff 	lea    -0x2030(%rbp),%rax
   13b0b:	48 89 85 b8 bf ff ff 	mov    %rax,-0x4048(%rbp)
   13b12:	48 8d 85 d0 ef ff ff 	lea    -0x1030(%rbp),%rax
   13b19:	48 89 85 98 bf ff ff 	mov    %rax,-0x4068(%rbp)
   13b20:	48 89 df             	mov    %rbx,%rdi
   13b23:	e8 48 1b 00 00       	callq  15670 <strlen>
   13b28:	44 8d 40 01          	lea    0x1(%rax),%r8d
   13b2c:	48 8b bd b0 bf ff ff 	mov    -0x4050(%rbp),%rdi
   13b33:	48 89 de             	mov    %rbx,%rsi
   13b36:	49 89 c7             	mov    %rax,%r15
   13b39:	4d 63 f0             	movslq %r8d,%r14
   13b3c:	4c 89 f2             	mov    %r14,%rdx
   13b3f:	e8 ac 20 00 00       	callq  15bf0 <memcpy>
   13b44:	48 8b bd a8 bf ff ff 	mov    -0x4058(%rbp),%rdi
   13b4b:	4c 89 f2             	mov    %r14,%rdx
   13b4e:	48 89 de             	mov    %rbx,%rsi
   13b51:	e8 9a 20 00 00       	callq  15bf0 <memcpy>
   13b56:	4c 8b b5 b8 bf ff ff 	mov    -0x4048(%rbp),%r14
   13b5d:	48 8b b5 c8 bf ff ff 	mov    -0x4038(%rbp),%rsi
   13b64:	49 63 cf             	movslq %r15d,%rcx
   13b67:	48 8d 5c 0b 01       	lea    0x1(%rbx,%rcx,1),%rbx
   13b6c:	4c 89 ef             	mov    %r13,%rdi
   13b6f:	b9 00 10 00 00       	mov    $0x1000,%ecx
   13b74:	4c 89 f2             	mov    %r14,%rdx
   13b77:	e8 14 43 00 00       	callq  17e90 <get_config>
   13b7c:	48 85 c0             	test   %rax,%rax
   13b7f:	78 2e                	js     13baf <init_trusted_children+0x17f>
   13b81:	4c 8b bd 98 bf ff ff 	mov    -0x4068(%rbp),%r15
   13b88:	48 8b b5 a0 bf ff ff 	mov    -0x4060(%rbp),%rsi
   13b8f:	b9 00 10 00 00       	mov    $0x1000,%ecx
   13b94:	4c 89 ef             	mov    %r13,%rdi
   13b97:	4c 89 fa             	mov    %r15,%rdx
   13b9a:	e8 f1 42 00 00       	callq  17e90 <get_config>
   13b9f:	48 85 c0             	test   %rax,%rax
   13ba2:	7e 0b                	jle    13baf <init_trusted_children+0x17f>
   13ba4:	4c 89 fe             	mov    %r15,%rsi
   13ba7:	4c 89 f7             	mov    %r14,%rdi
   13baa:	e8 41 ab ff ff       	callq  e6f0 <register_trusted_child>
   13baf:	41 83 c4 01          	add    $0x1,%r12d
   13bb3:	44 39 a5 c4 bf ff ff 	cmp    %r12d,-0x403c(%rbp)
   13bba:	0f 85 60 ff ff ff    	jne    13b20 <init_trusted_children+0xf0>
   13bc0:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   13bc4:	31 c0                	xor    %eax,%eax
   13bc6:	5b                   	pop    %rbx
   13bc7:	41 5c                	pop    %r12
   13bc9:	41 5d                	pop    %r13
   13bcb:	41 5e                	pop    %r14
   13bcd:	41 5f                	pop    %r15
   13bcf:	5d                   	pop    %rbp
   13bd0:	c3                   	retq   
   13bd1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13bd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13bdd:	00 00 00 

0000000000013be0 <init_enclave>:
   13be0:	55                   	push   %rbp
   13be1:	bf 50 01 00 00       	mov    $0x150,%edi
   13be6:	48 89 e5             	mov    %rsp,%rbp
   13be9:	41 57                	push   %r15
   13beb:	41 56                	push   %r14
   13bed:	41 55                	push   %r13
   13bef:	41 54                	push   %r12
   13bf1:	53                   	push   %rbx
   13bf2:	48 81 ec 98 01 00 00 	sub    $0x198,%rsp
   13bf9:	e8 22 54 ff ff       	callq  9020 <malloc>
   13bfe:	48 89 c3             	mov    %rax,%rbx
   13c01:	48 89 c7             	mov    %rax,%rdi
   13c04:	e8 07 4f 00 00       	callq  18b10 <lib_RSAInitKey>
   13c09:	ba 03 00 00 00       	mov    $0x3,%edx
   13c0e:	be 00 08 00 00       	mov    $0x800,%esi
   13c13:	48 89 df             	mov    %rbx,%rdi
   13c16:	e8 15 4f 00 00       	callq  18b30 <lib_RSAGenerateKey>
   13c1b:	85 c0                	test   %eax,%eax
   13c1d:	41 89 c4             	mov    %eax,%r12d
   13c20:	74 1e                	je     13c40 <init_enclave+0x60>
   13c22:	48 81 c4 98 01 00 00 	add    $0x198,%rsp
   13c29:	44 89 e0             	mov    %r12d,%eax
   13c2c:	5b                   	pop    %rbx
   13c2d:	41 5c                	pop    %r12
   13c2f:	41 5d                	pop    %r13
   13c31:	41 5e                	pop    %r14
   13c33:	41 5f                	pop    %r15
   13c35:	5d                   	pop    %rbp
   13c36:	c3                   	retq   
   13c37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   13c3e:	00 00 
   13c40:	4c 8d b5 d0 fe ff ff 	lea    -0x130(%rbp),%r14
   13c47:	48 8d 95 58 fe ff ff 	lea    -0x1a8(%rbp),%rdx
   13c4e:	48 8d b5 4f fe ff ff 	lea    -0x1b1(%rbp),%rsi
   13c55:	4c 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%r8
   13c5c:	48 89 df             	mov    %rbx,%rdi
   13c5f:	48 c7 85 50 fe ff ff 	movq   $0x100,-0x1b0(%rbp)
   13c66:	00 01 00 00 
   13c6a:	4c 89 f1             	mov    %r14,%rcx
   13c6d:	48 c7 85 58 fe ff ff 	movq   $0x1,-0x1a8(%rbp)
   13c74:	01 00 00 00 
   13c78:	e8 f3 4e 00 00       	callq  18b70 <lib_RSAExportPublicKey>
   13c7d:	85 c0                	test   %eax,%eax
   13c7f:	41 89 c5             	mov    %eax,%r13d
   13c82:	75 5c                	jne    13ce0 <init_enclave+0x100>
   13c84:	4c 8d bd 60 fe ff ff 	lea    -0x1a0(%rbp),%r15
   13c8b:	4c 89 ff             	mov    %r15,%rdi
   13c8e:	e8 3d 4d 00 00       	callq  189d0 <lib_SHA256Init>
   13c93:	85 c0                	test   %eax,%eax
   13c95:	41 89 c5             	mov    %eax,%r13d
   13c98:	78 46                	js     13ce0 <init_enclave+0x100>
   13c9a:	48 8b 95 50 fe ff ff 	mov    -0x1b0(%rbp),%rdx
   13ca1:	4c 89 f6             	mov    %r14,%rsi
   13ca4:	4c 89 ff             	mov    %r15,%rdi
   13ca7:	e8 54 4d 00 00       	callq  18a00 <lib_SHA256Update>
   13cac:	85 c0                	test   %eax,%eax
   13cae:	41 89 c5             	mov    %eax,%r13d
   13cb1:	78 2d                	js     13ce0 <init_enclave+0x100>
   13cb3:	48 8d 05 c6 b1 21 04 	lea    0x421b1c6(%rip),%rax        # 422ee80 <pal_enclave_state>
   13cba:	4c 89 ff             	mov    %r15,%rdi
   13cbd:	48 8d 70 20          	lea    0x20(%rax),%rsi
   13cc1:	e8 6a 4d 00 00       	callq  18a30 <lib_SHA256Final>
   13cc6:	85 c0                	test   %eax,%eax
   13cc8:	41 89 c5             	mov    %eax,%r13d
   13ccb:	78 13                	js     13ce0 <init_enclave+0x100>
   13ccd:	48 8d 05 2c b1 21 04 	lea    0x421b12c(%rip),%rax        # 422ee00 <pal_enclave_config>
   13cd4:	48 89 58 30          	mov    %rbx,0x30(%rax)
   13cd8:	e9 45 ff ff ff       	jmpq   13c22 <init_enclave+0x42>
   13cdd:	0f 1f 00             	nopl   (%rax)
   13ce0:	48 89 df             	mov    %rbx,%rdi
   13ce3:	45 89 ec             	mov    %r13d,%r12d
   13ce6:	e8 a5 4f 00 00       	callq  18c90 <lib_RSAFreeKey>
   13ceb:	48 89 df             	mov    %rbx,%rdi
   13cee:	e8 6d 57 ff ff       	callq  9460 <free>
   13cf3:	e9 2a ff ff ff       	jmpq   13c22 <init_enclave+0x42>
   13cf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13cff:	00 

0000000000013d00 <_DkStreamKeyExchange>:
   13d00:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
   13d05:	48 81 e4 00 ff ff ff 	and    $0xffffffffffffff00,%rsp
   13d0c:	41 ff 72 f8          	pushq  -0x8(%r10)
   13d10:	55                   	push   %rbp
   13d11:	48 89 e5             	mov    %rsp,%rbp
   13d14:	41 57                	push   %r15
   13d16:	41 56                	push   %r14
   13d18:	41 55                	push   %r13
   13d1a:	41 54                	push   %r12
   13d1c:	49 89 fe             	mov    %rdi,%r14
   13d1f:	41 52                	push   %r10
   13d21:	53                   	push   %rbx
   13d22:	48 8d 9d 10 fc ff ff 	lea    -0x3f0(%rbp),%rbx
   13d29:	49 89 f5             	mov    %rsi,%r13
   13d2c:	48 81 ec c0 04 00 00 	sub    $0x4c0,%rsp
   13d33:	48 89 df             	mov    %rbx,%rdi
   13d36:	e8 95 4f 00 00       	callq  18cd0 <lib_DhInit>
   13d3b:	85 c0                	test   %eax,%eax
   13d3d:	78 7f                	js     13dbe <_DkStreamKeyExchange+0xbe>
   13d3f:	4c 8d a5 10 fd ff ff 	lea    -0x2f0(%rbp),%r12
   13d46:	48 8d 95 e0 fb ff ff 	lea    -0x420(%rbp),%rdx
   13d4d:	48 89 df             	mov    %rbx,%rdi
   13d50:	48 c7 85 e0 fb ff ff 	movq   $0x100,-0x420(%rbp)
   13d57:	00 01 00 00 
   13d5b:	4c 89 e6             	mov    %r12,%rsi
   13d5e:	e8 fd 4f 00 00       	callq  18d60 <lib_DhCreatePublic>
   13d63:	85 c0                	test   %eax,%eax
   13d65:	78 43                	js     13daa <_DkStreamKeyExchange+0xaa>
   13d67:	48 8b 95 e0 fb ff ff 	mov    -0x420(%rbp),%rdx
   13d6e:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   13d72:	48 3d ff 00 00 00    	cmp    $0xff,%rax
   13d78:	0f 87 62 01 00 00    	ja     13ee0 <_DkStreamKeyExchange+0x1e0>
   13d7e:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
   13d85:	0f 86 25 01 00 00    	jbe    13eb0 <_DkStreamKeyExchange+0x1b0>
   13d8b:	45 31 c9             	xor    %r9d,%r9d
   13d8e:	45 31 c0             	xor    %r8d,%r8d
   13d91:	31 f6                	xor    %esi,%esi
   13d93:	4c 89 e1             	mov    %r12,%rcx
   13d96:	ba 00 01 00 00       	mov    $0x100,%edx
   13d9b:	4c 89 f7             	mov    %r14,%rdi
   13d9e:	e8 ad f7 fe ff       	callq  3550 <_DkStreamWrite>
   13da3:	3d 00 01 00 00       	cmp    $0x100,%eax
   13da8:	74 36                	je     13de0 <_DkStreamKeyExchange+0xe0>
   13daa:	48 89 df             	mov    %rbx,%rdi
   13dad:	89 85 dc fb ff ff    	mov    %eax,-0x424(%rbp)
   13db3:	e8 58 50 00 00       	callq  18e10 <lib_DhFinal>
   13db8:	8b 85 dc fb ff ff    	mov    -0x424(%rbp),%eax
   13dbe:	48 81 c4 c0 04 00 00 	add    $0x4c0,%rsp
   13dc5:	5b                   	pop    %rbx
   13dc6:	41 5a                	pop    %r10
   13dc8:	41 5c                	pop    %r12
   13dca:	41 5d                	pop    %r13
   13dcc:	41 5e                	pop    %r14
   13dce:	41 5f                	pop    %r15
   13dd0:	5d                   	pop    %rbp
   13dd1:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
   13dd5:	c3                   	retq   
   13dd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13ddd:	00 00 00 
   13de0:	45 31 c9             	xor    %r9d,%r9d
   13de3:	45 31 c0             	xor    %r8d,%r8d
   13de6:	31 f6                	xor    %esi,%esi
   13de8:	4c 89 e1             	mov    %r12,%rcx
   13deb:	ba 00 01 00 00       	mov    $0x100,%edx
   13df0:	4c 89 f7             	mov    %r14,%rdi
   13df3:	e8 c8 f5 fe ff       	callq  33c0 <_DkStreamRead>
   13df8:	3d 00 01 00 00       	cmp    $0x100,%eax
   13dfd:	75 ab                	jne    13daa <_DkStreamKeyExchange+0xaa>
   13dff:	4c 8d b5 10 fe ff ff 	lea    -0x1f0(%rbp),%r14
   13e06:	4c 8d 85 e8 fb ff ff 	lea    -0x418(%rbp),%r8
   13e0d:	ba 00 01 00 00       	mov    $0x100,%edx
   13e12:	4c 89 e6             	mov    %r12,%rsi
   13e15:	48 89 df             	mov    %rbx,%rdi
   13e18:	48 c7 85 e8 fb ff ff 	movq   $0x100,-0x418(%rbp)
   13e1f:	00 01 00 00 
   13e23:	4c 89 f1             	mov    %r14,%rcx
   13e26:	e8 75 4f 00 00       	callq  18da0 <lib_DhCalcSecret>
   13e2b:	85 c0                	test   %eax,%eax
   13e2d:	0f 88 77 ff ff ff    	js     13daa <_DkStreamKeyExchange+0xaa>
   13e33:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
   13e3a:	48 83 e8 01          	sub    $0x1,%rax
   13e3e:	48 3d ff 00 00 00    	cmp    $0xff,%rax
   13e44:	0f 87 bc 00 00 00    	ja     13f06 <_DkStreamKeyExchange+0x206>
   13e4a:	4c 8d a5 f0 fb ff ff 	lea    -0x410(%rbp),%r12
   13e51:	31 f6                	xor    %esi,%esi
   13e53:	ba 20 00 00 00       	mov    $0x20,%edx
   13e58:	4c 89 e7             	mov    %r12,%rdi
   13e5b:	e8 00 26 00 00       	callq  16460 <memset>
   13e60:	48 8b b5 e8 fb ff ff 	mov    -0x418(%rbp),%rsi
   13e67:	48 85 f6             	test   %rsi,%rsi
   13e6a:	74 1f                	je     13e8b <_DkStreamKeyExchange+0x18b>
   13e6c:	31 c0                	xor    %eax,%eax
   13e6e:	66 90                	xchg   %ax,%ax
   13e70:	48 89 c2             	mov    %rax,%rdx
   13e73:	41 0f b6 0c 06       	movzbl (%r14,%rax,1),%ecx
   13e78:	48 83 c0 01          	add    $0x1,%rax
   13e7c:	83 e2 1f             	and    $0x1f,%edx
   13e7f:	30 8c 15 f0 fb ff ff 	xor    %cl,-0x410(%rbp,%rdx,1)
   13e86:	48 39 c6             	cmp    %rax,%rsi
   13e89:	75 e5                	jne    13e70 <_DkStreamKeyExchange+0x170>
   13e8b:	4d 85 ed             	test   %r13,%r13
   13e8e:	74 10                	je     13ea0 <_DkStreamKeyExchange+0x1a0>
   13e90:	ba 20 00 00 00       	mov    $0x20,%edx
   13e95:	4c 89 e6             	mov    %r12,%rsi
   13e98:	4c 89 ef             	mov    %r13,%rdi
   13e9b:	e8 50 1d 00 00       	callq  15bf0 <memcpy>
   13ea0:	31 c0                	xor    %eax,%eax
   13ea2:	e9 03 ff ff ff       	jmpq   13daa <_DkStreamKeyExchange+0xaa>
   13ea7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   13eae:	00 00 
   13eb0:	41 bf 00 01 00 00    	mov    $0x100,%r15d
   13eb6:	4c 89 e6             	mov    %r12,%rsi
   13eb9:	4c 89 ff             	mov    %r15,%rdi
   13ebc:	48 29 d7             	sub    %rdx,%rdi
   13ebf:	4c 01 e7             	add    %r12,%rdi
   13ec2:	e8 f9 1d 00 00       	callq  15cc0 <memmove>
   13ec7:	4c 89 fa             	mov    %r15,%rdx
   13eca:	48 2b 95 e0 fb ff ff 	sub    -0x420(%rbp),%rdx
   13ed1:	31 f6                	xor    %esi,%esi
   13ed3:	4c 89 e7             	mov    %r12,%rdi
   13ed6:	e8 85 25 00 00       	callq  16460 <memset>
   13edb:	e9 ab fe ff ff       	jmpq   13d8b <_DkStreamKeyExchange+0x8b>
   13ee0:	48 8d 3d a1 58 01 00 	lea    0x158a1(%rip),%rdi        # 29788 <slab_levels+0xc08>
   13ee7:	31 d2                	xor    %edx,%edx
   13ee9:	be ba 02 00 00       	mov    $0x2ba,%esi
   13eee:	31 c0                	xor    %eax,%eax
   13ef0:	e8 5b 32 ff ff       	callq  7150 <warn>
   13ef5:	e8 46 32 ff ff       	callq  7140 <__abort>
   13efa:	48 8b 95 e0 fb ff ff 	mov    -0x420(%rbp),%rdx
   13f01:	e9 78 fe ff ff       	jmpq   13d7e <_DkStreamKeyExchange+0x7e>
   13f06:	48 8d 3d cb 58 01 00 	lea    0x158cb(%rip),%rdi        # 297d8 <slab_levels+0xc58>
   13f0d:	31 d2                	xor    %edx,%edx
   13f0f:	be d7 02 00 00       	mov    $0x2d7,%esi
   13f14:	31 c0                	xor    %eax,%eax
   13f16:	e8 35 32 ff ff       	callq  7150 <warn>
   13f1b:	e8 20 32 ff ff       	callq  7140 <__abort>
   13f20:	e9 25 ff ff ff       	jmpq   13e4a <_DkStreamKeyExchange+0x14a>
   13f25:	90                   	nop
   13f26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13f2d:	00 00 00 

0000000000013f30 <_DkStreamAttestationRequest>:
   13f30:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
   13f35:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   13f3c:	41 ff 72 f8          	pushq  -0x8(%r10)
   13f40:	55                   	push   %rbp
   13f41:	48 89 e5             	mov    %rsp,%rbp
   13f44:	41 57                	push   %r15
   13f46:	41 56                	push   %r14
   13f48:	41 55                	push   %r13
   13f4a:	41 54                	push   %r12
   13f4c:	4c 8d a5 e0 f9 ff ff 	lea    -0x620(%rbp),%r12
   13f53:	41 52                	push   %r10
   13f55:	53                   	push   %rbx
   13f56:	48 89 fb             	mov    %rdi,%rbx
   13f59:	4c 89 e7             	mov    %r12,%rdi
   13f5c:	45 31 f6             	xor    %r14d,%r14d
   13f5f:	41 bd 30 00 00 00    	mov    $0x30,%r13d
   13f65:	48 81 ec c0 07 00 00 	sub    $0x7c0,%rsp
   13f6c:	48 8d 05 0d a9 21 04 	lea    0x421a90d(%rip),%rax        # 422e880 <pal_sec>
   13f73:	48 89 b5 c8 f9 ff ff 	mov    %rsi,-0x638(%rbp)
   13f7a:	48 89 95 d8 f9 ff ff 	mov    %rdx,-0x628(%rbp)
   13f81:	ba 20 00 00 00       	mov    $0x20,%edx
   13f86:	48 89 8d d0 f9 ff ff 	mov    %rcx,-0x630(%rbp)
   13f8d:	48 8d b0 1f 01 00 00 	lea    0x11f(%rax),%rsi
   13f94:	e8 57 1c 00 00       	callq  15bf0 <memcpy>
   13f99:	48 8d 05 e0 a8 21 04 	lea    0x421a8e0(%rip),%rax        # 422e880 <pal_sec>
   13fa0:	49 8d 7c 24 20       	lea    0x20(%r12),%rdi
   13fa5:	ba 10 00 00 00       	mov    $0x10,%edx
   13faa:	48 8d b0 60 01 00 00 	lea    0x160(%rax),%rsi
   13fb1:	e8 3a 1c 00 00       	callq  15bf0 <memcpy>
   13fb6:	eb 11                	jmp    13fc9 <_DkStreamAttestationRequest+0x99>
   13fb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13fbf:	00 
   13fc0:	41 01 c6             	add    %eax,%r14d
   13fc3:	41 83 fe 2f          	cmp    $0x2f,%r14d
   13fc7:	7f 4f                	jg     14018 <_DkStreamAttestationRequest+0xe8>
   13fc9:	49 63 c6             	movslq %r14d,%rax
   13fcc:	4c 89 ea             	mov    %r13,%rdx
   13fcf:	45 31 c9             	xor    %r9d,%r9d
   13fd2:	49 8d 0c 04          	lea    (%r12,%rax,1),%rcx
   13fd6:	48 29 c2             	sub    %rax,%rdx
   13fd9:	45 31 c0             	xor    %r8d,%r8d
   13fdc:	31 f6                	xor    %esi,%esi
   13fde:	48 89 df             	mov    %rbx,%rdi
   13fe1:	e8 6a f5 fe ff       	callq  3550 <_DkStreamWrite>
   13fe6:	85 c0                	test   %eax,%eax
   13fe8:	41 89 c7             	mov    %eax,%r15d
   13feb:	79 d3                	jns    13fc0 <_DkStreamAttestationRequest+0x90>
   13fed:	31 f6                	xor    %esi,%esi
   13fef:	48 89 df             	mov    %rbx,%rdi
   13ff2:	e8 e9 e4 00 00       	callq  224e0 <mbedtls_aesni_setkey_enc+0x270>
   13ff7:	44 89 f8             	mov    %r15d,%eax
   13ffa:	48 81 c4 c0 07 00 00 	add    $0x7c0,%rsp
   14001:	5b                   	pop    %rbx
   14002:	41 5a                	pop    %r10
   14004:	41 5c                	pop    %r12
   14006:	41 5d                	pop    %r13
   14008:	41 5e                	pop    %r14
   1400a:	41 5f                	pop    %r15
   1400c:	5d                   	pop    %rbp
   1400d:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
   14011:	c3                   	retq   
   14012:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14018:	45 31 f6             	xor    %r14d,%r14d
   1401b:	4c 8d a5 10 fa ff ff 	lea    -0x5f0(%rbp),%r12
   14022:	41 bd 00 04 00 00    	mov    $0x400,%r13d
   14028:	eb 12                	jmp    1403c <_DkStreamAttestationRequest+0x10c>
   1402a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14030:	41 01 c6             	add    %eax,%r14d
   14033:	41 81 fe ff 03 00 00 	cmp    $0x3ff,%r14d
   1403a:	7f 2c                	jg     14068 <_DkStreamAttestationRequest+0x138>
   1403c:	49 63 c6             	movslq %r14d,%rax
   1403f:	4c 89 ea             	mov    %r13,%rdx
   14042:	45 31 c9             	xor    %r9d,%r9d
   14045:	49 8d 0c 04          	lea    (%r12,%rax,1),%rcx
   14049:	48 29 c2             	sub    %rax,%rdx
   1404c:	45 31 c0             	xor    %r8d,%r8d
   1404f:	31 f6                	xor    %esi,%esi
   14051:	48 89 df             	mov    %rbx,%rdi
   14054:	e8 67 f3 fe ff       	callq  33c0 <_DkStreamRead>
   14059:	85 c0                	test   %eax,%eax
   1405b:	41 89 c7             	mov    %eax,%r15d
   1405e:	79 d0                	jns    14030 <_DkStreamAttestationRequest+0x100>
   14060:	eb 8b                	jmp    13fed <_DkStreamAttestationRequest+0xbd>
   14062:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14068:	4d 8d ac 24 00 02 00 	lea    0x200(%r12),%r13
   1406f:	00 
   14070:	4c 89 ef             	mov    %r13,%rdi
   14073:	e8 98 ef ff ff       	callq  13010 <sgx_verify_report>
   14078:	85 c0                	test   %eax,%eax
   1407a:	41 89 c7             	mov    %eax,%r15d
   1407d:	0f 88 6a ff ff ff    	js     13fed <_DkStreamAttestationRequest+0xbd>
   14083:	83 f8 01             	cmp    $0x1,%eax
   14086:	0f 84 dc 00 00 00    	je     14168 <_DkStreamAttestationRequest+0x238>
   1408c:	49 8d b4 24 40 03 00 	lea    0x340(%r12),%rsi
   14093:	00 
   14094:	49 8d bc 24 40 02 00 	lea    0x240(%r12),%rdi
   1409b:	00 
   1409c:	48 8b 95 d0 f9 ff ff 	mov    -0x630(%rbp),%rdx
   140a3:	48 8b 85 d8 f9 ff ff 	mov    -0x628(%rbp),%rax
   140aa:	ff d0                	callq  *%rax
   140ac:	85 c0                	test   %eax,%eax
   140ae:	41 89 c7             	mov    %eax,%r15d
   140b1:	0f 88 36 ff ff ff    	js     13fed <_DkStreamAttestationRequest+0xbd>
   140b7:	83 f8 01             	cmp    $0x1,%eax
   140ba:	0f 84 a8 00 00 00    	je     14168 <_DkStreamAttestationRequest+0x238>
   140c0:	4d 8d 74 24 20       	lea    0x20(%r12),%r14
   140c5:	48 8b 95 c8 f9 ff ff 	mov    -0x638(%rbp),%rdx
   140cc:	4c 89 e9             	mov    %r13,%rcx
   140cf:	4c 89 e7             	mov    %r12,%rdi
   140d2:	4c 89 f6             	mov    %r14,%rsi
   140d5:	e8 66 ee ff ff       	callq  12f40 <sgx_get_report>
   140da:	85 c0                	test   %eax,%eax
   140dc:	41 89 c7             	mov    %eax,%r15d
   140df:	0f 88 08 ff ff ff    	js     13fed <_DkStreamAttestationRequest+0xbd>
   140e5:	48 8d 05 94 a7 21 04 	lea    0x421a794(%rip),%rax        # 422e880 <pal_sec>
   140ec:	ba 20 00 00 00       	mov    $0x20,%edx
   140f1:	4c 89 e7             	mov    %r12,%rdi
   140f4:	41 bd 00 04 00 00    	mov    $0x400,%r13d
   140fa:	48 8d b0 1f 01 00 00 	lea    0x11f(%rax),%rsi
   14101:	e8 ea 1a 00 00       	callq  15bf0 <memcpy>
   14106:	48 8d 05 73 a7 21 04 	lea    0x421a773(%rip),%rax        # 422e880 <pal_sec>
   1410d:	4c 89 f7             	mov    %r14,%rdi
   14110:	ba 10 00 00 00       	mov    $0x10,%edx
   14115:	45 31 f6             	xor    %r14d,%r14d
   14118:	48 8d b0 60 01 00 00 	lea    0x160(%rax),%rsi
   1411f:	e8 cc 1a 00 00       	callq  15bf0 <memcpy>
   14124:	eb 16                	jmp    1413c <_DkStreamAttestationRequest+0x20c>
   14126:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1412d:	00 00 00 
   14130:	41 01 c6             	add    %eax,%r14d
   14133:	41 81 fe ff 03 00 00 	cmp    $0x3ff,%r14d
   1413a:	7f 37                	jg     14173 <_DkStreamAttestationRequest+0x243>
   1413c:	49 63 c6             	movslq %r14d,%rax
   1413f:	4c 89 ea             	mov    %r13,%rdx
   14142:	45 31 c9             	xor    %r9d,%r9d
   14145:	49 8d 0c 04          	lea    (%r12,%rax,1),%rcx
   14149:	48 29 c2             	sub    %rax,%rdx
   1414c:	45 31 c0             	xor    %r8d,%r8d
   1414f:	31 f6                	xor    %esi,%esi
   14151:	48 89 df             	mov    %rbx,%rdi
   14154:	e8 f7 f3 fe ff       	callq  3550 <_DkStreamWrite>
   14159:	85 c0                	test   %eax,%eax
   1415b:	41 89 c7             	mov    %eax,%r15d
   1415e:	79 d0                	jns    14130 <_DkStreamAttestationRequest+0x200>
   14160:	e9 88 fe ff ff       	jmpq   13fed <_DkStreamAttestationRequest+0xbd>
   14165:	0f 1f 00             	nopl   (%rax)
   14168:	41 bf fa ff ff ff    	mov    $0xfffffffa,%r15d
   1416e:	e9 7a fe ff ff       	jmpq   13fed <_DkStreamAttestationRequest+0xbd>
   14173:	31 c0                	xor    %eax,%eax
   14175:	e9 80 fe ff ff       	jmpq   13ffa <_DkStreamAttestationRequest+0xca>
   1417a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000014180 <_DkStreamAttestationRespond>:
   14180:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
   14185:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   1418c:	41 ff 72 f8          	pushq  -0x8(%r10)
   14190:	55                   	push   %rbp
   14191:	48 89 e5             	mov    %rsp,%rbp
   14194:	41 57                	push   %r15
   14196:	41 56                	push   %r14
   14198:	41 55                	push   %r13
   1419a:	41 54                	push   %r12
   1419c:	45 31 f6             	xor    %r14d,%r14d
   1419f:	41 52                	push   %r10
   141a1:	53                   	push   %rbx
   141a2:	4c 8d a5 e0 f9 ff ff 	lea    -0x620(%rbp),%r12
   141a9:	48 89 fb             	mov    %rdi,%rbx
   141ac:	41 bd 30 00 00 00    	mov    $0x30,%r13d
   141b2:	48 81 ec c0 07 00 00 	sub    $0x7c0,%rsp
   141b9:	48 89 b5 d8 f9 ff ff 	mov    %rsi,-0x628(%rbp)
   141c0:	48 89 95 d0 f9 ff ff 	mov    %rdx,-0x630(%rbp)
   141c7:	48 89 8d c8 f9 ff ff 	mov    %rcx,-0x638(%rbp)
   141ce:	eb 09                	jmp    141d9 <_DkStreamAttestationRespond+0x59>
   141d0:	41 01 c6             	add    %eax,%r14d
   141d3:	41 83 fe 2f          	cmp    $0x2f,%r14d
   141d7:	7f 4f                	jg     14228 <_DkStreamAttestationRespond+0xa8>
   141d9:	49 63 c6             	movslq %r14d,%rax
   141dc:	4c 89 ea             	mov    %r13,%rdx
   141df:	45 31 c9             	xor    %r9d,%r9d
   141e2:	49 8d 0c 04          	lea    (%r12,%rax,1),%rcx
   141e6:	48 29 c2             	sub    %rax,%rdx
   141e9:	45 31 c0             	xor    %r8d,%r8d
   141ec:	31 f6                	xor    %esi,%esi
   141ee:	48 89 df             	mov    %rbx,%rdi
   141f1:	e8 ca f1 fe ff       	callq  33c0 <_DkStreamRead>
   141f6:	85 c0                	test   %eax,%eax
   141f8:	41 89 c7             	mov    %eax,%r15d
   141fb:	79 d3                	jns    141d0 <_DkStreamAttestationRespond+0x50>
   141fd:	31 f6                	xor    %esi,%esi
   141ff:	48 89 df             	mov    %rbx,%rdi
   14202:	e8 d9 e2 00 00       	callq  224e0 <mbedtls_aesni_setkey_enc+0x270>
   14207:	44 89 f8             	mov    %r15d,%eax
   1420a:	48 81 c4 c0 07 00 00 	add    $0x7c0,%rsp
   14211:	5b                   	pop    %rbx
   14212:	41 5a                	pop    %r10
   14214:	41 5c                	pop    %r12
   14216:	41 5d                	pop    %r13
   14218:	41 5e                	pop    %r14
   1421a:	41 5f                	pop    %r15
   1421c:	5d                   	pop    %rbp
   1421d:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
   14221:	c3                   	retq   
   14222:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14228:	4c 8d ad 10 fa ff ff 	lea    -0x5f0(%rbp),%r13
   1422f:	48 8b 95 d8 f9 ff ff 	mov    -0x628(%rbp),%rdx
   14236:	49 8d 74 24 20       	lea    0x20(%r12),%rsi
   1423b:	4c 89 e7             	mov    %r12,%rdi
   1423e:	49 8d 8d 00 02 00 00 	lea    0x200(%r13),%rcx
   14245:	e8 f6 ec ff ff       	callq  12f40 <sgx_get_report>
   1424a:	85 c0                	test   %eax,%eax
   1424c:	41 89 c7             	mov    %eax,%r15d
   1424f:	78 ac                	js     141fd <_DkStreamAttestationRespond+0x7d>
   14251:	4c 8d 25 28 a6 21 04 	lea    0x421a628(%rip),%r12        # 422e880 <pal_sec>
   14258:	ba 20 00 00 00       	mov    $0x20,%edx
   1425d:	4c 89 ef             	mov    %r13,%rdi
   14260:	45 31 f6             	xor    %r14d,%r14d
   14263:	49 8d b4 24 1f 01 00 	lea    0x11f(%r12),%rsi
   1426a:	00 
   1426b:	e8 80 19 00 00       	callq  15bf0 <memcpy>
   14270:	49 8d b4 24 60 01 00 	lea    0x160(%r12),%rsi
   14277:	00 
   14278:	49 8d 7d 20          	lea    0x20(%r13),%rdi
   1427c:	ba 10 00 00 00       	mov    $0x10,%edx
   14281:	41 bc 00 04 00 00    	mov    $0x400,%r12d
   14287:	e8 64 19 00 00       	callq  15bf0 <memcpy>
   1428c:	eb 0e                	jmp    1429c <_DkStreamAttestationRespond+0x11c>
   1428e:	66 90                	xchg   %ax,%ax
   14290:	41 01 c6             	add    %eax,%r14d
   14293:	41 81 fe ff 03 00 00 	cmp    $0x3ff,%r14d
   1429a:	7f 34                	jg     142d0 <_DkStreamAttestationRespond+0x150>
   1429c:	49 63 c6             	movslq %r14d,%rax
   1429f:	4c 89 e2             	mov    %r12,%rdx
   142a2:	45 31 c9             	xor    %r9d,%r9d
   142a5:	49 8d 4c 05 00       	lea    0x0(%r13,%rax,1),%rcx
   142aa:	48 29 c2             	sub    %rax,%rdx
   142ad:	45 31 c0             	xor    %r8d,%r8d
   142b0:	31 f6                	xor    %esi,%esi
   142b2:	48 89 df             	mov    %rbx,%rdi
   142b5:	e8 96 f2 fe ff       	callq  3550 <_DkStreamWrite>
   142ba:	85 c0                	test   %eax,%eax
   142bc:	41 89 c7             	mov    %eax,%r15d
   142bf:	79 cf                	jns    14290 <_DkStreamAttestationRespond+0x110>
   142c1:	e9 37 ff ff ff       	jmpq   141fd <_DkStreamAttestationRespond+0x7d>
   142c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   142cd:	00 00 00 
   142d0:	45 31 f6             	xor    %r14d,%r14d
   142d3:	41 bc 00 04 00 00    	mov    $0x400,%r12d
   142d9:	eb 11                	jmp    142ec <_DkStreamAttestationRespond+0x16c>
   142db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   142e0:	41 01 c6             	add    %eax,%r14d
   142e3:	41 81 fe ff 03 00 00 	cmp    $0x3ff,%r14d
   142ea:	7f 2a                	jg     14316 <_DkStreamAttestationRespond+0x196>
   142ec:	49 63 c6             	movslq %r14d,%rax
   142ef:	4c 89 e2             	mov    %r12,%rdx
   142f2:	45 31 c9             	xor    %r9d,%r9d
   142f5:	49 8d 4c 05 00       	lea    0x0(%r13,%rax,1),%rcx
   142fa:	48 29 c2             	sub    %rax,%rdx
   142fd:	45 31 c0             	xor    %r8d,%r8d
   14300:	31 f6                	xor    %esi,%esi
   14302:	48 89 df             	mov    %rbx,%rdi
   14305:	e8 b6 f0 fe ff       	callq  33c0 <_DkStreamRead>
   1430a:	85 c0                	test   %eax,%eax
   1430c:	41 89 c7             	mov    %eax,%r15d
   1430f:	79 cf                	jns    142e0 <_DkStreamAttestationRespond+0x160>
   14311:	e9 e7 fe ff ff       	jmpq   141fd <_DkStreamAttestationRespond+0x7d>
   14316:	49 8d bd 00 02 00 00 	lea    0x200(%r13),%rdi
   1431d:	e8 ee ec ff ff       	callq  13010 <sgx_verify_report>
   14322:	85 c0                	test   %eax,%eax
   14324:	41 89 c7             	mov    %eax,%r15d
   14327:	0f 88 d0 fe ff ff    	js     141fd <_DkStreamAttestationRespond+0x7d>
   1432d:	83 f8 01             	cmp    $0x1,%eax
   14330:	0f 84 c7 fe ff ff    	je     141fd <_DkStreamAttestationRespond+0x7d>
   14336:	49 8d b5 40 03 00 00 	lea    0x340(%r13),%rsi
   1433d:	49 8d bd 40 02 00 00 	lea    0x240(%r13),%rdi
   14344:	48 8b 95 c8 f9 ff ff 	mov    -0x638(%rbp),%rdx
   1434b:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
   14352:	ff d0                	callq  *%rax
   14354:	85 c0                	test   %eax,%eax
   14356:	41 89 c7             	mov    %eax,%r15d
   14359:	0f 88 9e fe ff ff    	js     141fd <_DkStreamAttestationRespond+0x7d>
   1435f:	31 c0                	xor    %eax,%eax
   14361:	41 83 ff 01          	cmp    $0x1,%r15d
   14365:	0f 85 9f fe ff ff    	jne    1420a <_DkStreamAttestationRespond+0x8a>
   1436b:	41 bf fa ff ff ff    	mov    $0xfffffffa,%r15d
   14371:	e9 87 fe ff ff       	jmpq   141fd <_DkStreamAttestationRespond+0x7d>
   14376:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1437d:	00 00 00 

0000000000014380 <init_pages>:
   14380:	55                   	push   %rbp
   14381:	48 89 e5             	mov    %rsp,%rbp
   14384:	53                   	push   %rbx
   14385:	48 83 ec 08          	sub    $0x8,%rsp
   14389:	48 8d 1d f0 a4 21 04 	lea    0x421a4f0(%rip),%rbx        # 422e880 <pal_sec>
   14390:	48 8d 15 81 ab 21 04 	lea    0x421ab81(%rip),%rdx        # 422ef18 <heap_base>
   14397:	48 8b 83 70 01 00 00 	mov    0x170(%rbx),%rax
   1439e:	48 8b b3 78 01 00 00 	mov    0x178(%rbx),%rsi
   143a5:	48 29 c6             	sub    %rax,%rsi
   143a8:	48 83 bb 90 02 00 00 	cmpq   $0x0,0x290(%rbx)
   143af:	00 
   143b0:	48 89 02             	mov    %rax,(%rdx)
   143b3:	48 89 35 96 80 21 04 	mov    %rsi,0x4218096(%rip)        # 422c450 <heap_size>
   143ba:	75 0c                	jne    143c8 <init_pages+0x48>
   143bc:	48 83 c4 08          	add    $0x8,%rsp
   143c0:	5b                   	pop    %rbx
   143c1:	5d                   	pop    %rbp
   143c2:	c3                   	retq   
   143c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   143c8:	bf 20 00 00 00       	mov    $0x20,%edi
   143cd:	e8 4e 4c ff ff       	callq  9020 <malloc>
   143d2:	48 8b 93 88 02 00 00 	mov    0x288(%rbx),%rdx
   143d9:	48 89 d1             	mov    %rdx,%rcx
   143dc:	48 03 8b 90 02 00 00 	add    0x290(%rbx),%rcx
   143e3:	48 89 50 18          	mov    %rdx,0x18(%rax)
   143e7:	48 8b 15 5a 80 21 04 	mov    0x421805a(%rip),%rdx        # 422c448 <heap_vma_list>
   143ee:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   143f5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   143fc:	00 
   143fd:	48 85 d2             	test   %rdx,%rdx
   14400:	48 89 48 10          	mov    %rcx,0x10(%rax)
   14404:	74 2a                	je     14430 <init_pages+0xb0>
   14406:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   1440a:	48 89 05 37 80 21 04 	mov    %rax,0x4218037(%rip)        # 422c448 <heap_vma_list>
   14411:	48 89 01             	mov    %rax,(%rcx)
   14414:	48 89 42 08          	mov    %rax,0x8(%rdx)
   14418:	48 89 10             	mov    %rdx,(%rax)
   1441b:	48 89 48 08          	mov    %rcx,0x8(%rax)
   1441f:	48 83 c4 08          	add    $0x8,%rsp
   14423:	5b                   	pop    %rbx
   14424:	5d                   	pop    %rbp
   14425:	c3                   	retq   
   14426:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1442d:	00 00 00 
   14430:	48 89 05 11 80 21 04 	mov    %rax,0x4218011(%rip)        # 422c448 <heap_vma_list>
   14437:	48 89 00             	mov    %rax,(%rax)
   1443a:	48 89 40 08          	mov    %rax,0x8(%rax)
   1443e:	e9 79 ff ff ff       	jmpq   143bc <init_pages+0x3c>
   14443:	0f 1f 00             	nopl   (%rax)
   14446:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1444d:	00 00 00 

0000000000014450 <get_reserved_pages>:
   14450:	55                   	push   %rbp
   14451:	48 89 e5             	mov    %rsp,%rbp
   14454:	41 57                	push   %r15
   14456:	41 56                	push   %r14
   14458:	41 55                	push   %r13
   1445a:	41 54                	push   %r12
   1445c:	53                   	push   %rbx
   1445d:	48 83 ec 28          	sub    $0x28,%rsp
   14461:	48 85 f6             	test   %rsi,%rsi
   14464:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
   14468:	0f 84 5a 03 00 00    	je     147c8 <get_reserved_pages+0x378>
   1446e:	4c 8d 2d a3 aa 21 04 	lea    0x421aaa3(%rip),%r13        # 422ef18 <heap_base>
   14475:	48 8b 05 d4 7f 21 04 	mov    0x4217fd4(%rip),%rax        # 422c450 <heap_size>
   1447c:	48 89 fb             	mov    %rdi,%rbx
   1447f:	49 03 45 00          	add    0x0(%r13),%rax
   14483:	48 39 c7             	cmp    %rax,%rdi
   14486:	0f 83 3c 03 00 00    	jae    147c8 <get_reserved_pages+0x378>
   1448c:	48 89 f0             	mov    %rsi,%rax
   1448f:	49 89 f4             	mov    %rsi,%r12
   14492:	a9 ff 0f 00 00       	test   $0xfff,%eax
   14497:	0f 85 fb 00 00 00    	jne    14598 <get_reserved_pages+0x148>
   1449d:	48 89 d8             	mov    %rbx,%rax
   144a0:	48 8d 3d 99 7f 21 04 	lea    0x4217f99(%rip),%rdi        # 422c440 <heap_vma_lock>
   144a7:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
   144ad:	f7 c3 ff 0f 00 00    	test   $0xfff,%ebx
   144b3:	48 0f 45 d8          	cmovne %rax,%rbx
   144b7:	e8 24 c8 ff ff       	callq  10ce0 <_DkSpinLock>
   144bc:	48 85 db             	test   %rbx,%rbx
   144bf:	74 67                	je     14528 <get_reserved_pages+0xd8>
   144c1:	49 8b 45 00          	mov    0x0(%r13),%rax
   144c5:	48 39 c3             	cmp    %rax,%rbx
   144c8:	0f 82 c2 02 00 00    	jb     14790 <get_reserved_pages+0x340>
   144ce:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   144d2:	48 03 05 77 7f 21 04 	add    0x4217f77(%rip),%rax        # 422c450 <heap_size>
   144d9:	4c 8d 2c 13          	lea    (%rbx,%rdx,1),%r13
   144dd:	49 39 c5             	cmp    %rax,%r13
   144e0:	0f 87 aa 02 00 00    	ja     14790 <get_reserved_pages+0x340>
   144e6:	48 8b 35 5b 7f 21 04 	mov    0x4217f5b(%rip),%rsi        # 422c448 <heap_vma_list>
   144ed:	48 85 f6             	test   %rsi,%rsi
   144f0:	0f 84 ff 03 00 00    	je     148f5 <get_reserved_pages+0x4a5>
   144f6:	48 3b 5e 18          	cmp    0x18(%rsi),%rbx
   144fa:	0f 87 8c 03 00 00    	ja     1488c <get_reserved_pages+0x43c>
   14500:	48 89 f1             	mov    %rsi,%rcx
   14503:	eb 06                	jmp    1450b <get_reserved_pages+0xbb>
   14505:	0f 1f 00             	nopl   (%rax)
   14508:	48 89 c1             	mov    %rax,%rcx
   1450b:	48 8b 01             	mov    (%rcx),%rax
   1450e:	48 39 c6             	cmp    %rax,%rsi
   14511:	0f 84 b6 00 00 00    	je     145cd <get_reserved_pages+0x17d>
   14517:	48 3b 58 18          	cmp    0x18(%rax),%rbx
   1451b:	76 eb                	jbe    14508 <get_reserved_pages+0xb8>
   1451d:	49 89 c7             	mov    %rax,%r15
   14520:	e9 b4 00 00 00       	jmpq   145d9 <get_reserved_pages+0x189>
   14525:	0f 1f 00             	nopl   (%rax)
   14528:	49 8b 7d 00          	mov    0x0(%r13),%rdi
   1452c:	48 8b 35 15 7f 21 04 	mov    0x4217f15(%rip),%rsi        # 422c448 <heap_vma_list>
   14533:	48 89 fb             	mov    %rdi,%rbx
   14536:	48 03 1d 13 7f 21 04 	add    0x4217f13(%rip),%rbx        # 422c450 <heap_size>
   1453d:	48 85 f6             	test   %rsi,%rsi
   14540:	0f 84 c9 02 00 00    	je     1480f <get_reserved_pages+0x3bf>
   14546:	48 89 d8             	mov    %rbx,%rax
   14549:	48 2b 46 10          	sub    0x10(%rsi),%rax
   1454d:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   14551:	72 5c                	jb     145af <get_reserved_pages+0x15f>
   14553:	48 89 f1             	mov    %rsi,%rcx
   14556:	eb 18                	jmp    14570 <get_reserved_pages+0x120>
   14558:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1455f:	00 
   14560:	48 89 d8             	mov    %rbx,%rax
   14563:	48 2b 42 10          	sub    0x10(%rdx),%rax
   14567:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   1456b:	72 4b                	jb     145b8 <get_reserved_pages+0x168>
   1456d:	48 89 d1             	mov    %rdx,%rcx
   14570:	48 8b 11             	mov    (%rcx),%rdx
   14573:	48 8b 59 18          	mov    0x18(%rcx),%rbx
   14577:	48 39 d6             	cmp    %rdx,%rsi
   1457a:	75 e4                	jne    14560 <get_reserved_pages+0x110>
   1457c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14580:	48 01 c7             	add    %rax,%rdi
   14583:	48 39 fb             	cmp    %rdi,%rbx
   14586:	0f 82 0e 03 00 00    	jb     1489a <get_reserved_pages+0x44a>
   1458c:	48 29 c3             	sub    %rax,%rbx
   1458f:	eb 2b                	jmp    145bc <get_reserved_pages+0x16c>
   14591:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14598:	49 81 c4 ff 0f 00 00 	add    $0xfff,%r12
   1459f:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
   145a6:	4c 89 65 c8          	mov    %r12,-0x38(%rbp)
   145aa:	e9 ee fe ff ff       	jmpq   1449d <get_reserved_pages+0x4d>
   145af:	31 c9                	xor    %ecx,%ecx
   145b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   145b8:	48 2b 5d c8          	sub    -0x38(%rbp),%rbx
   145bc:	48 85 c9             	test   %rcx,%rcx
   145bf:	0f 84 33 02 00 00    	je     147f8 <get_reserved_pages+0x3a8>
   145c5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   145c9:	4c 8d 2c 03          	lea    (%rbx,%rax,1),%r13
   145cd:	4c 8b 39             	mov    (%rcx),%r15
   145d0:	49 39 f7             	cmp    %rsi,%r15
   145d3:	0f 84 07 02 00 00    	je     147e0 <get_reserved_pages+0x390>
   145d9:	4c 39 69 18          	cmp    %r13,0x18(%rcx)
   145dd:	4c 89 ea             	mov    %r13,%rdx
   145e0:	0f 87 30 02 00 00    	ja     14816 <get_reserved_pages+0x3c6>
   145e6:	45 31 e4             	xor    %r12d,%r12d
   145e9:	eb 4c                	jmp    14637 <get_reserved_pages+0x1e7>
   145eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   145f0:	4c 8b 41 10          	mov    0x10(%rcx),%r8
   145f4:	4d 39 44 24 10       	cmp    %r8,0x10(%r12)
   145f9:	4d 0f 43 44 24 10    	cmovae 0x10(%r12),%r8
   145ff:	48 39 ce             	cmp    %rcx,%rsi
   14602:	48 8b 31             	mov    (%rcx),%rsi
   14605:	4d 89 44 24 10       	mov    %r8,0x10(%r12)
   1460a:	0f 84 48 01 00 00    	je     14758 <get_reserved_pages+0x308>
   14610:	48 89 37             	mov    %rsi,(%rdi)
   14613:	48 8b 31             	mov    (%rcx),%rsi
   14616:	48 89 7e 08          	mov    %rdi,0x8(%rsi)
   1461a:	48 89 cf             	mov    %rcx,%rdi
   1461d:	e8 3e 4e ff ff       	callq  9460 <free>
   14622:	4d 85 f6             	test   %r14,%r14
   14625:	74 49                	je     14670 <get_reserved_pages+0x220>
   14627:	4d 39 6e 18          	cmp    %r13,0x18(%r14)
   1462b:	77 43                	ja     14670 <get_reserved_pages+0x220>
   1462d:	48 8b 35 14 7e 21 04 	mov    0x4217e14(%rip),%rsi        # 422c448 <heap_vma_list>
   14634:	4c 89 f1             	mov    %r14,%rcx
   14637:	48 8b 79 08          	mov    0x8(%rcx),%rdi
   1463b:	48 3b 7e 08          	cmp    0x8(%rsi),%rdi
   1463f:	41 be 00 00 00 00    	mov    $0x0,%r14d
   14645:	4c 0f 45 f7          	cmovne %rdi,%r14
   14649:	4d 85 e4             	test   %r12,%r12
   1464c:	75 a2                	jne    145f0 <get_reserved_pages+0x1a0>
   1464e:	4c 39 69 10          	cmp    %r13,0x10(%rcx)
   14652:	4c 89 ea             	mov    %r13,%rdx
   14655:	48 89 59 18          	mov    %rbx,0x18(%rcx)
   14659:	48 0f 43 51 10       	cmovae 0x10(%rcx),%rdx
   1465e:	4d 85 f6             	test   %r14,%r14
   14661:	49 89 cc             	mov    %rcx,%r12
   14664:	48 89 51 10          	mov    %rdx,0x10(%rcx)
   14668:	75 bd                	jne    14627 <get_reserved_pages+0x1d7>
   1466a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14670:	4d 85 ff             	test   %r15,%r15
   14673:	0f 84 97 00 00 00    	je     14710 <get_reserved_pages+0x2c0>
   14679:	49 8b 7f 10          	mov    0x10(%r15),%rdi
   1467d:	48 39 fb             	cmp    %rdi,%rbx
   14680:	0f 87 ae 01 00 00    	ja     14834 <get_reserved_pages+0x3e4>
   14686:	48 8b 35 bb 7d 21 04 	mov    0x4217dbb(%rip),%rsi        # 422c448 <heap_vma_list>
   1468d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14691:	4c 8d 2c 03          	lea    (%rbx,%rax,1),%r13
   14695:	eb 49                	jmp    146e0 <get_reserved_pages+0x290>
   14697:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1469e:	00 00 
   146a0:	49 8b 7f 18          	mov    0x18(%r15),%rdi
   146a4:	4c 39 fe             	cmp    %r15,%rsi
   146a7:	49 89 7c 24 18       	mov    %rdi,0x18(%r12)
   146ac:	0f 84 c6 00 00 00    	je     14778 <get_reserved_pages+0x328>
   146b2:	49 8b 77 08          	mov    0x8(%r15),%rsi
   146b6:	4c 89 ff             	mov    %r15,%rdi
   146b9:	48 89 0e             	mov    %rcx,(%rsi)
   146bc:	49 8b 0f             	mov    (%r15),%rcx
   146bf:	48 89 71 08          	mov    %rsi,0x8(%rcx)
   146c3:	e8 98 4d ff ff       	callq  9460 <free>
   146c8:	4d 85 f6             	test   %r14,%r14
   146cb:	74 43                	je     14710 <get_reserved_pages+0x2c0>
   146cd:	49 8b 7e 10          	mov    0x10(%r14),%rdi
   146d1:	48 39 df             	cmp    %rbx,%rdi
   146d4:	72 3a                	jb     14710 <get_reserved_pages+0x2c0>
   146d6:	48 8b 35 6b 7d 21 04 	mov    0x4217d6b(%rip),%rsi        # 422c448 <heap_vma_list>
   146dd:	4d 89 f7             	mov    %r14,%r15
   146e0:	49 8b 0f             	mov    (%r15),%rcx
   146e3:	45 31 c0             	xor    %r8d,%r8d
   146e6:	4d 89 c6             	mov    %r8,%r14
   146e9:	48 39 f1             	cmp    %rsi,%rcx
   146ec:	4c 0f 45 f1          	cmovne %rcx,%r14
   146f0:	4d 85 e4             	test   %r12,%r12
   146f3:	75 ab                	jne    146a0 <get_reserved_pages+0x250>
   146f5:	4c 39 ef             	cmp    %r13,%rdi
   146f8:	4d 89 fc             	mov    %r15,%r12
   146fb:	49 0f 46 fd          	cmovbe %r13,%rdi
   146ff:	4d 85 f6             	test   %r14,%r14
   14702:	49 89 7f 10          	mov    %rdi,0x10(%r15)
   14706:	75 c5                	jne    146cd <get_reserved_pages+0x27d>
   14708:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1470f:	00 
   14710:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
   14715:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
   1471a:	48 39 f2             	cmp    %rsi,%rdx
   1471d:	0f 86 8d 00 00 00    	jbe    147b0 <get_reserved_pages+0x360>
   14723:	48 8d 3d 16 7d 21 04 	lea    0x4217d16(%rip),%rdi        # 422c440 <heap_vma_lock>
   1472a:	e8 e1 c5 ff ff       	callq  10d10 <_DkSpinUnlock>
   1472f:	4c 8b 65 c8          	mov    -0x38(%rbp),%r12
   14733:	48 8d 05 e6 a7 21 04 	lea    0x421a7e6(%rip),%rax        # 422ef20 <alloced_pages>
   1473a:	49 c1 ec 0c          	shr    $0xc,%r12
   1473e:	f0 4c 0f c1 20       	lock xadd %r12,(%rax)
   14743:	48 89 d8             	mov    %rbx,%rax
   14746:	48 83 c4 28          	add    $0x28,%rsp
   1474a:	5b                   	pop    %rbx
   1474b:	41 5c                	pop    %r12
   1474d:	41 5d                	pop    %r13
   1474f:	41 5e                	pop    %r14
   14751:	41 5f                	pop    %r15
   14753:	5d                   	pop    %rbp
   14754:	c3                   	retq   
   14755:	0f 1f 00             	nopl   (%rax)
   14758:	48 39 ce             	cmp    %rcx,%rsi
   1475b:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   14761:	4c 0f 45 c6          	cmovne %rsi,%r8
   14765:	4c 89 05 dc 7c 21 04 	mov    %r8,0x4217cdc(%rip)        # 422c448 <heap_vma_list>
   1476c:	e9 9f fe ff ff       	jmpq   14610 <get_reserved_pages+0x1c0>
   14771:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14778:	4c 39 f9             	cmp    %r15,%rcx
   1477b:	4c 0f 45 c1          	cmovne %rcx,%r8
   1477f:	4c 89 05 c2 7c 21 04 	mov    %r8,0x4217cc2(%rip)        # 422c448 <heap_vma_list>
   14786:	e9 27 ff ff ff       	jmpq   146b2 <get_reserved_pages+0x262>
   1478b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14790:	48 8d 3d a9 7c 21 04 	lea    0x4217ca9(%rip),%rdi        # 422c440 <heap_vma_lock>
   14797:	e8 74 c5 ff ff       	callq  10d10 <_DkSpinUnlock>
   1479c:	48 83 c4 28          	add    $0x28,%rsp
   147a0:	31 c0                	xor    %eax,%eax
   147a2:	5b                   	pop    %rbx
   147a3:	41 5c                	pop    %r12
   147a5:	41 5d                	pop    %r13
   147a7:	41 5e                	pop    %r14
   147a9:	41 5f                	pop    %r15
   147ab:	5d                   	pop    %rbp
   147ac:	c3                   	retq   
   147ad:	0f 1f 00             	nopl   (%rax)
   147b0:	48 8d 3d b9 50 01 00 	lea    0x150b9(%rip),%rdi        # 29870 <slab_levels+0xcf0>
   147b7:	31 c0                	xor    %eax,%eax
   147b9:	e8 72 4e ff ff       	callq  9630 <pal_printf>
   147be:	e9 60 ff ff ff       	jmpq   14723 <get_reserved_pages+0x2d3>
   147c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   147c8:	48 83 c4 28          	add    $0x28,%rsp
   147cc:	31 c0                	xor    %eax,%eax
   147ce:	5b                   	pop    %rbx
   147cf:	41 5c                	pop    %r12
   147d1:	41 5d                	pop    %r13
   147d3:	41 5e                	pop    %r14
   147d5:	41 5f                	pop    %r15
   147d7:	5d                   	pop    %rbp
   147d8:	c3                   	retq   
   147d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   147e0:	4c 3b 69 18          	cmp    0x18(%rcx),%r13
   147e4:	4c 89 ea             	mov    %r13,%rdx
   147e7:	0f 82 10 01 00 00    	jb     148fd <get_reserved_pages+0x4ad>
   147ed:	45 31 ff             	xor    %r15d,%r15d
   147f0:	e9 f1 fd ff ff       	jmpq   145e6 <get_reserved_pages+0x196>
   147f5:	0f 1f 00             	nopl   (%rax)
   147f8:	48 85 f6             	test   %rsi,%rsi
   147fb:	0f 84 ec 00 00 00    	je     148ed <get_reserved_pages+0x49d>
   14801:	45 31 e4             	xor    %r12d,%r12d
   14804:	45 31 f6             	xor    %r14d,%r14d
   14807:	49 89 f7             	mov    %rsi,%r15
   1480a:	e9 6a fe ff ff       	jmpq   14679 <get_reserved_pages+0x229>
   1480f:	31 c9                	xor    %ecx,%ecx
   14811:	e9 66 fd ff ff       	jmpq   1457c <get_reserved_pages+0x12c>
   14816:	4d 85 ff             	test   %r15,%r15
   14819:	0f 84 de 00 00 00    	je     148fd <get_reserved_pages+0x4ad>
   1481f:	49 8b 7f 10          	mov    0x10(%r15),%rdi
   14823:	48 39 df             	cmp    %rbx,%rdi
   14826:	0f 82 0a 01 00 00    	jb     14936 <get_reserved_pages+0x4e6>
   1482c:	45 31 e4             	xor    %r12d,%r12d
   1482f:	e9 59 fe ff ff       	jmpq   1468d <get_reserved_pages+0x23d>
   14834:	4d 85 e4             	test   %r12,%r12
   14837:	0f 85 d3 fe ff ff    	jne    14710 <get_reserved_pages+0x2c0>
   1483d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14841:	4c 8d 2c 03          	lea    (%rbx,%rax,1),%r13
   14845:	bf 20 00 00 00       	mov    $0x20,%edi
   1484a:	4c 89 6d c0          	mov    %r13,-0x40(%rbp)
   1484e:	e8 cd 47 ff ff       	callq  9020 <malloc>
   14853:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   14857:	4d 85 f6             	test   %r14,%r14
   1485a:	48 89 58 18          	mov    %rbx,0x18(%rax)
   1485e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   14865:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1486c:	00 
   1486d:	48 89 50 10          	mov    %rdx,0x10(%rax)
   14871:	74 4d                	je     148c0 <get_reserved_pages+0x470>
   14873:	49 8b 0e             	mov    (%r14),%rcx
   14876:	48 89 de             	mov    %rbx,%rsi
   14879:	49 89 06             	mov    %rax,(%r14)
   1487c:	48 89 41 08          	mov    %rax,0x8(%rcx)
   14880:	48 89 08             	mov    %rcx,(%rax)
   14883:	4c 89 70 08          	mov    %r14,0x8(%rax)
   14887:	e9 8e fe ff ff       	jmpq   1471a <get_reserved_pages+0x2ca>
   1488c:	49 89 f7             	mov    %rsi,%r15
   1488f:	45 31 e4             	xor    %r12d,%r12d
   14892:	45 31 f6             	xor    %r14d,%r14d
   14895:	e9 df fd ff ff       	jmpq   14679 <get_reserved_pages+0x229>
   1489a:	48 8d 3d 9f 7b 21 04 	lea    0x4217b9f(%rip),%rdi        # 422c440 <heap_vma_lock>
   148a1:	e8 6a c4 ff ff       	callq  10d10 <_DkSpinUnlock>
   148a6:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   148aa:	48 8d 3d 7f 4f 01 00 	lea    0x14f7f(%rip),%rdi        # 29830 <slab_levels+0xcb0>
   148b1:	31 c0                	xor    %eax,%eax
   148b3:	e8 78 4d ff ff       	callq  9630 <pal_printf>
   148b8:	cc                   	int3   
   148b9:	31 c0                	xor    %eax,%eax
   148bb:	e9 86 fe ff ff       	jmpq   14746 <get_reserved_pages+0x2f6>
   148c0:	48 8b 0d 81 7b 21 04 	mov    0x4217b81(%rip),%rcx        # 422c448 <heap_vma_list>
   148c7:	48 85 c9             	test   %rcx,%rcx
   148ca:	74 72                	je     1493e <get_reserved_pages+0x4ee>
   148cc:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   148d0:	48 89 05 71 7b 21 04 	mov    %rax,0x4217b71(%rip)        # 422c448 <heap_vma_list>
   148d7:	48 89 06             	mov    %rax,(%rsi)
   148da:	48 89 41 08          	mov    %rax,0x8(%rcx)
   148de:	48 89 70 08          	mov    %rsi,0x8(%rax)
   148e2:	48 89 08             	mov    %rcx,(%rax)
   148e5:	48 89 de             	mov    %rbx,%rsi
   148e8:	e9 2d fe ff ff       	jmpq   1471a <get_reserved_pages+0x2ca>
   148ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   148f1:	4c 8d 2c 03          	lea    (%rbx,%rax,1),%r13
   148f5:	45 31 f6             	xor    %r14d,%r14d
   148f8:	e9 48 ff ff ff       	jmpq   14845 <get_reserved_pages+0x3f5>
   148fd:	bf 20 00 00 00       	mov    $0x20,%edi
   14902:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
   14906:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   1490a:	e8 11 47 ff ff       	callq  9020 <malloc>
   1490f:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
   14913:	4c 89 68 10          	mov    %r13,0x10(%rax)
   14917:	48 89 58 18          	mov    %rbx,0x18(%rax)
   1491b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   14922:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   14929:	00 
   1492a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1492e:	49 89 ce             	mov    %rcx,%r14
   14931:	e9 3d ff ff ff       	jmpq   14873 <get_reserved_pages+0x423>
   14936:	49 89 ce             	mov    %rcx,%r14
   14939:	e9 07 ff ff ff       	jmpq   14845 <get_reserved_pages+0x3f5>
   1493e:	48 89 05 03 7b 21 04 	mov    %rax,0x4217b03(%rip)        # 422c448 <heap_vma_list>
   14945:	48 89 00             	mov    %rax,(%rax)
   14948:	48 89 de             	mov    %rbx,%rsi
   1494b:	48 89 40 08          	mov    %rax,0x8(%rax)
   1494f:	e9 c6 fd ff ff       	jmpq   1471a <get_reserved_pages+0x2ca>
   14954:	66 90                	xchg   %ax,%ax
   14956:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1495d:	00 00 00 

0000000000014960 <free_pages>:
   14960:	55                   	push   %rbp
   14961:	48 89 e5             	mov    %rsp,%rbp
   14964:	41 57                	push   %r15
   14966:	41 56                	push   %r14
   14968:	41 55                	push   %r13
   1496a:	41 54                	push   %r12
   1496c:	53                   	push   %rbx
   1496d:	48 83 ec 18          	sub    $0x18,%rsp
   14971:	48 85 ff             	test   %rdi,%rdi
   14974:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
   14978:	0f 84 5c 01 00 00    	je     14ada <free_pages+0x17a>
   1497e:	48 85 f6             	test   %rsi,%rsi
   14981:	48 89 f0             	mov    %rsi,%rax
   14984:	0f 84 50 01 00 00    	je     14ada <free_pages+0x17a>
   1498a:	48 01 f8             	add    %rdi,%rax
   1498d:	a9 ff 0f 00 00       	test   $0xfff,%eax
   14992:	74 0e                	je     149a2 <free_pages+0x42>
   14994:	48 8d b8 01 10 00 00 	lea    0x1001(%rax),%rdi
   1499b:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
   149a2:	48 89 fa             	mov    %rdi,%rdx
   149a5:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
   149ac:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
   149b2:	48 0f 45 fa          	cmovne %rdx,%rdi
   149b6:	48 8d 15 5b a5 21 04 	lea    0x421a55b(%rip),%rdx        # 422ef18 <heap_base>
   149bd:	48 8b 0a             	mov    (%rdx),%rcx
   149c0:	48 89 ce             	mov    %rcx,%rsi
   149c3:	48 03 35 86 7a 21 04 	add    0x4217a86(%rip),%rsi        # 422c450 <heap_size>
   149ca:	48 39 c8             	cmp    %rcx,%rax
   149cd:	0f 86 07 01 00 00    	jbe    14ada <free_pages+0x17a>
   149d3:	48 39 f7             	cmp    %rsi,%rdi
   149d6:	0f 83 fe 00 00 00    	jae    14ada <free_pages+0x17a>
   149dc:	48 39 f0             	cmp    %rsi,%rax
   149df:	48 0f 46 f0          	cmovbe %rax,%rsi
   149e3:	48 39 cf             	cmp    %rcx,%rdi
   149e6:	48 0f 43 cf          	cmovae %rdi,%rcx
   149ea:	48 8d 3d 4f 7a 21 04 	lea    0x4217a4f(%rip),%rdi        # 422c440 <heap_vma_lock>
   149f1:	49 89 f6             	mov    %rsi,%r14
   149f4:	49 89 cf             	mov    %rcx,%r15
   149f7:	e8 e4 c2 ff ff       	callq  10ce0 <_DkSpinLock>
   149fc:	48 8b 1d 45 7a 21 04 	mov    0x4217a45(%rip),%rbx        # 422c448 <heap_vma_list>
   14a03:	48 85 db             	test   %rbx,%rbx
   14a06:	0f 84 35 01 00 00    	je     14b41 <free_pages+0x1e1>
   14a0c:	4c 8b 23             	mov    (%rbx),%r12
   14a0f:	45 31 ed             	xor    %r13d,%r13d
   14a12:	48 85 db             	test   %rbx,%rbx
   14a15:	48 89 d8             	mov    %rbx,%rax
   14a18:	41 0f 95 c5          	setne  %r13b
   14a1c:	eb 18                	jmp    14a36 <free_pages+0xd6>
   14a1e:	66 90                	xchg   %ax,%ax
   14a20:	45 85 ed             	test   %r13d,%r13d
   14a23:	74 72                	je     14a97 <free_pages+0x137>
   14a25:	45 31 ed             	xor    %r13d,%r13d
   14a28:	49 39 c4             	cmp    %rax,%r12
   14a2b:	41 0f 94 c5          	sete   %r13b
   14a2f:	4c 89 e3             	mov    %r12,%rbx
   14a32:	4d 8b 24 24          	mov    (%r12),%r12
   14a36:	45 85 ed             	test   %r13d,%r13d
   14a39:	75 05                	jne    14a40 <free_pages+0xe0>
   14a3b:	48 39 c3             	cmp    %rax,%rbx
   14a3e:	74 60                	je     14aa0 <free_pages+0x140>
   14a40:	48 85 c0             	test   %rax,%rax
   14a43:	74 5b                	je     14aa0 <free_pages+0x140>
   14a45:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   14a49:	4c 39 f2             	cmp    %r14,%rdx
   14a4c:	73 44                	jae    14a92 <free_pages+0x132>
   14a4e:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   14a52:	4c 39 ff             	cmp    %r15,%rdi
   14a55:	76 49                	jbe    14aa0 <free_pages+0x140>
   14a57:	4c 39 fa             	cmp    %r15,%rdx
   14a5a:	0f 82 90 00 00 00    	jb     14af0 <free_pages+0x190>
   14a60:	4c 39 f7             	cmp    %r14,%rdi
   14a63:	4c 89 73 18          	mov    %r14,0x18(%rbx)
   14a67:	77 29                	ja     14a92 <free_pages+0x132>
   14a69:	48 39 c3             	cmp    %rax,%rbx
   14a6c:	48 8b 13             	mov    (%rbx),%rdx
   14a6f:	0f 84 bb 00 00 00    	je     14b30 <free_pages+0x1d0>
   14a75:	48 8b 43 08          	mov    0x8(%rbx),%rax
   14a79:	48 89 df             	mov    %rbx,%rdi
   14a7c:	48 89 10             	mov    %rdx,(%rax)
   14a7f:	48 8b 13             	mov    (%rbx),%rdx
   14a82:	48 89 42 08          	mov    %rax,0x8(%rdx)
   14a86:	e8 d5 49 ff ff       	callq  9460 <free>
   14a8b:	48 8b 05 b6 79 21 04 	mov    0x42179b6(%rip),%rax        # 422c448 <heap_vma_list>
   14a92:	4c 39 e3             	cmp    %r12,%rbx
   14a95:	75 89                	jne    14a20 <free_pages+0xc0>
   14a97:	45 31 ed             	xor    %r13d,%r13d
   14a9a:	eb 93                	jmp    14a2f <free_pages+0xcf>
   14a9c:	0f 1f 40 00          	nopl   0x0(%rax)
   14aa0:	48 8d 3d 99 79 21 04 	lea    0x4217999(%rip),%rdi        # 422c440 <heap_vma_lock>
   14aa7:	e8 64 c2 ff ff       	callq  10d10 <_DkSpinUnlock>
   14aac:	48 8d 15 6d a4 21 04 	lea    0x421a46d(%rip),%rdx        # 422ef20 <alloced_pages>
   14ab3:	48 8b 02             	mov    (%rdx),%rax
   14ab6:	4c 8b 75 c8          	mov    -0x38(%rbp),%r14
   14aba:	49 c1 ee 0c          	shr    $0xc,%r14
   14abe:	49 f7 de             	neg    %r14
   14ac1:	f0 4c 0f c1 32       	lock xadd %r14,(%rdx)
   14ac6:	48 8d 15 43 a4 21 04 	lea    0x421a443(%rip),%rdx        # 422ef10 <max_alloced_pages>
   14acd:	89 c0                	mov    %eax,%eax
   14acf:	48 8b 0a             	mov    (%rdx),%rcx
   14ad2:	48 39 c8             	cmp    %rcx,%rax
   14ad5:	7e 03                	jle    14ada <free_pages+0x17a>
   14ad7:	48 89 02             	mov    %rax,(%rdx)
   14ada:	48 83 c4 18          	add    $0x18,%rsp
   14ade:	5b                   	pop    %rbx
   14adf:	41 5c                	pop    %r12
   14ae1:	41 5d                	pop    %r13
   14ae3:	41 5e                	pop    %r14
   14ae5:	41 5f                	pop    %r15
   14ae7:	5d                   	pop    %rbp
   14ae8:	c3                   	retq   
   14ae9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14af0:	bf 20 00 00 00       	mov    $0x20,%edi
   14af5:	e8 26 45 ff ff       	callq  9020 <malloc>
   14afa:	48 8b 53 18          	mov    0x18(%rbx),%rdx
   14afe:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   14b05:	4c 89 78 10          	mov    %r15,0x10(%rax)
   14b09:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   14b0d:	48 89 50 18          	mov    %rdx,0x18(%rax)
   14b11:	48 8b 13             	mov    (%rbx),%rdx
   14b14:	48 89 03             	mov    %rax,(%rbx)
   14b17:	48 89 42 08          	mov    %rax,0x8(%rdx)
   14b1b:	48 89 10             	mov    %rdx,(%rax)
   14b1e:	48 89 58 08          	mov    %rbx,0x8(%rax)
   14b22:	48 8b 05 1f 79 21 04 	mov    0x421791f(%rip),%rax        # 422c448 <heap_vma_list>
   14b29:	e9 32 ff ff ff       	jmpq   14a60 <free_pages+0x100>
   14b2e:	66 90                	xchg   %ax,%ax
   14b30:	48 39 d3             	cmp    %rdx,%rbx
   14b33:	74 14                	je     14b49 <free_pages+0x1e9>
   14b35:	48 89 15 0c 79 21 04 	mov    %rdx,0x421790c(%rip)        # 422c448 <heap_vma_list>
   14b3c:	e9 34 ff ff ff       	jmpq   14a75 <free_pages+0x115>
   14b41:	45 31 e4             	xor    %r12d,%r12d
   14b44:	e9 c6 fe ff ff       	jmpq   14a0f <free_pages+0xaf>
   14b49:	48 c7 05 f4 78 21 04 	movq   $0x0,0x42178f4(%rip)        # 422c448 <heap_vma_list>
   14b50:	00 00 00 00 
   14b54:	48 89 da             	mov    %rbx,%rdx
   14b57:	e9 19 ff ff ff       	jmpq   14a75 <free_pages+0x115>
   14b5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000014b60 <print_alloced_pages>:
   14b60:	55                   	push   %rbp
   14b61:	48 8d 05 b8 a3 21 04 	lea    0x421a3b8(%rip),%rax        # 422ef20 <alloced_pages>
   14b68:	48 89 e5             	mov    %rsp,%rbp
   14b6b:	48 8b 30             	mov    (%rax),%rsi
   14b6e:	48 8d 05 9b a3 21 04 	lea    0x421a39b(%rip),%rax        # 422ef10 <max_alloced_pages>
   14b75:	48 8b 00             	mov    (%rax),%rax
   14b78:	48 8b 15 d1 78 21 04 	mov    0x42178d1(%rip),%rdx        # 422c450 <heap_size>
   14b7f:	48 8d 3d 1a 4d 01 00 	lea    0x14d1a(%rip),%rdi        # 298a0 <slab_levels+0xd20>
   14b86:	5d                   	pop    %rbp
   14b87:	48 c1 ea 0c          	shr    $0xc,%rdx
   14b8b:	39 f0                	cmp    %esi,%eax
   14b8d:	0f 47 f0             	cmova  %eax,%esi
   14b90:	31 c0                	xor    %eax,%eax
   14b92:	e9 99 4a ff ff       	jmpq   9630 <pal_printf>
   14b97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   14b9e:	00 00 

0000000000014ba0 <init_untrusted_slab_mgr>:
   14ba0:	48 83 3d b0 78 21 04 	cmpq   $0x0,0x42178b0(%rip)        # 422c458 <untrusted_slabmgr>
   14ba7:	00 
   14ba8:	74 06                	je     14bb0 <init_untrusted_slab_mgr+0x10>
   14baa:	c3                   	retq   
   14bab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14bb0:	55                   	push   %rbp
   14bb1:	bf 20 04 01 00       	mov    $0x10420,%edi
   14bb6:	48 89 e5             	mov    %rsp,%rbp
   14bb9:	48 83 ec 10          	sub    $0x10,%rsp
   14bbd:	48 8d 75 f8          	lea    -0x8(%rbp),%rsi
   14bc1:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   14bc8:	00 
   14bc9:	e8 22 c2 ff ff       	callq  10df0 <ocall_alloc_untrusted>
   14bce:	4c 8b 4d f8          	mov    -0x8(%rbp),%r9
   14bd2:	4d 85 c9             	test   %r9,%r9
   14bd5:	0f 84 85 00 00 00    	je     14c60 <init_untrusted_slab_mgr+0xc0>
   14bdb:	49 8d 81 20 01 00 00 	lea    0x120(%r9),%rax
   14be2:	4c 89 ce             	mov    %r9,%rsi
   14be5:	31 ff                	xor    %edi,%edi
   14be7:	ba 10 00 00 00       	mov    $0x10,%edx
   14bec:	eb 0d                	jmp    14bfb <init_untrusted_slab_mgr+0x5b>
   14bee:	66 90                	xchg   %ax,%ax
   14bf0:	48 8d 15 69 4e 01 00 	lea    0x14e69(%rip),%rdx        # 29a60 <slab_levels>
   14bf7:	48 63 14 3a          	movslq (%rdx,%rdi,1),%rdx
   14bfb:	8d 4a 10             	lea    0x10(%rdx),%ecx
   14bfe:	4c 8d 40 20          	lea    0x20(%rax),%r8
   14c02:	48 83 c2 12          	add    $0x12,%rdx
   14c06:	c7 40 10 10 00 00 00 	movl   $0x10,0x10(%rax)
   14c0d:	48 c1 e2 04          	shl    $0x4,%rdx
   14c11:	48 89 06             	mov    %rax,(%rsi)
   14c14:	c1 e1 04             	shl    $0x4,%ecx
   14c17:	48 89 00             	mov    %rax,(%rax)
   14c1a:	48 89 40 08          	mov    %rax,0x8(%rax)
   14c1e:	4c 01 c1             	add    %r8,%rcx
   14c21:	48 c7 46 40 00 00 00 	movq   $0x0,0x40(%rsi)
   14c28:	00 
   14c29:	4c 89 86 a0 00 00 00 	mov    %r8,0xa0(%rsi)
   14c30:	48 89 8e e0 00 00 00 	mov    %rcx,0xe0(%rsi)
   14c37:	41 c7 84 39 80 00 00 	movl   $0x10,0x80(%r9,%rdi,1)
   14c3e:	00 10 00 00 00 
   14c43:	48 83 c7 04          	add    $0x4,%rdi
   14c47:	48 01 d0             	add    %rdx,%rax
   14c4a:	48 83 c6 08          	add    $0x8,%rsi
   14c4e:	48 83 ff 20          	cmp    $0x20,%rdi
   14c52:	75 9c                	jne    14bf0 <init_untrusted_slab_mgr+0x50>
   14c54:	4c 89 0d fd 77 21 04 	mov    %r9,0x42177fd(%rip)        # 422c458 <untrusted_slabmgr>
   14c5b:	c9                   	leaveq 
   14c5c:	f3 c3                	repz retq 
   14c5e:	66 90                	xchg   %ax,%ax
   14c60:	4c 8d 05 81 3d 01 00 	lea    0x13d81(%rip),%r8        # 289e8 <expected.3010+0x8>
   14c67:	48 8d 35 d2 4d 01 00 	lea    0x14dd2(%rip),%rsi        # 29a40 <__FUNCTION__.3446>
   14c6e:	48 8d 3d 7b 4c 01 00 	lea    0x14c7b(%rip),%rdi        # 298f0 <slab_levels+0xd70>
   14c75:	b9 10 00 00 00       	mov    $0x10,%ecx
   14c7a:	ba 40 00 00 00       	mov    $0x40,%edx
   14c7f:	31 c0                	xor    %eax,%eax
   14c81:	48 c7 05 cc 77 21 04 	movq   $0x0,0x42177cc(%rip)        # 422c458 <untrusted_slabmgr>
   14c88:	00 00 00 00 
   14c8c:	e8 9f 49 ff ff       	callq  9630 <pal_printf>
   14c91:	bf 10 00 00 00       	mov    $0x10,%edi
   14c96:	e8 c5 9f ff ff       	callq  ec60 <_DkProcessExit>
   14c9b:	c9                   	leaveq 
   14c9c:	eb be                	jmp    14c5c <init_untrusted_slab_mgr+0xbc>
   14c9e:	66 90                	xchg   %ax,%ax

0000000000014ca0 <malloc_untrusted>:
   14ca0:	55                   	push   %rbp
   14ca1:	48 89 e5             	mov    %rsp,%rbp
   14ca4:	41 57                	push   %r15
   14ca6:	41 56                	push   %r14
   14ca8:	41 55                	push   %r13
   14caa:	41 54                	push   %r12
   14cac:	4c 63 ef             	movslq %edi,%r13
   14caf:	53                   	push   %rbx
   14cb0:	41 bc 10 00 00 00    	mov    $0x10,%r12d
   14cb6:	31 db                	xor    %ebx,%ebx
   14cb8:	48 83 ec 28          	sub    $0x28,%rsp
   14cbc:	eb 0d                	jmp    14ccb <malloc_untrusted+0x2b>
   14cbe:	66 90                	xchg   %ax,%ax
   14cc0:	48 8d 05 99 4d 01 00 	lea    0x14d99(%rip),%rax        # 29a60 <slab_levels>
   14cc7:	44 8b 24 98          	mov    (%rax,%rbx,4),%r12d
   14ccb:	45 39 e5             	cmp    %r12d,%r13d
   14cce:	4c 63 f3             	movslq %ebx,%r14
   14cd1:	7e 4d                	jle    14d20 <malloc_untrusted+0x80>
   14cd3:	48 83 c3 01          	add    $0x1,%rbx
   14cd7:	48 83 fb 08          	cmp    $0x8,%rbx
   14cdb:	75 e3                	jne    14cc0 <malloc_untrusted+0x20>
   14cdd:	41 8d 7d 20          	lea    0x20(%r13),%edi
   14ce1:	48 8d 75 c8          	lea    -0x38(%rbp),%rsi
   14ce5:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   14cec:	00 
   14ced:	48 63 ff             	movslq %edi,%rdi
   14cf0:	e8 fb c0 ff ff       	callq  10df0 <ocall_alloc_untrusted>
   14cf5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14cf9:	48 85 c0             	test   %rax,%rax
   14cfc:	74 0b                	je     14d09 <malloc_untrusted+0x69>
   14cfe:	4c 89 28             	mov    %r13,(%rax)
   14d01:	c6 40 10 ff          	movb   $0xff,0x10(%rax)
   14d05:	48 83 c0 20          	add    $0x20,%rax
   14d09:	48 83 c4 28          	add    $0x28,%rsp
   14d0d:	5b                   	pop    %rbx
   14d0e:	41 5c                	pop    %r12
   14d10:	41 5d                	pop    %r13
   14d12:	41 5e                	pop    %r14
   14d14:	41 5f                	pop    %r15
   14d16:	5d                   	pop    %rbp
   14d17:	c3                   	retq   
   14d18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   14d1f:	00 
   14d20:	4c 8b 3d 31 77 21 04 	mov    0x4217731(%rip),%r15        # 422c458 <untrusted_slabmgr>
   14d27:	48 8d 3d 32 77 21 04 	lea    0x4217732(%rip),%rdi        # 422c460 <malloc_lock>
   14d2e:	e8 ad bf ff ff       	callq  10ce0 <_DkSpinLock>
   14d33:	4b 8d 0c f7          	lea    (%r15,%r14,8),%rcx
   14d37:	48 8b 91 a0 00 00 00 	mov    0xa0(%rcx),%rdx
   14d3e:	48 8b 81 e0 00 00 00 	mov    0xe0(%rcx),%rax
   14d45:	48 39 c2             	cmp    %rax,%rdx
   14d48:	77 76                	ja     14dc0 <malloc_untrusted+0x120>
   14d4a:	48 39 c2             	cmp    %rax,%rdx
   14d4d:	0f 84 a6 00 00 00    	je     14df9 <malloc_untrusted+0x159>
   14d53:	4c 8b 69 40          	mov    0x40(%rcx),%r13
   14d57:	4d 85 ed             	test   %r13,%r13
   14d5a:	0f 84 f0 01 00 00    	je     14f50 <malloc_untrusted+0x2b0>
   14d60:	49 8b 45 10          	mov    0x10(%r13),%rax
   14d64:	ba 00 00 00 00       	mov    $0x0,%edx
   14d69:	4c 39 e8             	cmp    %r13,%rax
   14d6c:	48 0f 44 c2          	cmove  %rdx,%rax
   14d70:	48 89 41 40          	mov    %rax,0x40(%rcx)
   14d74:	49 8b 45 18          	mov    0x18(%r13),%rax
   14d78:	49 8b 55 10          	mov    0x10(%r13),%rdx
   14d7c:	48 89 50 10          	mov    %rdx,0x10(%rax)
   14d80:	49 8b 55 10          	mov    0x10(%r13),%rdx
   14d84:	48 89 42 18          	mov    %rax,0x18(%rdx)
   14d88:	48 8b 81 a0 00 00 00 	mov    0xa0(%rcx),%rax
   14d8f:	48 39 81 e0 00 00 00 	cmp    %rax,0xe0(%rcx)
   14d96:	0f 82 94 01 00 00    	jb     14f30 <malloc_untrusted+0x290>
   14d9c:	48 8d 3d bd 76 21 04 	lea    0x42176bd(%rip),%rdi        # 422c460 <malloc_lock>
   14da3:	41 88 5d 00          	mov    %bl,0x0(%r13)
   14da7:	e8 64 bf ff ff       	callq  10d10 <_DkSpinUnlock>
   14dac:	48 83 c4 28          	add    $0x28,%rsp
   14db0:	49 8d 45 10          	lea    0x10(%r13),%rax
   14db4:	5b                   	pop    %rbx
   14db5:	41 5c                	pop    %r12
   14db7:	41 5d                	pop    %r13
   14db9:	41 5e                	pop    %r14
   14dbb:	41 5f                	pop    %r15
   14dbd:	5d                   	pop    %rbp
   14dbe:	c3                   	retq   
   14dbf:	90                   	nop
   14dc0:	48 8d 3d 71 4b 01 00 	lea    0x14b71(%rip),%rdi        # 29938 <slab_levels+0xdb8>
   14dc7:	31 d2                	xor    %edx,%edx
   14dc9:	31 c0                	xor    %eax,%eax
   14dcb:	be 5f 01 00 00       	mov    $0x15f,%esi
   14dd0:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
   14dd4:	e8 77 23 ff ff       	callq  7150 <warn>
   14dd9:	e8 62 23 ff ff       	callq  7140 <__abort>
   14dde:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
   14de2:	48 8b 91 a0 00 00 00 	mov    0xa0(%rcx),%rdx
   14de9:	48 8b 81 e0 00 00 00 	mov    0xe0(%rcx),%rax
   14df0:	48 39 c2             	cmp    %rax,%rdx
   14df3:	0f 85 5a ff ff ff    	jne    14d53 <malloc_untrusted+0xb3>
   14df9:	4c 8b 69 40          	mov    0x40(%rcx),%r13
   14dfd:	4d 85 ed             	test   %r13,%r13
   14e00:	0f 85 5a ff ff ff    	jne    14d60 <malloc_untrusted+0xc0>
   14e06:	48 8d 3d 53 76 21 04 	lea    0x4217653(%rip),%rdi        # 422c460 <malloc_lock>
   14e0d:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
   14e11:	e8 fa be ff ff       	callq  10d10 <_DkSpinUnlock>
   14e16:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
   14e1a:	48 8b 81 e0 00 00 00 	mov    0xe0(%rcx),%rax
   14e21:	48 39 81 a0 00 00 00 	cmp    %rax,0xa0(%rcx)
   14e28:	74 1e                	je     14e48 <malloc_untrusted+0x1a8>
   14e2a:	48 8d 3d 67 4b 01 00 	lea    0x14b67(%rip),%rdi        # 29998 <slab_levels+0xe18>
   14e31:	31 d2                	xor    %edx,%edx
   14e33:	be 35 01 00 00       	mov    $0x135,%esi
   14e38:	31 c0                	xor    %eax,%eax
   14e3a:	e8 11 23 ff ff       	callq  7150 <warn>
   14e3f:	e8 fc 22 ff ff       	callq  7140 <__abort>
   14e44:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
   14e48:	4b 8d 14 b7          	lea    (%r15,%r14,4),%rdx
   14e4c:	41 8d 7c 24 10       	lea    0x10(%r12),%edi
   14e51:	48 8d 75 c8          	lea    -0x38(%rbp),%rsi
   14e55:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
   14e59:	44 8b ba 80 00 00 00 	mov    0x80(%rdx),%r15d
   14e60:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
   14e64:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   14e6b:	00 
   14e6c:	41 0f af ff          	imul   %r15d,%edi
   14e70:	83 c7 20             	add    $0x20,%edi
   14e73:	48 63 ff             	movslq %edi,%rdi
   14e76:	e8 75 bf ff ff       	callq  10df0 <ocall_alloc_untrusted>
   14e7b:	4c 8b 6d c8          	mov    -0x38(%rbp),%r13
   14e7f:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
   14e83:	4d 85 ed             	test   %r13,%r13
   14e86:	0f 84 83 00 00 00    	je     14f0f <malloc_untrusted+0x26f>
   14e8c:	48 8d 3d cd 75 21 04 	lea    0x42175cd(%rip),%rdi        # 422c460 <malloc_lock>
   14e93:	e8 48 be ff ff       	callq  10ce0 <_DkSpinLock>
   14e98:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
   14e9c:	45 89 7d 10          	mov    %r15d,0x10(%r13)
   14ea0:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   14ea7:	00 
   14ea8:	49 c7 45 08 00 00 00 	movq   $0x0,0x8(%r13)
   14eaf:	00 
   14eb0:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   14eb4:	48 8b 01             	mov    (%rcx),%rax
   14eb7:	48 85 c0             	test   %rax,%rax
   14eba:	0f 84 b3 00 00 00    	je     14f73 <malloc_untrusted+0x2d3>
   14ec0:	48 8b 70 08          	mov    0x8(%rax),%rsi
   14ec4:	4c 89 2e             	mov    %r13,(%rsi)
   14ec7:	4c 89 68 08          	mov    %r13,0x8(%rax)
   14ecb:	49 89 45 00          	mov    %rax,0x0(%r13)
   14ecf:	49 89 75 08          	mov    %rsi,0x8(%r13)
   14ed3:	4c 89 29             	mov    %r13,(%rcx)
   14ed6:	41 8d 44 24 10       	lea    0x10(%r12),%eax
   14edb:	49 83 c5 20          	add    $0x20,%r13
   14edf:	48 8d 3d 7a 75 21 04 	lea    0x421757a(%rip),%rdi        # 422c460 <malloc_lock>
   14ee6:	4c 89 a9 a0 00 00 00 	mov    %r13,0xa0(%rcx)
   14eed:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
   14ef1:	41 0f af c7          	imul   %r15d,%eax
   14ef5:	49 01 c5             	add    %rax,%r13
   14ef8:	4c 89 a9 e0 00 00 00 	mov    %r13,0xe0(%rcx)
   14eff:	44 01 ba 80 00 00 00 	add    %r15d,0x80(%rdx)
   14f06:	e8 05 be ff ff       	callq  10d10 <_DkSpinUnlock>
   14f0b:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
   14f0f:	48 8d 3d 4a 75 21 04 	lea    0x421754a(%rip),%rdi        # 422c460 <malloc_lock>
   14f16:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
   14f1a:	e8 c1 bd ff ff       	callq  10ce0 <_DkSpinLock>
   14f1f:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
   14f23:	e9 2b fe ff ff       	jmpq   14d53 <malloc_untrusted+0xb3>
   14f28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   14f2f:	00 
   14f30:	48 8d 3d 01 4a 01 00 	lea    0x14a01(%rip),%rdi        # 29938 <slab_levels+0xdb8>
   14f37:	31 d2                	xor    %edx,%edx
   14f39:	be 6e 01 00 00       	mov    $0x16e,%esi
   14f3e:	31 c0                	xor    %eax,%eax
   14f40:	e8 0b 22 ff ff       	callq  7150 <warn>
   14f45:	e8 f6 21 ff ff       	callq  7140 <__abort>
   14f4a:	e9 4d fe ff ff       	jmpq   14d9c <malloc_untrusted+0xfc>
   14f4f:	90                   	nop
   14f50:	48 8d 05 09 4b 01 00 	lea    0x14b09(%rip),%rax        # 29a60 <slab_levels>
   14f57:	4c 8b a9 a0 00 00 00 	mov    0xa0(%rcx),%r13
   14f5e:	4a 63 04 b0          	movslq (%rax,%r14,4),%rax
   14f62:	49 8d 44 05 10       	lea    0x10(%r13,%rax,1),%rax
   14f67:	48 89 81 a0 00 00 00 	mov    %rax,0xa0(%rcx)
   14f6e:	e9 1c fe ff ff       	jmpq   14d8f <malloc_untrusted+0xef>
   14f73:	4c 89 29             	mov    %r13,(%rcx)
   14f76:	4d 89 6d 00          	mov    %r13,0x0(%r13)
   14f7a:	4d 89 6d 08          	mov    %r13,0x8(%r13)
   14f7e:	e9 53 ff ff ff       	jmpq   14ed6 <malloc_untrusted+0x236>
   14f83:	0f 1f 00             	nopl   (%rax)
   14f86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   14f8d:	00 00 00 

0000000000014f90 <free_untrusted>:
   14f90:	48 85 ff             	test   %rdi,%rdi
   14f93:	0f 84 c7 00 00 00    	je     15060 <free_untrusted+0xd0>
   14f99:	0f b6 77 f0          	movzbl -0x10(%rdi),%esi
   14f9d:	40 80 fe ff          	cmp    $0xff,%sil
   14fa1:	0f 84 c1 00 00 00    	je     15068 <free_untrusted+0xd8>
   14fa7:	55                   	push   %rbp
   14fa8:	40 80 fe 07          	cmp    $0x7,%sil
   14fac:	48 89 e5             	mov    %rsp,%rbp
   14faf:	41 56                	push   %r14
   14fb1:	41 55                	push   %r13
   14fb3:	4c 8b 2d 9e 74 21 04 	mov    0x421749e(%rip),%r13        # 422c458 <untrusted_slabmgr>
   14fba:	41 54                	push   %r12
   14fbc:	44 0f b6 e6          	movzbl %sil,%r12d
   14fc0:	53                   	push   %rbx
   14fc1:	48 89 fb             	mov    %rdi,%rbx
   14fc4:	77 5a                	ja     15020 <free_untrusted+0x90>
   14fc6:	48 8d 3d 93 74 21 04 	lea    0x4217493(%rip),%rdi        # 422c460 <malloc_lock>
   14fcd:	4c 8d 73 f0          	lea    -0x10(%rbx),%r14
   14fd1:	e8 0a bd ff ff       	callq  10ce0 <_DkSpinLock>
   14fd6:	49 63 f4             	movslq %r12d,%rsi
   14fd9:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   14fe0:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   14fe7:	00 
   14fe8:	49 8d 54 f5 00       	lea    0x0(%r13,%rsi,8),%rdx
   14fed:	48 8b 42 40          	mov    0x40(%rdx),%rax
   14ff1:	48 85 c0             	test   %rax,%rax
   14ff4:	74 5a                	je     15050 <free_untrusted+0xc0>
   14ff6:	48 8b 50 18          	mov    0x18(%rax),%rdx
   14ffa:	4c 89 72 10          	mov    %r14,0x10(%rdx)
   14ffe:	4c 89 70 18          	mov    %r14,0x18(%rax)
   15002:	48 89 03             	mov    %rax,(%rbx)
   15005:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   15009:	5b                   	pop    %rbx
   1500a:	41 5c                	pop    %r12
   1500c:	41 5d                	pop    %r13
   1500e:	41 5e                	pop    %r14
   15010:	5d                   	pop    %rbp
   15011:	48 8d 3d 48 74 21 04 	lea    0x4217448(%rip),%rdi        # 422c460 <malloc_lock>
   15018:	e9 f3 bc ff ff       	jmpq   10d10 <_DkSpinUnlock>
   1501d:	0f 1f 00             	nopl   (%rax)
   15020:	48 8d 3d c9 3a 01 00 	lea    0x13ac9(%rip),%rdi        # 28af0 <expected.3010+0x110>
   15027:	44 89 e6             	mov    %r12d,%esi
   1502a:	31 c0                	xor    %eax,%eax
   1502c:	e8 2f d5 fe ff       	callq  2560 <pal_printf@plt>
   15031:	48 8d 3d c0 49 01 00 	lea    0x149c0(%rip),%rdi        # 299f8 <slab_levels+0xe78>
   15038:	31 d2                	xor    %edx,%edx
   1503a:	be ae 01 00 00       	mov    $0x1ae,%esi
   1503f:	31 c0                	xor    %eax,%eax
   15041:	e8 0a 21 ff ff       	callq  7150 <warn>
   15046:	e8 f5 20 ff ff       	callq  7140 <__abort>
   1504b:	e9 76 ff ff ff       	jmpq   14fc6 <free_untrusted+0x36>
   15050:	4c 89 72 40          	mov    %r14,0x40(%rdx)
   15054:	4c 89 33             	mov    %r14,(%rbx)
   15057:	4c 89 73 08          	mov    %r14,0x8(%rbx)
   1505b:	eb ac                	jmp    15009 <free_untrusted+0x79>
   1505d:	0f 1f 00             	nopl   (%rax)
   15060:	f3 c3                	repz retq 
   15062:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15068:	8b 47 e0             	mov    -0x20(%rdi),%eax
   1506b:	48 83 ef 20          	sub    $0x20,%rdi
   1506f:	8d 70 20             	lea    0x20(%rax),%esi
   15072:	48 63 f6             	movslq %esi,%rsi
   15075:	e9 96 be ff ff       	jmpq   10f10 <ocall_unmap_untrusted>

000000000001507a <enclave_entry>:
   1507a:	48 83 f8 00          	cmp    $0x0,%rax
   1507e:	75 62                	jne    150e2 <enclave_entry+0x68>
   15080:	65 48 89 0c 25 18 00 	mov    %rcx,%gs:0x18
   15087:	00 00 
   15089:	65 48 8b 0c 25 30 00 	mov    %gs:0x30,%rcx
   15090:	00 00 
   15092:	48 83 f9 00          	cmp    $0x0,%rcx
   15096:	0f 85 df 01 00 00    	jne    1527b <sgx_ocall+0x8e>
   1509c:	65 48 2b 1c 25 08 00 	sub    %gs:0x8,%rbx
   150a3:	00 00 
   150a5:	49 89 d8             	mov    %rbx,%r8
   150a8:	48 89 e1             	mov    %rsp,%rcx
   150ab:	65 48 03 1c 25 10 00 	add    %gs:0x10,%rbx
   150b2:	00 00 
   150b4:	48 89 dc             	mov    %rbx,%rsp
   150b7:	48 31 c0             	xor    %rax,%rax
   150ba:	48 31 db             	xor    %rbx,%rbx
   150bd:	4d 31 c9             	xor    %r9,%r9
   150c0:	4d 31 d2             	xor    %r10,%r10
   150c3:	4d 31 db             	xor    %r11,%r11
   150c6:	4d 31 e4             	xor    %r12,%r12
   150c9:	4d 31 ed             	xor    %r13,%r13
   150cc:	4d 31 f6             	xor    %r14,%r14
   150cf:	4d 31 ff             	xor    %r15,%r15
   150d2:	e8 49 02 00 00       	callq  15320 <handle_ecall>
   150d7:	48 31 ff             	xor    %rdi,%rdi
   150da:	48 31 f6             	xor    %rsi,%rsi
   150dd:	e9 52 01 00 00       	jmpq   15234 <sgx_ocall+0x47>
   150e2:	65 48 8b 1c 25 28 00 	mov    %gs:0x28,%rbx
   150e9:	00 00 
   150eb:	48 89 fe             	mov    %rdi,%rsi
   150ee:	48 31 ff             	xor    %rdi,%rdi
   150f1:	8b bb a0 00 00 00    	mov    0xa0(%rbx),%edi
   150f7:	f7 c7 00 00 00 80    	test   $0x80000000,%edi
   150fd:	75 20                	jne    1511f <enclave_entry+0xa5>
   150ff:	89 f7                	mov    %esi,%edi
   15101:	81 e7 ff 00 00 00    	and    $0xff,%edi
   15107:	83 ff 00             	cmp    $0x0,%edi
   1510a:	75 13                	jne    1511f <enclave_entry+0xa5>
   1510c:	48 31 ff             	xor    %rdi,%rdi
   1510f:	48 31 f6             	xor    %rsi,%rsi
   15112:	48 89 d3             	mov    %rdx,%rbx
   15115:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   1511c:	0f 01 d7             	enclu  
   1511f:	48 8b 73 20          	mov    0x20(%rbx),%rsi
   15123:	48 81 ee 90 00 00 00 	sub    $0x90,%rsi
   1512a:	48 87 7b 38          	xchg   %rdi,0x38(%rbx)
   1512e:	48 89 7e 38          	mov    %rdi,0x38(%rsi)
   15132:	48 8b 3b             	mov    (%rbx),%rdi
   15135:	48 89 3e             	mov    %rdi,(%rsi)
   15138:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1513c:	48 89 7e 08          	mov    %rdi,0x8(%rsi)
   15140:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   15144:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
   15148:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   1514c:	48 89 7e 18          	mov    %rdi,0x18(%rsi)
   15150:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   15154:	48 89 7e 20          	mov    %rdi,0x20(%rsi)
   15158:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
   1515c:	48 89 7e 28          	mov    %rdi,0x28(%rsi)
   15160:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
   15164:	48 89 7e 30          	mov    %rdi,0x30(%rsi)
   15168:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
   1516c:	48 89 7e 40          	mov    %rdi,0x40(%rsi)
   15170:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
   15174:	48 89 7e 48          	mov    %rdi,0x48(%rsi)
   15178:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
   1517c:	48 89 7e 50          	mov    %rdi,0x50(%rsi)
   15180:	48 8b 7b 58          	mov    0x58(%rbx),%rdi
   15184:	48 89 7e 58          	mov    %rdi,0x58(%rsi)
   15188:	48 8b 7b 60          	mov    0x60(%rbx),%rdi
   1518c:	48 89 7e 60          	mov    %rdi,0x60(%rsi)
   15190:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
   15194:	48 89 7e 68          	mov    %rdi,0x68(%rsi)
   15198:	48 8b 7b 70          	mov    0x70(%rbx),%rdi
   1519c:	48 89 7e 70          	mov    %rdi,0x70(%rsi)
   151a0:	48 8b 7b 78          	mov    0x78(%rbx),%rdi
   151a4:	48 89 7e 78          	mov    %rdi,0x78(%rsi)
   151a8:	48 8b bb 80 00 00 00 	mov    0x80(%rbx),%rdi
   151af:	48 89 be 80 00 00 00 	mov    %rdi,0x80(%rsi)
   151b6:	48 8b bb 88 00 00 00 	mov    0x88(%rbx),%rdi
   151bd:	48 89 be 88 00 00 00 	mov    %rdi,0x88(%rsi)
   151c4:	48 89 73 20          	mov    %rsi,0x20(%rbx)
   151c8:	48 89 73 30          	mov    %rsi,0x30(%rbx)
   151cc:	48 8d 3d cd b2 ff ff 	lea    -0x4d33(%rip),%rdi        # 104a0 <_DkExceptionHandler>
   151d3:	48 89 bb 88 00 00 00 	mov    %rdi,0x88(%rbx)
   151da:	48 31 ff             	xor    %rdi,%rdi
   151dd:	48 31 f6             	xor    %rsi,%rsi
   151e0:	48 89 d3             	mov    %rdx,%rbx
   151e3:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   151ea:	0f 01 d7             	enclu  

00000000000151ed <sgx_ocall>:
   151ed:	55                   	push   %rbp
   151ee:	48 89 e5             	mov    %rsp,%rbp
   151f1:	48 8b 45 08          	mov    0x8(%rbp),%rax
   151f5:	50                   	push   %rax
   151f6:	9c                   	pushfq 
   151f7:	41 57                	push   %r15
   151f9:	41 56                	push   %r14
   151fb:	41 55                	push   %r13
   151fd:	41 54                	push   %r12
   151ff:	41 53                	push   %r11
   15201:	41 52                	push   %r10
   15203:	41 51                	push   %r9
   15205:	41 50                	push   %r8
   15207:	57                   	push   %rdi
   15208:	56                   	push   %rsi
   15209:	48 8b 45 00          	mov    0x0(%rbp),%rax
   1520d:	50                   	push   %rax
   1520e:	48 8d 45 10          	lea    0x10(%rbp),%rax
   15212:	50                   	push   %rax
   15213:	53                   	push   %rbx
   15214:	52                   	push   %rdx
   15215:	51                   	push   %rcx
   15216:	48 89 e5             	mov    %rsp,%rbp
   15219:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
   15220:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
   15224:	0f ae 04 24          	fxsave (%rsp)
   15228:	55                   	push   %rbp
   15229:	65 48 89 24 25 40 00 	mov    %rsp,%gs:0x40
   15230:	00 00 
   15232:	eb 00                	jmp    15234 <sgx_ocall+0x47>
   15234:	48 31 d2             	xor    %rdx,%rdx
   15237:	4d 31 c0             	xor    %r8,%r8
   1523a:	4d 31 c9             	xor    %r9,%r9
   1523d:	4d 31 d2             	xor    %r10,%r10
   15240:	4d 31 db             	xor    %r11,%r11
   15243:	4d 31 e4             	xor    %r12,%r12
   15246:	4d 31 ed             	xor    %r13,%r13
   15249:	4d 31 f6             	xor    %r14,%r14
   1524c:	4d 31 ff             	xor    %r15,%r15
   1524f:	48 31 ed             	xor    %rbp,%rbp
   15252:	65 48 8b 24 25 50 00 	mov    %gs:0x50,%rsp
   15259:	00 00 
   1525b:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
   1525f:	65 48 8b 1c 25 30 00 	mov    %gs:0x30,%rbx
   15266:	00 00 
   15268:	65 48 8b 0c 25 18 00 	mov    %gs:0x18,%rcx
   1526f:	00 00 
   15271:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   15278:	0f 01 d7             	enclu  
   1527b:	48 89 f8             	mov    %rdi,%rax
   1527e:	65 48 8b 1c 25 38 00 	mov    %gs:0x38,%rbx
   15285:	00 00 
   15287:	48 83 fb 00          	cmp    $0x0,%rbx
   1528b:	74 05                	je     15292 <sgx_ocall+0xa5>
   1528d:	f3 48 0f ae d3       	wrfsbase %rbx
   15292:	65 48 8b 24 25 40 00 	mov    %gs:0x40,%rsp
   15299:	00 00 
   1529b:	5d                   	pop    %rbp
   1529c:	0f ae 0c 24          	fxrstor (%rsp)
   152a0:	48 89 ec             	mov    %rbp,%rsp
   152a3:	48 83 fe 00          	cmp    $0x0,%rsi
   152a7:	74 0d                	je     152b6 <sgx_ocall+0xc9>
   152a9:	50                   	push   %rax
   152aa:	48 89 f7             	mov    %rsi,%rdi
   152ad:	48 89 e6             	mov    %rsp,%rsi
   152b0:	e8 9b b0 ff ff       	callq  10350 <_DkHandleExternelEvent>
   152b5:	58                   	pop    %rax
   152b6:	59                   	pop    %rcx
   152b7:	5a                   	pop    %rdx
   152b8:	5b                   	pop    %rbx
   152b9:	48 83 c4 10          	add    $0x10,%rsp
   152bd:	5e                   	pop    %rsi
   152be:	5f                   	pop    %rdi
   152bf:	41 58                	pop    %r8
   152c1:	41 59                	pop    %r9
   152c3:	41 5a                	pop    %r10
   152c5:	41 5b                	pop    %r11
   152c7:	41 5c                	pop    %r12
   152c9:	41 5d                	pop    %r13
   152cb:	41 5e                	pop    %r14
   152cd:	41 5f                	pop    %r15
   152cf:	9d                   	popfq  
   152d0:	48 83 c4 08          	add    $0x8,%rsp
   152d4:	5d                   	pop    %rbp
   152d5:	c3                   	retq   

00000000000152d6 <sgx_report>:
   152d6:	53                   	push   %rbx
   152d7:	51                   	push   %rcx
   152d8:	48 89 fb             	mov    %rdi,%rbx
   152db:	48 89 f1             	mov    %rsi,%rcx
   152de:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
   152e5:	0f 01 d7             	enclu  
   152e8:	59                   	pop    %rcx
   152e9:	5b                   	pop    %rbx
   152ea:	c3                   	retq   

00000000000152eb <sgx_getkey>:
   152eb:	53                   	push   %rbx
   152ec:	51                   	push   %rcx
   152ed:	48 89 fb             	mov    %rdi,%rbx
   152f0:	48 89 f1             	mov    %rsi,%rcx
   152f3:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   152fa:	0f 01 d7             	enclu  
   152fd:	59                   	pop    %rcx
   152fe:	5b                   	pop    %rbx
   152ff:	c3                   	retq   

0000000000015300 <rdrand>:
   15300:	0f c7 f0             	rdrand %eax
   15303:	73 fb                	jae    15300 <rdrand>
   15305:	c3                   	retq   

0000000000015306 <rdfsbase>:
   15306:	f3 48 0f ae c0       	rdfsbase %rax
   1530b:	c3                   	retq   

000000000001530c <wrfsbase>:
   1530c:	f3 48 0f ae d7       	wrfsbase %rdi
   15311:	c3                   	retq   
   15312:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15319:	00 00 00 
   1531c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000015320 <handle_ecall>:
   15320:	48 83 ff 01          	cmp    $0x1,%rdi
   15324:	0f 87 c6 00 00 00    	ja     153f0 <handle_ecall+0xd0>
   1532a:	48 8d 05 d7 9b 21 04 	lea    0x4219bd7(%rip),%rax        # 422ef08 <enclave_base>
   15331:	55                   	push   %rbp
   15332:	48 89 e5             	mov    %rsp,%rbp
   15335:	41 56                	push   %r14
   15337:	41 55                	push   %r13
   15339:	41 54                	push   %r12
   1533b:	53                   	push   %rbx
   1533c:	48 83 38 00          	cmpq   $0x0,(%rax)
   15340:	74 7e                	je     153c0 <handle_ecall+0xa0>
   15342:	49 89 f6             	mov    %rsi,%r14
   15345:	49 89 fc             	mov    %rdi,%r12
   15348:	31 f6                	xor    %esi,%esi
   1534a:	48 89 d7             	mov    %rdx,%rdi
   1534d:	48 89 cb             	mov    %rcx,%rbx
   15350:	49 89 d5             	mov    %rdx,%r13
   15353:	e8 78 db ff ff       	callq  12ed0 <sgx_is_within_enclave>
   15358:	84 c0                	test   %al,%al
   1535a:	0f 85 80 00 00 00    	jne    153e0 <handle_ecall+0xc0>
   15360:	31 f6                	xor    %esi,%esi
   15362:	48 89 df             	mov    %rbx,%rdi
   15365:	e8 66 db ff ff       	callq  12ed0 <sgx_is_within_enclave>
   1536a:	84 c0                	test   %al,%al
   1536c:	75 72                	jne    153e0 <handle_ecall+0xc0>
   1536e:	65 4c 89 2c 25 30 00 	mov    %r13,%gs:0x30
   15375:	00 00 
   15377:	65 48 89 1c 25 48 00 	mov    %rbx,%gs:0x48
   1537e:	00 00 
   15380:	65 48 89 1c 25 50 00 	mov    %rbx,%gs:0x50
   15387:	00 00 
   15389:	49 83 fc 01          	cmp    $0x1,%r12
   1538d:	74 29                	je     153b8 <handle_ecall+0x98>
   1538f:	4d 85 f6             	test   %r14,%r14
   15392:	74 62                	je     153f6 <handle_ecall+0xd6>
   15394:	49 8b 56 10          	mov    0x10(%r14),%rdx
   15398:	49 8b 76 08          	mov    0x8(%r14),%rsi
   1539c:	49 8b 3e             	mov    (%r14),%rdi
   1539f:	e8 4c 9f ff ff       	callq  f2f0 <pal_linux_main>
   153a4:	e8 77 b9 ff ff       	callq  10d20 <ocall_exit>
   153a9:	31 c0                	xor    %eax,%eax
   153ab:	5b                   	pop    %rbx
   153ac:	41 5c                	pop    %r12
   153ae:	41 5d                	pop    %r13
   153b0:	41 5e                	pop    %r14
   153b2:	5d                   	pop    %rbp
   153b3:	c3                   	retq   
   153b4:	0f 1f 40 00          	nopl   0x0(%rax)
   153b8:	e8 f3 87 ff ff       	callq  dbb0 <pal_start_thread>
   153bd:	eb e5                	jmp    153a4 <handle_ecall+0x84>
   153bf:	90                   	nop
   153c0:	4c 89 00             	mov    %r8,(%rax)
   153c3:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   153ca:	00 00 
   153cc:	49 01 c0             	add    %rax,%r8
   153cf:	48 8d 05 2a 9b 21 04 	lea    0x4219b2a(%rip),%rax        # 422ef00 <enclave_top>
   153d6:	4c 89 00             	mov    %r8,(%rax)
   153d9:	e9 64 ff ff ff       	jmpq   15342 <handle_ecall+0x22>
   153de:	66 90                	xchg   %ax,%ax
   153e0:	5b                   	pop    %rbx
   153e1:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   153e6:	41 5c                	pop    %r12
   153e8:	41 5d                	pop    %r13
   153ea:	41 5e                	pop    %r14
   153ec:	5d                   	pop    %rbp
   153ed:	c3                   	retq   
   153ee:	66 90                	xchg   %ax,%ax
   153f0:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   153f5:	c3                   	retq   
   153f6:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   153fb:	eb ae                	jmp    153ab <handle_ecall+0x8b>
   153fd:	0f 1f 00             	nopl   (%rax)

0000000000015400 <strtol>:
   15400:	0f b6 07             	movzbl (%rdi),%eax
   15403:	55                   	push   %rbp
   15404:	48 89 e5             	mov    %rsp,%rbp
   15407:	3c 20                	cmp    $0x20,%al
   15409:	75 10                	jne    1541b <strtol+0x1b>
   1540b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15410:	48 83 c7 01          	add    $0x1,%rdi
   15414:	0f b6 07             	movzbl (%rdi),%eax
   15417:	3c 20                	cmp    $0x20,%al
   15419:	74 f5                	je     15410 <strtol+0x10>
   1541b:	3c 09                	cmp    $0x9,%al
   1541d:	74 f1                	je     15410 <strtol+0x10>
   1541f:	3c 2b                	cmp    $0x2b,%al
   15421:	0f 84 a9 00 00 00    	je     154d0 <strtol+0xd0>
   15427:	45 31 c9             	xor    %r9d,%r9d
   1542a:	3c 2d                	cmp    $0x2d,%al
   1542c:	0f 84 ae 00 00 00    	je     154e0 <strtol+0xe0>
   15432:	f7 c2 ef ff ff ff    	test   $0xffffffef,%edx
   15438:	0f b6 0f             	movzbl (%rdi),%ecx
   1543b:	75 13                	jne    15450 <strtol+0x50>
   1543d:	80 f9 30             	cmp    $0x30,%cl
   15440:	0f 84 a9 00 00 00    	je     154ef <strtol+0xef>
   15446:	85 d2                	test   %edx,%edx
   15448:	b8 0a 00 00 00       	mov    $0xa,%eax
   1544d:	0f 44 d0             	cmove  %eax,%edx
   15450:	31 c0                	xor    %eax,%eax
   15452:	4c 63 d2             	movslq %edx,%r10
   15455:	eb 26                	jmp    1547d <strtol+0x7d>
   15457:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1545e:	00 00 
   15460:	44 0f be c1          	movsbl %cl,%r8d
   15464:	41 8d 48 d0          	lea    -0x30(%r8),%ecx
   15468:	39 d1                	cmp    %edx,%ecx
   1546a:	7d 31                	jge    1549d <strtol+0x9d>
   1546c:	49 0f af c2          	imul   %r10,%rax
   15470:	48 63 c9             	movslq %ecx,%rcx
   15473:	48 83 c7 01          	add    $0x1,%rdi
   15477:	48 01 c8             	add    %rcx,%rax
   1547a:	0f b6 0f             	movzbl (%rdi),%ecx
   1547d:	44 8d 41 d0          	lea    -0x30(%rcx),%r8d
   15481:	41 80 f8 09          	cmp    $0x9,%r8b
   15485:	76 d9                	jbe    15460 <strtol+0x60>
   15487:	44 8d 41 9f          	lea    -0x61(%rcx),%r8d
   1548b:	41 80 f8 19          	cmp    $0x19,%r8b
   1548f:	77 27                	ja     154b8 <strtol+0xb8>
   15491:	44 0f be c1          	movsbl %cl,%r8d
   15495:	41 8d 48 a9          	lea    -0x57(%r8),%ecx
   15499:	39 d1                	cmp    %edx,%ecx
   1549b:	7c cf                	jl     1546c <strtol+0x6c>
   1549d:	48 85 f6             	test   %rsi,%rsi
   154a0:	74 03                	je     154a5 <strtol+0xa5>
   154a2:	48 89 3e             	mov    %rdi,(%rsi)
   154a5:	48 89 c1             	mov    %rax,%rcx
   154a8:	48 f7 d9             	neg    %rcx
   154ab:	45 85 c9             	test   %r9d,%r9d
   154ae:	48 0f 45 c1          	cmovne %rcx,%rax
   154b2:	5d                   	pop    %rbp
   154b3:	c3                   	retq   
   154b4:	0f 1f 40 00          	nopl   0x0(%rax)
   154b8:	44 8d 41 bf          	lea    -0x41(%rcx),%r8d
   154bc:	41 80 f8 19          	cmp    $0x19,%r8b
   154c0:	77 db                	ja     1549d <strtol+0x9d>
   154c2:	44 0f be c1          	movsbl %cl,%r8d
   154c6:	41 8d 48 c9          	lea    -0x37(%r8),%ecx
   154ca:	eb 9c                	jmp    15468 <strtol+0x68>
   154cc:	0f 1f 40 00          	nopl   0x0(%rax)
   154d0:	48 83 c7 01          	add    $0x1,%rdi
   154d4:	45 31 c9             	xor    %r9d,%r9d
   154d7:	e9 56 ff ff ff       	jmpq   15432 <strtol+0x32>
   154dc:	0f 1f 40 00          	nopl   0x0(%rax)
   154e0:	48 83 c7 01          	add    $0x1,%rdi
   154e4:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   154ea:	e9 43 ff ff ff       	jmpq   15432 <strtol+0x32>
   154ef:	0f b6 47 01          	movzbl 0x1(%rdi),%eax
   154f3:	3c 78                	cmp    $0x78,%al
   154f5:	74 18                	je     1550f <strtol+0x10f>
   154f7:	85 d2                	test   %edx,%edx
   154f9:	0f 85 51 ff ff ff    	jne    15450 <strtol+0x50>
   154ff:	48 83 c7 01          	add    $0x1,%rdi
   15503:	89 c1                	mov    %eax,%ecx
   15505:	ba 08 00 00 00       	mov    $0x8,%edx
   1550a:	e9 41 ff ff ff       	jmpq   15450 <strtol+0x50>
   1550f:	0f b6 4f 02          	movzbl 0x2(%rdi),%ecx
   15513:	ba 10 00 00 00       	mov    $0x10,%edx
   15518:	48 83 c7 02          	add    $0x2,%rdi
   1551c:	e9 2f ff ff ff       	jmpq   15450 <strtol+0x50>
   15521:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15526:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1552d:	00 00 00 

0000000000015530 <atoi>:
   15530:	55                   	push   %rbp
   15531:	ba 0a 00 00 00       	mov    $0xa,%edx
   15536:	31 f6                	xor    %esi,%esi
   15538:	48 89 e5             	mov    %rsp,%rbp
   1553b:	e8 c0 fe ff ff       	callq  15400 <strtol>
   15540:	5d                   	pop    %rbp
   15541:	c3                   	retq   
   15542:	0f 1f 40 00          	nopl   0x0(%rax)
   15546:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1554d:	00 00 00 

0000000000015550 <atol>:
   15550:	55                   	push   %rbp
   15551:	ba 0a 00 00 00       	mov    $0xa,%edx
   15556:	31 f6                	xor    %esi,%esi
   15558:	48 89 e5             	mov    %rsp,%rbp
   1555b:	5d                   	pop    %rbp
   1555c:	e9 9f fe ff ff       	jmpq   15400 <strtol>
   15561:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15568:	00 00 00 
   1556b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000015570 <strnlen>:
   15570:	55                   	push   %rbp
   15571:	31 c0                	xor    %eax,%eax
   15573:	48 85 f6             	test   %rsi,%rsi
   15576:	48 89 e5             	mov    %rsp,%rbp
   15579:	0f 84 ab 00 00 00    	je     1562a <strnlen+0xba>
   1557f:	48 01 fe             	add    %rdi,%rsi
   15582:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   15589:	48 0f 42 f0          	cmovb  %rax,%rsi
   1558d:	40 f6 c7 07          	test   $0x7,%dil
   15591:	48 89 f8             	mov    %rdi,%rax
   15594:	74 1b                	je     155b1 <strnlen+0x41>
   15596:	80 3f 00             	cmpb   $0x0,(%rdi)
   15599:	75 0e                	jne    155a9 <strnlen+0x39>
   1559b:	e9 90 00 00 00       	jmpq   15630 <strnlen+0xc0>
   155a0:	80 38 00             	cmpb   $0x0,(%rax)
   155a3:	0f 84 87 00 00 00    	je     15630 <strnlen+0xc0>
   155a9:	48 83 c0 01          	add    $0x1,%rax
   155ad:	a8 07                	test   $0x7,%al
   155af:	75 ef                	jne    155a0 <strnlen+0x30>
   155b1:	48 39 c6             	cmp    %rax,%rsi
   155b4:	76 6a                	jbe    15620 <strnlen+0xb0>
   155b6:	49 b9 ff fe fe fe fe 	movabs $0xfefefefefefefeff,%r9
   155bd:	fe fe fe 
   155c0:	49 b8 80 80 80 80 80 	movabs $0x8080808080808080,%r8
   155c7:	80 80 80 
   155ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   155d0:	48 8d 50 08          	lea    0x8(%rax),%rdx
   155d4:	4c 89 c9             	mov    %r9,%rcx
   155d7:	48 03 4a f8          	add    -0x8(%rdx),%rcx
   155db:	4c 85 c1             	test   %r8,%rcx
   155de:	74 30                	je     15610 <strnlen+0xa0>
   155e0:	80 7a f8 00          	cmpb   $0x0,-0x8(%rdx)
   155e4:	74 3a                	je     15620 <strnlen+0xb0>
   155e6:	80 7a f9 00          	cmpb   $0x0,-0x7(%rdx)
   155ea:	74 50                	je     1563c <strnlen+0xcc>
   155ec:	80 7a fa 00          	cmpb   $0x0,-0x6(%rdx)
   155f0:	74 56                	je     15648 <strnlen+0xd8>
   155f2:	80 7a fb 00          	cmpb   $0x0,-0x5(%rdx)
   155f6:	74 4a                	je     15642 <strnlen+0xd2>
   155f8:	80 7a fc 00          	cmpb   $0x0,-0x4(%rdx)
   155fc:	74 50                	je     1564e <strnlen+0xde>
   155fe:	80 7a fd 00          	cmpb   $0x0,-0x3(%rdx)
   15602:	74 50                	je     15654 <strnlen+0xe4>
   15604:	80 7a fe 00          	cmpb   $0x0,-0x2(%rdx)
   15608:	74 50                	je     1565a <strnlen+0xea>
   1560a:	80 7a ff 00          	cmpb   $0x0,-0x1(%rdx)
   1560e:	74 50                	je     15660 <strnlen+0xf0>
   15610:	48 39 d6             	cmp    %rdx,%rsi
   15613:	48 89 d0             	mov    %rdx,%rax
   15616:	77 b8                	ja     155d0 <strnlen+0x60>
   15618:	48 89 f0             	mov    %rsi,%rax
   1561b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15620:	48 39 f0             	cmp    %rsi,%rax
   15623:	48 0f 47 c6          	cmova  %rsi,%rax
   15627:	48 29 f8             	sub    %rdi,%rax
   1562a:	5d                   	pop    %rbp
   1562b:	c3                   	retq   
   1562c:	0f 1f 40 00          	nopl   0x0(%rax)
   15630:	48 39 c6             	cmp    %rax,%rsi
   15633:	48 0f 46 c6          	cmovbe %rsi,%rax
   15637:	48 29 f8             	sub    %rdi,%rax
   1563a:	5d                   	pop    %rbp
   1563b:	c3                   	retq   
   1563c:	48 83 c0 01          	add    $0x1,%rax
   15640:	eb de                	jmp    15620 <strnlen+0xb0>
   15642:	48 83 c0 03          	add    $0x3,%rax
   15646:	eb d8                	jmp    15620 <strnlen+0xb0>
   15648:	48 83 c0 02          	add    $0x2,%rax
   1564c:	eb d2                	jmp    15620 <strnlen+0xb0>
   1564e:	48 83 c0 04          	add    $0x4,%rax
   15652:	eb cc                	jmp    15620 <strnlen+0xb0>
   15654:	48 83 c0 05          	add    $0x5,%rax
   15658:	eb c6                	jmp    15620 <strnlen+0xb0>
   1565a:	48 83 c0 06          	add    $0x6,%rax
   1565e:	eb c0                	jmp    15620 <strnlen+0xb0>
   15660:	48 83 c0 07          	add    $0x7,%rax
   15664:	eb ba                	jmp    15620 <strnlen+0xb0>
   15666:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1566d:	00 00 00 

0000000000015670 <strlen>:
   15670:	55                   	push   %rbp
   15671:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
   15678:	48 89 e5             	mov    %rsp,%rbp
   1567b:	5d                   	pop    %rbp
   1567c:	e9 ef fe ff ff       	jmpq   15570 <strnlen>
   15681:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15688:	00 00 00 
   1568b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000015690 <memcmp>:
   15690:	55                   	push   %rbp
   15691:	49 89 f9             	mov    %rdi,%r9
   15694:	49 89 f0             	mov    %rsi,%r8
   15697:	48 89 e5             	mov    %rsp,%rbp
   1569a:	41 57                	push   %r15
   1569c:	41 56                	push   %r14
   1569e:	41 55                	push   %r13
   156a0:	41 54                	push   %r12
   156a2:	53                   	push   %rbx
   156a3:	48 83 ec 38          	sub    $0x38,%rsp
   156a7:	48 83 fa 0f          	cmp    $0xf,%rdx
   156ab:	0f 86 00 01 00 00    	jbe    157b1 <memcmp+0x121>
   156b1:	40 f6 c6 07          	test   $0x7,%sil
   156b5:	49 89 f2             	mov    %rsi,%r10
   156b8:	74 44                	je     156fe <memcmp+0x6e>
   156ba:	0f b6 07             	movzbl (%rdi),%eax
   156bd:	0f b6 0e             	movzbl (%rsi),%ecx
   156c0:	49 83 c1 01          	add    $0x1,%r9
   156c4:	49 83 c0 01          	add    $0x1,%r8
   156c8:	48 29 c8             	sub    %rcx,%rax
   156cb:	74 24                	je     156f1 <memcmp+0x61>
   156cd:	e9 19 01 00 00       	jmpq   157eb <memcmp+0x15b>
   156d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   156d8:	41 0f b6 01          	movzbl (%r9),%eax
   156dc:	41 0f b6 0a          	movzbl (%r10),%ecx
   156e0:	49 83 c1 01          	add    $0x1,%r9
   156e4:	49 83 c0 01          	add    $0x1,%r8
   156e8:	48 29 c8             	sub    %rcx,%rax
   156eb:	0f 85 fa 00 00 00    	jne    157eb <memcmp+0x15b>
   156f1:	48 83 ea 01          	sub    $0x1,%rdx
   156f5:	41 f6 c0 07          	test   $0x7,%r8b
   156f9:	4d 89 c2             	mov    %r8,%r10
   156fc:	75 da                	jne    156d8 <memcmp+0x48>
   156fe:	4c 89 c8             	mov    %r9,%rax
   15701:	83 e0 07             	and    $0x7,%eax
   15704:	0f 85 f6 00 00 00    	jne    15800 <memcmp+0x170>
   1570a:	48 89 d1             	mov    %rdx,%rcx
   1570d:	48 c1 e9 03          	shr    $0x3,%rcx
   15711:	89 ce                	mov    %ecx,%esi
   15713:	89 cf                	mov    %ecx,%edi
   15715:	c1 fe 1f             	sar    $0x1f,%esi
   15718:	c1 ee 1e             	shr    $0x1e,%esi
   1571b:	8d 04 0e             	lea    (%rsi,%rcx,1),%eax
   1571e:	83 e0 03             	and    $0x3,%eax
   15721:	29 f0                	sub    %esi,%eax
   15723:	83 f8 01             	cmp    $0x1,%eax
   15726:	0f 84 43 03 00 00    	je     15a6f <memcmp+0x3df>
   1572c:	83 f8 03             	cmp    $0x3,%eax
   1572f:	0f 84 62 02 00 00    	je     15997 <memcmp+0x307>
   15735:	85 c0                	test   %eax,%eax
   15737:	0f 84 7a 01 00 00    	je     158b7 <memcmp+0x227>
   1573d:	4d 8b 19             	mov    (%r9),%r11
   15740:	49 8b 30             	mov    (%r8),%rsi
   15743:	8d 79 02             	lea    0x2(%rcx),%edi
   15746:	49 8d 41 f0          	lea    -0x10(%r9),%rax
   1574a:	4d 8d 42 f0          	lea    -0x10(%r10),%r8
   1574e:	49 39 f3             	cmp    %rsi,%r11
   15751:	4c 8b 60 18          	mov    0x18(%rax),%r12
   15755:	49 8b 58 18          	mov    0x18(%r8),%rbx
   15759:	0f 84 68 04 00 00    	je     15bc7 <memcmp+0x537>
   1575f:	4c 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%r8
   15766:	48 8d bd 48 ff ff ff 	lea    -0xb8(%rbp),%rdi
   1576d:	4c 89 9d 50 ff ff ff 	mov    %r11,-0xb0(%rbp)
   15774:	48 89 b5 48 ff ff ff 	mov    %rsi,-0xb8(%rbp)
   1577b:	31 c9                	xor    %ecx,%ecx
   1577d:	0f 1f 00             	nopl   (%rax)
   15780:	41 0f b6 04 08       	movzbl (%r8,%rcx,1),%eax
   15785:	0f b6 34 0f          	movzbl (%rdi,%rcx,1),%esi
   15789:	48 83 c1 01          	add    $0x1,%rcx
   1578d:	40 38 f0             	cmp    %sil,%al
   15790:	74 ee                	je     15780 <memcmp+0xf0>
   15792:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15798:	29 f0                	sub    %esi,%eax
   1579a:	48 98                	cltq   
   1579c:	48 85 c0             	test   %rax,%rax
   1579f:	75 4a                	jne    157eb <memcmp+0x15b>
   157a1:	49 89 d0             	mov    %rdx,%r8
   157a4:	83 e2 07             	and    $0x7,%edx
   157a7:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
   157ab:	4d 01 c1             	add    %r8,%r9
   157ae:	4d 01 d0             	add    %r10,%r8
   157b1:	48 85 d2             	test   %rdx,%rdx
   157b4:	74 33                	je     157e9 <memcmp+0x159>
   157b6:	41 0f b6 01          	movzbl (%r9),%eax
   157ba:	41 0f b6 30          	movzbl (%r8),%esi
   157be:	49 8d 49 01          	lea    0x1(%r9),%rcx
   157c2:	48 29 f0             	sub    %rsi,%rax
   157c5:	75 24                	jne    157eb <memcmp+0x15b>
   157c7:	4c 01 ca             	add    %r9,%rdx
   157ca:	4d 29 c8             	sub    %r9,%r8
   157cd:	eb 15                	jmp    157e4 <memcmp+0x154>
   157cf:	90                   	nop
   157d0:	48 89 ce             	mov    %rcx,%rsi
   157d3:	48 83 c1 01          	add    $0x1,%rcx
   157d7:	0f b6 06             	movzbl (%rsi),%eax
   157da:	41 0f b6 34 30       	movzbl (%r8,%rsi,1),%esi
   157df:	48 29 f0             	sub    %rsi,%rax
   157e2:	75 07                	jne    157eb <memcmp+0x15b>
   157e4:	48 39 ca             	cmp    %rcx,%rdx
   157e7:	75 e7                	jne    157d0 <memcmp+0x140>
   157e9:	31 c0                	xor    %eax,%eax
   157eb:	48 83 c4 38          	add    $0x38,%rsp
   157ef:	5b                   	pop    %rbx
   157f0:	41 5c                	pop    %r12
   157f2:	41 5d                	pop    %r13
   157f4:	41 5e                	pop    %r14
   157f6:	41 5f                	pop    %r15
   157f8:	5d                   	pop    %rbp
   157f9:	c3                   	retq   
   157fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15800:	48 89 d7             	mov    %rdx,%rdi
   15803:	c1 e0 03             	shl    $0x3,%eax
   15806:	41 bb 40 00 00 00    	mov    $0x40,%r11d
   1580c:	48 c1 ef 03          	shr    $0x3,%rdi
   15810:	4c 89 ce             	mov    %r9,%rsi
   15813:	41 29 c3             	sub    %eax,%r11d
   15816:	89 fb                	mov    %edi,%ebx
   15818:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   1581c:	41 89 fc             	mov    %edi,%r12d
   1581f:	c1 fb 1f             	sar    $0x1f,%ebx
   15822:	c1 eb 1e             	shr    $0x1e,%ebx
   15825:	8d 0c 3b             	lea    (%rbx,%rdi,1),%ecx
   15828:	83 e1 03             	and    $0x3,%ecx
   1582b:	29 d9                	sub    %ebx,%ecx
   1582d:	83 f9 01             	cmp    $0x1,%ecx
   15830:	0f 84 91 02 00 00    	je     15ac7 <memcmp+0x437>
   15836:	83 f9 03             	cmp    $0x3,%ecx
   15839:	0f 84 b8 01 00 00    	je     159f7 <memcmp+0x367>
   1583f:	85 c9                	test   %ecx,%ecx
   15841:	0f 84 d0 00 00 00    	je     15917 <memcmp+0x287>
   15847:	49 8b 18             	mov    (%r8),%rbx
   1584a:	44 8d 67 02          	lea    0x2(%rdi),%r12d
   1584e:	49 8d 7a f0          	lea    -0x10(%r10),%rdi
   15852:	4c 8b 36             	mov    (%rsi),%r14
   15855:	4c 8b 6e 08          	mov    0x8(%rsi),%r13
   15859:	48 83 ee 08          	sub    $0x8,%rsi
   1585d:	48 89 9d 28 ff ff ff 	mov    %rbx,-0xd8(%rbp)
   15864:	89 c1                	mov    %eax,%ecx
   15866:	4d 89 e8             	mov    %r13,%r8
   15869:	48 8b 5e 18          	mov    0x18(%rsi),%rbx
   1586d:	49 d3 ee             	shr    %cl,%r14
   15870:	44 89 d9             	mov    %r11d,%ecx
   15873:	4c 8b 7f 18          	mov    0x18(%rdi),%r15
   15877:	49 d3 e0             	shl    %cl,%r8
   1587a:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
   15881:	4d 09 c6             	or     %r8,%r14
   15884:	49 39 ce             	cmp    %rcx,%r14
   15887:	0f 84 50 03 00 00    	je     15bdd <memcmp+0x54d>
   1588d:	4c 8d 45 a0          	lea    -0x60(%rbp),%r8
   15891:	48 8d 7d 98          	lea    -0x68(%rbp),%rdi
   15895:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
   15899:	4c 89 75 a0          	mov    %r14,-0x60(%rbp)
   1589d:	31 c9                	xor    %ecx,%ecx
   1589f:	90                   	nop
   158a0:	41 0f b6 04 08       	movzbl (%r8,%rcx,1),%eax
   158a5:	0f b6 34 0f          	movzbl (%rdi,%rcx,1),%esi
   158a9:	48 83 c1 01          	add    $0x1,%rcx
   158ad:	40 38 f0             	cmp    %sil,%al
   158b0:	74 ee                	je     158a0 <memcmp+0x210>
   158b2:	e9 e1 fe ff ff       	jmpq   15798 <memcmp+0x108>
   158b7:	85 c9                	test   %ecx,%ecx
   158b9:	0f 84 e2 fe ff ff    	je     157a1 <memcmp+0x111>
   158bf:	49 8b 31             	mov    (%r9),%rsi
   158c2:	49 8b 08             	mov    (%r8),%rcx
   158c5:	4c 89 c8             	mov    %r9,%rax
   158c8:	48 39 ce             	cmp    %rcx,%rsi
   158cb:	4c 8b 60 08          	mov    0x8(%rax),%r12
   158cf:	49 8b 58 08          	mov    0x8(%r8),%rbx
   158d3:	0f 84 cf 00 00 00    	je     159a8 <memcmp+0x318>
   158d9:	4c 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%r8
   158e0:	48 8d bd 68 ff ff ff 	lea    -0x98(%rbp),%rdi
   158e7:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
   158ee:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
   158f5:	31 c9                	xor    %ecx,%ecx
   158f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   158fe:	00 00 
   15900:	41 0f b6 04 08       	movzbl (%r8,%rcx,1),%eax
   15905:	0f b6 34 0f          	movzbl (%rdi,%rcx,1),%esi
   15909:	48 83 c1 01          	add    $0x1,%rcx
   1590d:	40 38 f0             	cmp    %sil,%al
   15910:	74 ee                	je     15900 <memcmp+0x270>
   15912:	e9 81 fe ff ff       	jmpq   15798 <memcmp+0x108>
   15917:	85 ff                	test   %edi,%edi
   15919:	0f 84 82 fe ff ff    	je     157a1 <memcmp+0x111>
   1591f:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
   15923:	48 8b 1e             	mov    (%rsi),%rbx
   15926:	48 83 c6 08          	add    $0x8,%rsi
   1592a:	48 89 bd 30 ff ff ff 	mov    %rdi,-0xd0(%rbp)
   15931:	49 8b 38             	mov    (%r8),%rdi
   15934:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
   1593b:	4c 89 c7             	mov    %r8,%rdi
   1593e:	4d 8b 78 08          	mov    0x8(%r8),%r15
   15942:	4c 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%r8
   15949:	89 c1                	mov    %eax,%ecx
   1594b:	4c 8b 76 08          	mov    0x8(%rsi),%r14
   1594f:	48 d3 eb             	shr    %cl,%rbx
   15952:	44 89 d9             	mov    %r11d,%ecx
   15955:	49 d3 e0             	shl    %cl,%r8
   15958:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
   1595f:	4c 09 c3             	or     %r8,%rbx
   15962:	48 39 cb             	cmp    %rcx,%rbx
   15965:	0f 84 a5 00 00 00    	je     15a10 <memcmp+0x380>
   1596b:	4c 8d 45 c0          	lea    -0x40(%rbp),%r8
   1596f:	48 8d 7d b8          	lea    -0x48(%rbp),%rdi
   15973:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
   15977:	48 89 5d c0          	mov    %rbx,-0x40(%rbp)
   1597b:	31 c9                	xor    %ecx,%ecx
   1597d:	0f 1f 00             	nopl   (%rax)
   15980:	41 0f b6 04 08       	movzbl (%r8,%rcx,1),%eax
   15985:	0f b6 34 0f          	movzbl (%rdi,%rcx,1),%esi
   15989:	48 83 c1 01          	add    $0x1,%rcx
   1598d:	40 38 f0             	cmp    %sil,%al
   15990:	74 ee                	je     15980 <memcmp+0x2f0>
   15992:	e9 01 fe ff ff       	jmpq   15798 <memcmp+0x108>
   15997:	4d 8b 21             	mov    (%r9),%r12
   1599a:	49 8b 18             	mov    (%r8),%rbx
   1599d:	8d 79 01             	lea    0x1(%rcx),%edi
   159a0:	49 8d 41 f8          	lea    -0x8(%r9),%rax
   159a4:	4d 8d 42 f8          	lea    -0x8(%r10),%r8
   159a8:	49 39 dc             	cmp    %rbx,%r12
   159ab:	4c 8b 58 10          	mov    0x10(%rax),%r11
   159af:	49 8b 70 10          	mov    0x10(%r8),%rsi
   159b3:	0f 84 95 fd ff ff    	je     1574e <memcmp+0xbe>
   159b9:	4c 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%r8
   159c0:	48 8d bd 58 ff ff ff 	lea    -0xa8(%rbp),%rdi
   159c7:	4c 89 a5 60 ff ff ff 	mov    %r12,-0xa0(%rbp)
   159ce:	48 89 9d 58 ff ff ff 	mov    %rbx,-0xa8(%rbp)
   159d5:	31 c9                	xor    %ecx,%ecx
   159d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   159de:	00 00 
   159e0:	41 0f b6 04 08       	movzbl (%r8,%rcx,1),%eax
   159e5:	0f b6 34 0f          	movzbl (%rdi,%rcx,1),%esi
   159e9:	48 83 c1 01          	add    $0x1,%rcx
   159ed:	40 38 f0             	cmp    %sil,%al
   159f0:	74 ee                	je     159e0 <memcmp+0x350>
   159f2:	e9 a1 fd ff ff       	jmpq   15798 <memcmp+0x108>
   159f7:	48 8b 1e             	mov    (%rsi),%rbx
   159fa:	4c 8b 76 08          	mov    0x8(%rsi),%r14
   159fe:	44 8d 67 01          	lea    0x1(%rdi),%r12d
   15a02:	4d 8b 38             	mov    (%r8),%r15
   15a05:	49 8d 7a f8          	lea    -0x8(%r10),%rdi
   15a09:	48 89 9d 30 ff ff ff 	mov    %rbx,-0xd0(%rbp)
   15a10:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
   15a14:	89 c1                	mov    %eax,%ecx
   15a16:	4d 89 f0             	mov    %r14,%r8
   15a19:	4c 8b 6e 10          	mov    0x10(%rsi),%r13
   15a1d:	48 89 9d 28 ff ff ff 	mov    %rbx,-0xd8(%rbp)
   15a24:	48 8b 9d 30 ff ff ff 	mov    -0xd0(%rbp),%rbx
   15a2b:	48 d3 eb             	shr    %cl,%rbx
   15a2e:	44 89 d9             	mov    %r11d,%ecx
   15a31:	49 d3 e0             	shl    %cl,%r8
   15a34:	4c 89 c1             	mov    %r8,%rcx
   15a37:	48 09 d9             	or     %rbx,%rcx
   15a3a:	4c 39 f9             	cmp    %r15,%rcx
   15a3d:	0f 84 21 fe ff ff    	je     15864 <memcmp+0x1d4>
   15a43:	4c 8d 45 b0          	lea    -0x50(%rbp),%r8
   15a47:	48 8d 7d a8          	lea    -0x58(%rbp),%rdi
   15a4b:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   15a4f:	4c 89 7d a8          	mov    %r15,-0x58(%rbp)
   15a53:	31 c9                	xor    %ecx,%ecx
   15a55:	0f 1f 00             	nopl   (%rax)
   15a58:	41 0f b6 04 08       	movzbl (%r8,%rcx,1),%eax
   15a5d:	0f b6 34 0f          	movzbl (%rdi,%rcx,1),%esi
   15a61:	48 83 c1 01          	add    $0x1,%rcx
   15a65:	40 38 f0             	cmp    %sil,%al
   15a68:	74 ee                	je     15a58 <memcmp+0x3c8>
   15a6a:	e9 29 fd ff ff       	jmpq   15798 <memcmp+0x108>
   15a6f:	89 cf                	mov    %ecx,%edi
   15a71:	4d 8b 21             	mov    (%r9),%r12
   15a74:	49 8b 18             	mov    (%r8),%rbx
   15a77:	83 ef 01             	sub    $0x1,%edi
   15a7a:	0f 84 c7 00 00 00    	je     15b47 <memcmp+0x4b7>
   15a80:	49 8d 41 08          	lea    0x8(%r9),%rax
   15a84:	4d 8d 42 08          	lea    0x8(%r10),%r8
   15a88:	49 39 dc             	cmp    %rbx,%r12
   15a8b:	48 8b 30             	mov    (%rax),%rsi
   15a8e:	49 8b 08             	mov    (%r8),%rcx
   15a91:	0f 84 31 fe ff ff    	je     158c8 <memcmp+0x238>
   15a97:	4c 8d 45 80          	lea    -0x80(%rbp),%r8
   15a9b:	48 8d bd 78 ff ff ff 	lea    -0x88(%rbp),%rdi
   15aa2:	4c 89 65 80          	mov    %r12,-0x80(%rbp)
   15aa6:	48 89 9d 78 ff ff ff 	mov    %rbx,-0x88(%rbp)
   15aad:	31 c9                	xor    %ecx,%ecx
   15aaf:	90                   	nop
   15ab0:	41 0f b6 04 08       	movzbl (%r8,%rcx,1),%eax
   15ab5:	0f b6 34 0f          	movzbl (%rdi,%rcx,1),%esi
   15ab9:	48 83 c1 01          	add    $0x1,%rcx
   15abd:	40 38 f0             	cmp    %sil,%al
   15ac0:	74 ee                	je     15ab0 <memcmp+0x420>
   15ac2:	e9 d1 fc ff ff       	jmpq   15798 <memcmp+0x108>
   15ac7:	41 89 fc             	mov    %edi,%r12d
   15aca:	4c 8b 2e             	mov    (%rsi),%r13
   15acd:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
   15ad1:	41 83 ec 01          	sub    $0x1,%r12d
   15ad5:	4d 8b 38             	mov    (%r8),%r15
   15ad8:	0f 84 a9 00 00 00    	je     15b87 <memcmp+0x4f7>
   15ade:	4d 8d 42 08          	lea    0x8(%r10),%r8
   15ae2:	48 83 c6 10          	add    $0x10,%rsi
   15ae6:	48 8b 3e             	mov    (%rsi),%rdi
   15ae9:	89 c1                	mov    %eax,%ecx
   15aeb:	49 d3 ed             	shr    %cl,%r13
   15aee:	44 89 d9             	mov    %r11d,%ecx
   15af1:	48 89 bd 30 ff ff ff 	mov    %rdi,-0xd0(%rbp)
   15af8:	49 8b 38             	mov    (%r8),%rdi
   15afb:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
   15b02:	48 89 df             	mov    %rbx,%rdi
   15b05:	48 d3 e7             	shl    %cl,%rdi
   15b08:	49 09 fd             	or     %rdi,%r13
   15b0b:	4d 39 fd             	cmp    %r15,%r13
   15b0e:	0f 84 27 fe ff ff    	je     1593b <memcmp+0x2ab>
   15b14:	4c 8d 45 d0          	lea    -0x30(%rbp),%r8
   15b18:	48 8d 7d c8          	lea    -0x38(%rbp),%rdi
   15b1c:	4c 89 6d d0          	mov    %r13,-0x30(%rbp)
   15b20:	4c 89 7d c8          	mov    %r15,-0x38(%rbp)
   15b24:	31 c9                	xor    %ecx,%ecx
   15b26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15b2d:	00 00 00 
   15b30:	41 0f b6 04 08       	movzbl (%r8,%rcx,1),%eax
   15b35:	0f b6 34 0f          	movzbl (%rdi,%rcx,1),%esi
   15b39:	48 83 c1 01          	add    $0x1,%rcx
   15b3d:	40 38 f0             	cmp    %sil,%al
   15b40:	74 ee                	je     15b30 <memcmp+0x4a0>
   15b42:	e9 51 fc ff ff       	jmpq   15798 <memcmp+0x108>
   15b47:	49 39 dc             	cmp    %rbx,%r12
   15b4a:	0f 84 51 fc ff ff    	je     157a1 <memcmp+0x111>
   15b50:	4c 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%r8
   15b57:	48 8d bd 38 ff ff ff 	lea    -0xc8(%rbp),%rdi
   15b5e:	4c 89 a5 40 ff ff ff 	mov    %r12,-0xc0(%rbp)
   15b65:	48 89 9d 38 ff ff ff 	mov    %rbx,-0xc8(%rbp)
   15b6c:	31 c9                	xor    %ecx,%ecx
   15b6e:	66 90                	xchg   %ax,%ax
   15b70:	41 0f b6 04 08       	movzbl (%r8,%rcx,1),%eax
   15b75:	0f b6 34 0f          	movzbl (%rdi,%rcx,1),%esi
   15b79:	48 83 c1 01          	add    $0x1,%rcx
   15b7d:	40 38 f0             	cmp    %sil,%al
   15b80:	74 ee                	je     15b70 <memcmp+0x4e0>
   15b82:	e9 11 fc ff ff       	jmpq   15798 <memcmp+0x108>
   15b87:	89 c1                	mov    %eax,%ecx
   15b89:	49 d3 ed             	shr    %cl,%r13
   15b8c:	44 89 d9             	mov    %r11d,%ecx
   15b8f:	48 d3 e3             	shl    %cl,%rbx
   15b92:	4c 09 eb             	or     %r13,%rbx
   15b95:	4c 39 fb             	cmp    %r15,%rbx
   15b98:	0f 84 03 fc ff ff    	je     157a1 <memcmp+0x111>
   15b9e:	4c 8d 45 90          	lea    -0x70(%rbp),%r8
   15ba2:	48 8d 7d 88          	lea    -0x78(%rbp),%rdi
   15ba6:	48 89 5d 90          	mov    %rbx,-0x70(%rbp)
   15baa:	4c 89 7d 88          	mov    %r15,-0x78(%rbp)
   15bae:	31 c9                	xor    %ecx,%ecx
   15bb0:	41 0f b6 04 08       	movzbl (%r8,%rcx,1),%eax
   15bb5:	0f b6 34 0f          	movzbl (%rdi,%rcx,1),%esi
   15bb9:	48 83 c1 01          	add    $0x1,%rcx
   15bbd:	40 38 f0             	cmp    %sil,%al
   15bc0:	74 ee                	je     15bb0 <memcmp+0x520>
   15bc2:	e9 d1 fb ff ff       	jmpq   15798 <memcmp+0x108>
   15bc7:	83 ef 04             	sub    $0x4,%edi
   15bca:	0f 84 77 ff ff ff    	je     15b47 <memcmp+0x4b7>
   15bd0:	48 83 c0 20          	add    $0x20,%rax
   15bd4:	49 83 c0 20          	add    $0x20,%r8
   15bd8:	e9 ab fe ff ff       	jmpq   15a88 <memcmp+0x3f8>
   15bdd:	41 83 ec 04          	sub    $0x4,%r12d
   15be1:	74 a4                	je     15b87 <memcmp+0x4f7>
   15be3:	48 83 c6 20          	add    $0x20,%rsi
   15be7:	4c 8d 47 20          	lea    0x20(%rdi),%r8
   15beb:	e9 f6 fe ff ff       	jmpq   15ae6 <memcmp+0x456>

0000000000015bf0 <memcpy>:
   15bf0:	55                   	push   %rbp
   15bf1:	48 83 fa 0f          	cmp    $0xf,%rdx
   15bf5:	48 89 e5             	mov    %rsp,%rbp
   15bf8:	41 56                	push   %r14
   15bfa:	41 55                	push   %r13
   15bfc:	49 89 fd             	mov    %rdi,%r13
   15bff:	41 54                	push   %r12
   15c01:	49 89 f4             	mov    %rsi,%r12
   15c04:	53                   	push   %rbx
   15c05:	48 89 fb             	mov    %rdi,%rbx
   15c08:	76 70                	jbe    15c7a <memcpy+0x8a>
   15c0a:	48 89 f8             	mov    %rdi,%rax
   15c0d:	48 f7 d8             	neg    %rax
   15c10:	83 e0 07             	and    $0x7,%eax
   15c13:	48 29 c2             	sub    %rax,%rdx
   15c16:	89 f8                	mov    %edi,%eax
   15c18:	f7 d8                	neg    %eax
   15c1a:	49 89 d6             	mov    %rdx,%r14
   15c1d:	83 e0 07             	and    $0x7,%eax
   15c20:	74 2d                	je     15c4f <memcpy+0x5f>
   15c22:	83 e8 01             	sub    $0x1,%eax
   15c25:	31 c9                	xor    %ecx,%ecx
   15c27:	48 89 c2             	mov    %rax,%rdx
   15c2a:	48 83 c0 01          	add    $0x1,%rax
   15c2e:	66 90                	xchg   %ax,%ax
   15c30:	0f b6 3c 0e          	movzbl (%rsi,%rcx,1),%edi
   15c34:	41 88 7c 0d 00       	mov    %dil,0x0(%r13,%rcx,1)
   15c39:	48 83 c1 01          	add    $0x1,%rcx
   15c3d:	48 39 c8             	cmp    %rcx,%rax
   15c40:	75 ee                	jne    15c30 <memcpy+0x40>
   15c42:	48 63 c2             	movslq %edx,%rax
   15c45:	4c 8d 64 06 01       	lea    0x1(%rsi,%rax,1),%r12
   15c4a:	49 8d 5c 05 01       	lea    0x1(%r13,%rax,1),%rbx
   15c4f:	4c 89 f2             	mov    %r14,%rdx
   15c52:	4c 89 e6             	mov    %r12,%rsi
   15c55:	48 89 df             	mov    %rbx,%rdi
   15c58:	48 c1 ea 03          	shr    $0x3,%rdx
   15c5c:	41 f6 c4 07          	test   $0x7,%r12b
   15c60:	74 4e                	je     15cb0 <memcpy+0xc0>
   15c62:	e8 59 03 00 00       	callq  15fc0 <_wordcopy_fwd_dest_aligned>
   15c67:	4c 89 f0             	mov    %r14,%rax
   15c6a:	4c 89 f2             	mov    %r14,%rdx
   15c6d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   15c71:	83 e2 07             	and    $0x7,%edx
   15c74:	49 01 c4             	add    %rax,%r12
   15c77:	48 01 c3             	add    %rax,%rbx
   15c7a:	48 85 d2             	test   %rdx,%rdx
   15c7d:	74 21                	je     15ca0 <memcpy+0xb0>
   15c7f:	8d 42 ff             	lea    -0x1(%rdx),%eax
   15c82:	4c 89 e6             	mov    %r12,%rsi
   15c85:	48 89 df             	mov    %rbx,%rdi
   15c88:	48 29 de             	sub    %rbx,%rsi
   15c8b:	48 8d 4c 03 01       	lea    0x1(%rbx,%rax,1),%rcx
   15c90:	0f b6 14 3e          	movzbl (%rsi,%rdi,1),%edx
   15c94:	48 83 c7 01          	add    $0x1,%rdi
   15c98:	88 57 ff             	mov    %dl,-0x1(%rdi)
   15c9b:	48 39 cf             	cmp    %rcx,%rdi
   15c9e:	75 f0                	jne    15c90 <memcpy+0xa0>
   15ca0:	5b                   	pop    %rbx
   15ca1:	4c 89 e8             	mov    %r13,%rax
   15ca4:	41 5c                	pop    %r12
   15ca6:	41 5d                	pop    %r13
   15ca8:	41 5e                	pop    %r14
   15caa:	5d                   	pop    %rbp
   15cab:	c3                   	retq   
   15cac:	0f 1f 40 00          	nopl   0x0(%rax)
   15cb0:	e8 bb 01 00 00       	callq  15e70 <_wordcopy_fwd_aligned>
   15cb5:	eb b0                	jmp    15c67 <memcpy+0x77>
   15cb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   15cbe:	00 00 

0000000000015cc0 <memmove>:
   15cc0:	48 89 f8             	mov    %rdi,%rax
   15cc3:	55                   	push   %rbp
   15cc4:	48 29 f0             	sub    %rsi,%rax
   15cc7:	48 39 d0             	cmp    %rdx,%rax
   15cca:	48 89 e5             	mov    %rsp,%rbp
   15ccd:	41 56                	push   %r14
   15ccf:	41 55                	push   %r13
   15cd1:	41 54                	push   %r12
   15cd3:	49 89 fc             	mov    %rdi,%r12
   15cd6:	53                   	push   %rbx
   15cd7:	0f 82 bb 00 00 00    	jb     15d98 <memmove+0xd8>
   15cdd:	48 83 fa 0f          	cmp    $0xf,%rdx
   15ce1:	48 89 fb             	mov    %rdi,%rbx
   15ce4:	49 89 f6             	mov    %rsi,%r14
   15ce7:	76 74                	jbe    15d5d <memmove+0x9d>
   15ce9:	48 89 f8             	mov    %rdi,%rax
   15cec:	48 f7 d8             	neg    %rax
   15cef:	83 e0 07             	and    $0x7,%eax
   15cf2:	48 29 c2             	sub    %rax,%rdx
   15cf5:	89 f8                	mov    %edi,%eax
   15cf7:	f7 d8                	neg    %eax
   15cf9:	49 89 d5             	mov    %rdx,%r13
   15cfc:	83 e0 07             	and    $0x7,%eax
   15cff:	74 2d                	je     15d2e <memmove+0x6e>
   15d01:	8d 50 ff             	lea    -0x1(%rax),%edx
   15d04:	31 c9                	xor    %ecx,%ecx
   15d06:	48 89 d7             	mov    %rdx,%rdi
   15d09:	48 83 c2 01          	add    $0x1,%rdx
   15d0d:	0f 1f 00             	nopl   (%rax)
   15d10:	0f b6 04 0e          	movzbl (%rsi,%rcx,1),%eax
   15d14:	41 88 04 0c          	mov    %al,(%r12,%rcx,1)
   15d18:	48 83 c1 01          	add    $0x1,%rcx
   15d1c:	48 39 ca             	cmp    %rcx,%rdx
   15d1f:	75 ef                	jne    15d10 <memmove+0x50>
   15d21:	48 63 c7             	movslq %edi,%rax
   15d24:	4c 8d 74 06 01       	lea    0x1(%rsi,%rax,1),%r14
   15d29:	49 8d 5c 04 01       	lea    0x1(%r12,%rax,1),%rbx
   15d2e:	4c 89 ea             	mov    %r13,%rdx
   15d31:	4c 89 f6             	mov    %r14,%rsi
   15d34:	48 89 df             	mov    %rbx,%rdi
   15d37:	48 c1 ea 03          	shr    $0x3,%rdx
   15d3b:	41 f6 c6 07          	test   $0x7,%r14b
   15d3f:	0f 84 13 01 00 00    	je     15e58 <memmove+0x198>
   15d45:	e8 76 02 00 00       	callq  15fc0 <_wordcopy_fwd_dest_aligned>
   15d4a:	4c 89 e8             	mov    %r13,%rax
   15d4d:	4c 89 ea             	mov    %r13,%rdx
   15d50:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   15d54:	83 e2 07             	and    $0x7,%edx
   15d57:	49 01 c6             	add    %rax,%r14
   15d5a:	48 01 c3             	add    %rax,%rbx
   15d5d:	48 85 d2             	test   %rdx,%rdx
   15d60:	74 26                	je     15d88 <memmove+0xc8>
   15d62:	8d 42 ff             	lea    -0x1(%rdx),%eax
   15d65:	4c 89 f6             	mov    %r14,%rsi
   15d68:	48 89 df             	mov    %rbx,%rdi
   15d6b:	48 29 de             	sub    %rbx,%rsi
   15d6e:	48 8d 44 03 01       	lea    0x1(%rbx,%rax,1),%rax
   15d73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15d78:	0f b6 14 3e          	movzbl (%rsi,%rdi,1),%edx
   15d7c:	48 83 c7 01          	add    $0x1,%rdi
   15d80:	88 57 ff             	mov    %dl,-0x1(%rdi)
   15d83:	48 39 f8             	cmp    %rdi,%rax
   15d86:	75 f0                	jne    15d78 <memmove+0xb8>
   15d88:	5b                   	pop    %rbx
   15d89:	4c 89 e0             	mov    %r12,%rax
   15d8c:	41 5c                	pop    %r12
   15d8e:	41 5d                	pop    %r13
   15d90:	41 5e                	pop    %r14
   15d92:	5d                   	pop    %rbp
   15d93:	c3                   	retq   
   15d94:	0f 1f 40 00          	nopl   0x0(%rax)
   15d98:	48 83 fa 0f          	cmp    $0xf,%rdx
   15d9c:	48 8d 1c 16          	lea    (%rsi,%rdx,1),%rbx
   15da0:	4c 8d 34 17          	lea    (%rdi,%rdx,1),%r14
   15da4:	76 7c                	jbe    15e22 <memmove+0x162>
   15da6:	4c 89 f0             	mov    %r14,%rax
   15da9:	83 e0 07             	and    $0x7,%eax
   15dac:	48 29 c2             	sub    %rax,%rdx
   15daf:	85 c0                	test   %eax,%eax
   15db1:	49 89 d5             	mov    %rdx,%r13
   15db4:	74 3c                	je     15df2 <memmove+0x132>
   15db6:	4c 8d 43 ff          	lea    -0x1(%rbx),%r8
   15dba:	83 e8 01             	sub    $0x1,%eax
   15dbd:	4c 89 f2             	mov    %r14,%rdx
   15dc0:	48 89 c7             	mov    %rax,%rdi
   15dc3:	48 89 de             	mov    %rbx,%rsi
   15dc6:	48 29 da             	sub    %rbx,%rdx
   15dc9:	4c 89 c1             	mov    %r8,%rcx
   15dcc:	48 29 c1             	sub    %rax,%rcx
   15dcf:	90                   	nop
   15dd0:	48 83 ee 01          	sub    $0x1,%rsi
   15dd4:	0f b6 06             	movzbl (%rsi),%eax
   15dd7:	48 39 ce             	cmp    %rcx,%rsi
   15dda:	88 04 32             	mov    %al,(%rdx,%rsi,1)
   15ddd:	75 f1                	jne    15dd0 <memmove+0x110>
   15ddf:	48 63 c7             	movslq %edi,%rax
   15de2:	49 8d 7e ff          	lea    -0x1(%r14),%rdi
   15de6:	4c 89 c3             	mov    %r8,%rbx
   15de9:	48 29 c3             	sub    %rax,%rbx
   15dec:	48 29 c7             	sub    %rax,%rdi
   15def:	49 89 fe             	mov    %rdi,%r14
   15df2:	4c 89 ea             	mov    %r13,%rdx
   15df5:	48 89 de             	mov    %rbx,%rsi
   15df8:	4c 89 f7             	mov    %r14,%rdi
   15dfb:	48 c1 ea 03          	shr    $0x3,%rdx
   15dff:	f6 c3 07             	test   $0x7,%bl
   15e02:	74 64                	je     15e68 <memmove+0x1a8>
   15e04:	e8 c7 04 00 00       	callq  162d0 <_wordcopy_bwd_dest_aligned>
   15e09:	4c 89 e8             	mov    %r13,%rax
   15e0c:	4c 89 ea             	mov    %r13,%rdx
   15e0f:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   15e13:	48 29 c3             	sub    %rax,%rbx
   15e16:	49 29 c6             	sub    %rax,%r14
   15e19:	83 e2 07             	and    $0x7,%edx
   15e1c:	0f 84 66 ff ff ff    	je     15d88 <memmove+0xc8>
   15e22:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
   15e26:	83 ea 01             	sub    $0x1,%edx
   15e29:	4c 89 f7             	mov    %r14,%rdi
   15e2c:	48 89 de             	mov    %rbx,%rsi
   15e2f:	48 29 df             	sub    %rbx,%rdi
   15e32:	48 29 d0             	sub    %rdx,%rax
   15e35:	0f 1f 00             	nopl   (%rax)
   15e38:	48 83 ee 01          	sub    $0x1,%rsi
   15e3c:	0f b6 16             	movzbl (%rsi),%edx
   15e3f:	48 39 f0             	cmp    %rsi,%rax
   15e42:	88 14 37             	mov    %dl,(%rdi,%rsi,1)
   15e45:	75 f1                	jne    15e38 <memmove+0x178>
   15e47:	5b                   	pop    %rbx
   15e48:	4c 89 e0             	mov    %r12,%rax
   15e4b:	41 5c                	pop    %r12
   15e4d:	41 5d                	pop    %r13
   15e4f:	41 5e                	pop    %r14
   15e51:	5d                   	pop    %rbp
   15e52:	c3                   	retq   
   15e53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15e58:	e8 13 00 00 00       	callq  15e70 <_wordcopy_fwd_aligned>
   15e5d:	e9 e8 fe ff ff       	jmpq   15d4a <memmove+0x8a>
   15e62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15e68:	e8 c3 02 00 00       	callq  16130 <_wordcopy_bwd_aligned>
   15e6d:	eb 9a                	jmp    15e09 <memmove+0x149>
   15e6f:	90                   	nop

0000000000015e70 <_wordcopy_fwd_aligned>:
   15e70:	89 d1                	mov    %edx,%ecx
   15e72:	55                   	push   %rbp
   15e73:	c1 f9 1f             	sar    $0x1f,%ecx
   15e76:	c1 e9 1d             	shr    $0x1d,%ecx
   15e79:	48 89 e5             	mov    %rsp,%rbp
   15e7c:	8d 04 0a             	lea    (%rdx,%rcx,1),%eax
   15e7f:	83 e0 07             	and    $0x7,%eax
   15e82:	29 c8                	sub    %ecx,%eax
   15e84:	83 f8 07             	cmp    $0x7,%eax
   15e87:	0f 87 20 01 00 00    	ja     15fad <_wordcopy_fwd_aligned+0x13d>
   15e8d:	48 8d 0d ec 3b 01 00 	lea    0x13bec(%rip),%rcx        # 29a80 <slab_levels+0x20>
   15e94:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   15e98:	48 01 c1             	add    %rax,%rcx
   15e9b:	ff e1                	jmpq   *%rcx
   15e9d:	0f 1f 00             	nopl   (%rax)
   15ea0:	48 8b 06             	mov    (%rsi),%rax
   15ea3:	48 83 ef 18          	sub    $0x18,%rdi
   15ea7:	48 83 ee 10          	sub    $0x10,%rsi
   15eab:	48 8b 4e 18          	mov    0x18(%rsi),%rcx
   15eaf:	83 c2 02             	add    $0x2,%edx
   15eb2:	48 89 47 18          	mov    %rax,0x18(%rdi)
   15eb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15ebd:	00 00 00 
   15ec0:	48 8b 46 20          	mov    0x20(%rsi),%rax
   15ec4:	48 89 4f 20          	mov    %rcx,0x20(%rdi)
   15ec8:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
   15ecc:	48 89 47 28          	mov    %rax,0x28(%rdi)
   15ed0:	48 8b 46 30          	mov    0x30(%rsi),%rax
   15ed4:	48 89 4f 30          	mov    %rcx,0x30(%rdi)
   15ed8:	48 8b 4e 38          	mov    0x38(%rsi),%rcx
   15edc:	48 83 c7 40          	add    $0x40,%rdi
   15ee0:	48 89 47 f8          	mov    %rax,-0x8(%rdi)
   15ee4:	83 ea 08             	sub    $0x8,%edx
   15ee7:	0f 84 bb 00 00 00    	je     15fa8 <_wordcopy_fwd_aligned+0x138>
   15eed:	48 83 c6 40          	add    $0x40,%rsi
   15ef1:	48 8b 06             	mov    (%rsi),%rax
   15ef4:	48 89 0f             	mov    %rcx,(%rdi)
   15ef7:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   15efb:	48 89 47 08          	mov    %rax,0x8(%rdi)
   15eff:	48 8b 46 10          	mov    0x10(%rsi),%rax
   15f03:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
   15f07:	48 8b 4e 18          	mov    0x18(%rsi),%rcx
   15f0b:	48 89 47 18          	mov    %rax,0x18(%rdi)
   15f0f:	eb af                	jmp    15ec0 <_wordcopy_fwd_aligned+0x50>
   15f11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15f18:	48 8b 0e             	mov    (%rsi),%rcx
   15f1b:	83 c2 01             	add    $0x1,%edx
   15f1e:	48 83 ee 08          	sub    $0x8,%rsi
   15f22:	48 83 ef 10          	sub    $0x10,%rdi
   15f26:	eb d7                	jmp    15eff <_wordcopy_fwd_aligned+0x8f>
   15f28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15f2f:	00 
   15f30:	48 8b 06             	mov    (%rsi),%rax
   15f33:	83 c2 06             	add    $0x6,%edx
   15f36:	48 83 ee 30          	sub    $0x30,%rsi
   15f3a:	48 83 ef 38          	sub    $0x38,%rdi
   15f3e:	eb 98                	jmp    15ed8 <_wordcopy_fwd_aligned+0x68>
   15f40:	48 8b 0e             	mov    (%rsi),%rcx
   15f43:	83 c2 05             	add    $0x5,%edx
   15f46:	48 83 ee 28          	sub    $0x28,%rsi
   15f4a:	48 83 ef 30          	sub    $0x30,%rdi
   15f4e:	eb 80                	jmp    15ed0 <_wordcopy_fwd_aligned+0x60>
   15f50:	48 8b 06             	mov    (%rsi),%rax
   15f53:	83 c2 04             	add    $0x4,%edx
   15f56:	48 83 ee 20          	sub    $0x20,%rsi
   15f5a:	48 83 ef 28          	sub    $0x28,%rdi
   15f5e:	e9 65 ff ff ff       	jmpq   15ec8 <_wordcopy_fwd_aligned+0x58>
   15f63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15f68:	48 8b 0e             	mov    (%rsi),%rcx
   15f6b:	83 c2 03             	add    $0x3,%edx
   15f6e:	48 83 ee 18          	sub    $0x18,%rsi
   15f72:	48 83 ef 20          	sub    $0x20,%rdi
   15f76:	e9 45 ff ff ff       	jmpq   15ec0 <_wordcopy_fwd_aligned+0x50>
   15f7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   15f80:	85 d2                	test   %edx,%edx
   15f82:	74 27                	je     15fab <_wordcopy_fwd_aligned+0x13b>
   15f84:	48 8b 06             	mov    (%rsi),%rax
   15f87:	48 83 ef 08          	sub    $0x8,%rdi
   15f8b:	e9 67 ff ff ff       	jmpq   15ef7 <_wordcopy_fwd_aligned+0x87>
   15f90:	83 ea 01             	sub    $0x1,%edx
   15f93:	48 8b 0e             	mov    (%rsi),%rcx
   15f96:	74 10                	je     15fa8 <_wordcopy_fwd_aligned+0x138>
   15f98:	48 83 c6 08          	add    $0x8,%rsi
   15f9c:	e9 50 ff ff ff       	jmpq   15ef1 <_wordcopy_fwd_aligned+0x81>
   15fa1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15fa8:	48 89 0f             	mov    %rcx,(%rdi)
   15fab:	5d                   	pop    %rbp
   15fac:	c3                   	retq   
   15fad:	31 c9                	xor    %ecx,%ecx
   15faf:	e9 3d ff ff ff       	jmpq   15ef1 <_wordcopy_fwd_aligned+0x81>
   15fb4:	66 90                	xchg   %ax,%ax
   15fb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15fbd:	00 00 00 

0000000000015fc0 <_wordcopy_fwd_dest_aligned>:
   15fc0:	89 d1                	mov    %edx,%ecx
   15fc2:	41 89 f0             	mov    %esi,%r8d
   15fc5:	55                   	push   %rbp
   15fc6:	c1 f9 1f             	sar    $0x1f,%ecx
   15fc9:	41 83 e0 07          	and    $0x7,%r8d
   15fcd:	41 ba 40 00 00 00    	mov    $0x40,%r10d
   15fd3:	c1 e9 1e             	shr    $0x1e,%ecx
   15fd6:	41 c1 e0 03          	shl    $0x3,%r8d
   15fda:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   15fde:	8d 04 0a             	lea    (%rdx,%rcx,1),%eax
   15fe1:	45 29 c2             	sub    %r8d,%r10d
   15fe4:	48 89 e5             	mov    %rsp,%rbp
   15fe7:	41 54                	push   %r12
   15fe9:	53                   	push   %rbx
   15fea:	83 e0 03             	and    $0x3,%eax
   15fed:	29 c8                	sub    %ecx,%eax
   15fef:	83 f8 01             	cmp    $0x1,%eax
   15ff2:	0f 84 c0 00 00 00    	je     160b8 <_wordcopy_fwd_dest_aligned+0xf8>
   15ff8:	0f 8e e2 00 00 00    	jle    160e0 <_wordcopy_fwd_dest_aligned+0x120>
   15ffe:	83 f8 02             	cmp    $0x2,%eax
   16001:	0f 84 99 00 00 00    	je     160a0 <_wordcopy_fwd_dest_aligned+0xe0>
   16007:	83 f8 03             	cmp    $0x3,%eax
   1600a:	0f 85 f8 00 00 00    	jne    16108 <_wordcopy_fwd_dest_aligned+0x148>
   16010:	4c 8b 26             	mov    (%rsi),%r12
   16013:	4c 8b 5e 08          	mov    0x8(%rsi),%r11
   16017:	48 89 f3             	mov    %rsi,%rbx
   1601a:	83 c2 01             	add    $0x1,%edx
   1601d:	48 83 ef 10          	sub    $0x10,%rdi
   16021:	44 89 c1             	mov    %r8d,%ecx
   16024:	4c 89 d8             	mov    %r11,%rax
   16027:	4c 8b 4e 10          	mov    0x10(%rsi),%r9
   1602b:	49 d3 ec             	shr    %cl,%r12
   1602e:	44 89 d1             	mov    %r10d,%ecx
   16031:	48 d3 e0             	shl    %cl,%rax
   16034:	49 09 c4             	or     %rax,%r12
   16037:	4c 89 67 10          	mov    %r12,0x10(%rdi)
   1603b:	44 89 c1             	mov    %r8d,%ecx
   1603e:	4c 89 ce             	mov    %r9,%rsi
   16041:	48 8b 43 18          	mov    0x18(%rbx),%rax
   16045:	49 d3 eb             	shr    %cl,%r11
   16048:	44 89 d1             	mov    %r10d,%ecx
   1604b:	48 83 c7 20          	add    $0x20,%rdi
   1604f:	48 d3 e6             	shl    %cl,%rsi
   16052:	49 09 f3             	or     %rsi,%r11
   16055:	4c 89 5f f8          	mov    %r11,-0x8(%rdi)
   16059:	83 ea 04             	sub    $0x4,%edx
   1605c:	74 6a                	je     160c8 <_wordcopy_fwd_dest_aligned+0x108>
   1605e:	48 8d 73 20          	lea    0x20(%rbx),%rsi
   16062:	44 89 c1             	mov    %r8d,%ecx
   16065:	48 89 c3             	mov    %rax,%rbx
   16068:	49 d3 e9             	shr    %cl,%r9
   1606b:	44 89 d1             	mov    %r10d,%ecx
   1606e:	48 d3 e3             	shl    %cl,%rbx
   16071:	44 89 c1             	mov    %r8d,%ecx
   16074:	49 09 d9             	or     %rbx,%r9
   16077:	48 d3 e8             	shr    %cl,%rax
   1607a:	4c 8b 26             	mov    (%rsi),%r12
   1607d:	4c 89 0f             	mov    %r9,(%rdi)
   16080:	4d 89 e1             	mov    %r12,%r9
   16083:	44 89 d1             	mov    %r10d,%ecx
   16086:	4c 8b 5e 08          	mov    0x8(%rsi),%r11
   1608a:	49 d3 e1             	shl    %cl,%r9
   1608d:	48 89 f3             	mov    %rsi,%rbx
   16090:	4c 09 c8             	or     %r9,%rax
   16093:	48 89 47 08          	mov    %rax,0x8(%rdi)
   16097:	eb 88                	jmp    16021 <_wordcopy_fwd_dest_aligned+0x61>
   16099:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   160a0:	4c 8b 1e             	mov    (%rsi),%r11
   160a3:	4c 8b 4e 08          	mov    0x8(%rsi),%r9
   160a7:	83 c2 02             	add    $0x2,%edx
   160aa:	48 8d 5e f8          	lea    -0x8(%rsi),%rbx
   160ae:	48 83 ef 18          	sub    $0x18,%rdi
   160b2:	eb 87                	jmp    1603b <_wordcopy_fwd_dest_aligned+0x7b>
   160b4:	0f 1f 40 00          	nopl   0x0(%rax)
   160b8:	83 ea 01             	sub    $0x1,%edx
   160bb:	4c 8b 0e             	mov    (%rsi),%r9
   160be:	48 8b 46 08          	mov    0x8(%rsi),%rax
   160c2:	75 54                	jne    16118 <_wordcopy_fwd_dest_aligned+0x158>
   160c4:	0f 1f 40 00          	nopl   0x0(%rax)
   160c8:	44 89 c1             	mov    %r8d,%ecx
   160cb:	49 d3 e9             	shr    %cl,%r9
   160ce:	44 89 d1             	mov    %r10d,%ecx
   160d1:	48 d3 e0             	shl    %cl,%rax
   160d4:	4c 09 c8             	or     %r9,%rax
   160d7:	48 89 07             	mov    %rax,(%rdi)
   160da:	5b                   	pop    %rbx
   160db:	41 5c                	pop    %r12
   160dd:	5d                   	pop    %rbp
   160de:	c3                   	retq   
   160df:	90                   	nop
   160e0:	85 c0                	test   %eax,%eax
   160e2:	75 24                	jne    16108 <_wordcopy_fwd_dest_aligned+0x148>
   160e4:	85 d2                	test   %edx,%edx
   160e6:	74 f2                	je     160da <_wordcopy_fwd_dest_aligned+0x11a>
   160e8:	48 8b 06             	mov    (%rsi),%rax
   160eb:	44 89 c1             	mov    %r8d,%ecx
   160ee:	4c 8b 66 08          	mov    0x8(%rsi),%r12
   160f2:	48 83 ef 08          	sub    $0x8,%rdi
   160f6:	48 83 c6 08          	add    $0x8,%rsi
   160fa:	48 d3 e8             	shr    %cl,%rax
   160fd:	e9 7e ff ff ff       	jmpq   16080 <_wordcopy_fwd_dest_aligned+0xc0>
   16102:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16108:	31 c0                	xor    %eax,%eax
   1610a:	45 31 c9             	xor    %r9d,%r9d
   1610d:	e9 68 ff ff ff       	jmpq   1607a <_wordcopy_fwd_dest_aligned+0xba>
   16112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16118:	48 83 c6 10          	add    $0x10,%rsi
   1611c:	e9 41 ff ff ff       	jmpq   16062 <_wordcopy_fwd_dest_aligned+0xa2>
   16121:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16126:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1612d:	00 00 00 

0000000000016130 <_wordcopy_bwd_aligned>:
   16130:	89 d1                	mov    %edx,%ecx
   16132:	55                   	push   %rbp
   16133:	c1 f9 1f             	sar    $0x1f,%ecx
   16136:	c1 e9 1d             	shr    $0x1d,%ecx
   16139:	48 89 e5             	mov    %rsp,%rbp
   1613c:	8d 04 0a             	lea    (%rdx,%rcx,1),%eax
   1613f:	83 e0 07             	and    $0x7,%eax
   16142:	29 c8                	sub    %ecx,%eax
   16144:	83 f8 07             	cmp    $0x7,%eax
   16147:	0f 87 79 01 00 00    	ja     162c6 <_wordcopy_bwd_aligned+0x196>
   1614d:	48 8d 0d 4c 39 01 00 	lea    0x1394c(%rip),%rcx        # 29aa0 <slab_levels+0x40>
   16154:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
   16158:	48 01 c1             	add    %rax,%rcx
   1615b:	ff e1                	jmpq   *%rcx
   1615d:	0f 1f 00             	nopl   (%rax)
   16160:	48 89 f0             	mov    %rsi,%rax
   16163:	48 83 ef 28          	sub    $0x28,%rdi
   16167:	48 83 ee 30          	sub    $0x30,%rsi
   1616b:	4c 8b 40 f8          	mov    -0x8(%rax),%r8
   1616f:	48 89 f1             	mov    %rsi,%rcx
   16172:	48 89 f8             	mov    %rdi,%rax
   16175:	4c 8b 49 20          	mov    0x20(%rcx),%r9
   16179:	83 c2 02             	add    $0x2,%edx
   1617c:	4c 89 40 20          	mov    %r8,0x20(%rax)
   16180:	4c 8b 41 18          	mov    0x18(%rcx),%r8
   16184:	4c 89 48 18          	mov    %r9,0x18(%rax)
   16188:	4c 8b 49 10          	mov    0x10(%rcx),%r9
   1618c:	4c 89 40 10          	mov    %r8,0x10(%rax)
   16190:	4c 8b 41 08          	mov    0x8(%rcx),%r8
   16194:	4c 89 48 08          	mov    %r9,0x8(%rax)
   16198:	83 ea 08             	sub    $0x8,%edx
   1619b:	4c 8b 0e             	mov    (%rsi),%r9
   1619e:	4c 89 07             	mov    %r8,(%rdi)
   161a1:	48 8d 71 c0          	lea    -0x40(%rcx),%rsi
   161a5:	48 8d 78 c0          	lea    -0x40(%rax),%rdi
   161a9:	0f 84 11 01 00 00    	je     162c0 <_wordcopy_bwd_aligned+0x190>
   161af:	4c 8b 46 38          	mov    0x38(%rsi),%r8
   161b3:	48 89 f1             	mov    %rsi,%rcx
   161b6:	48 89 f8             	mov    %rdi,%rax
   161b9:	4c 89 4f 38          	mov    %r9,0x38(%rdi)
   161bd:	4c 8b 49 30          	mov    0x30(%rcx),%r9
   161c1:	4c 89 40 30          	mov    %r8,0x30(%rax)
   161c5:	4c 8b 41 28          	mov    0x28(%rcx),%r8
   161c9:	4c 89 48 28          	mov    %r9,0x28(%rax)
   161cd:	4c 8b 49 20          	mov    0x20(%rcx),%r9
   161d1:	4c 89 40 20          	mov    %r8,0x20(%rax)
   161d5:	eb a9                	jmp    16180 <_wordcopy_bwd_aligned+0x50>
   161d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   161de:	00 00 
   161e0:	48 89 f0             	mov    %rsi,%rax
   161e3:	48 83 ef 30          	sub    $0x30,%rdi
   161e7:	48 83 ee 38          	sub    $0x38,%rsi
   161eb:	4c 8b 48 f8          	mov    -0x8(%rax),%r9
   161ef:	83 c2 01             	add    $0x1,%edx
   161f2:	48 89 f1             	mov    %rsi,%rcx
   161f5:	48 89 f8             	mov    %rdi,%rax
   161f8:	eb cb                	jmp    161c5 <_wordcopy_bwd_aligned+0x95>
   161fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16200:	48 8d 4e f0          	lea    -0x10(%rsi),%rcx
   16204:	48 8d 47 f8          	lea    -0x8(%rdi),%rax
   16208:	49 89 f0             	mov    %rsi,%r8
   1620b:	4d 8b 40 f8          	mov    -0x8(%r8),%r8
   1620f:	83 c2 06             	add    $0x6,%edx
   16212:	48 89 ce             	mov    %rcx,%rsi
   16215:	48 89 c7             	mov    %rax,%rdi
   16218:	e9 7b ff ff ff       	jmpq   16198 <_wordcopy_bwd_aligned+0x68>
   1621d:	0f 1f 00             	nopl   (%rax)
   16220:	48 89 f0             	mov    %rsi,%rax
   16223:	48 83 ef 10          	sub    $0x10,%rdi
   16227:	48 83 ee 18          	sub    $0x18,%rsi
   1622b:	4c 8b 48 f8          	mov    -0x8(%rax),%r9
   1622f:	83 c2 05             	add    $0x5,%edx
   16232:	48 89 f1             	mov    %rsi,%rcx
   16235:	48 89 f8             	mov    %rdi,%rax
   16238:	e9 53 ff ff ff       	jmpq   16190 <_wordcopy_bwd_aligned+0x60>
   1623d:	0f 1f 00             	nopl   (%rax)
   16240:	48 89 f0             	mov    %rsi,%rax
   16243:	48 83 ef 18          	sub    $0x18,%rdi
   16247:	48 83 ee 20          	sub    $0x20,%rsi
   1624b:	4c 8b 40 f8          	mov    -0x8(%rax),%r8
   1624f:	83 c2 04             	add    $0x4,%edx
   16252:	48 89 f1             	mov    %rsi,%rcx
   16255:	48 89 f8             	mov    %rdi,%rax
   16258:	e9 2b ff ff ff       	jmpq   16188 <_wordcopy_bwd_aligned+0x58>
   1625d:	0f 1f 00             	nopl   (%rax)
   16260:	48 89 f0             	mov    %rsi,%rax
   16263:	48 83 ef 20          	sub    $0x20,%rdi
   16267:	48 83 ee 28          	sub    $0x28,%rsi
   1626b:	4c 8b 48 f8          	mov    -0x8(%rax),%r9
   1626f:	83 c2 03             	add    $0x3,%edx
   16272:	48 89 f1             	mov    %rsi,%rcx
   16275:	48 89 f8             	mov    %rdi,%rax
   16278:	e9 03 ff ff ff       	jmpq   16180 <_wordcopy_bwd_aligned+0x50>
   1627d:	0f 1f 00             	nopl   (%rax)
   16280:	85 d2                	test   %edx,%edx
   16282:	74 40                	je     162c4 <_wordcopy_bwd_aligned+0x194>
   16284:	48 89 f0             	mov    %rsi,%rax
   16287:	48 83 ef 38          	sub    $0x38,%rdi
   1628b:	48 83 ee 40          	sub    $0x40,%rsi
   1628f:	4c 8b 40 f8          	mov    -0x8(%rax),%r8
   16293:	48 89 f1             	mov    %rsi,%rcx
   16296:	48 89 f8             	mov    %rdi,%rax
   16299:	e9 1f ff ff ff       	jmpq   161bd <_wordcopy_bwd_aligned+0x8d>
   1629e:	66 90                	xchg   %ax,%ax
   162a0:	48 83 ef 40          	sub    $0x40,%rdi
   162a4:	83 ea 01             	sub    $0x1,%edx
   162a7:	4c 8b 4e f8          	mov    -0x8(%rsi),%r9
   162ab:	74 13                	je     162c0 <_wordcopy_bwd_aligned+0x190>
   162ad:	48 83 ee 48          	sub    $0x48,%rsi
   162b1:	e9 f9 fe ff ff       	jmpq   161af <_wordcopy_bwd_aligned+0x7f>
   162b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   162bd:	00 00 00 
   162c0:	4c 89 4f 38          	mov    %r9,0x38(%rdi)
   162c4:	5d                   	pop    %rbp
   162c5:	c3                   	retq   
   162c6:	45 31 c9             	xor    %r9d,%r9d
   162c9:	e9 e1 fe ff ff       	jmpq   161af <_wordcopy_bwd_aligned+0x7f>
   162ce:	66 90                	xchg   %ax,%ax

00000000000162d0 <_wordcopy_bwd_dest_aligned>:
   162d0:	89 d1                	mov    %edx,%ecx
   162d2:	41 89 f0             	mov    %esi,%r8d
   162d5:	55                   	push   %rbp
   162d6:	c1 f9 1f             	sar    $0x1f,%ecx
   162d9:	41 83 e0 07          	and    $0x7,%r8d
   162dd:	41 b9 40 00 00 00    	mov    $0x40,%r9d
   162e3:	c1 e9 1e             	shr    $0x1e,%ecx
   162e6:	41 c1 e0 03          	shl    $0x3,%r8d
   162ea:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   162ee:	8d 04 0a             	lea    (%rdx,%rcx,1),%eax
   162f1:	45 29 c1             	sub    %r8d,%r9d
   162f4:	48 89 e5             	mov    %rsp,%rbp
   162f7:	41 56                	push   %r14
   162f9:	41 55                	push   %r13
   162fb:	83 e0 03             	and    $0x3,%eax
   162fe:	41 54                	push   %r12
   16300:	53                   	push   %rbx
   16301:	29 c8                	sub    %ecx,%eax
   16303:	83 f8 01             	cmp    $0x1,%eax
   16306:	0f 84 94 00 00 00    	je     163a0 <_wordcopy_bwd_dest_aligned+0xd0>
   1630c:	0f 8e 06 01 00 00    	jle    16418 <_wordcopy_bwd_dest_aligned+0x148>
   16312:	83 f8 02             	cmp    $0x2,%eax
   16315:	0f 84 dd 00 00 00    	je     163f8 <_wordcopy_bwd_dest_aligned+0x128>
   1631b:	83 f8 03             	cmp    $0x3,%eax
   1631e:	0f 85 24 01 00 00    	jne    16448 <_wordcopy_bwd_dest_aligned+0x178>
   16324:	4c 8d 66 e8          	lea    -0x18(%rsi),%r12
   16328:	4c 8b 36             	mov    (%rsi),%r14
   1632b:	4c 8b 5e f8          	mov    -0x8(%rsi),%r11
   1632f:	48 83 ef 10          	sub    $0x10,%rdi
   16333:	83 c2 01             	add    $0x1,%edx
   16336:	4d 89 e5             	mov    %r12,%r13
   16339:	48 89 fb             	mov    %rdi,%rbx
   1633c:	44 89 c1             	mov    %r8d,%ecx
   1633f:	4c 89 de             	mov    %r11,%rsi
   16342:	49 8b 45 08          	mov    0x8(%r13),%rax
   16346:	48 d3 ee             	shr    %cl,%rsi
   16349:	44 89 c9             	mov    %r9d,%ecx
   1634c:	49 d3 e6             	shl    %cl,%r14
   1634f:	4c 89 f1             	mov    %r14,%rcx
   16352:	48 09 f1             	or     %rsi,%rcx
   16355:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
   16359:	44 89 c1             	mov    %r8d,%ecx
   1635c:	48 89 c6             	mov    %rax,%rsi
   1635f:	4d 8b 14 24          	mov    (%r12),%r10
   16363:	48 d3 ee             	shr    %cl,%rsi
   16366:	44 89 c9             	mov    %r9d,%ecx
   16369:	4d 8d 65 e0          	lea    -0x20(%r13),%r12
   1636d:	49 d3 e3             	shl    %cl,%r11
   16370:	4c 89 d9             	mov    %r11,%rcx
   16373:	48 09 f1             	or     %rsi,%rcx
   16376:	83 ea 04             	sub    $0x4,%edx
   16379:	48 89 0f             	mov    %rcx,(%rdi)
   1637c:	48 8d 7b e0          	lea    -0x20(%rbx),%rdi
   16380:	75 36                	jne    163b8 <_wordcopy_bwd_dest_aligned+0xe8>
   16382:	44 89 c1             	mov    %r8d,%ecx
   16385:	49 d3 ea             	shr    %cl,%r10
   16388:	44 89 c9             	mov    %r9d,%ecx
   1638b:	48 d3 e0             	shl    %cl,%rax
   1638e:	4c 09 d0             	or     %r10,%rax
   16391:	48 89 47 18          	mov    %rax,0x18(%rdi)
   16395:	5b                   	pop    %rbx
   16396:	41 5c                	pop    %r12
   16398:	41 5d                	pop    %r13
   1639a:	41 5e                	pop    %r14
   1639c:	5d                   	pop    %rbp
   1639d:	c3                   	retq   
   1639e:	66 90                	xchg   %ax,%ax
   163a0:	48 83 ef 20          	sub    $0x20,%rdi
   163a4:	83 ea 01             	sub    $0x1,%edx
   163a7:	48 8b 06             	mov    (%rsi),%rax
   163aa:	4c 8b 56 f8          	mov    -0x8(%rsi),%r10
   163ae:	74 d2                	je     16382 <_wordcopy_bwd_dest_aligned+0xb2>
   163b0:	4c 8d 66 d8          	lea    -0x28(%rsi),%r12
   163b4:	0f 1f 40 00          	nopl   0x0(%rax)
   163b8:	4c 89 d6             	mov    %r10,%rsi
   163bb:	44 89 c1             	mov    %r8d,%ecx
   163be:	48 d3 ee             	shr    %cl,%rsi
   163c1:	44 89 c9             	mov    %r9d,%ecx
   163c4:	48 d3 e0             	shl    %cl,%rax
   163c7:	49 d3 e2             	shl    %cl,%r10
   163ca:	48 09 f0             	or     %rsi,%rax
   163cd:	4d 8b 74 24 18       	mov    0x18(%r12),%r14
   163d2:	4d 89 e5             	mov    %r12,%r13
   163d5:	48 89 fb             	mov    %rdi,%rbx
   163d8:	48 89 47 18          	mov    %rax,0x18(%rdi)
   163dc:	4c 89 f0             	mov    %r14,%rax
   163df:	44 89 c1             	mov    %r8d,%ecx
   163e2:	4d 8b 5d 10          	mov    0x10(%r13),%r11
   163e6:	48 d3 e8             	shr    %cl,%rax
   163e9:	49 09 c2             	or     %rax,%r10
   163ec:	4c 89 53 10          	mov    %r10,0x10(%rbx)
   163f0:	e9 47 ff ff ff       	jmpq   1633c <_wordcopy_bwd_dest_aligned+0x6c>
   163f5:	0f 1f 00             	nopl   (%rax)
   163f8:	4c 8d 6e f0          	lea    -0x10(%rsi),%r13
   163fc:	48 8d 5f f8          	lea    -0x8(%rdi),%rbx
   16400:	4c 8b 1e             	mov    (%rsi),%r11
   16403:	48 8b 46 f8          	mov    -0x8(%rsi),%rax
   16407:	83 c2 02             	add    $0x2,%edx
   1640a:	4d 89 ec             	mov    %r13,%r12
   1640d:	48 89 df             	mov    %rbx,%rdi
   16410:	e9 44 ff ff ff       	jmpq   16359 <_wordcopy_bwd_dest_aligned+0x89>
   16415:	0f 1f 00             	nopl   (%rax)
   16418:	85 c0                	test   %eax,%eax
   1641a:	75 2c                	jne    16448 <_wordcopy_bwd_dest_aligned+0x178>
   1641c:	85 d2                	test   %edx,%edx
   1641e:	0f 84 71 ff ff ff    	je     16395 <_wordcopy_bwd_dest_aligned+0xc5>
   16424:	4c 8b 16             	mov    (%rsi),%r10
   16427:	4c 8d 66 e0          	lea    -0x20(%rsi),%r12
   1642b:	48 83 ef 18          	sub    $0x18,%rdi
   1642f:	44 89 c9             	mov    %r9d,%ecx
   16432:	4c 8b 76 f8          	mov    -0x8(%rsi),%r14
   16436:	48 89 fb             	mov    %rdi,%rbx
   16439:	4d 89 e5             	mov    %r12,%r13
   1643c:	49 d3 e2             	shl    %cl,%r10
   1643f:	eb 9b                	jmp    163dc <_wordcopy_bwd_dest_aligned+0x10c>
   16441:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16448:	4c 8d 66 08          	lea    0x8(%rsi),%r12
   1644c:	45 31 d2             	xor    %r10d,%r10d
   1644f:	31 c0                	xor    %eax,%eax
   16451:	e9 77 ff ff ff       	jmpq   163cd <_wordcopy_bwd_dest_aligned+0xfd>
   16456:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1645d:	00 00 00 

0000000000016460 <memset>:
   16460:	55                   	push   %rbp
   16461:	48 83 fa 07          	cmp    $0x7,%rdx
   16465:	48 89 f8             	mov    %rdi,%rax
   16468:	48 89 f9             	mov    %rdi,%rcx
   1646b:	48 89 e5             	mov    %rsp,%rbp
   1646e:	0f 86 d3 00 00 00    	jbe    16547 <memset+0xe7>
   16474:	44 0f b6 c6          	movzbl %sil,%r8d
   16478:	4c 89 c7             	mov    %r8,%rdi
   1647b:	4d 89 c1             	mov    %r8,%r9
   1647e:	48 c1 e7 08          	shl    $0x8,%rdi
   16482:	49 09 f8             	or     %rdi,%r8
   16485:	4c 89 c7             	mov    %r8,%rdi
   16488:	48 c1 e7 10          	shl    $0x10,%rdi
   1648c:	49 09 f8             	or     %rdi,%r8
   1648f:	4c 89 c7             	mov    %r8,%rdi
   16492:	48 c1 e7 20          	shl    $0x20,%rdi
   16496:	49 09 f8             	or     %rdi,%r8
   16499:	a8 07                	test   $0x7,%al
   1649b:	74 13                	je     164b0 <memset+0x50>
   1649d:	0f 1f 00             	nopl   (%rax)
   164a0:	44 88 09             	mov    %r9b,(%rcx)
   164a3:	48 83 c1 01          	add    $0x1,%rcx
   164a7:	48 83 ea 01          	sub    $0x1,%rdx
   164ab:	f6 c1 07             	test   $0x7,%cl
   164ae:	75 f0                	jne    164a0 <memset+0x40>
   164b0:	48 89 d7             	mov    %rdx,%rdi
   164b3:	48 c1 ef 06          	shr    $0x6,%rdi
   164b7:	85 ff                	test   %edi,%edi
   164b9:	7e 51                	jle    1650c <memset+0xac>
   164bb:	44 8d 57 ff          	lea    -0x1(%rdi),%r10d
   164bf:	4c 8d 49 40          	lea    0x40(%rcx),%r9
   164c3:	49 89 cb             	mov    %rcx,%r11
   164c6:	4c 89 d7             	mov    %r10,%rdi
   164c9:	49 c1 e2 06          	shl    $0x6,%r10
   164cd:	4d 01 ca             	add    %r9,%r10
   164d0:	eb 0a                	jmp    164dc <memset+0x7c>
   164d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   164d8:	49 83 c1 40          	add    $0x40,%r9
   164dc:	4d 39 ca             	cmp    %r9,%r10
   164df:	4c 89 01             	mov    %r8,(%rcx)
   164e2:	4c 89 41 08          	mov    %r8,0x8(%rcx)
   164e6:	4c 89 41 10          	mov    %r8,0x10(%rcx)
   164ea:	4c 89 41 18          	mov    %r8,0x18(%rcx)
   164ee:	4c 89 41 20          	mov    %r8,0x20(%rcx)
   164f2:	4c 89 41 28          	mov    %r8,0x28(%rcx)
   164f6:	4c 89 41 30          	mov    %r8,0x30(%rcx)
   164fa:	4c 89 41 38          	mov    %r8,0x38(%rcx)
   164fe:	4c 89 c9             	mov    %r9,%rcx
   16501:	75 d5                	jne    164d8 <memset+0x78>
   16503:	48 c1 e7 06          	shl    $0x6,%rdi
   16507:	49 8d 4c 3b 40       	lea    0x40(%r11,%rdi,1),%rcx
   1650c:	48 89 d7             	mov    %rdx,%rdi
   1650f:	83 e7 3f             	and    $0x3f,%edi
   16512:	48 c1 ef 03          	shr    $0x3,%rdi
   16516:	48 85 ff             	test   %rdi,%rdi
   16519:	74 29                	je     16544 <memset+0xe4>
   1651b:	83 ef 01             	sub    $0x1,%edi
   1651e:	49 89 ca             	mov    %rcx,%r10
   16521:	49 89 f9             	mov    %rdi,%r9
   16524:	48 8d 7c f9 08       	lea    0x8(%rcx,%rdi,8),%rdi
   16529:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16530:	4c 89 01             	mov    %r8,(%rcx)
   16533:	48 83 c1 08          	add    $0x8,%rcx
   16537:	48 39 cf             	cmp    %rcx,%rdi
   1653a:	75 f4                	jne    16530 <memset+0xd0>
   1653c:	44 89 cf             	mov    %r9d,%edi
   1653f:	49 8d 4c fa 08       	lea    0x8(%r10,%rdi,8),%rcx
   16544:	83 e2 07             	and    $0x7,%edx
   16547:	48 85 d2             	test   %rdx,%rdx
   1654a:	4c 8d 04 11          	lea    (%rcx,%rdx,1),%r8
   1654e:	74 0c                	je     1655c <memset+0xfc>
   16550:	40 88 31             	mov    %sil,(%rcx)
   16553:	48 83 c1 01          	add    $0x1,%rcx
   16557:	49 39 c8             	cmp    %rcx,%r8
   1655a:	75 f4                	jne    16550 <memset+0xf0>
   1655c:	5d                   	pop    %rbp
   1655d:	c3                   	retq   
   1655e:	66 90                	xchg   %ax,%ax

0000000000016560 <strchr>:
   16560:	55                   	push   %rbp
   16561:	40 f6 c7 07          	test   $0x7,%dil
   16565:	89 f2                	mov    %esi,%edx
   16567:	48 89 e5             	mov    %rsp,%rbp
   1656a:	53                   	push   %rbx
   1656b:	74 33                	je     165a0 <strchr+0x40>
   1656d:	0f b6 07             	movzbl (%rdi),%eax
   16570:	40 38 c6             	cmp    %al,%sil
   16573:	75 20                	jne    16595 <strchr+0x35>
   16575:	e9 29 01 00 00       	jmpq   166a3 <strchr+0x143>
   1657a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16580:	48 83 c7 01          	add    $0x1,%rdi
   16584:	40 f6 c7 07          	test   $0x7,%dil
   16588:	74 16                	je     165a0 <strchr+0x40>
   1658a:	0f b6 07             	movzbl (%rdi),%eax
   1658d:	38 c2                	cmp    %al,%dl
   1658f:	0f 84 0e 01 00 00    	je     166a3 <strchr+0x143>
   16595:	84 c0                	test   %al,%al
   16597:	75 e7                	jne    16580 <strchr+0x20>
   16599:	31 c0                	xor    %eax,%eax
   1659b:	5b                   	pop    %rbx
   1659c:	5d                   	pop    %rbp
   1659d:	c3                   	retq   
   1659e:	66 90                	xchg   %ax,%ax
   165a0:	40 0f b6 f6          	movzbl %sil,%esi
   165a4:	49 b9 ff fe fe fe fe 	movabs $0x7efefefefefefeff,%r9
   165ab:	fe fe 7e 
   165ae:	49 bb 00 01 01 01 01 	movabs $0x8101010101010100,%r11
   165b5:	01 01 81 
   165b8:	89 f0                	mov    %esi,%eax
   165ba:	c1 e0 08             	shl    $0x8,%eax
   165bd:	09 c6                	or     %eax,%esi
   165bf:	48 63 c6             	movslq %esi,%rax
   165c2:	49 89 c2             	mov    %rax,%r10
   165c5:	49 c1 e2 10          	shl    $0x10,%r10
   165c9:	4c 09 d0             	or     %r10,%rax
   165cc:	49 89 c2             	mov    %rax,%r10
   165cf:	49 c1 e2 20          	shl    $0x20,%r10
   165d3:	49 09 c2             	or     %rax,%r10
   165d6:	e9 8c 00 00 00       	jmpq   16667 <strchr+0x107>
   165db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   165e0:	84 c9                	test   %cl,%cl
   165e2:	74 b5                	je     16599 <strchr+0x39>
   165e4:	0f b6 46 f9          	movzbl -0x7(%rsi),%eax
   165e8:	38 c2                	cmp    %al,%dl
   165ea:	0f 84 b9 00 00 00    	je     166a9 <strchr+0x149>
   165f0:	84 c0                	test   %al,%al
   165f2:	74 a5                	je     16599 <strchr+0x39>
   165f4:	0f b6 46 fa          	movzbl -0x6(%rsi),%eax
   165f8:	38 c2                	cmp    %al,%dl
   165fa:	0f 84 b2 00 00 00    	je     166b2 <strchr+0x152>
   16600:	84 c0                	test   %al,%al
   16602:	74 95                	je     16599 <strchr+0x39>
   16604:	0f b6 46 fb          	movzbl -0x5(%rsi),%eax
   16608:	38 c2                	cmp    %al,%dl
   1660a:	0f 84 ab 00 00 00    	je     166bb <strchr+0x15b>
   16610:	84 c0                	test   %al,%al
   16612:	74 85                	je     16599 <strchr+0x39>
   16614:	0f b6 46 fc          	movzbl -0x4(%rsi),%eax
   16618:	38 c2                	cmp    %al,%dl
   1661a:	0f 84 a4 00 00 00    	je     166c4 <strchr+0x164>
   16620:	84 c0                	test   %al,%al
   16622:	0f 84 71 ff ff ff    	je     16599 <strchr+0x39>
   16628:	0f b6 46 fd          	movzbl -0x3(%rsi),%eax
   1662c:	38 c2                	cmp    %al,%dl
   1662e:	0f 84 99 00 00 00    	je     166cd <strchr+0x16d>
   16634:	84 c0                	test   %al,%al
   16636:	0f 84 5d ff ff ff    	je     16599 <strchr+0x39>
   1663c:	0f b6 46 fe          	movzbl -0x2(%rsi),%eax
   16640:	38 c2                	cmp    %al,%dl
   16642:	0f 84 8e 00 00 00    	je     166d6 <strchr+0x176>
   16648:	84 c0                	test   %al,%al
   1664a:	0f 84 49 ff ff ff    	je     16599 <strchr+0x39>
   16650:	0f b6 46 ff          	movzbl -0x1(%rsi),%eax
   16654:	38 c2                	cmp    %al,%dl
   16656:	0f 84 83 00 00 00    	je     166df <strchr+0x17f>
   1665c:	84 c0                	test   %al,%al
   1665e:	0f 84 35 ff ff ff    	je     16599 <strchr+0x39>
   16664:	48 89 f7             	mov    %rsi,%rdi
   16667:	48 8d 77 08          	lea    0x8(%rdi),%rsi
   1666b:	48 8b 4e f8          	mov    -0x8(%rsi),%rcx
   1666f:	4c 89 d0             	mov    %r10,%rax
   16672:	48 31 c8             	xor    %rcx,%rax
   16675:	4e 8d 04 09          	lea    (%rcx,%r9,1),%r8
   16679:	48 f7 d1             	not    %rcx
   1667c:	4a 8d 1c 08          	lea    (%rax,%r9,1),%rbx
   16680:	48 f7 d0             	not    %rax
   16683:	49 31 c8             	xor    %rcx,%r8
   16686:	48 89 c1             	mov    %rax,%rcx
   16689:	48 89 d8             	mov    %rbx,%rax
   1668c:	48 31 c8             	xor    %rcx,%rax
   1668f:	4c 09 c0             	or     %r8,%rax
   16692:	4c 85 d8             	test   %r11,%rax
   16695:	74 cd                	je     16664 <strchr+0x104>
   16697:	0f b6 4e f8          	movzbl -0x8(%rsi),%ecx
   1669b:	38 ca                	cmp    %cl,%dl
   1669d:	0f 85 3d ff ff ff    	jne    165e0 <strchr+0x80>
   166a3:	48 89 f8             	mov    %rdi,%rax
   166a6:	5b                   	pop    %rbx
   166a7:	5d                   	pop    %rbp
   166a8:	c3                   	retq   
   166a9:	48 8d 47 01          	lea    0x1(%rdi),%rax
   166ad:	e9 e9 fe ff ff       	jmpq   1659b <strchr+0x3b>
   166b2:	48 8d 47 02          	lea    0x2(%rdi),%rax
   166b6:	e9 e0 fe ff ff       	jmpq   1659b <strchr+0x3b>
   166bb:	48 8d 47 03          	lea    0x3(%rdi),%rax
   166bf:	e9 d7 fe ff ff       	jmpq   1659b <strchr+0x3b>
   166c4:	48 8d 47 04          	lea    0x4(%rdi),%rax
   166c8:	e9 ce fe ff ff       	jmpq   1659b <strchr+0x3b>
   166cd:	48 8d 47 05          	lea    0x5(%rdi),%rax
   166d1:	e9 c5 fe ff ff       	jmpq   1659b <strchr+0x3b>
   166d6:	48 8d 47 06          	lea    0x6(%rdi),%rax
   166da:	e9 bc fe ff ff       	jmpq   1659b <strchr+0x3b>
   166df:	48 8d 47 07          	lea    0x7(%rdi),%rax
   166e3:	e9 b3 fe ff ff       	jmpq   1659b <strchr+0x3b>
   166e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   166ef:	00 

00000000000166f0 <printnum>:
   166f0:	55                   	push   %rbp
   166f1:	44 89 c0             	mov    %r8d,%eax
   166f4:	48 89 e5             	mov    %rsp,%rbp
   166f7:	41 57                	push   %r15
   166f9:	41 56                	push   %r14
   166fb:	41 55                	push   %r13
   166fd:	41 54                	push   %r12
   166ff:	49 89 d5             	mov    %rdx,%r13
   16702:	53                   	push   %rbx
   16703:	49 89 f4             	mov    %rsi,%r12
   16706:	48 89 fb             	mov    %rdi,%rbx
   16709:	45 89 cf             	mov    %r9d,%r15d
   1670c:	48 83 ec 18          	sub    $0x18,%rsp
   16710:	48 39 c8             	cmp    %rcx,%rax
   16713:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   16717:	44 8b 75 10          	mov    0x10(%rbp),%r14d
   1671b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1671f:	77 17                	ja     16738 <printnum+0x48>
   16721:	eb 5d                	jmp    16780 <printnum+0x90>
   16723:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16728:	4c 89 ea             	mov    %r13,%rdx
   1672b:	44 89 f6             	mov    %r14d,%esi
   1672e:	4c 89 e7             	mov    %r12,%rdi
   16731:	ff d3                	callq  *%rbx
   16733:	83 f8 ff             	cmp    $0xffffffff,%eax
   16736:	74 6d                	je     167a5 <printnum+0xb5>
   16738:	41 83 ef 01          	sub    $0x1,%r15d
   1673c:	45 85 ff             	test   %r15d,%r15d
   1673f:	7f e7                	jg     16728 <printnum+0x38>
   16741:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16745:	31 d2                	xor    %edx,%edx
   16747:	4c 89 e7             	mov    %r12,%rdi
   1674a:	48 f7 75 c8          	divq   -0x38(%rbp)
   1674e:	48 8d 05 6b 33 01 00 	lea    0x1336b(%rip),%rax        # 29ac0 <slab_levels+0x60>
   16755:	0f be 34 10          	movsbl (%rax,%rdx,1),%esi
   16759:	4c 89 ea             	mov    %r13,%rdx
   1675c:	ff d3                	callq  *%rbx
   1675e:	83 f8 ff             	cmp    $0xffffffff,%eax
   16761:	0f 94 c0             	sete   %al
   16764:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   16768:	0f b6 c0             	movzbl %al,%eax
   1676b:	5b                   	pop    %rbx
   1676c:	f7 d8                	neg    %eax
   1676e:	41 5c                	pop    %r12
   16770:	41 5d                	pop    %r13
   16772:	41 5e                	pop    %r14
   16774:	41 5f                	pop    %r15
   16776:	5d                   	pop    %rbp
   16777:	c3                   	retq   
   16778:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1677f:	00 
   16780:	48 89 c8             	mov    %rcx,%rax
   16783:	31 d2                	xor    %edx,%edx
   16785:	48 83 ec 08          	sub    $0x8,%rsp
   16789:	48 f7 75 c8          	divq   -0x38(%rbp)
   1678d:	41 56                	push   %r14
   1678f:	45 8d 49 ff          	lea    -0x1(%r9),%r9d
   16793:	4c 89 ea             	mov    %r13,%rdx
   16796:	48 89 c1             	mov    %rax,%rcx
   16799:	e8 52 ff ff ff       	callq  166f0 <printnum>
   1679e:	83 f8 ff             	cmp    $0xffffffff,%eax
   167a1:	5a                   	pop    %rdx
   167a2:	59                   	pop    %rcx
   167a3:	75 9c                	jne    16741 <printnum+0x51>
   167a5:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   167a9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   167ae:	5b                   	pop    %rbx
   167af:	41 5c                	pop    %r12
   167b1:	41 5d                	pop    %r13
   167b3:	41 5e                	pop    %r14
   167b5:	41 5f                	pop    %r15
   167b7:	5d                   	pop    %rbp
   167b8:	c3                   	retq   
   167b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000167c0 <sprintputch>:
   167c0:	48 63 02             	movslq (%rdx),%rax
   167c3:	55                   	push   %rbp
   167c4:	3b 42 04             	cmp    0x4(%rdx),%eax
   167c7:	48 89 e5             	mov    %rsp,%rbp
   167ca:	7d 14                	jge    167e0 <sprintputch+0x20>
   167cc:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   167d0:	8d 78 01             	lea    0x1(%rax),%edi
   167d3:	89 3a                	mov    %edi,(%rdx)
   167d5:	40 88 34 01          	mov    %sil,(%rcx,%rax,1)
   167d9:	31 c0                	xor    %eax,%eax
   167db:	5d                   	pop    %rbp
   167dc:	c3                   	retq   
   167dd:	0f 1f 00             	nopl   (%rax)
   167e0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   167e5:	5d                   	pop    %rbp
   167e6:	c3                   	retq   
   167e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   167ee:	00 00 

00000000000167f0 <getuint>:
   167f0:	55                   	push   %rbp
   167f1:	83 fe 01             	cmp    $0x1,%esi
   167f4:	8b 07                	mov    (%rdi),%eax
   167f6:	48 89 e5             	mov    %rsp,%rbp
   167f9:	7e 25                	jle    16820 <getuint+0x30>
   167fb:	83 f8 2f             	cmp    $0x2f,%eax
   167fe:	77 10                	ja     16810 <getuint+0x20>
   16800:	89 c2                	mov    %eax,%edx
   16802:	48 03 57 10          	add    0x10(%rdi),%rdx
   16806:	83 c0 08             	add    $0x8,%eax
   16809:	89 07                	mov    %eax,(%rdi)
   1680b:	48 8b 02             	mov    (%rdx),%rax
   1680e:	5d                   	pop    %rbp
   1680f:	c3                   	retq   
   16810:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   16814:	48 8d 42 08          	lea    0x8(%rdx),%rax
   16818:	48 89 47 08          	mov    %rax,0x8(%rdi)
   1681c:	eb ed                	jmp    1680b <getuint+0x1b>
   1681e:	66 90                	xchg   %ax,%ax
   16820:	85 f6                	test   %esi,%esi
   16822:	75 d7                	jne    167fb <getuint+0xb>
   16824:	83 f8 2f             	cmp    $0x2f,%eax
   16827:	77 17                	ja     16840 <getuint+0x50>
   16829:	89 c2                	mov    %eax,%edx
   1682b:	48 03 57 10          	add    0x10(%rdi),%rdx
   1682f:	83 c0 08             	add    $0x8,%eax
   16832:	89 07                	mov    %eax,(%rdi)
   16834:	8b 02                	mov    (%rdx),%eax
   16836:	5d                   	pop    %rbp
   16837:	c3                   	retq   
   16838:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1683f:	00 
   16840:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   16844:	48 8d 42 08          	lea    0x8(%rdx),%rax
   16848:	48 89 47 08          	mov    %rax,0x8(%rdi)
   1684c:	8b 02                	mov    (%rdx),%eax
   1684e:	eb e6                	jmp    16836 <getuint+0x46>

0000000000016850 <getint>:
   16850:	55                   	push   %rbp
   16851:	83 fe 01             	cmp    $0x1,%esi
   16854:	8b 07                	mov    (%rdi),%eax
   16856:	48 89 e5             	mov    %rsp,%rbp
   16859:	7e 25                	jle    16880 <getint+0x30>
   1685b:	83 f8 2f             	cmp    $0x2f,%eax
   1685e:	77 10                	ja     16870 <getint+0x20>
   16860:	89 c2                	mov    %eax,%edx
   16862:	48 03 57 10          	add    0x10(%rdi),%rdx
   16866:	83 c0 08             	add    $0x8,%eax
   16869:	89 07                	mov    %eax,(%rdi)
   1686b:	48 8b 02             	mov    (%rdx),%rax
   1686e:	5d                   	pop    %rbp
   1686f:	c3                   	retq   
   16870:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   16874:	48 8d 42 08          	lea    0x8(%rdx),%rax
   16878:	48 89 47 08          	mov    %rax,0x8(%rdi)
   1687c:	eb ed                	jmp    1686b <getint+0x1b>
   1687e:	66 90                	xchg   %ax,%ax
   16880:	85 f6                	test   %esi,%esi
   16882:	75 d7                	jne    1685b <getint+0xb>
   16884:	83 f8 2f             	cmp    $0x2f,%eax
   16887:	77 17                	ja     168a0 <getint+0x50>
   16889:	89 c2                	mov    %eax,%edx
   1688b:	48 03 57 10          	add    0x10(%rdi),%rdx
   1688f:	83 c0 08             	add    $0x8,%eax
   16892:	89 07                	mov    %eax,(%rdi)
   16894:	48 63 02             	movslq (%rdx),%rax
   16897:	5d                   	pop    %rbp
   16898:	c3                   	retq   
   16899:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   168a0:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   168a4:	48 8d 42 08          	lea    0x8(%rdx),%rax
   168a8:	48 89 47 08          	mov    %rax,0x8(%rdi)
   168ac:	eb e6                	jmp    16894 <getint+0x44>
   168ae:	66 90                	xchg   %ax,%ax

00000000000168b0 <vfprintfmt>:
   168b0:	55                   	push   %rbp
   168b1:	48 89 e5             	mov    %rsp,%rbp
   168b4:	41 57                	push   %r15
   168b6:	41 56                	push   %r14
   168b8:	41 55                	push   %r13
   168ba:	41 54                	push   %r12
   168bc:	49 89 fd             	mov    %rdi,%r13
   168bf:	53                   	push   %rbx
   168c0:	49 89 f4             	mov    %rsi,%r12
   168c3:	48 89 d3             	mov    %rdx,%rbx
   168c6:	49 89 ce             	mov    %rcx,%r14
   168c9:	48 83 ec 38          	sub    $0x38,%rsp
   168cd:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   168d1:	eb 1e                	jmp    168f1 <vfprintfmt+0x41>
   168d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   168d8:	85 f6                	test   %esi,%esi
   168da:	0f 84 fb 00 00 00    	je     169db <vfprintfmt+0x12b>
   168e0:	48 89 da             	mov    %rbx,%rdx
   168e3:	4c 89 e7             	mov    %r12,%rdi
   168e6:	41 ff d5             	callq  *%r13
   168e9:	85 c0                	test   %eax,%eax
   168eb:	0f 88 ea 00 00 00    	js     169db <vfprintfmt+0x12b>
   168f1:	49 83 c6 01          	add    $0x1,%r14
   168f5:	41 0f b6 76 ff       	movzbl -0x1(%r14),%esi
   168fa:	83 fe 25             	cmp    $0x25,%esi
   168fd:	75 d9                	jne    168d8 <vfprintfmt+0x28>
   168ff:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   16904:	41 bb 20 00 00 00    	mov    $0x20,%r11d
   1690a:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
   16911:	41 89 c9             	mov    %ecx,%r9d
   16914:	31 d2                	xor    %edx,%edx
   16916:	31 ff                	xor    %edi,%edi
   16918:	41 0f b6 36          	movzbl (%r14),%esi
   1691c:	4d 8d 7e 01          	lea    0x1(%r14),%r15
   16920:	89 f0                	mov    %esi,%eax
   16922:	83 e8 23             	sub    $0x23,%eax
   16925:	3c 55                	cmp    $0x55,%al
   16927:	0f 87 5f 03 00 00    	ja     16c8c <vfprintfmt+0x3dc>
   1692d:	4c 8d 15 a4 31 01 00 	lea    0x131a4(%rip),%r10        # 29ad8 <slab_levels+0x78>
   16934:	0f b6 c0             	movzbl %al,%eax
   16937:	49 63 04 82          	movslq (%r10,%rax,4),%rax
   1693b:	4c 01 d0             	add    %r10,%rax
   1693e:	ff e0                	jmpq   *%rax
   16940:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   16944:	8b 07                	mov    (%rdi),%eax
   16946:	83 f8 2f             	cmp    $0x2f,%eax
   16949:	0f 86 80 03 00 00    	jbe    16ccf <vfprintfmt+0x41f>
   1694f:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   16953:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   16957:	48 8d 42 08          	lea    0x8(%rdx),%rax
   1695b:	48 89 47 08          	mov    %rax,0x8(%rdi)
   1695f:	4c 8b 32             	mov    (%rdx),%r14
   16962:	48 8d 05 68 31 01 00 	lea    0x13168(%rip),%rax        # 29ad1 <slab_levels+0x71>
   16969:	44 88 5d b0          	mov    %r11b,-0x50(%rbp)
   1696d:	44 89 4d b8          	mov    %r9d,-0x48(%rbp)
   16971:	4d 85 f6             	test   %r14,%r14
   16974:	4c 0f 44 f0          	cmove  %rax,%r14
   16978:	45 85 c9             	test   %r9d,%r9d
   1697b:	0f 8e 32 04 00 00    	jle    16db3 <vfprintfmt+0x503>
   16981:	48 63 f1             	movslq %ecx,%rsi
   16984:	4c 89 f7             	mov    %r14,%rdi
   16987:	89 4d ac             	mov    %ecx,-0x54(%rbp)
   1698a:	e8 e1 eb ff ff       	callq  15570 <strnlen>
   1698f:	44 8b 4d b8          	mov    -0x48(%rbp),%r9d
   16993:	8b 4d ac             	mov    -0x54(%rbp),%ecx
   16996:	41 29 c1             	sub    %eax,%r9d
   16999:	45 85 c9             	test   %r9d,%r9d
   1699c:	0f 8e 11 04 00 00    	jle    16db3 <vfprintfmt+0x503>
   169a2:	0f be 45 b0          	movsbl -0x50(%rbp),%eax
   169a6:	4c 89 75 b8          	mov    %r14,-0x48(%rbp)
   169aa:	45 89 ce             	mov    %r9d,%r14d
   169ad:	4c 89 7d b0          	mov    %r15,-0x50(%rbp)
   169b1:	41 89 c7             	mov    %eax,%r15d
   169b4:	eb 14                	jmp    169ca <vfprintfmt+0x11a>
   169b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   169bd:	00 00 00 
   169c0:	41 83 ee 01          	sub    $0x1,%r14d
   169c4:	0f 84 99 04 00 00    	je     16e63 <vfprintfmt+0x5b3>
   169ca:	48 89 da             	mov    %rbx,%rdx
   169cd:	44 89 fe             	mov    %r15d,%esi
   169d0:	4c 89 e7             	mov    %r12,%rdi
   169d3:	41 ff d5             	callq  *%r13
   169d6:	83 f8 ff             	cmp    $0xffffffff,%eax
   169d9:	75 e5                	jne    169c0 <vfprintfmt+0x110>
   169db:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   169df:	5b                   	pop    %rbx
   169e0:	41 5c                	pop    %r12
   169e2:	41 5d                	pop    %r13
   169e4:	41 5e                	pop    %r14
   169e6:	41 5f                	pop    %r15
   169e8:	5d                   	pop    %rbp
   169e9:	c3                   	retq   
   169ea:	4d 89 fe             	mov    %r15,%r14
   169ed:	41 bb 30 00 00 00    	mov    $0x30,%r11d
   169f3:	e9 20 ff ff ff       	jmpq   16918 <vfprintfmt+0x68>
   169f8:	45 85 c9             	test   %r9d,%r9d
   169fb:	4d 89 fe             	mov    %r15,%r14
   169fe:	44 0f 48 cf          	cmovs  %edi,%r9d
   16a02:	e9 11 ff ff ff       	jmpq   16918 <vfprintfmt+0x68>
   16a07:	4d 89 fe             	mov    %r15,%r14
   16a0a:	41 bb 20 00 00 00    	mov    $0x20,%r11d
   16a10:	e9 03 ff ff ff       	jmpq   16918 <vfprintfmt+0x68>
   16a15:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   16a19:	8b 06                	mov    (%rsi),%eax
   16a1b:	83 f8 2f             	cmp    $0x2f,%eax
   16a1e:	0f 87 d0 02 00 00    	ja     16cf4 <vfprintfmt+0x444>
   16a24:	89 c1                	mov    %eax,%ecx
   16a26:	48 03 4e 10          	add    0x10(%rsi),%rcx
   16a2a:	83 c0 08             	add    $0x8,%eax
   16a2d:	89 06                	mov    %eax,(%rsi)
   16a2f:	8b 09                	mov    (%rcx),%ecx
   16a31:	4d 89 fe             	mov    %r15,%r14
   16a34:	45 85 c9             	test   %r9d,%r9d
   16a37:	0f 89 db fe ff ff    	jns    16918 <vfprintfmt+0x68>
   16a3d:	41 89 c9             	mov    %ecx,%r9d
   16a40:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   16a45:	e9 ce fe ff ff       	jmpq   16918 <vfprintfmt+0x68>
   16a4a:	48 89 da             	mov    %rbx,%rdx
   16a4d:	4c 89 e7             	mov    %r12,%rdi
   16a50:	41 ff d5             	callq  *%r13
   16a53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16a58:	4d 89 fe             	mov    %r15,%r14
   16a5b:	e9 91 fe ff ff       	jmpq   168f1 <vfprintfmt+0x41>
   16a60:	4d 89 fe             	mov    %r15,%r14
   16a63:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
   16a6a:	e9 a9 fe ff ff       	jmpq   16918 <vfprintfmt+0x68>
   16a6f:	83 fa 01             	cmp    $0x1,%edx
   16a72:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   16a76:	0f 8e 8d 02 00 00    	jle    16d09 <vfprintfmt+0x459>
   16a7c:	8b 01                	mov    (%rcx),%eax
   16a7e:	83 f8 2f             	cmp    $0x2f,%eax
   16a81:	0f 87 8c 00 00 00    	ja     16b13 <vfprintfmt+0x263>
   16a87:	89 c2                	mov    %eax,%edx
   16a89:	83 c0 08             	add    $0x8,%eax
   16a8c:	48 03 51 10          	add    0x10(%rcx),%rdx
   16a90:	89 01                	mov    %eax,(%rcx)
   16a92:	e9 8c 00 00 00       	jmpq   16b23 <vfprintfmt+0x273>
   16a97:	83 fa 01             	cmp    $0x1,%edx
   16a9a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   16a9e:	0f 8e 91 02 00 00    	jle    16d35 <vfprintfmt+0x485>
   16aa4:	8b 01                	mov    (%rcx),%eax
   16aa6:	83 f8 2f             	cmp    $0x2f,%eax
   16aa9:	0f 87 9f 03 00 00    	ja     16e4e <vfprintfmt+0x59e>
   16aaf:	89 c2                	mov    %eax,%edx
   16ab1:	48 03 51 10          	add    0x10(%rcx),%rdx
   16ab5:	83 c0 08             	add    $0x8,%eax
   16ab8:	89 01                	mov    %eax,(%rcx)
   16aba:	48 8b 0a             	mov    (%rdx),%rcx
   16abd:	41 b8 0a 00 00 00    	mov    $0xa,%r8d
   16ac3:	eb 67                	jmp    16b2c <vfprintfmt+0x27c>
   16ac5:	44 89 4d b8          	mov    %r9d,-0x48(%rbp)
   16ac9:	44 88 5d c0          	mov    %r11b,-0x40(%rbp)
   16acd:	48 89 da             	mov    %rbx,%rdx
   16ad0:	be 30 00 00 00       	mov    $0x30,%esi
   16ad5:	4c 89 e7             	mov    %r12,%rdi
   16ad8:	41 ff d5             	callq  *%r13
   16adb:	83 f8 ff             	cmp    $0xffffffff,%eax
   16ade:	0f 84 f7 fe ff ff    	je     169db <vfprintfmt+0x12b>
   16ae4:	48 89 da             	mov    %rbx,%rdx
   16ae7:	be 78 00 00 00       	mov    $0x78,%esi
   16aec:	4c 89 e7             	mov    %r12,%rdi
   16aef:	41 ff d5             	callq  *%r13
   16af2:	83 f8 ff             	cmp    $0xffffffff,%eax
   16af5:	0f 84 e0 fe ff ff    	je     169db <vfprintfmt+0x12b>
   16afb:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   16aff:	44 0f be 5d c0       	movsbl -0x40(%rbp),%r11d
   16b04:	44 8b 4d b8          	mov    -0x48(%rbp),%r9d
   16b08:	8b 01                	mov    (%rcx),%eax
   16b0a:	83 f8 2f             	cmp    $0x2f,%eax
   16b0d:	0f 86 74 ff ff ff    	jbe    16a87 <vfprintfmt+0x1d7>
   16b13:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   16b17:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   16b1b:	48 8d 42 08          	lea    0x8(%rdx),%rax
   16b1f:	48 89 41 08          	mov    %rax,0x8(%rcx)
   16b23:	48 8b 0a             	mov    (%rdx),%rcx
   16b26:	41 b8 10 00 00 00    	mov    $0x10,%r8d
   16b2c:	48 83 ec 08          	sub    $0x8,%rsp
   16b30:	48 89 da             	mov    %rbx,%rdx
   16b33:	4c 89 e6             	mov    %r12,%rsi
   16b36:	41 53                	push   %r11
   16b38:	4c 89 ef             	mov    %r13,%rdi
   16b3b:	e8 b0 fb ff ff       	callq  166f0 <printnum>
   16b40:	83 f8 ff             	cmp    $0xffffffff,%eax
   16b43:	5a                   	pop    %rdx
   16b44:	59                   	pop    %rcx
   16b45:	0f 85 0d ff ff ff    	jne    16a58 <vfprintfmt+0x1a8>
   16b4b:	e9 8b fe ff ff       	jmpq   169db <vfprintfmt+0x12b>
   16b50:	83 fa 01             	cmp    $0x1,%edx
   16b53:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   16b57:	0f 8e 2a 02 00 00    	jle    16d87 <vfprintfmt+0x4d7>
   16b5d:	8b 01                	mov    (%rcx),%eax
   16b5f:	83 f8 2f             	cmp    $0x2f,%eax
   16b62:	0f 87 d1 02 00 00    	ja     16e39 <vfprintfmt+0x589>
   16b68:	89 c2                	mov    %eax,%edx
   16b6a:	48 03 51 10          	add    0x10(%rcx),%rdx
   16b6e:	83 c0 08             	add    $0x8,%eax
   16b71:	89 01                	mov    %eax,(%rcx)
   16b73:	48 8b 0a             	mov    (%rdx),%rcx
   16b76:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   16b7c:	eb ae                	jmp    16b2c <vfprintfmt+0x27c>
   16b7e:	83 c2 01             	add    $0x1,%edx
   16b81:	4d 89 fe             	mov    %r15,%r14
   16b84:	e9 8f fd ff ff       	jmpq   16918 <vfprintfmt+0x68>
   16b89:	83 fa 01             	cmp    $0x1,%edx
   16b8c:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   16b90:	0f 8e cb 01 00 00    	jle    16d61 <vfprintfmt+0x4b1>
   16b96:	8b 01                	mov    (%rcx),%eax
   16b98:	83 f8 2f             	cmp    $0x2f,%eax
   16b9b:	0f 87 83 02 00 00    	ja     16e24 <vfprintfmt+0x574>
   16ba1:	89 c2                	mov    %eax,%edx
   16ba3:	48 03 51 10          	add    0x10(%rcx),%rdx
   16ba7:	83 c0 08             	add    $0x8,%eax
   16baa:	89 01                	mov    %eax,(%rcx)
   16bac:	48 8b 0a             	mov    (%rdx),%rcx
   16baf:	48 85 c9             	test   %rcx,%rcx
   16bb2:	41 b8 0a 00 00 00    	mov    $0xa,%r8d
   16bb8:	0f 89 6e ff ff ff    	jns    16b2c <vfprintfmt+0x27c>
   16bbe:	44 89 45 ac          	mov    %r8d,-0x54(%rbp)
   16bc2:	44 88 5d b0          	mov    %r11b,-0x50(%rbp)
   16bc6:	48 89 da             	mov    %rbx,%rdx
   16bc9:	44 89 4d b8          	mov    %r9d,-0x48(%rbp)
   16bcd:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   16bd1:	be 2d 00 00 00       	mov    $0x2d,%esi
   16bd6:	4c 89 e7             	mov    %r12,%rdi
   16bd9:	41 ff d5             	callq  *%r13
   16bdc:	83 f8 ff             	cmp    $0xffffffff,%eax
   16bdf:	0f 84 f6 fd ff ff    	je     169db <vfprintfmt+0x12b>
   16be5:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   16be9:	44 8b 4d b8          	mov    -0x48(%rbp),%r9d
   16bed:	44 0f be 5d b0       	movsbl -0x50(%rbp),%r11d
   16bf2:	44 8b 45 ac          	mov    -0x54(%rbp),%r8d
   16bf6:	48 f7 d9             	neg    %rcx
   16bf9:	e9 2e ff ff ff       	jmpq   16b2c <vfprintfmt+0x27c>
   16bfe:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   16c02:	8b 07                	mov    (%rdi),%eax
   16c04:	83 f8 2f             	cmp    $0x2f,%eax
   16c07:	0f 87 d2 00 00 00    	ja     16cdf <vfprintfmt+0x42f>
   16c0d:	89 c1                	mov    %eax,%ecx
   16c0f:	48 03 4f 10          	add    0x10(%rdi),%rcx
   16c13:	83 c0 08             	add    $0x8,%eax
   16c16:	89 07                	mov    %eax,(%rdi)
   16c18:	48 89 da             	mov    %rbx,%rdx
   16c1b:	8b 31                	mov    (%rcx),%esi
   16c1d:	4c 89 e7             	mov    %r12,%rdi
   16c20:	41 ff d5             	callq  *%r13
   16c23:	83 f8 ff             	cmp    $0xffffffff,%eax
   16c26:	0f 85 2c fe ff ff    	jne    16a58 <vfprintfmt+0x1a8>
   16c2c:	e9 aa fd ff ff       	jmpq   169db <vfprintfmt+0x12b>
   16c31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16c38:	48 89 da             	mov    %rbx,%rdx
   16c3b:	be 1b 00 00 00       	mov    $0x1b,%esi
   16c40:	4c 89 e7             	mov    %r12,%rdi
   16c43:	41 ff d5             	callq  *%r13
   16c46:	83 f8 ff             	cmp    $0xffffffff,%eax
   16c49:	0f 85 09 fe ff ff    	jne    16a58 <vfprintfmt+0x1a8>
   16c4f:	e9 87 fd ff ff       	jmpq   169db <vfprintfmt+0x12b>
   16c54:	0f 1f 40 00          	nopl   0x0(%rax)
   16c58:	41 0f be 46 01       	movsbl 0x1(%r14),%eax
   16c5d:	8d 4e d0             	lea    -0x30(%rsi),%ecx
   16c60:	4d 89 fe             	mov    %r15,%r14
   16c63:	8d 70 d0             	lea    -0x30(%rax),%esi
   16c66:	83 fe 09             	cmp    $0x9,%esi
   16c69:	0f 87 c5 fd ff ff    	ja     16a34 <vfprintfmt+0x184>
   16c6f:	90                   	nop
   16c70:	8d 0c 89             	lea    (%rcx,%rcx,4),%ecx
   16c73:	49 83 c6 01          	add    $0x1,%r14
   16c77:	8d 4c 48 d0          	lea    -0x30(%rax,%rcx,2),%ecx
   16c7b:	41 0f be 06          	movsbl (%r14),%eax
   16c7f:	8d 70 d0             	lea    -0x30(%rax),%esi
   16c82:	83 fe 09             	cmp    $0x9,%esi
   16c85:	76 e9                	jbe    16c70 <vfprintfmt+0x3c0>
   16c87:	e9 a8 fd ff ff       	jmpq   16a34 <vfprintfmt+0x184>
   16c8c:	48 89 da             	mov    %rbx,%rdx
   16c8f:	be 25 00 00 00       	mov    $0x25,%esi
   16c94:	4c 89 e7             	mov    %r12,%rdi
   16c97:	41 ff d5             	callq  *%r13
   16c9a:	41 80 7e ff 25       	cmpb   $0x25,-0x1(%r14)
   16c9f:	4d 89 f7             	mov    %r14,%r15
   16ca2:	0f 84 b0 fd ff ff    	je     16a58 <vfprintfmt+0x1a8>
   16ca8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   16caf:	00 
   16cb0:	49 83 ef 01          	sub    $0x1,%r15
   16cb4:	41 80 7f ff 25       	cmpb   $0x25,-0x1(%r15)
   16cb9:	0f 84 99 fd ff ff    	je     16a58 <vfprintfmt+0x1a8>
   16cbf:	49 83 ef 01          	sub    $0x1,%r15
   16cc3:	41 80 7f ff 25       	cmpb   $0x25,-0x1(%r15)
   16cc8:	75 e6                	jne    16cb0 <vfprintfmt+0x400>
   16cca:	e9 89 fd ff ff       	jmpq   16a58 <vfprintfmt+0x1a8>
   16ccf:	89 c2                	mov    %eax,%edx
   16cd1:	83 c0 08             	add    $0x8,%eax
   16cd4:	48 03 57 10          	add    0x10(%rdi),%rdx
   16cd8:	89 07                	mov    %eax,(%rdi)
   16cda:	e9 80 fc ff ff       	jmpq   1695f <vfprintfmt+0xaf>
   16cdf:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   16ce3:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   16ce7:	48 8d 41 08          	lea    0x8(%rcx),%rax
   16ceb:	48 89 47 08          	mov    %rax,0x8(%rdi)
   16cef:	e9 24 ff ff ff       	jmpq   16c18 <vfprintfmt+0x368>
   16cf4:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   16cf8:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   16cfc:	48 8d 41 08          	lea    0x8(%rcx),%rax
   16d00:	48 89 46 08          	mov    %rax,0x8(%rsi)
   16d04:	e9 26 fd ff ff       	jmpq   16a2f <vfprintfmt+0x17f>
   16d09:	85 d2                	test   %edx,%edx
   16d0b:	8b 11                	mov    (%rcx),%edx
   16d0d:	0f 84 ae 01 00 00    	je     16ec1 <vfprintfmt+0x611>
   16d13:	83 fa 2f             	cmp    $0x2f,%edx
   16d16:	0f 87 2f 02 00 00    	ja     16f4b <vfprintfmt+0x69b>
   16d1c:	89 d0                	mov    %edx,%eax
   16d1e:	48 03 41 10          	add    0x10(%rcx),%rax
   16d22:	83 c2 08             	add    $0x8,%edx
   16d25:	89 11                	mov    %edx,(%rcx)
   16d27:	48 8b 08             	mov    (%rax),%rcx
   16d2a:	41 b8 10 00 00 00    	mov    $0x10,%r8d
   16d30:	e9 f7 fd ff ff       	jmpq   16b2c <vfprintfmt+0x27c>
   16d35:	85 d2                	test   %edx,%edx
   16d37:	8b 11                	mov    (%rcx),%edx
   16d39:	0f 84 40 01 00 00    	je     16e7f <vfprintfmt+0x5cf>
   16d3f:	83 fa 2f             	cmp    $0x2f,%edx
   16d42:	0f 87 b2 01 00 00    	ja     16efa <vfprintfmt+0x64a>
   16d48:	89 d0                	mov    %edx,%eax
   16d4a:	48 03 41 10          	add    0x10(%rcx),%rax
   16d4e:	83 c2 08             	add    $0x8,%edx
   16d51:	89 11                	mov    %edx,(%rcx)
   16d53:	48 8b 08             	mov    (%rax),%rcx
   16d56:	41 b8 0a 00 00 00    	mov    $0xa,%r8d
   16d5c:	e9 cb fd ff ff       	jmpq   16b2c <vfprintfmt+0x27c>
   16d61:	85 d2                	test   %edx,%edx
   16d63:	8b 11                	mov    (%rcx),%edx
   16d65:	0f 84 77 01 00 00    	je     16ee2 <vfprintfmt+0x632>
   16d6b:	83 fa 2f             	cmp    $0x2f,%edx
   16d6e:	0f 87 01 02 00 00    	ja     16f75 <vfprintfmt+0x6c5>
   16d74:	89 d0                	mov    %edx,%eax
   16d76:	48 03 41 10          	add    0x10(%rcx),%rax
   16d7a:	83 c2 08             	add    $0x8,%edx
   16d7d:	89 11                	mov    %edx,(%rcx)
   16d7f:	48 8b 08             	mov    (%rax),%rcx
   16d82:	e9 28 fe ff ff       	jmpq   16baf <vfprintfmt+0x2ff>
   16d87:	85 d2                	test   %edx,%edx
   16d89:	8b 11                	mov    (%rcx),%edx
   16d8b:	0f 84 0f 01 00 00    	je     16ea0 <vfprintfmt+0x5f0>
   16d91:	83 fa 2f             	cmp    $0x2f,%edx
   16d94:	0f 87 87 01 00 00    	ja     16f21 <vfprintfmt+0x671>
   16d9a:	89 d0                	mov    %edx,%eax
   16d9c:	48 03 41 10          	add    0x10(%rcx),%rax
   16da0:	83 c2 08             	add    $0x8,%edx
   16da3:	89 11                	mov    %edx,(%rcx)
   16da5:	48 8b 08             	mov    (%rax),%rcx
   16da8:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   16dae:	e9 79 fd ff ff       	jmpq   16b2c <vfprintfmt+0x27c>
   16db3:	4c 89 7d b8          	mov    %r15,-0x48(%rbp)
   16db7:	4d 89 ef             	mov    %r13,%r15
   16dba:	49 89 dd             	mov    %rbx,%r13
   16dbd:	89 cb                	mov    %ecx,%ebx
   16dbf:	90                   	nop
   16dc0:	49 83 c6 01          	add    $0x1,%r14
   16dc4:	41 0f be 76 ff       	movsbl -0x1(%r14),%esi
   16dc9:	85 f6                	test   %esi,%esi
   16dcb:	74 48                	je     16e15 <vfprintfmt+0x565>
   16dcd:	85 db                	test   %ebx,%ebx
   16dcf:	78 08                	js     16dd9 <vfprintfmt+0x529>
   16dd1:	83 eb 01             	sub    $0x1,%ebx
   16dd4:	83 fb ff             	cmp    $0xffffffff,%ebx
   16dd7:	74 3c                	je     16e15 <vfprintfmt+0x565>
   16dd9:	8b 7d c0             	mov    -0x40(%rbp),%edi
   16ddc:	4c 89 ea             	mov    %r13,%rdx
   16ddf:	85 ff                	test   %edi,%edi
   16de1:	74 08                	je     16deb <vfprintfmt+0x53b>
   16de3:	8d 46 e0             	lea    -0x20(%rsi),%eax
   16de6:	83 f8 5e             	cmp    $0x5e,%eax
   16de9:	77 15                	ja     16e00 <vfprintfmt+0x550>
   16deb:	4c 89 e7             	mov    %r12,%rdi
   16dee:	41 ff d7             	callq  *%r15
   16df1:	83 f8 ff             	cmp    $0xffffffff,%eax
   16df4:	75 ca                	jne    16dc0 <vfprintfmt+0x510>
   16df6:	e9 e0 fb ff ff       	jmpq   169db <vfprintfmt+0x12b>
   16dfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16e00:	be 3f 00 00 00       	mov    $0x3f,%esi
   16e05:	4c 89 e7             	mov    %r12,%rdi
   16e08:	41 ff d7             	callq  *%r15
   16e0b:	83 f8 ff             	cmp    $0xffffffff,%eax
   16e0e:	75 b0                	jne    16dc0 <vfprintfmt+0x510>
   16e10:	e9 c6 fb ff ff       	jmpq   169db <vfprintfmt+0x12b>
   16e15:	4c 89 eb             	mov    %r13,%rbx
   16e18:	4d 89 fd             	mov    %r15,%r13
   16e1b:	4c 8b 7d b8          	mov    -0x48(%rbp),%r15
   16e1f:	e9 34 fc ff ff       	jmpq   16a58 <vfprintfmt+0x1a8>
   16e24:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   16e28:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   16e2c:	48 8d 42 08          	lea    0x8(%rdx),%rax
   16e30:	48 89 41 08          	mov    %rax,0x8(%rcx)
   16e34:	e9 73 fd ff ff       	jmpq   16bac <vfprintfmt+0x2fc>
   16e39:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   16e3d:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   16e41:	48 8d 42 08          	lea    0x8(%rdx),%rax
   16e45:	48 89 41 08          	mov    %rax,0x8(%rcx)
   16e49:	e9 25 fd ff ff       	jmpq   16b73 <vfprintfmt+0x2c3>
   16e4e:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   16e52:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   16e56:	48 8d 42 08          	lea    0x8(%rdx),%rax
   16e5a:	48 89 41 08          	mov    %rax,0x8(%rcx)
   16e5e:	e9 57 fc ff ff       	jmpq   16aba <vfprintfmt+0x20a>
   16e63:	4c 8b 7d b0          	mov    -0x50(%rbp),%r15
   16e67:	8b 4d ac             	mov    -0x54(%rbp),%ecx
   16e6a:	4c 8b 75 b8          	mov    -0x48(%rbp),%r14
   16e6e:	4c 89 7d b8          	mov    %r15,-0x48(%rbp)
   16e72:	4d 89 ef             	mov    %r13,%r15
   16e75:	49 89 dd             	mov    %rbx,%r13
   16e78:	89 cb                	mov    %ecx,%ebx
   16e7a:	e9 41 ff ff ff       	jmpq   16dc0 <vfprintfmt+0x510>
   16e7f:	83 fa 2f             	cmp    $0x2f,%edx
   16e82:	0f 87 ae 00 00 00    	ja     16f36 <vfprintfmt+0x686>
   16e88:	89 d0                	mov    %edx,%eax
   16e8a:	48 03 41 10          	add    0x10(%rcx),%rax
   16e8e:	83 c2 08             	add    $0x8,%edx
   16e91:	89 11                	mov    %edx,(%rcx)
   16e93:	8b 08                	mov    (%rax),%ecx
   16e95:	41 b8 0a 00 00 00    	mov    $0xa,%r8d
   16e9b:	e9 8c fc ff ff       	jmpq   16b2c <vfprintfmt+0x27c>
   16ea0:	83 fa 2f             	cmp    $0x2f,%edx
   16ea3:	0f 87 b7 00 00 00    	ja     16f60 <vfprintfmt+0x6b0>
   16ea9:	89 d0                	mov    %edx,%eax
   16eab:	48 03 41 10          	add    0x10(%rcx),%rax
   16eaf:	83 c2 08             	add    $0x8,%edx
   16eb2:	89 11                	mov    %edx,(%rcx)
   16eb4:	8b 08                	mov    (%rax),%ecx
   16eb6:	41 b8 08 00 00 00    	mov    $0x8,%r8d
   16ebc:	e9 6b fc ff ff       	jmpq   16b2c <vfprintfmt+0x27c>
   16ec1:	83 fa 2f             	cmp    $0x2f,%edx
   16ec4:	0f 87 c0 00 00 00    	ja     16f8a <vfprintfmt+0x6da>
   16eca:	89 d0                	mov    %edx,%eax
   16ecc:	48 03 41 10          	add    0x10(%rcx),%rax
   16ed0:	83 c2 08             	add    $0x8,%edx
   16ed3:	89 11                	mov    %edx,(%rcx)
   16ed5:	8b 08                	mov    (%rax),%ecx
   16ed7:	41 b8 10 00 00 00    	mov    $0x10,%r8d
   16edd:	e9 4a fc ff ff       	jmpq   16b2c <vfprintfmt+0x27c>
   16ee2:	83 fa 2f             	cmp    $0x2f,%edx
   16ee5:	77 28                	ja     16f0f <vfprintfmt+0x65f>
   16ee7:	89 d0                	mov    %edx,%eax
   16ee9:	48 03 41 10          	add    0x10(%rcx),%rax
   16eed:	83 c2 08             	add    $0x8,%edx
   16ef0:	89 11                	mov    %edx,(%rcx)
   16ef2:	48 63 08             	movslq (%rax),%rcx
   16ef5:	e9 b5 fc ff ff       	jmpq   16baf <vfprintfmt+0x2ff>
   16efa:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   16efe:	48 8b 41 08          	mov    0x8(%rcx),%rax
   16f02:	48 8d 50 08          	lea    0x8(%rax),%rdx
   16f06:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   16f0a:	e9 44 fe ff ff       	jmpq   16d53 <vfprintfmt+0x4a3>
   16f0f:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   16f13:	48 8b 41 08          	mov    0x8(%rcx),%rax
   16f17:	48 8d 50 08          	lea    0x8(%rax),%rdx
   16f1b:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   16f1f:	eb d1                	jmp    16ef2 <vfprintfmt+0x642>
   16f21:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   16f25:	48 8b 41 08          	mov    0x8(%rcx),%rax
   16f29:	48 8d 50 08          	lea    0x8(%rax),%rdx
   16f2d:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   16f31:	e9 6f fe ff ff       	jmpq   16da5 <vfprintfmt+0x4f5>
   16f36:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   16f3a:	48 8b 41 08          	mov    0x8(%rcx),%rax
   16f3e:	48 8d 50 08          	lea    0x8(%rax),%rdx
   16f42:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   16f46:	e9 48 ff ff ff       	jmpq   16e93 <vfprintfmt+0x5e3>
   16f4b:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   16f4f:	48 8b 41 08          	mov    0x8(%rcx),%rax
   16f53:	48 8d 50 08          	lea    0x8(%rax),%rdx
   16f57:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   16f5b:	e9 c7 fd ff ff       	jmpq   16d27 <vfprintfmt+0x477>
   16f60:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   16f64:	48 8b 41 08          	mov    0x8(%rcx),%rax
   16f68:	48 8d 50 08          	lea    0x8(%rax),%rdx
   16f6c:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   16f70:	e9 3f ff ff ff       	jmpq   16eb4 <vfprintfmt+0x604>
   16f75:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   16f79:	48 8b 41 08          	mov    0x8(%rcx),%rax
   16f7d:	48 8d 50 08          	lea    0x8(%rax),%rdx
   16f81:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   16f85:	e9 f5 fd ff ff       	jmpq   16d7f <vfprintfmt+0x4cf>
   16f8a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   16f8e:	48 8b 41 08          	mov    0x8(%rcx),%rax
   16f92:	48 8d 50 08          	lea    0x8(%rax),%rdx
   16f96:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   16f9a:	e9 36 ff ff ff       	jmpq   16ed5 <vfprintfmt+0x625>
   16f9f:	90                   	nop

0000000000016fa0 <fprintfmt>:
   16fa0:	55                   	push   %rbp
   16fa1:	48 89 e5             	mov    %rsp,%rbp
   16fa4:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
   16fab:	84 c0                	test   %al,%al
   16fad:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
   16fb4:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
   16fbb:	74 20                	je     16fdd <fprintfmt+0x3d>
   16fbd:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
   16fc1:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
   16fc5:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
   16fc9:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
   16fcd:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
   16fd1:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
   16fd5:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
   16fd9:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
   16fdd:	48 8d 45 10          	lea    0x10(%rbp),%rax
   16fe1:	4c 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%r8
   16fe8:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   16fef:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   16ff6:	c7 85 38 ff ff ff 20 	movl   $0x20,-0xc8(%rbp)
   16ffd:	00 00 00 
   17000:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
   17007:	00 00 00 
   1700a:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   17011:	e8 9a f8 ff ff       	callq  168b0 <vfprintfmt>
   17016:	c9                   	leaveq 
   17017:	c3                   	retq   
   17018:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1701f:	00 

0000000000017020 <snprintf>:
   17020:	55                   	push   %rbp
   17021:	48 89 e5             	mov    %rsp,%rbp
   17024:	53                   	push   %rbx
   17025:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
   1702c:	84 c0                	test   %al,%al
   1702e:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
   17035:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
   1703c:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
   17043:	74 23                	je     17068 <snprintf+0x48>
   17045:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
   1704c:	0f 29 4d 80          	movaps %xmm1,-0x80(%rbp)
   17050:	0f 29 55 90          	movaps %xmm2,-0x70(%rbp)
   17054:	0f 29 5d a0          	movaps %xmm3,-0x60(%rbp)
   17058:	0f 29 65 b0          	movaps %xmm4,-0x50(%rbp)
   1705c:	0f 29 6d c0          	movaps %xmm5,-0x40(%rbp)
   17060:	0f 29 75 d0          	movaps %xmm6,-0x30(%rbp)
   17064:	0f 29 7d e0          	movaps %xmm7,-0x20(%rbp)
   17068:	48 8d 45 10          	lea    0x10(%rbp),%rax
   1706c:	48 85 ff             	test   %rdi,%rdi
   1706f:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   17076:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   1707d:	c7 85 28 ff ff ff 18 	movl   $0x18,-0xd8(%rbp)
   17084:	00 00 00 
   17087:	c7 85 2c ff ff ff 30 	movl   $0x30,-0xd4(%rbp)
   1708e:	00 00 00 
   17091:	c7 85 10 ff ff ff 00 	movl   $0x0,-0xf0(%rbp)
   17098:	00 00 00 
   1709b:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   170a2:	89 b5 14 ff ff ff    	mov    %esi,-0xec(%rbp)
   170a8:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
   170af:	74 4f                	je     17100 <snprintf+0xe0>
   170b1:	85 f6                	test   %esi,%esi
   170b3:	7e 4b                	jle    17100 <snprintf+0xe0>
   170b5:	48 89 d1             	mov    %rdx,%rcx
   170b8:	4c 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%r8
   170bf:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   170c6:	48 8d 3d f3 f6 ff ff 	lea    -0x90d(%rip),%rdi        # 167c0 <sprintputch>
   170cd:	89 f3                	mov    %esi,%ebx
   170cf:	31 f6                	xor    %esi,%esi
   170d1:	e8 da f7 ff ff       	callq  168b0 <vfprintfmt>
   170d6:	48 63 85 10 ff ff ff 	movslq -0xf0(%rbp),%rax
   170dd:	39 c3                	cmp    %eax,%ebx
   170df:	7e 21                	jle    17102 <snprintf+0xe2>
   170e1:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   170e8:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
   170ec:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
   170f2:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
   170f9:	5b                   	pop    %rbx
   170fa:	5d                   	pop    %rbp
   170fb:	c3                   	retq   
   170fc:	0f 1f 40 00          	nopl   0x0(%rax)
   17100:	31 c0                	xor    %eax,%eax
   17102:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
   17109:	5b                   	pop    %rbx
   1710a:	5d                   	pop    %rbp
   1710b:	c3                   	retq   
   1710c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000017110 <__htonl>:
   17110:	55                   	push   %rbp
   17111:	89 f8                	mov    %edi,%eax
   17113:	0f c8                	bswap  %eax
   17115:	48 89 e5             	mov    %rsp,%rbp
   17118:	5d                   	pop    %rbp
   17119:	c3                   	retq   
   1711a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000017120 <__ntohl>:
   17120:	55                   	push   %rbp
   17121:	48 89 e5             	mov    %rsp,%rbp
   17124:	5d                   	pop    %rbp
   17125:	e9 e6 ff ff ff       	jmpq   17110 <__htonl>
   1712a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000017130 <__htons>:
   17130:	55                   	push   %rbp
   17131:	89 f8                	mov    %edi,%eax
   17133:	66 c1 c8 08          	ror    $0x8,%ax
   17137:	48 89 e5             	mov    %rsp,%rbp
   1713a:	5d                   	pop    %rbp
   1713b:	c3                   	retq   
   1713c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000017140 <__ntohs>:
   17140:	55                   	push   %rbp
   17141:	0f b7 ff             	movzwl %di,%edi
   17144:	48 89 e5             	mov    %rsp,%rbp
   17147:	5d                   	pop    %rbp
   17148:	e9 e3 ff ff ff       	jmpq   17130 <__htons>
   1714d:	0f 1f 00             	nopl   (%rax)

0000000000017150 <inet_pton4>:
   17150:	55                   	push   %rbp
   17151:	48 63 f6             	movslq %esi,%rsi
   17154:	48 89 e5             	mov    %rsp,%rbp
   17157:	41 54                	push   %r12
   17159:	53                   	push   %rbx
   1715a:	48 8d 1c 37          	lea    (%rdi,%rsi,1),%rbx
   1715e:	48 83 ec 10          	sub    $0x10,%rsp
   17162:	c6 45 e0 00          	movb   $0x0,-0x20(%rbp)
   17166:	48 39 df             	cmp    %rbx,%rdi
   17169:	0f 83 9f 00 00 00    	jae    1720e <inet_pton4+0xbe>
   1716f:	0f be 0f             	movsbl (%rdi),%ecx
   17172:	48 8d 47 01          	lea    0x1(%rdi),%rax
   17176:	85 c9                	test   %ecx,%ecx
   17178:	0f 84 90 00 00 00    	je     1720e <inet_pton4+0xbe>
   1717e:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi
   17182:	45 31 e4             	xor    %r12d,%r12d
   17185:	45 31 c0             	xor    %r8d,%r8d
   17188:	49 89 f1             	mov    %rsi,%r9
   1718b:	eb 4b                	jmp    171d8 <inet_pton4+0x88>
   1718d:	0f 1f 00             	nopl   (%rax)
   17190:	45 0f b6 19          	movzbl (%r9),%r11d
   17194:	43 8d 3c 9b          	lea    (%r11,%r11,4),%edi
   17198:	45 84 db             	test   %r11b,%r11b
   1719b:	45 8d 14 7a          	lea    (%r10,%rdi,2),%r10d
   1719f:	75 05                	jne    171a6 <inet_pton4+0x56>
   171a1:	45 85 c0             	test   %r8d,%r8d
   171a4:	75 68                	jne    1720e <inet_pton4+0xbe>
   171a6:	41 81 fa ff 00 00 00 	cmp    $0xff,%r10d
   171ad:	77 5f                	ja     1720e <inet_pton4+0xbe>
   171af:	45 85 c0             	test   %r8d,%r8d
   171b2:	45 88 11             	mov    %r10b,(%r9)
   171b5:	75 0a                	jne    171c1 <inet_pton4+0x71>
   171b7:	41 83 c4 01          	add    $0x1,%r12d
   171bb:	41 83 fc 04          	cmp    $0x4,%r12d
   171bf:	7f 4d                	jg     1720e <inet_pton4+0xbe>
   171c1:	48 39 c3             	cmp    %rax,%rbx
   171c4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   171ca:	74 3c                	je     17208 <inet_pton4+0xb8>
   171cc:	48 83 c0 01          	add    $0x1,%rax
   171d0:	0f be 48 ff          	movsbl -0x1(%rax),%ecx
   171d4:	85 c9                	test   %ecx,%ecx
   171d6:	74 30                	je     17208 <inet_pton4+0xb8>
   171d8:	44 8d 51 d0          	lea    -0x30(%rcx),%r10d
   171dc:	41 83 fa 09          	cmp    $0x9,%r10d
   171e0:	76 ae                	jbe    17190 <inet_pton4+0x40>
   171e2:	83 f9 2e             	cmp    $0x2e,%ecx
   171e5:	0f 94 c1             	sete   %cl
   171e8:	41 21 c8             	and    %ecx,%r8d
   171eb:	41 83 fc 04          	cmp    $0x4,%r12d
   171ef:	0f 94 c1             	sete   %cl
   171f2:	41 38 c8             	cmp    %cl,%r8b
   171f5:	76 17                	jbe    1720e <inet_pton4+0xbe>
   171f7:	41 c6 41 01 00       	movb   $0x0,0x1(%r9)
   171fc:	45 31 c0             	xor    %r8d,%r8d
   171ff:	49 83 c1 01          	add    $0x1,%r9
   17203:	48 39 c3             	cmp    %rax,%rbx
   17206:	75 c4                	jne    171cc <inet_pton4+0x7c>
   17208:	41 83 fc 03          	cmp    $0x3,%r12d
   1720c:	7f 12                	jg     17220 <inet_pton4+0xd0>
   1720e:	48 83 c4 10          	add    $0x10,%rsp
   17212:	31 c0                	xor    %eax,%eax
   17214:	5b                   	pop    %rbx
   17215:	41 5c                	pop    %r12
   17217:	5d                   	pop    %rbp
   17218:	c3                   	retq   
   17219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17220:	48 89 d7             	mov    %rdx,%rdi
   17223:	ba 04 00 00 00       	mov    $0x4,%edx
   17228:	e8 c3 e9 ff ff       	callq  15bf0 <memcpy>
   1722d:	48 83 c4 10          	add    $0x10,%rsp
   17231:	b8 01 00 00 00       	mov    $0x1,%eax
   17236:	5b                   	pop    %rbx
   17237:	41 5c                	pop    %r12
   17239:	5d                   	pop    %rbp
   1723a:	c3                   	retq   
   1723b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000017240 <inet_pton6>:
   17240:	55                   	push   %rbp
   17241:	48 63 f6             	movslq %esi,%rsi
   17244:	48 89 e5             	mov    %rsp,%rbp
   17247:	41 57                	push   %r15
   17249:	41 56                	push   %r14
   1724b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1724f:	41 55                	push   %r13
   17251:	41 54                	push   %r12
   17253:	53                   	push   %rbx
   17254:	49 89 fd             	mov    %rdi,%r13
   17257:	48 8d 1c 37          	lea    (%rdi,%rsi,1),%rbx
   1725b:	31 f6                	xor    %esi,%esi
   1725d:	48 89 c7             	mov    %rax,%rdi
   17260:	48 83 ec 58          	sub    $0x58,%rsp
   17264:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
   17268:	ba 10 00 00 00       	mov    $0x10,%edx
   1726d:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   17271:	e8 ea f1 ff ff       	callq  16460 <memset>
   17276:	49 89 c4             	mov    %rax,%r12
   17279:	48 83 c0 10          	add    $0x10,%rax
   1727d:	41 80 7d 00 3a       	cmpb   $0x3a,0x0(%r13)
   17282:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   17286:	0f 84 a4 01 00 00    	je     17430 <inet_pton6+0x1f0>
   1728c:	49 39 dd             	cmp    %rbx,%r13
   1728f:	0f 83 10 01 00 00    	jae    173a5 <inet_pton6+0x165>
   17295:	45 31 c9             	xor    %r9d,%r9d
   17298:	4c 89 65 b0          	mov    %r12,-0x50(%rbp)
   1729c:	4c 89 65 88          	mov    %r12,-0x78(%rbp)
   172a0:	4c 89 6d 90          	mov    %r13,-0x70(%rbp)
   172a4:	45 31 ff             	xor    %r15d,%r15d
   172a7:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
   172ae:	00 
   172af:	45 89 cc             	mov    %r9d,%r12d
   172b2:	49 83 c5 01          	add    $0x1,%r13
   172b6:	41 0f be 75 ff       	movsbl -0x1(%r13),%esi
   172bb:	8d 46 bf             	lea    -0x41(%rsi),%eax
   172be:	3c 18                	cmp    $0x18,%al
   172c0:	0f 87 02 01 00 00    	ja     173c8 <inet_pton6+0x188>
   172c6:	44 8d 76 20          	lea    0x20(%rsi),%r14d
   172ca:	48 8d 3d 5f 29 01 00 	lea    0x1295f(%rip),%rdi        # 29c30 <xdigits.2874>
   172d1:	44 89 f6             	mov    %r14d,%esi
   172d4:	e8 87 f2 ff ff       	callq  16560 <strchr>
   172d9:	48 85 c0             	test   %rax,%rax
   172dc:	0f 84 82 01 00 00    	je     17464 <inet_pton6+0x224>
   172e2:	48 8d 0d 47 29 01 00 	lea    0x12947(%rip),%rcx        # 29c30 <xdigits.2874>
   172e9:	41 c1 e7 04          	shl    $0x4,%r15d
   172ed:	48 29 c8             	sub    %rcx,%rax
   172f0:	41 09 c7             	or     %eax,%r15d
   172f3:	41 81 ff ff ff 00 00 	cmp    $0xffff,%r15d
   172fa:	0f 87 b0 00 00 00    	ja     173b0 <inet_pton6+0x170>
   17300:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   17306:	4c 39 eb             	cmp    %r13,%rbx
   17309:	75 a7                	jne    172b2 <inet_pton6+0x72>
   1730b:	45 89 e1             	mov    %r12d,%r9d
   1730e:	4c 8b 65 88          	mov    -0x78(%rbp),%r12
   17312:	45 85 c9             	test   %r9d,%r9d
   17315:	74 25                	je     1733c <inet_pton6+0xfc>
   17317:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   1731b:	48 89 c8             	mov    %rcx,%rax
   1731e:	48 83 c0 02          	add    $0x2,%rax
   17322:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   17326:	0f 82 84 00 00 00    	jb     173b0 <inet_pton6+0x170>
   1732c:	44 89 fa             	mov    %r15d,%edx
   1732f:	44 88 79 01          	mov    %r15b,0x1(%rcx)
   17333:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   17337:	c1 ea 08             	shr    $0x8,%edx
   1733a:	88 11                	mov    %dl,(%rcx)
   1733c:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   17340:	48 85 d2             	test   %rdx,%rdx
   17343:	74 5c                	je     173a1 <inet_pton6+0x161>
   17345:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   17349:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
   1734d:	48 89 c8             	mov    %rcx,%rax
   17350:	48 29 d0             	sub    %rdx,%rax
   17353:	48 39 d9             	cmp    %rbx,%rcx
   17356:	48 63 d0             	movslq %eax,%rdx
   17359:	74 55                	je     173b0 <inet_pton6+0x170>
   1735b:	85 c0                	test   %eax,%eax
   1735d:	7e 29                	jle    17388 <inet_pton6+0x148>
   1735f:	48 03 55 a8          	add    -0x58(%rbp),%rdx
   17363:	8d 70 ff             	lea    -0x1(%rax),%esi
   17366:	31 c0                	xor    %eax,%eax
   17368:	48 f7 d6             	not    %rsi
   1736b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17370:	0f b6 4c 02 ff       	movzbl -0x1(%rdx,%rax,1),%ecx
   17375:	41 88 4c 04 0f       	mov    %cl,0xf(%r12,%rax,1)
   1737a:	c6 44 02 ff 00       	movb   $0x0,-0x1(%rdx,%rax,1)
   1737f:	48 83 e8 01          	sub    $0x1,%rax
   17383:	48 39 c6             	cmp    %rax,%rsi
   17386:	75 e8                	jne    17370 <inet_pton6+0x130>
   17388:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
   1738c:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
   17390:	ba 10 00 00 00       	mov    $0x10,%edx
   17395:	e8 56 e8 ff ff       	callq  15bf0 <memcpy>
   1739a:	b8 01 00 00 00       	mov    $0x1,%eax
   1739f:	eb 11                	jmp    173b2 <inet_pton6+0x172>
   173a1:	4c 8b 65 b0          	mov    -0x50(%rbp),%r12
   173a5:	4c 39 65 b8          	cmp    %r12,-0x48(%rbp)
   173a9:	74 dd                	je     17388 <inet_pton6+0x148>
   173ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   173b0:	31 c0                	xor    %eax,%eax
   173b2:	48 83 c4 58          	add    $0x58,%rsp
   173b6:	5b                   	pop    %rbx
   173b7:	41 5c                	pop    %r12
   173b9:	41 5d                	pop    %r13
   173bb:	41 5e                	pop    %r14
   173bd:	41 5f                	pop    %r15
   173bf:	5d                   	pop    %rbp
   173c0:	c3                   	retq   
   173c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   173c8:	44 0f be f6          	movsbl %sil,%r14d
   173cc:	45 85 f6             	test   %r14d,%r14d
   173cf:	0f 84 36 ff ff ff    	je     1730b <inet_pton6+0xcb>
   173d5:	48 8d 3d 54 28 01 00 	lea    0x12854(%rip),%rdi        # 29c30 <xdigits.2874>
   173dc:	44 89 f6             	mov    %r14d,%esi
   173df:	e8 7c f1 ff ff       	callq  16560 <strchr>
   173e4:	48 85 c0             	test   %rax,%rax
   173e7:	0f 85 f5 fe ff ff    	jne    172e2 <inet_pton6+0xa2>
   173ed:	41 83 fe 3a          	cmp    $0x3a,%r14d
   173f1:	75 71                	jne    17464 <inet_pton6+0x224>
   173f3:	45 85 e4             	test   %r12d,%r12d
   173f6:	74 50                	je     17448 <inet_pton6+0x208>
   173f8:	41 80 7d 00 00       	cmpb   $0x0,0x0(%r13)
   173fd:	74 b1                	je     173b0 <inet_pton6+0x170>
   173ff:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
   17403:	48 89 f8             	mov    %rdi,%rax
   17406:	48 83 c0 02          	add    $0x2,%rax
   1740a:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   1740e:	72 a0                	jb     173b0 <inet_pton6+0x170>
   17410:	44 89 fa             	mov    %r15d,%edx
   17413:	44 88 7f 01          	mov    %r15b,0x1(%rdi)
   17417:	4c 89 6d 90          	mov    %r13,-0x70(%rbp)
   1741b:	c1 ea 08             	shr    $0x8,%edx
   1741e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   17422:	45 31 ff             	xor    %r15d,%r15d
   17425:	88 17                	mov    %dl,(%rdi)
   17427:	45 31 e4             	xor    %r12d,%r12d
   1742a:	e9 d7 fe ff ff       	jmpq   17306 <inet_pton6+0xc6>
   1742f:	90                   	nop
   17430:	41 80 7d 01 3a       	cmpb   $0x3a,0x1(%r13)
   17435:	0f 85 75 ff ff ff    	jne    173b0 <inet_pton6+0x170>
   1743b:	49 83 c5 01          	add    $0x1,%r13
   1743f:	e9 48 fe ff ff       	jmpq   1728c <inet_pton6+0x4c>
   17444:	0f 1f 40 00          	nopl   0x0(%rax)
   17448:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
   1744d:	0f 85 5d ff ff ff    	jne    173b0 <inet_pton6+0x170>
   17453:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   17457:	4c 89 6d 90          	mov    %r13,-0x70(%rbp)
   1745b:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1745f:	e9 a2 fe ff ff       	jmpq   17306 <inet_pton6+0xc6>
   17464:	41 83 fe 2e          	cmp    $0x2e,%r14d
   17468:	4c 8b 65 88          	mov    -0x78(%rbp),%r12
   1746c:	0f 85 3e ff ff ff    	jne    173b0 <inet_pton6+0x170>
   17472:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   17476:	4c 8d 68 04          	lea    0x4(%rax),%r13
   1747a:	4c 39 6d b8          	cmp    %r13,-0x48(%rbp)
   1747e:	0f 82 2c ff ff ff    	jb     173b0 <inet_pton6+0x170>
   17484:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   17488:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1748c:	48 29 c3             	sub    %rax,%rbx
   1748f:	48 89 c7             	mov    %rax,%rdi
   17492:	48 89 de             	mov    %rbx,%rsi
   17495:	e8 b6 fc ff ff       	callq  17150 <inet_pton4>
   1749a:	85 c0                	test   %eax,%eax
   1749c:	4c 89 6d b0          	mov    %r13,-0x50(%rbp)
   174a0:	0f 8f 96 fe ff ff    	jg     1733c <inet_pton6+0xfc>
   174a6:	e9 05 ff ff ff       	jmpq   173b0 <inet_pton6+0x170>
   174ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000174b0 <__dup_config>:
   174b0:	55                   	push   %rbp
   174b1:	48 89 e5             	mov    %rsp,%rbp
   174b4:	41 57                	push   %r15
   174b6:	41 56                	push   %r14
   174b8:	41 55                	push   %r13
   174ba:	41 54                	push   %r12
   174bc:	49 89 d4             	mov    %rdx,%r12
   174bf:	53                   	push   %rbx
   174c0:	48 83 ec 38          	sub    $0x38,%rsp
   174c4:	4c 8b 3e             	mov    (%rsi),%r15
   174c7:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
   174cb:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
   174cf:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
   174d3:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
   174d7:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
   174db:	4d 85 ff             	test   %r15,%r15
   174de:	0f 84 04 01 00 00    	je     175e8 <__dup_config+0x138>
   174e4:	e9 0c 01 00 00       	jmpq   175f5 <__dup_config+0x145>
   174e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   174f0:	4d 85 f6             	test   %r14,%r14
   174f3:	41 0f 94 c1          	sete   %r9b
   174f7:	45 31 ed             	xor    %r13d,%r13d
   174fa:	48 85 db             	test   %rbx,%rbx
   174fd:	49 8b 37             	mov    (%r15),%rsi
   17500:	75 09                	jne    1750b <__dup_config+0x5b>
   17502:	48 85 f6             	test   %rsi,%rsi
   17505:	0f 85 65 02 00 00    	jne    17770 <__dup_config+0x2c0>
   1750b:	49 8b 77 08          	mov    0x8(%r15),%rsi
   1750f:	48 85 f6             	test   %rsi,%rsi
   17512:	74 09                	je     1751d <__dup_config+0x6d>
   17514:	45 84 c9             	test   %r9b,%r9b
   17517:	0f 85 23 02 00 00    	jne    17740 <__dup_config+0x290>
   1751d:	bf 50 00 00 00       	mov    $0x50,%edi
   17522:	41 ff 54 24 20       	callq  *0x20(%r12)
   17527:	48 85 c0             	test   %rax,%rax
   1752a:	0f 84 c8 01 00 00    	je     176f8 <__dup_config+0x248>
   17530:	49 8b 57 10          	mov    0x10(%r15),%rdx
   17534:	48 89 18             	mov    %rbx,(%rax)
   17537:	4c 89 70 08          	mov    %r14,0x8(%rax)
   1753b:	48 89 50 10          	mov    %rdx,0x10(%rax)
   1753f:	49 8b 57 18          	mov    0x18(%r15),%rdx
   17543:	4c 89 68 20          	mov    %r13,0x20(%rax)
   17547:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   1754e:	00 
   1754f:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   17556:	00 
   17557:	48 89 50 18          	mov    %rdx,0x18(%rax)
   1755b:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
   17560:	48 85 d2             	test   %rdx,%rdx
   17563:	0f 84 a7 01 00 00    	je     17710 <__dup_config+0x260>
   17569:	48 8b 4a 30          	mov    0x30(%rdx),%rcx
   1756d:	48 89 41 28          	mov    %rax,0x28(%rcx)
   17571:	48 89 42 30          	mov    %rax,0x30(%rdx)
   17575:	48 89 50 28          	mov    %rdx,0x28(%rax)
   17579:	48 89 48 30          	mov    %rcx,0x30(%rax)
   1757d:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   17581:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
   17588:	00 
   17589:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
   17590:	00 
   17591:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
   17598:	00 
   17599:	48 8b 17             	mov    (%rdi),%rdx
   1759c:	48 85 d2             	test   %rdx,%rdx
   1759f:	0f 84 83 01 00 00    	je     17728 <__dup_config+0x278>
   175a5:	48 8b 4a 48          	mov    0x48(%rdx),%rcx
   175a9:	48 89 41 40          	mov    %rax,0x40(%rcx)
   175ad:	48 89 42 48          	mov    %rax,0x48(%rdx)
   175b1:	48 89 50 40          	mov    %rdx,0x40(%rax)
   175b5:	48 89 48 48          	mov    %rcx,0x48(%rax)
   175b9:	49 83 7f 38 00       	cmpq   $0x0,0x38(%r15)
   175be:	74 24                	je     175e4 <__dup_config+0x134>
   175c0:	4c 8b 4d c8          	mov    -0x38(%rbp),%r9
   175c4:	4c 8b 45 c0          	mov    -0x40(%rbp),%r8
   175c8:	48 8d 48 38          	lea    0x38(%rax),%rcx
   175cc:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
   175d0:	49 8d 77 38          	lea    0x38(%r15),%rsi
   175d4:	4c 89 e2             	mov    %r12,%rdx
   175d7:	e8 d4 fe ff ff       	callq  174b0 <__dup_config>
   175dc:	85 c0                	test   %eax,%eax
   175de:	0f 88 19 01 00 00    	js     176fd <__dup_config+0x24d>
   175e4:	4d 8b 7f 40          	mov    0x40(%r15),%r15
   175e8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   175ec:	4c 3b 38             	cmp    (%rax),%r15
   175ef:	0f 84 cb 01 00 00    	je     177c0 <__dup_config+0x310>
   175f5:	49 83 3f 00          	cmpq   $0x0,(%r15)
   175f9:	0f 84 d1 00 00 00    	je     176d0 <__dup_config+0x220>
   175ff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17603:	49 8b 4f 10          	mov    0x10(%r15),%rcx
   17607:	48 63 30             	movslq (%rax),%rsi
   1760a:	48 39 ce             	cmp    %rcx,%rsi
   1760d:	48 89 f0             	mov    %rsi,%rax
   17610:	77 76                	ja     17688 <__dup_config+0x1d8>
   17612:	31 db                	xor    %ebx,%ebx
   17614:	49 83 7f 08 00       	cmpq   $0x0,0x8(%r15)
   17619:	41 89 cd             	mov    %ecx,%r13d
   1761c:	0f 84 3e 01 00 00    	je     17760 <__dup_config+0x2b0>
   17622:	49 8b 57 18          	mov    0x18(%r15),%rdx
   17626:	48 39 f2             	cmp    %rsi,%rdx
   17629:	72 35                	jb     17660 <__dup_config+0x1b0>
   1762b:	41 01 d5             	add    %edx,%r13d
   1762e:	45 31 f6             	xor    %r14d,%r14d
   17631:	45 85 ed             	test   %r13d,%r13d
   17634:	0f 84 b6 fe ff ff    	je     174f0 <__dup_config+0x40>
   1763a:	49 63 fd             	movslq %r13d,%rdi
   1763d:	41 ff 54 24 20       	callq  *0x20(%r12)
   17642:	48 85 c0             	test   %rax,%rax
   17645:	49 89 c5             	mov    %rax,%r13
   17648:	0f 84 aa 00 00 00    	je     176f8 <__dup_config+0x248>
   1764e:	4d 85 f6             	test   %r14,%r14
   17651:	41 0f 94 c1          	sete   %r9b
   17655:	e9 a0 fe ff ff       	jmpq   174fa <__dup_config+0x4a>
   1765a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17660:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
   17664:	29 d0                	sub    %edx,%eax
   17666:	4c 8b 37             	mov    (%rdi),%r14
   17669:	49 8d 34 16          	lea    (%r14,%rdx,1),%rsi
   1766d:	48 89 37             	mov    %rsi,(%rdi)
   17670:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   17674:	49 8b 77 08          	mov    0x8(%r15),%rsi
   17678:	89 07                	mov    %eax,(%rdi)
   1767a:	4c 89 f7             	mov    %r14,%rdi
   1767d:	e8 6e e5 ff ff       	callq  15bf0 <memcpy>
   17682:	eb ad                	jmp    17631 <__dup_config+0x181>
   17684:	0f 1f 40 00          	nopl   0x0(%rax)
   17688:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
   1768c:	29 c8                	sub    %ecx,%eax
   1768e:	48 8b 1f             	mov    (%rdi),%rbx
   17691:	48 8d 14 0b          	lea    (%rbx,%rcx,1),%rdx
   17695:	48 89 17             	mov    %rdx,(%rdi)
   17698:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   1769c:	48 89 ca             	mov    %rcx,%rdx
   1769f:	49 8b 37             	mov    (%r15),%rsi
   176a2:	89 07                	mov    %eax,(%rdi)
   176a4:	48 89 df             	mov    %rbx,%rdi
   176a7:	e8 44 e5 ff ff       	callq  15bf0 <memcpy>
   176ac:	49 83 7f 08 00       	cmpq   $0x0,0x8(%r15)
   176b1:	0f 84 f1 00 00 00    	je     177a8 <__dup_config+0x2f8>
   176b7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   176bb:	45 31 ed             	xor    %r13d,%r13d
   176be:	48 63 30             	movslq (%rax),%rsi
   176c1:	48 89 f0             	mov    %rsi,%rax
   176c4:	e9 59 ff ff ff       	jmpq   17622 <__dup_config+0x172>
   176c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   176d0:	31 db                	xor    %ebx,%ebx
   176d2:	49 83 7f 08 00       	cmpq   $0x0,0x8(%r15)
   176d7:	75 de                	jne    176b7 <__dup_config+0x207>
   176d9:	45 31 ed             	xor    %r13d,%r13d
   176dc:	45 31 f6             	xor    %r14d,%r14d
   176df:	bf 50 00 00 00       	mov    $0x50,%edi
   176e4:	41 ff 54 24 20       	callq  *0x20(%r12)
   176e9:	48 85 c0             	test   %rax,%rax
   176ec:	0f 85 3e fe ff ff    	jne    17530 <__dup_config+0x80>
   176f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   176f8:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   176fd:	48 83 c4 38          	add    $0x38,%rsp
   17701:	5b                   	pop    %rbx
   17702:	41 5c                	pop    %r12
   17704:	41 5d                	pop    %r13
   17706:	41 5e                	pop    %r14
   17708:	41 5f                	pop    %r15
   1770a:	5d                   	pop    %rbp
   1770b:	c3                   	retq   
   1770c:	0f 1f 40 00          	nopl   0x0(%rax)
   17710:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   17715:	48 89 40 28          	mov    %rax,0x28(%rax)
   17719:	48 89 40 30          	mov    %rax,0x30(%rax)
   1771d:	e9 5b fe ff ff       	jmpq   1757d <__dup_config+0xcd>
   17722:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17728:	48 89 07             	mov    %rax,(%rdi)
   1772b:	48 89 40 40          	mov    %rax,0x40(%rax)
   1772f:	48 89 40 48          	mov    %rax,0x48(%rax)
   17733:	e9 81 fe ff ff       	jmpq   175b9 <__dup_config+0x109>
   17738:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1773f:	00 
   17740:	45 31 c0             	xor    %r8d,%r8d
   17743:	49 39 dd             	cmp    %rbx,%r13
   17746:	74 56                	je     1779e <__dup_config+0x2ee>
   17748:	4f 8d 74 05 00       	lea    0x0(%r13,%r8,1),%r14
   1774d:	49 8b 57 18          	mov    0x18(%r15),%rdx
   17751:	4c 89 f7             	mov    %r14,%rdi
   17754:	e8 97 e4 ff ff       	callq  15bf0 <memcpy>
   17759:	e9 bf fd ff ff       	jmpq   1751d <__dup_config+0x6d>
   1775e:	66 90                	xchg   %ax,%ax
   17760:	45 31 f6             	xor    %r14d,%r14d
   17763:	e9 c9 fe ff ff       	jmpq   17631 <__dup_config+0x181>
   17768:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1776f:	00 
   17770:	49 8b 57 10          	mov    0x10(%r15),%rdx
   17774:	4c 89 ef             	mov    %r13,%rdi
   17777:	44 88 4d a7          	mov    %r9b,-0x59(%rbp)
   1777b:	4c 89 eb             	mov    %r13,%rbx
   1777e:	e8 6d e4 ff ff       	callq  15bf0 <memcpy>
   17783:	49 8b 77 08          	mov    0x8(%r15),%rsi
   17787:	48 85 f6             	test   %rsi,%rsi
   1778a:	0f 84 8d fd ff ff    	je     1751d <__dup_config+0x6d>
   17790:	44 0f b6 4d a7       	movzbl -0x59(%rbp),%r9d
   17795:	45 84 c9             	test   %r9b,%r9b
   17798:	0f 84 7f fd ff ff    	je     1751d <__dup_config+0x6d>
   1779e:	4d 8b 47 10          	mov    0x10(%r15),%r8
   177a2:	eb a4                	jmp    17748 <__dup_config+0x298>
   177a4:	0f 1f 40 00          	nopl   0x0(%rax)
   177a8:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   177ae:	45 31 f6             	xor    %r14d,%r14d
   177b1:	45 31 ed             	xor    %r13d,%r13d
   177b4:	e9 41 fd ff ff       	jmpq   174fa <__dup_config+0x4a>
   177b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   177c0:	48 83 c4 38          	add    $0x38,%rsp
   177c4:	31 c0                	xor    %eax,%eax
   177c6:	5b                   	pop    %rbx
   177c7:	41 5c                	pop    %r12
   177c9:	41 5d                	pop    %r13
   177cb:	41 5e                	pop    %r14
   177cd:	41 5f                	pop    %r15
   177cf:	5d                   	pop    %rbp
   177d0:	c3                   	retq   
   177d1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   177d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   177dd:	00 00 00 

00000000000177e0 <__get_config>:
   177e0:	55                   	push   %rbp
   177e1:	48 89 e5             	mov    %rsp,%rbp
   177e4:	41 57                	push   %r15
   177e6:	41 56                	push   %r14
   177e8:	41 55                	push   %r13
   177ea:	41 54                	push   %r12
   177ec:	49 89 fe             	mov    %rdi,%r14
   177ef:	53                   	push   %rbx
   177f0:	48 83 ec 18          	sub    $0x18,%rsp
   177f4:	0f b6 06             	movzbl (%rsi),%eax
   177f7:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
   177fb:	84 c0                	test   %al,%al
   177fd:	0f 84 9d 00 00 00    	je     178a0 <__get_config+0xc0>
   17803:	3c 2e                	cmp    $0x2e,%al
   17805:	0f 84 a6 00 00 00    	je     178b1 <__get_config+0xd1>
   1780b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1780f:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   17815:	48 83 c0 01          	add    $0x1,%rax
   17819:	eb 0c                	jmp    17827 <__get_config+0x47>
   1781b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17820:	84 d2                	test   %dl,%dl
   17822:	74 1a                	je     1783e <__get_config+0x5e>
   17824:	49 89 cc             	mov    %rcx,%r12
   17827:	0f b6 10             	movzbl (%rax),%edx
   1782a:	49 89 c5             	mov    %rax,%r13
   1782d:	48 83 c0 01          	add    $0x1,%rax
   17831:	45 89 e7             	mov    %r12d,%r15d
   17834:	49 8d 4c 24 01       	lea    0x1(%r12),%rcx
   17839:	80 fa 2e             	cmp    $0x2e,%dl
   1783c:	75 e2                	jne    17820 <__get_config+0x40>
   1783e:	49 8b 1e             	mov    (%r14),%rbx
   17841:	48 85 db             	test   %rbx,%rbx
   17844:	74 0e                	je     17854 <__get_config+0x74>
   17846:	eb 11                	jmp    17859 <__get_config+0x79>
   17848:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1784f:	00 
   17850:	48 8b 5b 40          	mov    0x40(%rbx),%rbx
   17854:	49 3b 1e             	cmp    (%r14),%rbx
   17857:	74 47                	je     178a0 <__get_config+0xc0>
   17859:	4c 39 63 10          	cmp    %r12,0x10(%rbx)
   1785d:	75 f1                	jne    17850 <__get_config+0x70>
   1785f:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   17863:	48 8b 3b             	mov    (%rbx),%rdi
   17866:	4c 89 e2             	mov    %r12,%rdx
   17869:	e8 22 de ff ff       	callq  15690 <memcmp>
   1786e:	85 c0                	test   %eax,%eax
   17870:	75 de                	jne    17850 <__get_config+0x70>
   17872:	41 80 7d 00 01       	cmpb   $0x1,0x0(%r13)
   17877:	4c 8d 73 38          	lea    0x38(%rbx),%r14
   1787b:	41 83 df ff          	sbb    $0xffffffff,%r15d
   1787f:	4d 63 ff             	movslq %r15d,%r15
   17882:	4c 01 7d c8          	add    %r15,-0x38(%rbp)
   17886:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1788a:	0f b6 00             	movzbl (%rax),%eax
   1788d:	84 c0                	test   %al,%al
   1788f:	0f 85 6e ff ff ff    	jne    17803 <__get_config+0x23>
   17895:	48 89 d8             	mov    %rbx,%rax
   17898:	eb 08                	jmp    178a2 <__get_config+0xc2>
   1789a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   178a0:	31 c0                	xor    %eax,%eax
   178a2:	48 83 c4 18          	add    $0x18,%rsp
   178a6:	5b                   	pop    %rbx
   178a7:	41 5c                	pop    %r12
   178a9:	41 5d                	pop    %r13
   178ab:	41 5e                	pop    %r14
   178ad:	41 5f                	pop    %r15
   178af:	5d                   	pop    %rbp
   178b0:	c3                   	retq   
   178b1:	4c 8b 6d c8          	mov    -0x38(%rbp),%r13
   178b5:	45 31 e4             	xor    %r12d,%r12d
   178b8:	45 31 ff             	xor    %r15d,%r15d
   178bb:	eb 81                	jmp    1783e <__get_config+0x5e>
   178bd:	0f 1f 00             	nopl   (%rax)

00000000000178c0 <__del_config>:
   178c0:	55                   	push   %rbp
   178c1:	48 89 e5             	mov    %rsp,%rbp
   178c4:	41 57                	push   %r15
   178c6:	41 56                	push   %r14
   178c8:	41 55                	push   %r13
   178ca:	41 54                	push   %r12
   178cc:	49 89 f7             	mov    %rsi,%r15
   178cf:	53                   	push   %rbx
   178d0:	49 89 ce             	mov    %rcx,%r14
   178d3:	48 83 ec 28          	sub    $0x28,%rsp
   178d7:	0f b6 01             	movzbl (%rcx),%eax
   178da:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   178de:	48 89 55 c0          	mov    %rdx,-0x40(%rbp)
   178e2:	3c 2e                	cmp    $0x2e,%al
   178e4:	0f 84 a0 01 00 00    	je     17a8a <__del_config+0x1ca>
   178ea:	84 c0                	test   %al,%al
   178ec:	0f 84 98 01 00 00    	je     17a8a <__del_config+0x1ca>
   178f2:	48 8d 41 01          	lea    0x1(%rcx),%rax
   178f6:	eb 0c                	jmp    17904 <__del_config+0x44>
   178f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   178ff:	00 
   17900:	84 d2                	test   %dl,%dl
   17902:	74 15                	je     17919 <__del_config+0x59>
   17904:	0f b6 10             	movzbl (%rax),%edx
   17907:	49 89 c4             	mov    %rax,%r12
   1790a:	49 89 c5             	mov    %rax,%r13
   1790d:	4d 29 f4             	sub    %r14,%r12
   17910:	48 83 c0 01          	add    $0x1,%rax
   17914:	80 fa 2e             	cmp    $0x2e,%dl
   17917:	75 e7                	jne    17900 <__del_config+0x40>
   17919:	49 8b 1f             	mov    (%r15),%rbx
   1791c:	48 85 db             	test   %rbx,%rbx
   1791f:	74 0b                	je     1792c <__del_config+0x6c>
   17921:	eb 12                	jmp    17935 <__del_config+0x75>
   17923:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17928:	48 8b 5b 40          	mov    0x40(%rbx),%rbx
   1792c:	49 3b 1f             	cmp    (%r15),%rbx
   1792f:	0f 84 0b 01 00 00    	je     17a40 <__del_config+0x180>
   17935:	4c 39 63 10          	cmp    %r12,0x10(%rbx)
   17939:	75 ed                	jne    17928 <__del_config+0x68>
   1793b:	48 8b 3b             	mov    (%rbx),%rdi
   1793e:	4c 89 e2             	mov    %r12,%rdx
   17941:	4c 89 f6             	mov    %r14,%rsi
   17944:	e8 47 dd ff ff       	callq  15690 <memcmp>
   17949:	85 c0                	test   %eax,%eax
   1794b:	41 89 c0             	mov    %eax,%r8d
   1794e:	75 d8                	jne    17928 <__del_config+0x68>
   17950:	41 80 7d 00 00       	cmpb   $0x0,0x0(%r13)
   17955:	0f 84 d5 00 00 00    	je     17a30 <__del_config+0x170>
   1795b:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   17960:	44 89 45 bc          	mov    %r8d,-0x44(%rbp)
   17964:	0f 85 d6 00 00 00    	jne    17a40 <__del_config+0x180>
   1796a:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   1796e:	4b 8d 4c 26 01       	lea    0x1(%r14,%r12,1),%rcx
   17973:	48 8d 73 38          	lea    0x38(%rbx),%rsi
   17977:	48 89 da             	mov    %rbx,%rdx
   1797a:	e8 41 ff ff ff       	callq  178c0 <__del_config>
   1797f:	85 c0                	test   %eax,%eax
   17981:	0f 88 fe 00 00 00    	js     17a85 <__del_config+0x1c5>
   17987:	48 83 7b 38 00       	cmpq   $0x0,0x38(%rbx)
   1798c:	44 8b 45 bc          	mov    -0x44(%rbp),%r8d
   17990:	0f 85 b0 00 00 00    	jne    17a46 <__del_config+0x186>
   17996:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1799d:	00 00 00 
   179a0:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   179a5:	74 18                	je     179bf <__del_config+0xff>
   179a7:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   179ab:	48 8b 41 18          	mov    0x18(%rcx),%rax
   179af:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   179b3:	48 83 e8 01          	sub    $0x1,%rax
   179b7:	48 2b 43 10          	sub    0x10(%rbx),%rax
   179bb:	48 89 41 18          	mov    %rax,0x18(%rcx)
   179bf:	49 3b 1f             	cmp    (%r15),%rbx
   179c2:	48 8b 53 40          	mov    0x40(%rbx),%rdx
   179c6:	0f 84 a5 00 00 00    	je     17a71 <__del_config+0x1b1>
   179cc:	48 8b 43 48          	mov    0x48(%rbx),%rax
   179d0:	48 89 50 40          	mov    %rdx,0x40(%rax)
   179d4:	48 8b 53 40          	mov    0x40(%rbx),%rdx
   179d8:	48 89 42 48          	mov    %rax,0x48(%rdx)
   179dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   179e0:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   179e4:	48 3b 58 08          	cmp    0x8(%rax),%rbx
   179e8:	74 6e                	je     17a58 <__del_config+0x198>
   179ea:	48 8b 43 30          	mov    0x30(%rbx),%rax
   179ee:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   179f2:	48 89 50 28          	mov    %rdx,0x28(%rax)
   179f6:	48 8b 53 28          	mov    0x28(%rbx),%rdx
   179fa:	48 85 ff             	test   %rdi,%rdi
   179fd:	48 89 42 30          	mov    %rax,0x30(%rdx)
   17a01:	74 0f                	je     17a12 <__del_config+0x152>
   17a03:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17a07:	44 89 45 c0          	mov    %r8d,-0x40(%rbp)
   17a0b:	ff 50 28             	callq  *0x28(%rax)
   17a0e:	44 8b 45 c0          	mov    -0x40(%rbp),%r8d
   17a12:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17a16:	44 89 45 c0          	mov    %r8d,-0x40(%rbp)
   17a1a:	48 89 df             	mov    %rbx,%rdi
   17a1d:	ff 50 28             	callq  *0x28(%rax)
   17a20:	44 8b 45 c0          	mov    -0x40(%rbp),%r8d
   17a24:	eb 20                	jmp    17a46 <__del_config+0x186>
   17a26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17a2d:	00 00 00 
   17a30:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   17a35:	0f 85 65 ff ff ff    	jne    179a0 <__del_config+0xe0>
   17a3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17a40:	41 b8 fc ff ff ff    	mov    $0xfffffffc,%r8d
   17a46:	48 83 c4 28          	add    $0x28,%rsp
   17a4a:	44 89 c0             	mov    %r8d,%eax
   17a4d:	5b                   	pop    %rbx
   17a4e:	41 5c                	pop    %r12
   17a50:	41 5d                	pop    %r13
   17a52:	41 5e                	pop    %r14
   17a54:	41 5f                	pop    %r15
   17a56:	5d                   	pop    %rbp
   17a57:	c3                   	retq   
   17a58:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   17a5c:	48 39 d3             	cmp    %rdx,%rbx
   17a5f:	b8 00 00 00 00       	mov    $0x0,%eax
   17a64:	48 0f 45 c2          	cmovne %rdx,%rax
   17a68:	48 89 41 08          	mov    %rax,0x8(%rcx)
   17a6c:	e9 79 ff ff ff       	jmpq   179ea <__del_config+0x12a>
   17a71:	48 39 d3             	cmp    %rdx,%rbx
   17a74:	b8 00 00 00 00       	mov    $0x0,%eax
   17a79:	48 0f 45 c2          	cmovne %rdx,%rax
   17a7d:	49 89 07             	mov    %rax,(%r15)
   17a80:	e9 47 ff ff ff       	jmpq   179cc <__del_config+0x10c>
   17a85:	41 89 c0             	mov    %eax,%r8d
   17a88:	eb bc                	jmp    17a46 <__del_config+0x186>
   17a8a:	4d 89 f5             	mov    %r14,%r13
   17a8d:	45 31 e4             	xor    %r12d,%r12d
   17a90:	e9 84 fe ff ff       	jmpq   17919 <__del_config+0x59>
   17a95:	90                   	nop
   17a96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17a9d:	00 00 00 

0000000000017aa0 <__add_config>:
   17aa0:	55                   	push   %rbp
   17aa1:	48 89 e5             	mov    %rsp,%rbp
   17aa4:	41 57                	push   %r15
   17aa6:	41 56                	push   %r14
   17aa8:	41 55                	push   %r13
   17aaa:	41 54                	push   %r12
   17aac:	49 89 f6             	mov    %rsi,%r14
   17aaf:	53                   	push   %rbx
   17ab0:	49 89 ff             	mov    %rdi,%r15
   17ab3:	48 83 ec 38          	sub    $0x38,%rsp
   17ab7:	85 d2                	test   %edx,%edx
   17ab9:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   17abd:	89 55 c4             	mov    %edx,-0x3c(%rbp)
   17ac0:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   17ac4:	44 89 45 c0          	mov    %r8d,-0x40(%rbp)
   17ac8:	4c 89 4d a8          	mov    %r9,-0x58(%rbp)
   17acc:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
   17ad3:	00 
   17ad4:	0f 84 85 00 00 00    	je     17b5f <__add_config+0xbf>
   17ada:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17ae0:	45 31 ed             	xor    %r13d,%r13d
   17ae3:	41 80 3e 2e          	cmpb   $0x2e,(%r14)
   17ae7:	48 63 5d c4          	movslq -0x3c(%rbp),%rbx
   17aeb:	75 0a                	jne    17af7 <__add_config+0x57>
   17aed:	eb 11                	jmp    17b00 <__add_config+0x60>
   17aef:	90                   	nop
   17af0:	43 80 3c 2e 2e       	cmpb   $0x2e,(%r14,%r13,1)
   17af5:	74 09                	je     17b00 <__add_config+0x60>
   17af7:	49 83 c5 01          	add    $0x1,%r13
   17afb:	49 39 dd             	cmp    %rbx,%r13
   17afe:	75 f0                	jne    17af0 <__add_config+0x50>
   17b00:	4d 8b 27             	mov    (%r15),%r12
   17b03:	4d 85 e4             	test   %r12,%r12
   17b06:	74 0d                	je     17b15 <__add_config+0x75>
   17b08:	eb 10                	jmp    17b1a <__add_config+0x7a>
   17b0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17b10:	4d 8b 64 24 40       	mov    0x40(%r12),%r12
   17b15:	4d 3b 27             	cmp    (%r15),%r12
   17b18:	74 5e                	je     17b78 <__add_config+0xd8>
   17b1a:	4d 39 6c 24 10       	cmp    %r13,0x10(%r12)
   17b1f:	75 ef                	jne    17b10 <__add_config+0x70>
   17b21:	49 8b 3c 24          	mov    (%r12),%rdi
   17b25:	4c 89 ea             	mov    %r13,%rdx
   17b28:	4c 89 f6             	mov    %r14,%rsi
   17b2b:	e8 60 db ff ff       	callq  15690 <memcmp>
   17b30:	85 c0                	test   %eax,%eax
   17b32:	75 dc                	jne    17b10 <__add_config+0x70>
   17b34:	4c 89 65 c8          	mov    %r12,-0x38(%rbp)
   17b38:	49 39 dd             	cmp    %rbx,%r13
   17b3b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17b3f:	49 83 d5 00          	adc    $0x0,%r13
   17b43:	4d 01 ee             	add    %r13,%r14
   17b46:	44 29 6d c4          	sub    %r13d,-0x3c(%rbp)
   17b4a:	4c 8d 78 38          	lea    0x38(%rax),%r15
   17b4e:	0f 84 03 01 00 00    	je     17c57 <__add_config+0x1b7>
   17b54:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17b58:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   17b5d:	74 81                	je     17ae0 <__add_config+0x40>
   17b5f:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   17b64:	48 83 c4 38          	add    $0x38,%rsp
   17b68:	5b                   	pop    %rbx
   17b69:	41 5c                	pop    %r12
   17b6b:	41 5d                	pop    %r13
   17b6d:	41 5e                	pop    %r14
   17b6f:	41 5f                	pop    %r15
   17b71:	5d                   	pop    %rbp
   17b72:	c3                   	retq   
   17b73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17b78:	4c 8b 65 b8          	mov    -0x48(%rbp),%r12
   17b7c:	bf 50 00 00 00       	mov    $0x50,%edi
   17b81:	41 ff 54 24 20       	callq  *0x20(%r12)
   17b86:	48 85 c0             	test   %rax,%rax
   17b89:	0f 84 11 01 00 00    	je     17ca0 <__add_config+0x200>
   17b8f:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
   17b94:	4c 89 30             	mov    %r14,(%rax)
   17b97:	4c 89 68 10          	mov    %r13,0x10(%rax)
   17b9b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   17ba2:	00 
   17ba3:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   17baa:	00 
   17bab:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   17bb2:	00 
   17bb3:	48 85 d2             	test   %rdx,%rdx
   17bb6:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   17bbd:	00 
   17bbe:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   17bc5:	00 
   17bc6:	74 67                	je     17c2f <__add_config+0x18f>
   17bc8:	48 8b 4a 30          	mov    0x30(%rdx),%rcx
   17bcc:	48 89 41 28          	mov    %rax,0x28(%rcx)
   17bd0:	48 89 42 30          	mov    %rax,0x30(%rdx)
   17bd4:	48 89 50 28          	mov    %rdx,0x28(%rax)
   17bd8:	48 89 48 30          	mov    %rcx,0x30(%rax)
   17bdc:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
   17be3:	00 
   17be4:	49 8b 17             	mov    (%r15),%rdx
   17be7:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
   17bee:	00 
   17bef:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
   17bf6:	00 
   17bf7:	48 85 d2             	test   %rdx,%rdx
   17bfa:	74 4e                	je     17c4a <__add_config+0x1aa>
   17bfc:	48 8b 4a 48          	mov    0x48(%rdx),%rcx
   17c00:	48 89 41 40          	mov    %rax,0x40(%rcx)
   17c04:	48 89 42 48          	mov    %rax,0x48(%rdx)
   17c08:	48 89 50 40          	mov    %rdx,0x40(%rax)
   17c0c:	48 89 48 48          	mov    %rcx,0x48(%rax)
   17c10:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   17c14:	48 85 c9             	test   %rcx,%rcx
   17c17:	74 28                	je     17c41 <__add_config+0x1a1>
   17c19:	48 8b 51 18          	mov    0x18(%rcx),%rdx
   17c1d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   17c21:	49 8d 54 15 01       	lea    0x1(%r13,%rdx,1),%rdx
   17c26:	48 89 51 18          	mov    %rdx,0x18(%rcx)
   17c2a:	e9 09 ff ff ff       	jmpq   17b38 <__add_config+0x98>
   17c2f:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   17c33:	48 89 47 08          	mov    %rax,0x8(%rdi)
   17c37:	48 89 40 28          	mov    %rax,0x28(%rax)
   17c3b:	48 89 40 30          	mov    %rax,0x30(%rax)
   17c3f:	eb 9b                	jmp    17bdc <__add_config+0x13c>
   17c41:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   17c45:	e9 ee fe ff ff       	jmpq   17b38 <__add_config+0x98>
   17c4a:	49 89 07             	mov    %rax,(%r15)
   17c4d:	48 89 40 40          	mov    %rax,0x40(%rax)
   17c51:	48 89 40 48          	mov    %rax,0x48(%rax)
   17c55:	eb b9                	jmp    17c10 <__add_config+0x170>
   17c57:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   17c5c:	48 89 c7             	mov    %rax,%rdi
   17c5f:	0f 85 fa fe ff ff    	jne    17b5f <__add_config+0xbf>
   17c65:	48 83 78 38 00       	cmpq   $0x0,0x38(%rax)
   17c6a:	0f 85 ef fe ff ff    	jne    17b5f <__add_config+0xbf>
   17c70:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
   17c74:	48 89 70 08          	mov    %rsi,0x8(%rax)
   17c78:	48 63 45 c0          	movslq -0x40(%rbp),%rax
   17c7c:	48 89 47 18          	mov    %rax,0x18(%rdi)
   17c80:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   17c84:	48 85 c0             	test   %rax,%rax
   17c87:	74 2b                	je     17cb4 <__add_config+0x214>
   17c89:	48 89 c6             	mov    %rax,%rsi
   17c8c:	31 c0                	xor    %eax,%eax
   17c8e:	48 89 3e             	mov    %rdi,(%rsi)
   17c91:	48 83 c4 38          	add    $0x38,%rsp
   17c95:	5b                   	pop    %rbx
   17c96:	41 5c                	pop    %r12
   17c98:	41 5d                	pop    %r13
   17c9a:	41 5e                	pop    %r14
   17c9c:	41 5f                	pop    %r15
   17c9e:	5d                   	pop    %rbp
   17c9f:	c3                   	retq   
   17ca0:	48 83 c4 38          	add    $0x38,%rsp
   17ca4:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   17ca9:	5b                   	pop    %rbx
   17caa:	41 5c                	pop    %r12
   17cac:	41 5d                	pop    %r13
   17cae:	41 5e                	pop    %r14
   17cb0:	41 5f                	pop    %r15
   17cb2:	5d                   	pop    %rbp
   17cb3:	c3                   	retq   
   17cb4:	31 c0                	xor    %eax,%eax
   17cb6:	e9 a9 fe ff ff       	jmpq   17b64 <__add_config+0xc4>
   17cbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000017cc0 <__write_config>:
   17cc0:	55                   	push   %rbp
   17cc1:	48 89 c8             	mov    %rcx,%rax
   17cc4:	48 89 e5             	mov    %rsp,%rbp
   17cc7:	41 57                	push   %r15
   17cc9:	41 56                	push   %r14
   17ccb:	41 55                	push   %r13
   17ccd:	41 54                	push   %r12
   17ccf:	53                   	push   %rbx
   17cd0:	48 83 ec 48          	sub    $0x48,%rsp
   17cd4:	4c 8b 38             	mov    (%rax),%r15
   17cd7:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   17cdb:	31 c0                	xor    %eax,%eax
   17cdd:	49 63 c9             	movslq %r9d,%rcx
   17ce0:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   17ce4:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
   17ce7:	48 89 ce             	mov    %rcx,%rsi
   17cea:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
   17cee:	4d 85 ff             	test   %r15,%r15
   17cf1:	4c 89 c1             	mov    %r8,%rcx
   17cf4:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   17cf8:	0f 95 c0             	setne  %al
   17cfb:	48 01 f1             	add    %rsi,%rcx
   17cfe:	45 31 ed             	xor    %r13d,%r13d
   17d01:	31 db                	xor    %ebx,%ebx
   17d03:	85 c0                	test   %eax,%eax
   17d05:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   17d09:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   17d0d:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
   17d11:	75 0d                	jne    17d20 <__write_config+0x60>
   17d13:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   17d17:	4c 3b 38             	cmp    (%rax),%r15
   17d1a:	0f 84 d3 00 00 00    	je     17df3 <__write_config+0x133>
   17d20:	49 83 7f 08 00       	cmpq   $0x0,0x8(%r15)
   17d25:	0f 84 dd 00 00 00    	je     17e08 <__write_config+0x148>
   17d2b:	49 8b 47 18          	mov    0x18(%r15),%rax
   17d2f:	41 03 47 10          	add    0x10(%r15),%eax
   17d33:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
   17d36:	44 8d 74 01 02       	lea    0x2(%rcx,%rax,1),%r14d
   17d3b:	45 39 f5             	cmp    %r14d,%r13d
   17d3e:	7d 36                	jge    17d76 <__write_config+0xb6>
   17d40:	44 89 e8             	mov    %r13d,%eax
   17d43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17d48:	48 81 ec 10 10 00 00 	sub    $0x1010,%rsp
   17d4f:	05 00 10 00 00       	add    $0x1000,%eax
   17d54:	48 8d 5c 24 0f       	lea    0xf(%rsp),%rbx
   17d59:	48 83 e3 f0          	and    $0xfffffffffffffff0,%rbx
   17d5d:	41 39 c6             	cmp    %eax,%r14d
   17d60:	7f e6                	jg     17d48 <__write_config+0x88>
   17d62:	41 8d 46 ff          	lea    -0x1(%r14),%eax
   17d66:	44 29 e8             	sub    %r13d,%eax
   17d69:	25 00 f0 ff ff       	and    $0xfffff000,%eax
   17d6e:	45 8d ac 05 00 10 00 	lea    0x1000(%r13,%rax,1),%r13d
   17d75:	00 
   17d76:	4c 8b 65 a8          	mov    -0x58(%rbp),%r12
   17d7a:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   17d7e:	48 89 df             	mov    %rbx,%rdi
   17d81:	4c 89 e2             	mov    %r12,%rdx
   17d84:	4e 8d 24 23          	lea    (%rbx,%r12,1),%r12
   17d88:	e8 63 de ff ff       	callq  15bf0 <memcpy>
   17d8d:	49 8b 57 10          	mov    0x10(%r15),%rdx
   17d91:	49 8b 37             	mov    (%r15),%rsi
   17d94:	4c 89 e7             	mov    %r12,%rdi
   17d97:	e8 54 de ff ff       	callq  15bf0 <memcpy>
   17d9c:	4d 03 67 10          	add    0x10(%r15),%r12
   17da0:	41 c6 04 24 3d       	movb   $0x3d,(%r12)
   17da5:	49 8b 57 18          	mov    0x18(%r15),%rdx
   17da9:	4d 63 e6             	movslq %r14d,%r12
   17dac:	49 8b 77 08          	mov    0x8(%r15),%rsi
   17db0:	48 89 d7             	mov    %rdx,%rdi
   17db3:	48 f7 d7             	not    %rdi
   17db6:	4c 01 e7             	add    %r12,%rdi
   17db9:	48 01 df             	add    %rbx,%rdi
   17dbc:	e8 2f de ff ff       	callq  15bf0 <memcpy>
   17dc1:	42 c6 44 23 ff 0a    	movb   $0xa,-0x1(%rbx,%r12,1)
   17dc7:	44 89 f2             	mov    %r14d,%edx
   17dca:	48 89 de             	mov    %rbx,%rsi
   17dcd:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   17dd1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   17dd5:	ff d0                	callq  *%rax
   17dd7:	85 c0                	test   %eax,%eax
   17dd9:	78 1a                	js     17df5 <__write_config+0x135>
   17ddb:	48 8b 45 10          	mov    0x10(%rbp),%rax
   17ddf:	4c 01 20             	add    %r12,(%rax)
   17de2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   17de6:	4d 8b 7f 40          	mov    0x40(%r15),%r15
   17dea:	4c 3b 38             	cmp    (%rax),%r15
   17ded:	0f 85 2d ff ff ff    	jne    17d20 <__write_config+0x60>
   17df3:	31 c0                	xor    %eax,%eax
   17df5:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   17df9:	5b                   	pop    %rbx
   17dfa:	41 5c                	pop    %r12
   17dfc:	41 5d                	pop    %r13
   17dfe:	41 5e                	pop    %r14
   17e00:	41 5f                	pop    %r15
   17e02:	5d                   	pop    %rbp
   17e03:	c3                   	retq   
   17e04:	0f 1f 40 00          	nopl   0x0(%rax)
   17e08:	49 8b 57 10          	mov    0x10(%r15),%rdx
   17e0c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   17e10:	48 8d 44 02 01       	lea    0x1(%rdx,%rax,1),%rax
   17e15:	48 3d 00 10 00 00    	cmp    $0x1000,%rax
   17e1b:	77 5e                	ja     17e7b <__write_config+0x1bb>
   17e1d:	4c 8b 75 90          	mov    -0x70(%rbp),%r14
   17e21:	49 8b 37             	mov    (%r15),%rsi
   17e24:	4c 89 f7             	mov    %r14,%rdi
   17e27:	e8 c4 dd ff ff       	callq  15bf0 <memcpy>
   17e2c:	4c 89 f0             	mov    %r14,%rax
   17e2f:	49 03 47 10          	add    0x10(%r15),%rax
   17e33:	8b 75 b4             	mov    -0x4c(%rbp),%esi
   17e36:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   17e3a:	4c 8b 45 b8          	mov    -0x48(%rbp),%r8
   17e3e:	48 83 ec 08          	sub    $0x8,%rsp
   17e42:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   17e46:	49 8d 4f 38          	lea    0x38(%r15),%rcx
   17e4a:	c6 00 2e             	movb   $0x2e,(%rax)
   17e4d:	49 8b 47 10          	mov    0x10(%r15),%rax
   17e51:	ff 75 10             	pushq  0x10(%rbp)
   17e54:	44 8d 4c 06 01       	lea    0x1(%rsi,%rax,1),%r9d
   17e59:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   17e5d:	e8 5e fe ff ff       	callq  17cc0 <__write_config>
   17e62:	85 c0                	test   %eax,%eax
   17e64:	5a                   	pop    %rdx
   17e65:	59                   	pop    %rcx
   17e66:	0f 89 76 ff ff ff    	jns    17de2 <__write_config+0x122>
   17e6c:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   17e70:	5b                   	pop    %rbx
   17e71:	41 5c                	pop    %r12
   17e73:	41 5d                	pop    %r13
   17e75:	41 5e                	pop    %r14
   17e77:	41 5f                	pop    %r15
   17e79:	5d                   	pop    %rbp
   17e7a:	c3                   	retq   
   17e7b:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   17e7f:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
   17e84:	5b                   	pop    %rbx
   17e85:	41 5c                	pop    %r12
   17e87:	41 5d                	pop    %r13
   17e89:	41 5e                	pop    %r14
   17e8b:	41 5f                	pop    %r15
   17e8d:	5d                   	pop    %rbp
   17e8e:	c3                   	retq   
   17e8f:	90                   	nop

0000000000017e90 <get_config>:
   17e90:	55                   	push   %rbp
   17e91:	48 89 e5             	mov    %rsp,%rbp
   17e94:	41 55                	push   %r13
   17e96:	41 54                	push   %r12
   17e98:	53                   	push   %rbx
   17e99:	49 89 d4             	mov    %rdx,%r12
   17e9c:	49 89 cd             	mov    %rcx,%r13
   17e9f:	48 83 ec 08          	sub    $0x8,%rsp
   17ea3:	e8 38 f9 ff ff       	callq  177e0 <__get_config>
   17ea8:	48 85 c0             	test   %rax,%rax
   17eab:	74 43                	je     17ef0 <get_config+0x60>
   17ead:	48 8b 70 08          	mov    0x8(%rax),%rsi
   17eb1:	48 89 c3             	mov    %rax,%rbx
   17eb4:	48 85 f6             	test   %rsi,%rsi
   17eb7:	74 37                	je     17ef0 <get_config+0x60>
   17eb9:	48 8b 50 18          	mov    0x18(%rax),%rdx
   17ebd:	48 c7 c0 fb ff ff ff 	mov    $0xfffffffffffffffb,%rax
   17ec4:	4c 39 ea             	cmp    %r13,%rdx
   17ec7:	73 15                	jae    17ede <get_config+0x4e>
   17ec9:	4c 89 e7             	mov    %r12,%rdi
   17ecc:	e8 1f dd ff ff       	callq  15bf0 <memcpy>
   17ed1:	48 8b 43 18          	mov    0x18(%rbx),%rax
   17ed5:	41 c6 04 04 00       	movb   $0x0,(%r12,%rax,1)
   17eda:	48 8b 43 18          	mov    0x18(%rbx),%rax
   17ede:	48 83 c4 08          	add    $0x8,%rsp
   17ee2:	5b                   	pop    %rbx
   17ee3:	41 5c                	pop    %r12
   17ee5:	41 5d                	pop    %r13
   17ee7:	5d                   	pop    %rbp
   17ee8:	c3                   	retq   
   17ee9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17ef0:	48 c7 c0 fc ff ff ff 	mov    $0xfffffffffffffffc,%rax
   17ef7:	eb e5                	jmp    17ede <get_config+0x4e>
   17ef9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000017f00 <get_config_entries>:
   17f00:	55                   	push   %rbp
   17f01:	48 89 e5             	mov    %rsp,%rbp
   17f04:	41 57                	push   %r15
   17f06:	41 56                	push   %r14
   17f08:	41 55                	push   %r13
   17f0a:	41 54                	push   %r12
   17f0c:	49 89 d5             	mov    %rdx,%r13
   17f0f:	53                   	push   %rbx
   17f10:	49 89 cc             	mov    %rcx,%r12
   17f13:	48 83 ec 08          	sub    $0x8,%rsp
   17f17:	e8 c4 f8 ff ff       	callq  177e0 <__get_config>
   17f1c:	48 85 c0             	test   %rax,%rax
   17f1f:	0f 84 87 00 00 00    	je     17fac <get_config_entries+0xac>
   17f25:	49 89 c7             	mov    %rax,%r15
   17f28:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   17f2d:	49 83 7f 08 00       	cmpq   $0x0,0x8(%r15)
   17f32:	75 4f                	jne    17f83 <get_config_entries+0x83>
   17f34:	49 8b 5f 38          	mov    0x38(%r15),%rbx
   17f38:	45 31 f6             	xor    %r14d,%r14d
   17f3b:	48 85 db             	test   %rbx,%rbx
   17f3e:	74 3a                	je     17f7a <get_config_entries+0x7a>
   17f40:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   17f44:	48 8d 42 01          	lea    0x1(%rdx),%rax
   17f48:	49 39 c4             	cmp    %rax,%r12
   17f4b:	72 4b                	jb     17f98 <get_config_entries+0x98>
   17f4d:	48 8b 33             	mov    (%rbx),%rsi
   17f50:	4c 89 ef             	mov    %r13,%rdi
   17f53:	41 83 c6 01          	add    $0x1,%r14d
   17f57:	e8 94 dc ff ff       	callq  15bf0 <memcpy>
   17f5c:	48 8b 43 10          	mov    0x10(%rbx),%rax
   17f60:	41 c6 44 05 00 00    	movb   $0x0,0x0(%r13,%rax,1)
   17f66:	48 8b 43 10          	mov    0x10(%rbx),%rax
   17f6a:	48 8b 5b 40          	mov    0x40(%rbx),%rbx
   17f6e:	49 29 c4             	sub    %rax,%r12
   17f71:	4d 8d 6c 05 01       	lea    0x1(%r13,%rax,1),%r13
   17f76:	49 83 ec 01          	sub    $0x1,%r12
   17f7a:	49 3b 5f 38          	cmp    0x38(%r15),%rbx
   17f7e:	75 c0                	jne    17f40 <get_config_entries+0x40>
   17f80:	44 89 f0             	mov    %r14d,%eax
   17f83:	48 83 c4 08          	add    $0x8,%rsp
   17f87:	5b                   	pop    %rbx
   17f88:	41 5c                	pop    %r12
   17f8a:	41 5d                	pop    %r13
   17f8c:	41 5e                	pop    %r14
   17f8e:	41 5f                	pop    %r15
   17f90:	5d                   	pop    %rbp
   17f91:	c3                   	retq   
   17f92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17f98:	48 83 c4 08          	add    $0x8,%rsp
   17f9c:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
   17fa1:	5b                   	pop    %rbx
   17fa2:	41 5c                	pop    %r12
   17fa4:	41 5d                	pop    %r13
   17fa6:	41 5e                	pop    %r14
   17fa8:	41 5f                	pop    %r15
   17faa:	5d                   	pop    %rbp
   17fab:	c3                   	retq   
   17fac:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   17fb1:	eb d0                	jmp    17f83 <get_config_entries+0x83>
   17fb3:	0f 1f 00             	nopl   (%rax)
   17fb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17fbd:	00 00 00 

0000000000017fc0 <get_config_entries_size>:
   17fc0:	55                   	push   %rbp
   17fc1:	48 89 e5             	mov    %rsp,%rbp
   17fc4:	e8 17 f8 ff ff       	callq  177e0 <__get_config>
   17fc9:	48 85 c0             	test   %rax,%rax
   17fcc:	74 17                	je     17fe5 <get_config_entries_size+0x25>
   17fce:	48 89 c2             	mov    %rax,%rdx
   17fd1:	48 c7 c0 fc ff ff ff 	mov    $0xfffffffffffffffc,%rax
   17fd8:	48 83 7a 08 00       	cmpq   $0x0,0x8(%rdx)
   17fdd:	75 04                	jne    17fe3 <get_config_entries_size+0x23>
   17fdf:	48 8b 42 18          	mov    0x18(%rdx),%rax
   17fe3:	5d                   	pop    %rbp
   17fe4:	c3                   	retq   
   17fe5:	48 c7 c0 fc ff ff ff 	mov    $0xfffffffffffffffc,%rax
   17fec:	5d                   	pop    %rbp
   17fed:	c3                   	retq   
   17fee:	66 90                	xchg   %ax,%ax

0000000000017ff0 <set_config>:
   17ff0:	48 85 f6             	test   %rsi,%rsi
   17ff3:	0f 84 33 01 00 00    	je     1812c <set_config+0x13c>
   17ff9:	55                   	push   %rbp
   17ffa:	48 89 e5             	mov    %rsp,%rbp
   17ffd:	41 57                	push   %r15
   17fff:	41 56                	push   %r14
   18001:	41 55                	push   %r13
   18003:	41 54                	push   %r12
   18005:	49 89 d4             	mov    %rdx,%r12
   18008:	53                   	push   %rbx
   18009:	48 89 f3             	mov    %rsi,%rbx
   1800c:	48 83 ec 28          	sub    $0x28,%rsp
   18010:	48 85 d2             	test   %rdx,%rdx
   18013:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   18017:	0f 84 a3 00 00 00    	je     180c0 <set_config+0xd0>
   1801d:	48 89 f7             	mov    %rsi,%rdi
   18020:	e8 4b d6 ff ff       	callq  15670 <strlen>
   18025:	4c 89 e7             	mov    %r12,%rdi
   18028:	49 89 c7             	mov    %rax,%r15
   1802b:	e8 40 d6 ff ff       	callq  15670 <strlen>
   18030:	42 8d 7c 38 02       	lea    0x2(%rax,%r15,1),%edi
   18035:	49 89 c5             	mov    %rax,%r13
   18038:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1803c:	48 63 ff             	movslq %edi,%rdi
   1803f:	ff 50 20             	callq  *0x20(%rax)
   18042:	48 85 c0             	test   %rax,%rax
   18045:	49 89 c6             	mov    %rax,%r14
   18048:	0f 84 c2 00 00 00    	je     18110 <set_config+0x120>
   1804e:	41 8d 57 01          	lea    0x1(%r15),%edx
   18052:	48 89 de             	mov    %rbx,%rsi
   18055:	48 89 c7             	mov    %rax,%rdi
   18058:	48 63 d2             	movslq %edx,%rdx
   1805b:	e8 90 db ff ff       	callq  15bf0 <memcpy>
   18060:	49 63 c7             	movslq %r15d,%rax
   18063:	41 8d 55 01          	lea    0x1(%r13),%edx
   18067:	4c 89 e6             	mov    %r12,%rsi
   1806a:	49 8d 4c 06 01       	lea    0x1(%r14,%rax,1),%rcx
   1806f:	48 63 d2             	movslq %edx,%rdx
   18072:	48 89 cf             	mov    %rcx,%rdi
   18075:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   18079:	e8 72 db ff ff       	callq  15bf0 <memcpy>
   1807e:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   18082:	48 89 de             	mov    %rbx,%rsi
   18085:	e8 56 f7 ff ff       	callq  177e0 <__get_config>
   1808a:	48 85 c0             	test   %rax,%rax
   1808d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   18091:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   18095:	74 49                	je     180e0 <set_config+0xf0>
   18097:	4d 63 ed             	movslq %r13d,%r13
   1809a:	48 89 48 08          	mov    %rcx,0x8(%rax)
   1809e:	4c 89 70 20          	mov    %r14,0x20(%rax)
   180a2:	4c 89 68 18          	mov    %r13,0x18(%rax)
   180a6:	31 c0                	xor    %eax,%eax
   180a8:	48 83 c4 28          	add    $0x28,%rsp
   180ac:	5b                   	pop    %rbx
   180ad:	41 5c                	pop    %r12
   180af:	41 5d                	pop    %r13
   180b1:	41 5e                	pop    %r14
   180b3:	41 5f                	pop    %r15
   180b5:	5d                   	pop    %rbp
   180b6:	c3                   	retq   
   180b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   180be:	00 00 
   180c0:	48 89 f1             	mov    %rsi,%rcx
   180c3:	31 d2                	xor    %edx,%edx
   180c5:	48 89 fe             	mov    %rdi,%rsi
   180c8:	e8 f3 f7 ff ff       	callq  178c0 <__del_config>
   180cd:	48 83 c4 28          	add    $0x28,%rsp
   180d1:	5b                   	pop    %rbx
   180d2:	41 5c                	pop    %r12
   180d4:	41 5d                	pop    %r13
   180d6:	41 5e                	pop    %r14
   180d8:	41 5f                	pop    %r15
   180da:	5d                   	pop    %rbp
   180db:	c3                   	retq   
   180dc:	0f 1f 40 00          	nopl   0x0(%rax)
   180e0:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   180e4:	4c 8d 4d c8          	lea    -0x38(%rbp),%r9
   180e8:	45 89 e8             	mov    %r13d,%r8d
   180eb:	44 89 fa             	mov    %r15d,%edx
   180ee:	4c 89 f6             	mov    %r14,%rsi
   180f1:	e8 aa f9 ff ff       	callq  17aa0 <__add_config>
   180f6:	85 c0                	test   %eax,%eax
   180f8:	78 1d                	js     18117 <set_config+0x127>
   180fa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   180fe:	4c 89 70 20          	mov    %r14,0x20(%rax)
   18102:	31 c0                	xor    %eax,%eax
   18104:	eb a2                	jmp    180a8 <set_config+0xb8>
   18106:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1810d:	00 00 00 
   18110:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   18115:	eb 91                	jmp    180a8 <set_config+0xb8>
   18117:	89 45 b0             	mov    %eax,-0x50(%rbp)
   1811a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1811e:	4c 89 f7             	mov    %r14,%rdi
   18121:	ff 50 28             	callq  *0x28(%rax)
   18124:	8b 45 b0             	mov    -0x50(%rbp),%eax
   18127:	e9 7c ff ff ff       	jmpq   180a8 <set_config+0xb8>
   1812c:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   18131:	c3                   	retq   
   18132:	0f 1f 40 00          	nopl   0x0(%rax)
   18136:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1813d:	00 00 00 

0000000000018140 <read_config>:
   18140:	55                   	push   %rbp
   18141:	48 89 e5             	mov    %rsp,%rbp
   18144:	41 57                	push   %r15
   18146:	41 56                	push   %r14
   18148:	41 55                	push   %r13
   1814a:	41 54                	push   %r12
   1814c:	53                   	push   %rbx
   1814d:	48 83 ec 38          	sub    $0x38,%rsp
   18151:	48 63 5f 18          	movslq 0x18(%rdi),%rbx
   18155:	4c 8b 6f 10          	mov    0x10(%rdi),%r13
   18159:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   18160:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   18167:	00 
   18168:	4c 01 eb             	add    %r13,%rbx
   1816b:	49 39 dd             	cmp    %rbx,%r13
   1816e:	0f 83 fb 00 00 00    	jae    1826f <read_config+0x12f>
   18174:	49 89 d6             	mov    %rdx,%r14
   18177:	49 89 f3             	mov    %rsi,%r11
   1817a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1817e:	45 31 e4             	xor    %r12d,%r12d
   18181:	49 bf 00 26 00 00 01 	movabs $0x100002600,%r15
   18188:	00 00 00 
   1818b:	eb 2b                	jmp    181b8 <read_config+0x78>
   1818d:	0f 1f 00             	nopl   (%rax)
   18190:	41 0f b6 45 00       	movzbl 0x0(%r13),%eax
   18195:	3c 0d                	cmp    $0xd,%al
   18197:	41 0f 94 c4          	sete   %r12b
   1819b:	3c 0a                	cmp    $0xa,%al
   1819d:	0f 94 c0             	sete   %al
   181a0:	41 09 c4             	or     %eax,%r12d
   181a3:	41 83 f4 01          	xor    $0x1,%r12d
   181a7:	45 0f b6 e4          	movzbl %r12b,%r12d
   181ab:	49 83 c5 01          	add    $0x1,%r13
   181af:	4c 39 eb             	cmp    %r13,%rbx
   181b2:	0f 86 b7 00 00 00    	jbe    1826f <read_config+0x12f>
   181b8:	45 85 e4             	test   %r12d,%r12d
   181bb:	75 d3                	jne    18190 <read_config+0x50>
   181bd:	41 0f b6 4d 00       	movzbl 0x0(%r13),%ecx
   181c2:	80 f9 23             	cmp    $0x23,%cl
   181c5:	0f 84 b5 00 00 00    	je     18280 <read_config+0x140>
   181cb:	80 f9 20             	cmp    $0x20,%cl
   181ce:	0f 86 84 00 00 00    	jbe    18258 <read_config+0x118>
   181d4:	4c 39 eb             	cmp    %r13,%rbx
   181d7:	0f 86 92 00 00 00    	jbe    1826f <read_config+0x12f>
   181dd:	89 c8                	mov    %ecx,%eax
   181df:	83 e0 df             	and    $0xffffffdf,%eax
   181e2:	83 e8 41             	sub    $0x41,%eax
   181e5:	3c 19                	cmp    $0x19,%al
   181e7:	76 10                	jbe    181f9 <read_config+0xb9>
   181e9:	8d 41 d0             	lea    -0x30(%rcx),%eax
   181ec:	3c 09                	cmp    $0x9,%al
   181ee:	76 09                	jbe    181f9 <read_config+0xb9>
   181f0:	80 f9 5f             	cmp    $0x5f,%cl
   181f3:	0f 85 0e 02 00 00    	jne    18407 <read_config+0x2c7>
   181f9:	4c 89 ee             	mov    %r13,%rsi
   181fc:	0f 1f 40 00          	nopl   0x0(%rax)
   18200:	48 89 f0             	mov    %rsi,%rax
   18203:	eb 06                	jmp    1820b <read_config+0xcb>
   18205:	0f 1f 00             	nopl   (%rax)
   18208:	0f b6 08             	movzbl (%rax),%ecx
   1820b:	89 ca                	mov    %ecx,%edx
   1820d:	83 e2 df             	and    $0xffffffdf,%edx
   18210:	83 ea 41             	sub    $0x41,%edx
   18213:	80 fa 19             	cmp    $0x19,%dl
   18216:	76 0d                	jbe    18225 <read_config+0xe5>
   18218:	8d 51 d0             	lea    -0x30(%rcx),%edx
   1821b:	80 fa 09             	cmp    $0x9,%dl
   1821e:	76 05                	jbe    18225 <read_config+0xe5>
   18220:	80 f9 5f             	cmp    $0x5f,%cl
   18223:	75 6b                	jne    18290 <read_config+0x150>
   18225:	48 83 c0 01          	add    $0x1,%rax
   18229:	48 39 c3             	cmp    %rax,%rbx
   1822c:	77 da                	ja     18208 <read_config+0xc8>
   1822e:	48 8d 15 57 1a 01 00 	lea    0x11a57(%rip),%rdx        # 29c8c <xdigits.2874+0x5c>
   18235:	4d 85 f6             	test   %r14,%r14
   18238:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1823d:	74 03                	je     18242 <read_config+0x102>
   1823f:	49 89 16             	mov    %rdx,(%r14)
   18242:	48 83 c4 38          	add    $0x38,%rsp
   18246:	5b                   	pop    %rbx
   18247:	41 5c                	pop    %r12
   18249:	41 5d                	pop    %r13
   1824b:	41 5e                	pop    %r14
   1824d:	41 5f                	pop    %r15
   1824f:	5d                   	pop    %rbp
   18250:	c3                   	retq   
   18251:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18258:	49 0f a3 cf          	bt     %rcx,%r15
   1825c:	0f 83 72 ff ff ff    	jae    181d4 <read_config+0x94>
   18262:	49 83 c5 01          	add    $0x1,%r13
   18266:	4c 39 eb             	cmp    %r13,%rbx
   18269:	0f 87 49 ff ff ff    	ja     181b8 <read_config+0x78>
   1826f:	48 83 c4 38          	add    $0x38,%rsp
   18273:	31 c0                	xor    %eax,%eax
   18275:	5b                   	pop    %rbx
   18276:	41 5c                	pop    %r12
   18278:	41 5d                	pop    %r13
   1827a:	41 5e                	pop    %r14
   1827c:	41 5f                	pop    %r15
   1827e:	5d                   	pop    %rbp
   1827f:	c3                   	retq   
   18280:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   18286:	e9 20 ff ff ff       	jmpq   181ab <read_config+0x6b>
   1828b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18290:	48 39 c3             	cmp    %rax,%rbx
   18293:	76 99                	jbe    1822e <read_config+0xee>
   18295:	48 39 c6             	cmp    %rax,%rsi
   18298:	0f 84 51 01 00 00    	je     183ef <read_config+0x2af>
   1829e:	80 f9 2e             	cmp    $0x2e,%cl
   182a1:	75 16                	jne    182b9 <read_config+0x179>
   182a3:	48 8d 70 01          	lea    0x1(%rax),%rsi
   182a7:	48 39 f3             	cmp    %rsi,%rbx
   182aa:	0f 86 31 01 00 00    	jbe    183e1 <read_config+0x2a1>
   182b0:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
   182b4:	e9 47 ff ff ff       	jmpq   18200 <read_config+0xc0>
   182b9:	89 c2                	mov    %eax,%edx
   182bb:	44 29 ea             	sub    %r13d,%edx
   182be:	80 f9 09             	cmp    $0x9,%cl
   182c1:	74 0d                	je     182d0 <read_config+0x190>
   182c3:	80 f9 20             	cmp    $0x20,%cl
   182c6:	48 89 c6             	mov    %rax,%rsi
   182c9:	75 1f                	jne    182ea <read_config+0x1aa>
   182cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   182d0:	48 8d 70 01          	lea    0x1(%rax),%rsi
   182d4:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
   182d8:	48 39 f3             	cmp    %rsi,%rbx
   182db:	76 0d                	jbe    182ea <read_config+0x1aa>
   182dd:	80 f9 20             	cmp    $0x20,%cl
   182e0:	48 89 f0             	mov    %rsi,%rax
   182e3:	74 eb                	je     182d0 <read_config+0x190>
   182e5:	80 f9 09             	cmp    $0x9,%cl
   182e8:	74 e6                	je     182d0 <read_config+0x190>
   182ea:	80 f9 3d             	cmp    $0x3d,%cl
   182ed:	0f 85 f1 01 00 00    	jne    184e4 <read_config+0x3a4>
   182f3:	48 8d 4e 01          	lea    0x1(%rsi),%rcx
   182f7:	48 39 cb             	cmp    %rcx,%rbx
   182fa:	0f 86 fb 00 00 00    	jbe    183fb <read_config+0x2bb>
   18300:	0f b6 46 01          	movzbl 0x1(%rsi),%eax
   18304:	3c 20                	cmp    $0x20,%al
   18306:	75 1c                	jne    18324 <read_config+0x1e4>
   18308:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1830f:	00 
   18310:	48 83 c1 01          	add    $0x1,%rcx
   18314:	48 39 cb             	cmp    %rcx,%rbx
   18317:	0f 84 de 00 00 00    	je     183fb <read_config+0x2bb>
   1831d:	0f b6 01             	movzbl (%rcx),%eax
   18320:	3c 20                	cmp    $0x20,%al
   18322:	74 ec                	je     18310 <read_config+0x1d0>
   18324:	3c 09                	cmp    $0x9,%al
   18326:	74 e8                	je     18310 <read_config+0x1d0>
   18328:	3c 22                	cmp    $0x22,%al
   1832a:	0f 84 e3 00 00 00    	je     18413 <read_config+0x2d3>
   18330:	3c 23                	cmp    $0x23,%al
   18332:	0f 84 90 01 00 00    	je     184c8 <read_config+0x388>
   18338:	3c 0d                	cmp    $0xd,%al
   1833a:	0f 84 99 01 00 00    	je     184d9 <read_config+0x399>
   18340:	3c 0a                	cmp    $0xa,%al
   18342:	0f 84 91 01 00 00    	je     184d9 <read_config+0x399>
   18348:	48 89 c8             	mov    %rcx,%rax
   1834b:	eb 1c                	jmp    18369 <read_config+0x229>
   1834d:	0f 1f 00             	nopl   (%rax)
   18350:	0f b6 30             	movzbl (%rax),%esi
   18353:	40 80 fe 23          	cmp    $0x23,%sil
   18357:	0f 84 0d 01 00 00    	je     1846a <read_config+0x32a>
   1835d:	40 80 fe 0d          	cmp    $0xd,%sil
   18361:	74 0f                	je     18372 <read_config+0x232>
   18363:	40 80 fe 0a          	cmp    $0xa,%sil
   18367:	74 09                	je     18372 <read_config+0x232>
   18369:	48 83 c0 01          	add    $0x1,%rax
   1836d:	48 39 c3             	cmp    %rax,%rbx
   18370:	77 de                	ja     18350 <read_config+0x210>
   18372:	41 89 c0             	mov    %eax,%r8d
   18375:	41 29 c8             	sub    %ecx,%r8d
   18378:	48 83 c0 01          	add    $0x1,%rax
   1837c:	4d 85 db             	test   %r11,%r11
   1837f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   18383:	74 2a                	je     183af <read_config+0x26f>
   18385:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
   18389:	44 89 45 b0          	mov    %r8d,-0x50(%rbp)
   1838d:	89 d6                	mov    %edx,%esi
   1838f:	89 55 b4             	mov    %edx,-0x4c(%rbp)
   18392:	4c 89 5d b8          	mov    %r11,-0x48(%rbp)
   18396:	4c 89 ef             	mov    %r13,%rdi
   18399:	41 ff d3             	callq  *%r11
   1839c:	85 c0                	test   %eax,%eax
   1839e:	4c 8b 5d b8          	mov    -0x48(%rbp),%r11
   183a2:	8b 55 b4             	mov    -0x4c(%rbp),%edx
   183a5:	44 8b 45 b0          	mov    -0x50(%rbp),%r8d
   183a9:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
   183ad:	75 1f                	jne    183ce <read_config+0x28e>
   183af:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   183b3:	45 31 c9             	xor    %r9d,%r9d
   183b6:	4c 89 ee             	mov    %r13,%rsi
   183b9:	4c 89 5d b8          	mov    %r11,-0x48(%rbp)
   183bd:	e8 de f6 ff ff       	callq  17aa0 <__add_config>
   183c2:	85 c0                	test   %eax,%eax
   183c4:	4c 8b 5d b8          	mov    -0x48(%rbp),%r11
   183c8:	0f 88 d0 00 00 00    	js     1849e <read_config+0x35e>
   183ce:	48 3b 5d c0          	cmp    -0x40(%rbp),%rbx
   183d2:	0f 86 97 fe ff ff    	jbe    1826f <read_config+0x12f>
   183d8:	4c 8b 6d c0          	mov    -0x40(%rbp),%r13
   183dc:	e9 d7 fd ff ff       	jmpq   181b8 <read_config+0x78>
   183e1:	89 f2                	mov    %esi,%edx
   183e3:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
   183e7:	44 29 ea             	sub    %r13d,%edx
   183ea:	e9 fb fe ff ff       	jmpq   182ea <read_config+0x1aa>
   183ef:	48 8d 15 7b 18 01 00 	lea    0x1187b(%rip),%rdx        # 29c71 <xdigits.2874+0x41>
   183f6:	e9 3a fe ff ff       	jmpq   18235 <read_config+0xf5>
   183fb:	48 8d 15 54 18 01 00 	lea    0x11854(%rip),%rdx        # 29c56 <xdigits.2874+0x26>
   18402:	e9 2e fe ff ff       	jmpq   18235 <read_config+0xf5>
   18407:	48 8d 15 33 18 01 00 	lea    0x11833(%rip),%rdx        # 29c41 <xdigits.2874+0x11>
   1840e:	e9 22 fe ff ff       	jmpq   18235 <read_config+0xf5>
   18413:	48 8d 71 01          	lea    0x1(%rcx),%rsi
   18417:	48 39 f3             	cmp    %rsi,%rbx
   1841a:	76 5f                	jbe    1847b <read_config+0x33b>
   1841c:	0f b6 79 01          	movzbl 0x1(%rcx),%edi
   18420:	48 89 f0             	mov    %rsi,%rax
   18423:	40 80 ff 22          	cmp    $0x22,%dil
   18427:	0f 84 c3 00 00 00    	je     184f0 <read_config+0x3b0>
   1842d:	31 c9                	xor    %ecx,%ecx
   1842f:	eb 1a                	jmp    1844b <read_config+0x30b>
   18431:	85 c9                	test   %ecx,%ecx
   18433:	48 89 c7             	mov    %rax,%rdi
   18436:	75 20                	jne    18458 <read_config+0x318>
   18438:	48 8d 47 01          	lea    0x1(%rdi),%rax
   1843c:	48 39 c3             	cmp    %rax,%rbx
   1843f:	76 3a                	jbe    1847b <read_config+0x33b>
   18441:	0f b6 7f 01          	movzbl 0x1(%rdi),%edi
   18445:	40 80 ff 22          	cmp    $0x22,%dil
   18449:	74 3c                	je     18487 <read_config+0x347>
   1844b:	40 80 ff 5c          	cmp    $0x5c,%dil
   1844f:	75 e0                	jne    18431 <read_config+0x2f1>
   18451:	48 8d 78 01          	lea    0x1(%rax),%rdi
   18455:	83 c1 01             	add    $0x1,%ecx
   18458:	44 0f b6 07          	movzbl (%rdi),%r8d
   1845c:	48 63 c1             	movslq %ecx,%rax
   1845f:	49 89 fa             	mov    %rdi,%r10
   18462:	49 29 c2             	sub    %rax,%r10
   18465:	45 88 02             	mov    %r8b,(%r10)
   18468:	eb ce                	jmp    18438 <read_config+0x2f8>
   1846a:	41 89 c0             	mov    %eax,%r8d
   1846d:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   18473:	41 29 c8             	sub    %ecx,%r8d
   18476:	e9 fd fe ff ff       	jmpq   18378 <read_config+0x238>
   1847b:	48 8d 15 66 18 01 00 	lea    0x11866(%rip),%rdx        # 29ce8 <xdigits.2874+0xb8>
   18482:	e9 ae fd ff ff       	jmpq   18235 <read_config+0xf5>
   18487:	48 63 c9             	movslq %ecx,%rcx
   1848a:	48 f7 d9             	neg    %rcx
   1848d:	48 01 c1             	add    %rax,%rcx
   18490:	41 89 c8             	mov    %ecx,%r8d
   18493:	48 89 f1             	mov    %rsi,%rcx
   18496:	41 29 f0             	sub    %esi,%r8d
   18499:	e9 da fe ff ff       	jmpq   18378 <read_config+0x238>
   1849e:	83 f8 fb             	cmp    $0xfffffffb,%eax
   184a1:	48 8d 15 1a 18 01 00 	lea    0x1181a(%rip),%rdx        # 29cc2 <xdigits.2874+0x92>
   184a8:	0f 84 87 fd ff ff    	je     18235 <read_config+0xf5>
   184ae:	83 f8 fc             	cmp    $0xfffffffc,%eax
   184b1:	48 8d 15 17 18 01 00 	lea    0x11817(%rip),%rdx        # 29ccf <xdigits.2874+0x9f>
   184b8:	48 8d 05 f5 17 01 00 	lea    0x117f5(%rip),%rax        # 29cb4 <xdigits.2874+0x84>
   184bf:	48 0f 45 d0          	cmovne %rax,%rdx
   184c3:	e9 6d fd ff ff       	jmpq   18235 <read_config+0xf5>
   184c8:	48 89 c8             	mov    %rcx,%rax
   184cb:	45 31 c0             	xor    %r8d,%r8d
   184ce:	41 bc 01 00 00 00    	mov    $0x1,%r12d
   184d4:	e9 9f fe ff ff       	jmpq   18378 <read_config+0x238>
   184d9:	48 89 c8             	mov    %rcx,%rax
   184dc:	45 31 c0             	xor    %r8d,%r8d
   184df:	e9 94 fe ff ff       	jmpq   18378 <read_config+0x238>
   184e4:	48 8d 15 b5 17 01 00 	lea    0x117b5(%rip),%rdx        # 29ca0 <xdigits.2874+0x70>
   184eb:	e9 45 fd ff ff       	jmpq   18235 <read_config+0xf5>
   184f0:	31 c9                	xor    %ecx,%ecx
   184f2:	eb 99                	jmp    1848d <read_config+0x34d>
   184f4:	66 90                	xchg   %ax,%ax
   184f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   184fd:	00 00 00 

0000000000018500 <free_config>:
   18500:	55                   	push   %rbp
   18501:	48 89 e5             	mov    %rsp,%rbp
   18504:	41 56                	push   %r14
   18506:	41 55                	push   %r13
   18508:	41 54                	push   %r12
   1850a:	53                   	push   %rbx
   1850b:	49 89 fd             	mov    %rdi,%r13
   1850e:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
   18512:	48 85 db             	test   %rbx,%rbx
   18515:	0f 84 80 00 00 00    	je     1859b <free_config+0x9b>
   1851b:	4c 8b 63 28          	mov    0x28(%rbx),%r12
   1851f:	45 31 f6             	xor    %r14d,%r14d
   18522:	48 85 db             	test   %rbx,%rbx
   18525:	48 89 d8             	mov    %rbx,%rax
   18528:	41 0f 95 c6          	setne  %r14b
   1852c:	eb 19                	jmp    18547 <free_config+0x47>
   1852e:	66 90                	xchg   %ax,%ax
   18530:	45 85 f6             	test   %r14d,%r14d
   18533:	74 3e                	je     18573 <free_config+0x73>
   18535:	45 31 f6             	xor    %r14d,%r14d
   18538:	49 39 c4             	cmp    %rax,%r12
   1853b:	41 0f 94 c6          	sete   %r14b
   1853f:	4c 89 e3             	mov    %r12,%rbx
   18542:	4d 8b 64 24 28       	mov    0x28(%r12),%r12
   18547:	45 85 f6             	test   %r14d,%r14d
   1854a:	75 05                	jne    18551 <free_config+0x51>
   1854c:	48 39 c3             	cmp    %rax,%rbx
   1854f:	74 2f                	je     18580 <free_config+0x80>
   18551:	48 85 c0             	test   %rax,%rax
   18554:	74 2a                	je     18580 <free_config+0x80>
   18556:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
   1855a:	48 85 ff             	test   %rdi,%rdi
   1855d:	74 04                	je     18563 <free_config+0x63>
   1855f:	41 ff 55 28          	callq  *0x28(%r13)
   18563:	48 89 df             	mov    %rbx,%rdi
   18566:	41 ff 55 28          	callq  *0x28(%r13)
   1856a:	4c 39 e3             	cmp    %r12,%rbx
   1856d:	49 8b 45 08          	mov    0x8(%r13),%rax
   18571:	75 bd                	jne    18530 <free_config+0x30>
   18573:	45 31 f6             	xor    %r14d,%r14d
   18576:	eb c7                	jmp    1853f <free_config+0x3f>
   18578:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1857f:	00 
   18580:	5b                   	pop    %rbx
   18581:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
   18588:	00 
   18589:	49 c7 45 08 00 00 00 	movq   $0x0,0x8(%r13)
   18590:	00 
   18591:	31 c0                	xor    %eax,%eax
   18593:	41 5c                	pop    %r12
   18595:	41 5d                	pop    %r13
   18597:	41 5e                	pop    %r14
   18599:	5d                   	pop    %rbp
   1859a:	c3                   	retq   
   1859b:	45 31 e4             	xor    %r12d,%r12d
   1859e:	e9 7c ff ff ff       	jmpq   1851f <free_config+0x1f>
   185a3:	0f 1f 00             	nopl   (%rax)
   185a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   185ad:	00 00 00 

00000000000185b0 <copy_config>:
   185b0:	55                   	push   %rbp
   185b1:	48 89 e5             	mov    %rsp,%rbp
   185b4:	41 55                	push   %r13
   185b6:	41 54                	push   %r12
   185b8:	53                   	push   %rbx
   185b9:	49 89 fd             	mov    %rdi,%r13
   185bc:	49 89 f4             	mov    %rsi,%r12
   185bf:	48 83 ec 18          	sub    $0x18,%rsp
   185c3:	48 c7 46 08 00 00 00 	movq   $0x0,0x8(%rsi)
   185ca:	00 
   185cb:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   185cf:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
   185d6:	48 85 c9             	test   %rcx,%rcx
   185d9:	74 63                	je     1863e <copy_config+0x8e>
   185db:	48 89 c8             	mov    %rcx,%rax
   185de:	31 db                	xor    %ebx,%ebx
   185e0:	48 83 38 00          	cmpq   $0x0,(%rax)
   185e4:	74 03                	je     185e9 <copy_config+0x39>
   185e6:	03 58 10             	add    0x10(%rax),%ebx
   185e9:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
   185ee:	74 03                	je     185f3 <copy_config+0x43>
   185f0:	03 58 18             	add    0x18(%rax),%ebx
   185f3:	48 8b 40 28          	mov    0x28(%rax),%rax
   185f7:	48 39 c1             	cmp    %rax,%rcx
   185fa:	75 e4                	jne    185e0 <copy_config+0x30>
   185fc:	48 63 fb             	movslq %ebx,%rdi
   185ff:	41 ff 54 24 20       	callq  *0x20(%r12)
   18604:	48 85 c0             	test   %rax,%rax
   18607:	74 3b                	je     18644 <copy_config+0x94>
   18609:	4c 8d 4d d4          	lea    -0x2c(%rbp),%r9
   1860d:	4c 8d 45 d8          	lea    -0x28(%rbp),%r8
   18611:	49 89 44 24 10       	mov    %rax,0x10(%r12)
   18616:	41 89 5c 24 18       	mov    %ebx,0x18(%r12)
   1861b:	4c 89 e1             	mov    %r12,%rcx
   1861e:	4c 89 e2             	mov    %r12,%rdx
   18621:	4c 89 ee             	mov    %r13,%rsi
   18624:	4c 89 ef             	mov    %r13,%rdi
   18627:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1862b:	89 5d d4             	mov    %ebx,-0x2c(%rbp)
   1862e:	e8 7d ee ff ff       	callq  174b0 <__dup_config>
   18633:	48 83 c4 18          	add    $0x18,%rsp
   18637:	5b                   	pop    %rbx
   18638:	41 5c                	pop    %r12
   1863a:	41 5d                	pop    %r13
   1863c:	5d                   	pop    %rbp
   1863d:	c3                   	retq   
   1863e:	31 ff                	xor    %edi,%edi
   18640:	31 db                	xor    %ebx,%ebx
   18642:	eb bb                	jmp    185ff <copy_config+0x4f>
   18644:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   18649:	eb e8                	jmp    18633 <copy_config+0x83>
   1864b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000018650 <write_config>:
   18650:	55                   	push   %rbp
   18651:	45 31 c9             	xor    %r9d,%r9d
   18654:	48 89 d1             	mov    %rdx,%rcx
   18657:	48 89 e5             	mov    %rsp,%rbp
   1865a:	48 81 ec 18 10 00 00 	sub    $0x1018,%rsp
   18661:	48 8d 85 f8 ef ff ff 	lea    -0x1008(%rbp),%rax
   18668:	4c 8d 85 00 f0 ff ff 	lea    -0x1000(%rbp),%r8
   1866f:	48 c7 85 f8 ef ff ff 	movq   $0x0,-0x1008(%rbp)
   18676:	00 00 00 00 
   1867a:	50                   	push   %rax
   1867b:	e8 40 f6 ff ff       	callq  17cc0 <__write_config>
   18680:	c9                   	leaveq 
   18681:	c3                   	retq   
   18682:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18689:	00 00 00 
   1868c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000018690 <get_norm_path>:
   18690:	55                   	push   %rbp
   18691:	85 d2                	test   %edx,%edx
   18693:	48 89 e5             	mov    %rsp,%rbp
   18696:	41 54                	push   %r12
   18698:	53                   	push   %rbx
   18699:	0f 84 b7 01 00 00    	je     18856 <get_norm_path+0x1c6>
   1869f:	48 63 c2             	movslq %edx,%rax
   186a2:	4c 8d 44 06 ff       	lea    -0x1(%rsi,%rax,1),%r8
   186a7:	89 d0                	mov    %edx,%eax
   186a9:	eb 0e                	jmp    186b9 <get_norm_path+0x29>
   186ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   186b0:	49 83 e8 01          	sub    $0x1,%r8
   186b4:	83 e8 01             	sub    $0x1,%eax
   186b7:	74 12                	je     186cb <get_norm_path+0x3b>
   186b9:	83 f8 01             	cmp    $0x1,%eax
   186bc:	7e f2                	jle    186b0 <get_norm_path+0x20>
   186be:	41 80 38 2e          	cmpb   $0x2e,(%r8)
   186c2:	75 ec                	jne    186b0 <get_norm_path+0x20>
   186c4:	41 80 78 ff 2e       	cmpb   $0x2e,-0x1(%r8)
   186c9:	75 e5                	jne    186b0 <get_norm_path+0x20>
   186cb:	8d 59 ff             	lea    -0x1(%rcx),%ebx
   186ce:	49 89 f8             	mov    %rdi,%r8
   186d1:	41 b9 2f 00 00 00    	mov    $0x2f,%r9d
   186d7:	83 e9 02             	sub    $0x2,%ecx
   186da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   186e0:	41 80 f9 2f          	cmp    $0x2f,%r9b
   186e4:	45 0f b6 10          	movzbl (%r8),%r10d
   186e8:	74 36                	je     18720 <get_norm_path+0x90>
   186ea:	39 d3                	cmp    %edx,%ebx
   186ec:	0f 8e ae 00 00 00    	jle    187a0 <get_norm_path+0x110>
   186f2:	4c 63 da             	movslq %edx,%r11
   186f5:	83 c2 01             	add    $0x1,%edx
   186f8:	46 88 0c 1e          	mov    %r9b,(%rsi,%r11,1)
   186fc:	45 89 d1             	mov    %r10d,%r9d
   186ff:	49 83 c0 01          	add    $0x1,%r8
   18703:	45 84 c9             	test   %r9b,%r9b
   18706:	75 d8                	jne    186e0 <get_norm_path+0x50>
   18708:	48 63 c2             	movslq %edx,%rax
   1870b:	5b                   	pop    %rbx
   1870c:	c6 04 06 00          	movb   $0x0,(%rsi,%rax,1)
   18710:	89 d0                	mov    %edx,%eax
   18712:	41 5c                	pop    %r12
   18714:	5d                   	pop    %rbp
   18715:	c3                   	retq   
   18716:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1871d:	00 00 00 
   18720:	45 84 d2             	test   %r10b,%r10b
   18723:	74 e3                	je     18708 <get_norm_path+0x78>
   18725:	41 80 fa 2f          	cmp    $0x2f,%r10b
   18729:	74 0f                	je     1873a <get_norm_path+0xaa>
   1872b:	41 80 fa 2e          	cmp    $0x2e,%r10b
   1872f:	74 17                	je     18748 <get_norm_path+0xb8>
   18731:	85 d2                	test   %edx,%edx
   18733:	75 b5                	jne    186ea <get_norm_path+0x5a>
   18735:	80 3f 2f             	cmpb   $0x2f,(%rdi)
   18738:	74 b0                	je     186ea <get_norm_path+0x5a>
   1873a:	49 83 c0 01          	add    $0x1,%r8
   1873e:	45 89 d1             	mov    %r10d,%r9d
   18741:	eb 9d                	jmp    186e0 <get_norm_path+0x50>
   18743:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18748:	45 0f b6 50 01       	movzbl 0x1(%r8),%r10d
   1874d:	4d 8d 48 01          	lea    0x1(%r8),%r9
   18751:	45 84 d2             	test   %r10b,%r10b
   18754:	74 b2                	je     18708 <get_norm_path+0x78>
   18756:	41 80 fa 2f          	cmp    $0x2f,%r10b
   1875a:	74 3c                	je     18798 <get_norm_path+0x108>
   1875c:	41 80 fa 2e          	cmp    $0x2e,%r10b
   18760:	74 4e                	je     187b0 <get_norm_path+0x120>
   18762:	45 31 c0             	xor    %r8d,%r8d
   18765:	85 d2                	test   %edx,%edx
   18767:	75 17                	jne    18780 <get_norm_path+0xf0>
   18769:	41 39 d8             	cmp    %ebx,%r8d
   1876c:	7d 32                	jge    187a0 <get_norm_path+0x110>
   1876e:	41 8d 50 01          	lea    0x1(%r8),%edx
   18772:	4d 63 c0             	movslq %r8d,%r8
   18775:	42 c6 04 06 2e       	movb   $0x2e,(%rsi,%r8,1)
   1877a:	4d 89 c8             	mov    %r9,%r8
   1877d:	eb bb                	jmp    1873a <get_norm_path+0xaa>
   1877f:	90                   	nop
   18780:	39 d3                	cmp    %edx,%ebx
   18782:	7e 1c                	jle    187a0 <get_norm_path+0x110>
   18784:	44 8d 42 01          	lea    0x1(%rdx),%r8d
   18788:	48 63 d2             	movslq %edx,%rdx
   1878b:	c6 04 16 2f          	movb   $0x2f,(%rsi,%rdx,1)
   1878f:	eb d8                	jmp    18769 <get_norm_path+0xd9>
   18791:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18798:	4d 89 c8             	mov    %r9,%r8
   1879b:	eb 9d                	jmp    1873a <get_norm_path+0xaa>
   1879d:	0f 1f 00             	nopl   (%rax)
   187a0:	5b                   	pop    %rbx
   187a1:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
   187a6:	41 5c                	pop    %r12
   187a8:	5d                   	pop    %rbp
   187a9:	c3                   	retq   
   187aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   187b0:	45 0f b6 48 02       	movzbl 0x2(%r8),%r9d
   187b5:	4d 8d 60 02          	lea    0x2(%r8),%r12
   187b9:	45 84 c9             	test   %r9b,%r9b
   187bc:	74 2a                	je     187e8 <get_norm_path+0x158>
   187be:	41 80 f9 2f          	cmp    $0x2f,%r9b
   187c2:	74 24                	je     187e8 <get_norm_path+0x158>
   187c4:	39 d1                	cmp    %edx,%ecx
   187c6:	7e d8                	jle    187a0 <get_norm_path+0x110>
   187c8:	44 8d 52 01          	lea    0x1(%rdx),%r10d
   187cc:	4c 63 da             	movslq %edx,%r11
   187cf:	49 83 c0 03          	add    $0x3,%r8
   187d3:	42 c6 04 1e 2e       	movb   $0x2e,(%rsi,%r11,1)
   187d8:	83 c2 02             	add    $0x2,%edx
   187db:	4d 63 d2             	movslq %r10d,%r10
   187de:	42 c6 04 16 2e       	movb   $0x2e,(%rsi,%r10,1)
   187e3:	e9 f8 fe ff ff       	jmpq   186e0 <get_norm_path+0x50>
   187e8:	39 c2                	cmp    %eax,%edx
   187ea:	7e 2e                	jle    1881a <get_norm_path+0x18a>
   187ec:	4c 63 c2             	movslq %edx,%r8
   187ef:	4e 8d 44 06 ff       	lea    -0x1(%rsi,%r8,1),%r8
   187f4:	0f 1f 40 00          	nopl   0x0(%rax)
   187f8:	83 ea 01             	sub    $0x1,%edx
   187fb:	41 80 38 2f          	cmpb   $0x2f,(%r8)
   187ff:	41 0f 95 c3          	setne  %r11b
   18803:	39 c2                	cmp    %eax,%edx
   18805:	41 0f 9f c2          	setg   %r10b
   18809:	49 83 e8 01          	sub    $0x1,%r8
   1880d:	45 84 d3             	test   %r10b,%r11b
   18810:	75 e6                	jne    187f8 <get_norm_path+0x168>
   18812:	4d 89 e0             	mov    %r12,%r8
   18815:	e9 e5 fe ff ff       	jmpq   186ff <get_norm_path+0x6f>
   1881a:	85 d2                	test   %edx,%edx
   1881c:	74 12                	je     18830 <get_norm_path+0x1a0>
   1881e:	39 d3                	cmp    %edx,%ebx
   18820:	0f 8e 7a ff ff ff    	jle    187a0 <get_norm_path+0x110>
   18826:	48 63 c2             	movslq %edx,%rax
   18829:	83 c2 01             	add    $0x1,%edx
   1882c:	c6 04 06 2f          	movb   $0x2f,(%rsi,%rax,1)
   18830:	39 ca                	cmp    %ecx,%edx
   18832:	0f 8d 68 ff ff ff    	jge    187a0 <get_norm_path+0x110>
   18838:	8d 42 01             	lea    0x1(%rdx),%eax
   1883b:	4c 63 c2             	movslq %edx,%r8
   1883e:	83 c2 02             	add    $0x2,%edx
   18841:	42 c6 04 06 2e       	movb   $0x2e,(%rsi,%r8,1)
   18846:	4d 89 e0             	mov    %r12,%r8
   18849:	48 98                	cltq   
   1884b:	c6 04 06 2e          	movb   $0x2e,(%rsi,%rax,1)
   1884f:	89 d0                	mov    %edx,%eax
   18851:	e9 a9 fe ff ff       	jmpq   186ff <get_norm_path+0x6f>
   18856:	31 c0                	xor    %eax,%eax
   18858:	e9 6e fe ff ff       	jmpq   186cb <get_norm_path+0x3b>
   1885d:	0f 1f 00             	nopl   (%rax)

0000000000018860 <get_base_name>:
   18860:	55                   	push   %rbp
   18861:	0f b6 07             	movzbl (%rdi),%eax
   18864:	48 89 e5             	mov    %rsp,%rbp
   18867:	84 c0                	test   %al,%al
   18869:	74 59                	je     188c4 <get_base_name+0x64>
   1886b:	3c 2f                	cmp    $0x2f,%al
   1886d:	0f 84 ad 00 00 00    	je     18920 <get_base_name+0xc0>
   18873:	3c 2e                	cmp    $0x2e,%al
   18875:	0f 84 ad 00 00 00    	je     18928 <get_base_name+0xc8>
   1887b:	0f b6 4f 01          	movzbl 0x1(%rdi),%ecx
   1887f:	4c 8d 47 01          	lea    0x1(%rdi),%r8
   18883:	4d 89 c1             	mov    %r8,%r9
   18886:	84 c9                	test   %cl,%cl
   18888:	0f 84 d3 00 00 00    	je     18961 <get_base_name+0x101>
   1888e:	80 f9 2f             	cmp    $0x2f,%cl
   18891:	0f 84 ca 00 00 00    	je     18961 <get_base_name+0x101>
   18897:	4c 89 c0             	mov    %r8,%rax
   1889a:	eb 09                	jmp    188a5 <get_base_name+0x45>
   1889c:	0f 1f 40 00          	nopl   0x0(%rax)
   188a0:	80 f9 2f             	cmp    $0x2f,%cl
   188a3:	74 0b                	je     188b0 <get_base_name+0x50>
   188a5:	48 83 c0 01          	add    $0x1,%rax
   188a9:	0f b6 08             	movzbl (%rax),%ecx
   188ac:	84 c9                	test   %cl,%cl
   188ae:	75 f0                	jne    188a0 <get_base_name+0x40>
   188b0:	84 c9                	test   %cl,%cl
   188b2:	74 1c                	je     188d0 <get_base_name+0x70>
   188b4:	48 83 e8 01          	sub    $0x1,%rax
   188b8:	48 8d 78 01          	lea    0x1(%rax),%rdi
   188bc:	0f b6 40 01          	movzbl 0x1(%rax),%eax
   188c0:	84 c0                	test   %al,%al
   188c2:	75 a7                	jne    1886b <get_base_name+0xb>
   188c4:	31 c0                	xor    %eax,%eax
   188c6:	5d                   	pop    %rbp
   188c7:	c3                   	retq   
   188c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   188cf:	00 
   188d0:	83 ea 01             	sub    $0x1,%edx
   188d3:	48 89 c1             	mov    %rax,%rcx
   188d6:	48 29 f9             	sub    %rdi,%rcx
   188d9:	48 63 d2             	movslq %edx,%rdx
   188dc:	48 39 d1             	cmp    %rdx,%rcx
   188df:	0f 8f b2 00 00 00    	jg     18997 <get_base_name+0x137>
   188e5:	48 39 c7             	cmp    %rax,%rdi
   188e8:	0f 83 a0 00 00 00    	jae    1898e <get_base_name+0x12e>
   188ee:	48 89 f2             	mov    %rsi,%rdx
   188f1:	eb 09                	jmp    188fc <get_base_name+0x9c>
   188f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   188f8:	49 83 c0 01          	add    $0x1,%r8
   188fc:	0f b6 0f             	movzbl (%rdi),%ecx
   188ff:	48 83 c2 01          	add    $0x1,%rdx
   18903:	4c 89 c7             	mov    %r8,%rdi
   18906:	88 4a ff             	mov    %cl,-0x1(%rdx)
   18909:	49 39 c0             	cmp    %rax,%r8
   1890c:	75 ea                	jne    188f8 <get_base_name+0x98>
   1890e:	4d 29 c8             	sub    %r9,%r8
   18911:	41 8d 40 01          	lea    0x1(%r8),%eax
   18915:	48 63 d0             	movslq %eax,%rdx
   18918:	c6 04 16 00          	movb   $0x0,(%rsi,%rdx,1)
   1891c:	5d                   	pop    %rbp
   1891d:	c3                   	retq   
   1891e:	66 90                	xchg   %ax,%ax
   18920:	48 89 f8             	mov    %rdi,%rax
   18923:	eb 93                	jmp    188b8 <get_base_name+0x58>
   18925:	0f 1f 00             	nopl   (%rax)
   18928:	0f b6 47 01          	movzbl 0x1(%rdi),%eax
   1892c:	3c 2f                	cmp    $0x2f,%al
   1892e:	74 28                	je     18958 <get_base_name+0xf8>
   18930:	84 c0                	test   %al,%al
   18932:	74 24                	je     18958 <get_base_name+0xf8>
   18934:	3c 2e                	cmp    $0x2e,%al
   18936:	74 31                	je     18969 <get_base_name+0x109>
   18938:	4c 8d 47 01          	lea    0x1(%rdi),%r8
   1893c:	3c 2f                	cmp    $0x2f,%al
   1893e:	4d 89 c1             	mov    %r8,%r9
   18941:	74 08                	je     1894b <get_base_name+0xeb>
   18943:	84 c0                	test   %al,%al
   18945:	0f 85 4c ff ff ff    	jne    18897 <get_base_name+0x37>
   1894b:	4c 89 c0             	mov    %r8,%rax
   1894e:	e9 61 ff ff ff       	jmpq   188b4 <get_base_name+0x54>
   18953:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18958:	48 8d 47 01          	lea    0x1(%rdi),%rax
   1895c:	e9 57 ff ff ff       	jmpq   188b8 <get_base_name+0x58>
   18961:	4c 89 c0             	mov    %r8,%rax
   18964:	e9 47 ff ff ff       	jmpq   188b0 <get_base_name+0x50>
   18969:	0f b6 47 02          	movzbl 0x2(%rdi),%eax
   1896d:	3c 2f                	cmp    $0x2f,%al
   1896f:	74 14                	je     18985 <get_base_name+0x125>
   18971:	84 c0                	test   %al,%al
   18973:	4c 8d 47 01          	lea    0x1(%rdi),%r8
   18977:	0f 94 c0             	sete   %al
   1897a:	84 c0                	test   %al,%al
   1897c:	4d 89 c1             	mov    %r8,%r9
   1897f:	0f 84 12 ff ff ff    	je     18897 <get_base_name+0x37>
   18985:	48 8d 47 02          	lea    0x2(%rdi),%rax
   18989:	e9 2a ff ff ff       	jmpq   188b8 <get_base_name+0x58>
   1898e:	31 d2                	xor    %edx,%edx
   18990:	31 c0                	xor    %eax,%eax
   18992:	e9 81 ff ff ff       	jmpq   18918 <get_base_name+0xb8>
   18997:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
   1899c:	5d                   	pop    %rbp
   1899d:	c3                   	retq   
   1899e:	66 90                	xchg   %ax,%ax

00000000000189a0 <RandomWrapper>:
   189a0:	55                   	push   %rbp
   189a1:	48 89 f7             	mov    %rsi,%rdi
   189a4:	89 d6                	mov    %edx,%esi
   189a6:	48 89 e5             	mov    %rsp,%rbp
   189a9:	53                   	push   %rbx
   189aa:	48 89 d3             	mov    %rdx,%rbx
   189ad:	48 83 ec 08          	sub    $0x8,%rsp
   189b1:	e8 ca 7e ff ff       	callq  10880 <_DkRandomBitsRead>
   189b6:	48 98                	cltq   
   189b8:	48 39 d8             	cmp    %rbx,%rax
   189bb:	0f 95 c0             	setne  %al
   189be:	48 83 c4 08          	add    $0x8,%rsp
   189c2:	0f b6 c0             	movzbl %al,%eax
   189c5:	5b                   	pop    %rbx
   189c6:	5d                   	pop    %rbp
   189c7:	c3                   	retq   
   189c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   189cf:	00 

00000000000189d0 <lib_SHA256Init>:
   189d0:	55                   	push   %rbp
   189d1:	48 89 e5             	mov    %rsp,%rbp
   189d4:	53                   	push   %rbx
   189d5:	48 89 fb             	mov    %rdi,%rbx
   189d8:	48 83 ec 08          	sub    $0x8,%rsp
   189dc:	e8 ff 2d 00 00       	callq  1b7e0 <mbedtls_sha256_init>
   189e1:	48 89 df             	mov    %rbx,%rdi
   189e4:	31 f6                	xor    %esi,%esi
   189e6:	e8 b5 2e 00 00       	callq  1b8a0 <mbedtls_sha256_starts>
   189eb:	48 83 c4 08          	add    $0x8,%rsp
   189ef:	31 c0                	xor    %eax,%eax
   189f1:	5b                   	pop    %rbx
   189f2:	5d                   	pop    %rbp
   189f3:	c3                   	retq   
   189f4:	66 90                	xchg   %ax,%ax
   189f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   189fd:	00 00 00 

0000000000018a00 <lib_SHA256Update>:
   18a00:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
   18a05:	48 39 ca             	cmp    %rcx,%rdx
   18a08:	77 16                	ja     18a20 <lib_SHA256Update+0x20>
   18a0a:	55                   	push   %rbp
   18a0b:	48 89 e5             	mov    %rsp,%rbp
   18a0e:	e8 8d 3b 00 00       	callq  1c5a0 <mbedtls_sha256_update>
   18a13:	31 c0                	xor    %eax,%eax
   18a15:	5d                   	pop    %rbp
   18a16:	c3                   	retq   
   18a17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   18a1e:	00 00 
   18a20:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   18a25:	c3                   	retq   
   18a26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18a2d:	00 00 00 

0000000000018a30 <lib_SHA256Final>:
   18a30:	55                   	push   %rbp
   18a31:	48 89 e5             	mov    %rsp,%rbp
   18a34:	53                   	push   %rbx
   18a35:	48 89 fb             	mov    %rdi,%rbx
   18a38:	48 83 ec 08          	sub    $0x8,%rsp
   18a3c:	e8 6f 3c 00 00       	callq  1c6b0 <mbedtls_sha256_finish>
   18a41:	48 89 df             	mov    %rbx,%rdi
   18a44:	e8 b7 2d 00 00       	callq  1b800 <mbedtls_sha256_free>
   18a49:	48 83 c4 08          	add    $0x8,%rsp
   18a4d:	31 c0                	xor    %eax,%eax
   18a4f:	5b                   	pop    %rbx
   18a50:	5d                   	pop    %rbp
   18a51:	c3                   	retq   
   18a52:	0f 1f 40 00          	nopl   0x0(%rax)
   18a56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18a5d:	00 00 00 

0000000000018a60 <lib_AESCMAC>:
   18a60:	55                   	push   %rbp
   18a61:	48 89 e5             	mov    %rsp,%rbp
   18a64:	41 57                	push   %r15
   18a66:	41 56                	push   %r14
   18a68:	41 55                	push   %r13
   18a6a:	41 54                	push   %r12
   18a6c:	49 89 fc             	mov    %rdi,%r12
   18a6f:	53                   	push   %rbx
   18a70:	48 83 ec 18          	sub    $0x18,%rsp
   18a74:	48 83 fe 18          	cmp    $0x18,%rsi
   18a78:	0f 84 82 00 00 00    	je     18b00 <lib_AESCMAC+0xa0>
   18a7e:	48 83 fe 20          	cmp    $0x20,%rsi
   18a82:	74 6c                	je     18af0 <lib_AESCMAC+0x90>
   18a84:	48 83 fe 10          	cmp    $0x10,%rsi
   18a88:	74 16                	je     18aa0 <lib_AESCMAC+0x40>
   18a8a:	48 83 c4 18          	add    $0x18,%rsp
   18a8e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   18a93:	5b                   	pop    %rbx
   18a94:	41 5c                	pop    %r12
   18a96:	41 5d                	pop    %r13
   18a98:	41 5e                	pop    %r14
   18a9a:	41 5f                	pop    %r15
   18a9c:	5d                   	pop    %rbp
   18a9d:	c3                   	retq   
   18a9e:	66 90                	xchg   %ax,%ax
   18aa0:	bf 02 00 00 00       	mov    $0x2,%edi
   18aa5:	4d 89 cd             	mov    %r9,%r13
   18aa8:	49 89 d6             	mov    %rdx,%r14
   18aab:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
   18aaf:	49 89 cf             	mov    %rcx,%r15
   18ab2:	48 89 f3             	mov    %rsi,%rbx
   18ab5:	e8 06 0d 00 00       	callq  197c0 <mbedtls_cipher_info_from_type>
   18aba:	8b 50 20             	mov    0x20(%rax),%edx
   18abd:	4c 39 ea             	cmp    %r13,%rdx
   18ac0:	77 c8                	ja     18a8a <lib_AESCMAC+0x2a>
   18ac2:	4c 8b 4d c8          	mov    -0x38(%rbp),%r9
   18ac6:	48 83 c4 18          	add    $0x18,%rsp
   18aca:	48 8d 14 dd 00 00 00 	lea    0x0(,%rbx,8),%rdx
   18ad1:	00 
   18ad2:	4d 89 f8             	mov    %r15,%r8
   18ad5:	4c 89 f1             	mov    %r14,%rcx
   18ad8:	4c 89 e6             	mov    %r12,%rsi
   18adb:	5b                   	pop    %rbx
   18adc:	41 5c                	pop    %r12
   18ade:	41 5d                	pop    %r13
   18ae0:	41 5e                	pop    %r14
   18ae2:	41 5f                	pop    %r15
   18ae4:	5d                   	pop    %rbp
   18ae5:	48 89 c7             	mov    %rax,%rdi
   18ae8:	e9 e3 2a 00 00       	jmpq   1b5d0 <mbedtls_cipher_cmac>
   18aed:	0f 1f 00             	nopl   (%rax)
   18af0:	bf 04 00 00 00       	mov    $0x4,%edi
   18af5:	eb ae                	jmp    18aa5 <lib_AESCMAC+0x45>
   18af7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   18afe:	00 00 
   18b00:	bf 03 00 00 00       	mov    $0x3,%edi
   18b05:	eb 9e                	jmp    18aa5 <lib_AESCMAC+0x45>
   18b07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   18b0e:	00 00 

0000000000018b10 <lib_RSAInitKey>:
   18b10:	55                   	push   %rbp
   18b11:	31 d2                	xor    %edx,%edx
   18b13:	31 f6                	xor    %esi,%esi
   18b15:	48 89 e5             	mov    %rsp,%rbp
   18b18:	e8 33 16 00 00       	callq  1a150 <mbedtls_rsa_init>
   18b1d:	31 c0                	xor    %eax,%eax
   18b1f:	5d                   	pop    %rbp
   18b20:	c3                   	retq   
   18b21:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18b26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18b2d:	00 00 00 

0000000000018b30 <lib_RSAGenerateKey>:
   18b30:	55                   	push   %rbp
   18b31:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   18b36:	48 39 c6             	cmp    %rax,%rsi
   18b39:	48 89 e5             	mov    %rsp,%rbp
   18b3c:	77 22                	ja     18b60 <lib_RSAGenerateKey+0x30>
   18b3e:	48 39 c2             	cmp    %rax,%rdx
   18b41:	77 1d                	ja     18b60 <lib_RSAGenerateKey+0x30>
   18b43:	85 d2                	test   %edx,%edx
   18b45:	78 19                	js     18b60 <lib_RSAGenerateKey+0x30>
   18b47:	5d                   	pop    %rbp
   18b48:	89 f1                	mov    %esi,%ecx
   18b4a:	48 8d 35 4f fe ff ff 	lea    -0x1b1(%rip),%rsi        # 189a0 <RandomWrapper>
   18b51:	41 89 d0             	mov    %edx,%r8d
   18b54:	31 d2                	xor    %edx,%edx
   18b56:	e9 25 1f 00 00       	jmpq   1aa80 <mbedtls_rsa_gen_key>
   18b5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18b60:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   18b65:	5d                   	pop    %rbp
   18b66:	c3                   	retq   
   18b67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   18b6e:	00 00 

0000000000018b70 <lib_RSAExportPublicKey>:
   18b70:	55                   	push   %rbp
   18b71:	48 89 e5             	mov    %rsp,%rbp
   18b74:	41 55                	push   %r13
   18b76:	41 54                	push   %r12
   18b78:	53                   	push   %rbx
   18b79:	48 89 fb             	mov    %rdi,%rbx
   18b7c:	48 83 c7 28          	add    $0x28,%rdi
   18b80:	49 89 cc             	mov    %rcx,%r12
   18b83:	4d 89 c5             	mov    %r8,%r13
   18b86:	48 83 ec 08          	sub    $0x8,%rsp
   18b8a:	48 8b 12             	mov    (%rdx),%rdx
   18b8d:	e8 ee 49 00 00       	callq  1d580 <mbedtls_mpi_write_binary>
   18b92:	85 c0                	test   %eax,%eax
   18b94:	74 12                	je     18ba8 <lib_RSAExportPublicKey+0x38>
   18b96:	48 83 c4 08          	add    $0x8,%rsp
   18b9a:	5b                   	pop    %rbx
   18b9b:	41 5c                	pop    %r12
   18b9d:	41 5d                	pop    %r13
   18b9f:	5d                   	pop    %rbp
   18ba0:	c3                   	retq   
   18ba1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18ba8:	49 8b 55 00          	mov    0x0(%r13),%rdx
   18bac:	48 83 c4 08          	add    $0x8,%rsp
   18bb0:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   18bb4:	4c 89 e6             	mov    %r12,%rsi
   18bb7:	5b                   	pop    %rbx
   18bb8:	41 5c                	pop    %r12
   18bba:	41 5d                	pop    %r13
   18bbc:	5d                   	pop    %rbp
   18bbd:	e9 be 49 00 00       	jmpq   1d580 <mbedtls_mpi_write_binary>
   18bc2:	0f 1f 40 00          	nopl   0x0(%rax)
   18bc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18bcd:	00 00 00 

0000000000018bd0 <lib_RSAImportPublicKey>:
   18bd0:	55                   	push   %rbp
   18bd1:	48 89 e5             	mov    %rsp,%rbp
   18bd4:	41 57                	push   %r15
   18bd6:	41 56                	push   %r14
   18bd8:	41 55                	push   %r13
   18bda:	41 54                	push   %r12
   18bdc:	49 89 fc             	mov    %rdi,%r12
   18bdf:	53                   	push   %rbx
   18be0:	48 83 c7 28          	add    $0x28,%rdi
   18be4:	49 89 cd             	mov    %rcx,%r13
   18be7:	4d 89 c6             	mov    %r8,%r14
   18bea:	48 83 ec 08          	sub    $0x8,%rsp
   18bee:	e8 ad 48 00 00       	callq  1d4a0 <mbedtls_mpi_read_binary>
   18bf3:	85 c0                	test   %eax,%eax
   18bf5:	89 c3                	mov    %eax,%ebx
   18bf7:	74 17                	je     18c10 <lib_RSAImportPublicKey+0x40>
   18bf9:	48 83 c4 08          	add    $0x8,%rsp
   18bfd:	89 d8                	mov    %ebx,%eax
   18bff:	5b                   	pop    %rbx
   18c00:	41 5c                	pop    %r12
   18c02:	41 5d                	pop    %r13
   18c04:	41 5e                	pop    %r14
   18c06:	41 5f                	pop    %r15
   18c08:	5d                   	pop    %rbp
   18c09:	c3                   	retq   
   18c0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18c10:	4d 8d 7c 24 10       	lea    0x10(%r12),%r15
   18c15:	4c 89 f2             	mov    %r14,%rdx
   18c18:	4c 89 ee             	mov    %r13,%rsi
   18c1b:	4c 89 ff             	mov    %r15,%rdi
   18c1e:	e8 7d 48 00 00       	callq  1d4a0 <mbedtls_mpi_read_binary>
   18c23:	85 c0                	test   %eax,%eax
   18c25:	89 c3                	mov    %eax,%ebx
   18c27:	75 d0                	jne    18bf9 <lib_RSAImportPublicKey+0x29>
   18c29:	4c 89 ff             	mov    %r15,%rdi
   18c2c:	e8 bf 47 00 00       	callq  1d3f0 <mbedtls_mpi_bitlen>
   18c31:	48 83 c0 07          	add    $0x7,%rax
   18c35:	48 c1 e8 03          	shr    $0x3,%rax
   18c39:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   18c3e:	eb b9                	jmp    18bf9 <lib_RSAImportPublicKey+0x29>

0000000000018c40 <lib_RSAVerifySHA256>:
   18c40:	48 39 57 08          	cmp    %rdx,0x8(%rdi)
   18c44:	75 32                	jne    18c78 <lib_RSAVerifySHA256+0x38>
   18c46:	55                   	push   %rbp
   18c47:	31 d2                	xor    %edx,%edx
   18c49:	49 89 f1             	mov    %rsi,%r9
   18c4c:	31 f6                	xor    %esi,%esi
   18c4e:	48 89 e5             	mov    %rsp,%rbp
   18c51:	48 83 ec 10          	sub    $0x10,%rsp
   18c55:	41 50                	push   %r8
   18c57:	4c 8d 45 f8          	lea    -0x8(%rbp),%r8
   18c5b:	51                   	push   %rcx
   18c5c:	31 c9                	xor    %ecx,%ecx
   18c5e:	e8 bd 1b 00 00       	callq  1a820 <mbedtls_rsa_rsaes_pkcs1_v15_decrypt>
   18c63:	85 c0                	test   %eax,%eax
   18c65:	5a                   	pop    %rdx
   18c66:	59                   	pop    %rcx
   18c67:	75 07                	jne    18c70 <lib_RSAVerifySHA256+0x30>
   18c69:	48 83 7d f8 20       	cmpq   $0x20,-0x8(%rbp)
   18c6e:	75 10                	jne    18c80 <lib_RSAVerifySHA256+0x40>
   18c70:	c9                   	leaveq 
   18c71:	c3                   	retq   
   18c72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18c78:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   18c7d:	c3                   	retq   
   18c7e:	66 90                	xchg   %ax,%ax
   18c80:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   18c85:	c9                   	leaveq 
   18c86:	c3                   	retq   
   18c87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   18c8e:	00 00 

0000000000018c90 <lib_RSAFreeKey>:
   18c90:	55                   	push   %rbp
   18c91:	48 89 e5             	mov    %rsp,%rbp
   18c94:	e8 47 1d 00 00       	callq  1a9e0 <mbedtls_rsa_free>
   18c99:	31 c0                	xor    %eax,%eax
   18c9b:	5d                   	pop    %rbp
   18c9c:	c3                   	retq   
   18c9d:	0f 1f 00             	nopl   (%rax)

0000000000018ca0 <RandomWrapper>:
   18ca0:	55                   	push   %rbp
   18ca1:	48 89 f7             	mov    %rsi,%rdi
   18ca4:	89 d6                	mov    %edx,%esi
   18ca6:	48 89 e5             	mov    %rsp,%rbp
   18ca9:	53                   	push   %rbx
   18caa:	48 89 d3             	mov    %rdx,%rbx
   18cad:	48 83 ec 08          	sub    $0x8,%rsp
   18cb1:	e8 ca 7b ff ff       	callq  10880 <_DkRandomBitsRead>
   18cb6:	48 98                	cltq   
   18cb8:	48 39 d8             	cmp    %rbx,%rax
   18cbb:	0f 95 c0             	setne  %al
   18cbe:	48 83 c4 08          	add    $0x8,%rsp
   18cc2:	0f b6 c0             	movzbl %al,%eax
   18cc5:	5b                   	pop    %rbx
   18cc6:	5d                   	pop    %rbp
   18cc7:	c3                   	retq   
   18cc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   18ccf:	00 

0000000000018cd0 <lib_DhInit>:
   18cd0:	55                   	push   %rbp
   18cd1:	48 89 e5             	mov    %rsp,%rbp
   18cd4:	41 55                	push   %r13
   18cd6:	41 54                	push   %r12
   18cd8:	53                   	push   %rbx
   18cd9:	49 89 fc             	mov    %rdi,%r12
   18cdc:	4d 8d 6c 24 08       	lea    0x8(%r12),%r13
   18ce1:	48 83 ec 08          	sub    $0x8,%rsp
   18ce5:	e8 46 02 00 00       	callq  18f30 <mbedtls_dhm_init>
   18cea:	48 8d 15 1f 10 01 00 	lea    0x1101f(%rip),%rdx        # 29d10 <xdigits.2874+0xe0>
   18cf1:	be 10 00 00 00       	mov    $0x10,%esi
   18cf6:	4c 89 ef             	mov    %r13,%rdi
   18cf9:	e8 72 54 00 00       	callq  1e170 <mbedtls_mpi_read_string>
   18cfe:	85 c0                	test   %eax,%eax
   18d00:	89 c3                	mov    %eax,%ebx
   18d02:	75 3c                	jne    18d40 <lib_DhInit+0x70>
   18d04:	49 8d 7c 24 20       	lea    0x20(%r12),%rdi
   18d09:	48 8d 15 28 12 01 00 	lea    0x11228(%rip),%rdx        # 29f38 <xdigits.2874+0x308>
   18d10:	be 10 00 00 00       	mov    $0x10,%esi
   18d15:	e8 56 54 00 00       	callq  1e170 <mbedtls_mpi_read_string>
   18d1a:	85 c0                	test   %eax,%eax
   18d1c:	89 c3                	mov    %eax,%ebx
   18d1e:	75 20                	jne    18d40 <lib_DhInit+0x70>
   18d20:	4c 89 ef             	mov    %r13,%rdi
   18d23:	e8 58 47 00 00       	callq  1d480 <mbedtls_mpi_size>
   18d28:	49 89 04 24          	mov    %rax,(%r12)
   18d2c:	48 83 c4 08          	add    $0x8,%rsp
   18d30:	31 c0                	xor    %eax,%eax
   18d32:	5b                   	pop    %rbx
   18d33:	41 5c                	pop    %r12
   18d35:	41 5d                	pop    %r13
   18d37:	5d                   	pop    %rbp
   18d38:	c3                   	retq   
   18d39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18d40:	48 8d 3d d1 11 01 00 	lea    0x111d1(%rip),%rdi        # 29f18 <xdigits.2874+0x2e8>
   18d47:	89 de                	mov    %ebx,%esi
   18d49:	31 c0                	xor    %eax,%eax
   18d4b:	e8 10 98 fe ff       	callq  2560 <pal_printf@plt>
   18d50:	48 83 c4 08          	add    $0x8,%rsp
   18d54:	89 d8                	mov    %ebx,%eax
   18d56:	5b                   	pop    %rbx
   18d57:	41 5c                	pop    %r12
   18d59:	41 5d                	pop    %r13
   18d5b:	5d                   	pop    %rbp
   18d5c:	c3                   	retq   
   18d5d:	0f 1f 00             	nopl   (%rax)

0000000000018d60 <lib_DhCreatePublic>:
   18d60:	55                   	push   %rbp
   18d61:	48 81 3a 00 01 00 00 	cmpq   $0x100,(%rdx)
   18d68:	48 89 e5             	mov    %rsp,%rbp
   18d6b:	75 23                	jne    18d90 <lib_DhCreatePublic+0x30>
   18d6d:	5d                   	pop    %rbp
   18d6e:	48 89 f2             	mov    %rsi,%rdx
   18d71:	8b 37                	mov    (%rdi),%esi
   18d73:	4c 8d 05 26 ff ff ff 	lea    -0xda(%rip),%r8        # 18ca0 <RandomWrapper>
   18d7a:	45 31 c9             	xor    %r9d,%r9d
   18d7d:	b9 00 01 00 00       	mov    $0x100,%ecx
   18d82:	e9 a9 04 00 00       	jmpq   19230 <mbedtls_dhm_make_public>
   18d87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   18d8e:	00 00 
   18d90:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   18d95:	5d                   	pop    %rbp
   18d96:	c3                   	retq   
   18d97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   18d9e:	00 00 

0000000000018da0 <lib_DhCalcSecret>:
   18da0:	49 81 38 00 01 00 00 	cmpq   $0x100,(%r8)
   18da7:	75 57                	jne    18e00 <lib_DhCalcSecret+0x60>
   18da9:	55                   	push   %rbp
   18daa:	48 89 e5             	mov    %rsp,%rbp
   18dad:	41 55                	push   %r13
   18daf:	41 54                	push   %r12
   18db1:	53                   	push   %rbx
   18db2:	49 89 cd             	mov    %rcx,%r13
   18db5:	4c 89 c3             	mov    %r8,%rbx
   18db8:	49 89 fc             	mov    %rdi,%r12
   18dbb:	48 83 ec 08          	sub    $0x8,%rsp
   18dbf:	e8 2c 04 00 00       	callq  191f0 <mbedtls_dhm_read_public>
   18dc4:	85 c0                	test   %eax,%eax
   18dc6:	74 10                	je     18dd8 <lib_DhCalcSecret+0x38>
   18dc8:	48 83 c4 08          	add    $0x8,%rsp
   18dcc:	5b                   	pop    %rbx
   18dcd:	41 5c                	pop    %r12
   18dcf:	41 5d                	pop    %r13
   18dd1:	5d                   	pop    %rbp
   18dd2:	c3                   	retq   
   18dd3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18dd8:	48 8b 13             	mov    (%rbx),%rdx
   18ddb:	48 83 c4 08          	add    $0x8,%rsp
   18ddf:	48 89 d9             	mov    %rbx,%rcx
   18de2:	4c 89 ee             	mov    %r13,%rsi
   18de5:	4c 89 e7             	mov    %r12,%rdi
   18de8:	4c 8d 05 b1 fe ff ff 	lea    -0x14f(%rip),%r8        # 18ca0 <RandomWrapper>
   18def:	5b                   	pop    %rbx
   18df0:	41 5c                	pop    %r12
   18df2:	41 5d                	pop    %r13
   18df4:	5d                   	pop    %rbp
   18df5:	45 31 c9             	xor    %r9d,%r9d
   18df8:	e9 83 05 00 00       	jmpq   19380 <mbedtls_dhm_calc_secret>
   18dfd:	0f 1f 00             	nopl   (%rax)
   18e00:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   18e05:	c3                   	retq   
   18e06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18e0d:	00 00 00 

0000000000018e10 <lib_DhFinal>:
   18e10:	55                   	push   %rbp
   18e11:	48 89 e5             	mov    %rsp,%rbp
   18e14:	5d                   	pop    %rbp
   18e15:	e9 a6 08 00 00       	jmpq   196c0 <mbedtls_dhm_free>
   18e1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000018e20 <dhm_read_bignum>:
   18e20:	48 8b 06             	mov    (%rsi),%rax
   18e23:	48 89 d1             	mov    %rdx,%rcx
   18e26:	48 29 c1             	sub    %rax,%rcx
   18e29:	48 83 f9 01          	cmp    $0x1,%rcx
   18e2d:	7e 51                	jle    18e80 <dhm_read_bignum+0x60>
   18e2f:	0f b7 08             	movzwl (%rax),%ecx
   18e32:	48 83 c0 02          	add    $0x2,%rax
   18e36:	48 29 c2             	sub    %rax,%rdx
   18e39:	48 89 06             	mov    %rax,(%rsi)
   18e3c:	66 c1 c1 08          	rol    $0x8,%cx
   18e40:	44 0f b7 c1          	movzwl %cx,%r8d
   18e44:	41 39 d0             	cmp    %edx,%r8d
   18e47:	7f 37                	jg     18e80 <dhm_read_bignum+0x60>
   18e49:	55                   	push   %rbp
   18e4a:	48 89 e5             	mov    %rsp,%rbp
   18e4d:	41 54                	push   %r12
   18e4f:	53                   	push   %rbx
   18e50:	0f b7 d9             	movzwl %cx,%ebx
   18e53:	49 89 f4             	mov    %rsi,%r12
   18e56:	48 89 c6             	mov    %rax,%rsi
   18e59:	48 89 da             	mov    %rbx,%rdx
   18e5c:	e8 3f 46 00 00       	callq  1d4a0 <mbedtls_mpi_read_binary>
   18e61:	85 c0                	test   %eax,%eax
   18e63:	75 0b                	jne    18e70 <dhm_read_bignum+0x50>
   18e65:	49 01 1c 24          	add    %rbx,(%r12)
   18e69:	31 c0                	xor    %eax,%eax
   18e6b:	5b                   	pop    %rbx
   18e6c:	41 5c                	pop    %r12
   18e6e:	5d                   	pop    %rbp
   18e6f:	c3                   	retq   
   18e70:	5b                   	pop    %rbx
   18e71:	2d 00 31 00 00       	sub    $0x3100,%eax
   18e76:	41 5c                	pop    %r12
   18e78:	5d                   	pop    %rbp
   18e79:	c3                   	retq   
   18e7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18e80:	b8 80 cf ff ff       	mov    $0xffffcf80,%eax
   18e85:	c3                   	retq   
   18e86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18e8d:	00 00 00 

0000000000018e90 <dhm_check_range>:
   18e90:	55                   	push   %rbp
   18e91:	48 89 e5             	mov    %rsp,%rbp
   18e94:	41 57                	push   %r15
   18e96:	41 56                	push   %r14
   18e98:	41 55                	push   %r13
   18e9a:	41 54                	push   %r12
   18e9c:	4c 8d 6d b0          	lea    -0x50(%rbp),%r13
   18ea0:	53                   	push   %rbx
   18ea1:	48 8d 5d 90          	lea    -0x70(%rbp),%rbx
   18ea5:	49 89 ff             	mov    %rdi,%r15
   18ea8:	49 89 f6             	mov    %rsi,%r14
   18eab:	48 83 ec 48          	sub    $0x48,%rsp
   18eaf:	48 89 df             	mov    %rbx,%rdi
   18eb2:	e8 59 3e 00 00       	callq  1cd10 <mbedtls_mpi_init>
   18eb7:	4c 89 ef             	mov    %r13,%rdi
   18eba:	e8 51 3e 00 00       	callq  1cd10 <mbedtls_mpi_init>
   18ebf:	be 02 00 00 00       	mov    $0x2,%esi
   18ec4:	48 89 df             	mov    %rbx,%rdi
   18ec7:	e8 b4 43 00 00       	callq  1d280 <mbedtls_mpi_lset>
   18ecc:	85 c0                	test   %eax,%eax
   18ece:	41 89 c4             	mov    %eax,%r12d
   18ed1:	74 25                	je     18ef8 <dhm_check_range+0x68>
   18ed3:	48 89 df             	mov    %rbx,%rdi
   18ed6:	e8 65 3e 00 00       	callq  1cd40 <mbedtls_mpi_free>
   18edb:	4c 89 ef             	mov    %r13,%rdi
   18ede:	e8 5d 3e 00 00       	callq  1cd40 <mbedtls_mpi_free>
   18ee3:	48 83 c4 48          	add    $0x48,%rsp
   18ee7:	44 89 e0             	mov    %r12d,%eax
   18eea:	5b                   	pop    %rbx
   18eeb:	41 5c                	pop    %r12
   18eed:	41 5d                	pop    %r13
   18eef:	41 5e                	pop    %r14
   18ef1:	41 5f                	pop    %r15
   18ef3:	5d                   	pop    %rbp
   18ef4:	c3                   	retq   
   18ef5:	0f 1f 00             	nopl   (%rax)
   18ef8:	ba 02 00 00 00       	mov    $0x2,%edx
   18efd:	4c 89 f6             	mov    %r14,%rsi
   18f00:	4c 89 ef             	mov    %r13,%rdi
   18f03:	e8 78 50 00 00       	callq  1df80 <mbedtls_mpi_sub_int>
   18f08:	85 c0                	test   %eax,%eax
   18f0a:	41 89 c4             	mov    %eax,%r12d
   18f0d:	75 c4                	jne    18ed3 <dhm_check_range+0x43>
   18f0f:	48 89 de             	mov    %rbx,%rsi
   18f12:	4c 89 ff             	mov    %r15,%rdi
   18f15:	e8 76 4b 00 00       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   18f1a:	85 c0                	test   %eax,%eax
   18f1c:	78 b5                	js     18ed3 <dhm_check_range+0x43>
   18f1e:	4c 89 ee             	mov    %r13,%rsi
   18f21:	4c 89 ff             	mov    %r15,%rdi
   18f24:	e8 67 4b 00 00       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   18f29:	eb a8                	jmp    18ed3 <dhm_check_range+0x43>
   18f2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000018f30 <mbedtls_dhm_init>:
   18f30:	55                   	push   %rbp
   18f31:	ba f8 00 00 00       	mov    $0xf8,%edx
   18f36:	31 f6                	xor    %esi,%esi
   18f38:	48 89 e5             	mov    %rsp,%rbp
   18f3b:	5d                   	pop    %rbp
   18f3c:	e9 1f d5 ff ff       	jmpq   16460 <memset>
   18f41:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18f46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18f4d:	00 00 00 

0000000000018f50 <mbedtls_dhm_read_params>:
   18f50:	55                   	push   %rbp
   18f51:	48 89 e5             	mov    %rsp,%rbp
   18f54:	41 57                	push   %r15
   18f56:	4c 8d 7f 08          	lea    0x8(%rdi),%r15
   18f5a:	41 56                	push   %r14
   18f5c:	41 55                	push   %r13
   18f5e:	49 89 d6             	mov    %rdx,%r14
   18f61:	41 54                	push   %r12
   18f63:	53                   	push   %rbx
   18f64:	49 89 fc             	mov    %rdi,%r12
   18f67:	4c 89 ff             	mov    %r15,%rdi
   18f6a:	49 89 f5             	mov    %rsi,%r13
   18f6d:	48 83 ec 18          	sub    $0x18,%rsp
   18f71:	e8 aa fe ff ff       	callq  18e20 <dhm_read_bignum>
   18f76:	85 c0                	test   %eax,%eax
   18f78:	89 c3                	mov    %eax,%ebx
   18f7a:	74 14                	je     18f90 <mbedtls_dhm_read_params+0x40>
   18f7c:	48 83 c4 18          	add    $0x18,%rsp
   18f80:	89 d8                	mov    %ebx,%eax
   18f82:	5b                   	pop    %rbx
   18f83:	41 5c                	pop    %r12
   18f85:	41 5d                	pop    %r13
   18f87:	41 5e                	pop    %r14
   18f89:	41 5f                	pop    %r15
   18f8b:	5d                   	pop    %rbp
   18f8c:	c3                   	retq   
   18f8d:	0f 1f 00             	nopl   (%rax)
   18f90:	49 8d 7c 24 20       	lea    0x20(%r12),%rdi
   18f95:	4c 89 f2             	mov    %r14,%rdx
   18f98:	4c 89 ee             	mov    %r13,%rsi
   18f9b:	e8 80 fe ff ff       	callq  18e20 <dhm_read_bignum>
   18fa0:	85 c0                	test   %eax,%eax
   18fa2:	89 c3                	mov    %eax,%ebx
   18fa4:	75 d6                	jne    18f7c <mbedtls_dhm_read_params+0x2c>
   18fa6:	49 8d 4c 24 68       	lea    0x68(%r12),%rcx
   18fab:	4c 89 f2             	mov    %r14,%rdx
   18fae:	4c 89 ee             	mov    %r13,%rsi
   18fb1:	48 89 cf             	mov    %rcx,%rdi
   18fb4:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
   18fb8:	e8 63 fe ff ff       	callq  18e20 <dhm_read_bignum>
   18fbd:	85 c0                	test   %eax,%eax
   18fbf:	89 c3                	mov    %eax,%ebx
   18fc1:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   18fc5:	75 b5                	jne    18f7c <mbedtls_dhm_read_params+0x2c>
   18fc7:	4c 89 fe             	mov    %r15,%rsi
   18fca:	48 89 cf             	mov    %rcx,%rdi
   18fcd:	e8 be fe ff ff       	callq  18e90 <dhm_check_range>
   18fd2:	85 c0                	test   %eax,%eax
   18fd4:	89 c3                	mov    %eax,%ebx
   18fd6:	75 a4                	jne    18f7c <mbedtls_dhm_read_params+0x2c>
   18fd8:	4c 89 ff             	mov    %r15,%rdi
   18fdb:	e8 a0 44 00 00       	callq  1d480 <mbedtls_mpi_size>
   18fe0:	49 89 04 24          	mov    %rax,(%r12)
   18fe4:	eb 96                	jmp    18f7c <mbedtls_dhm_read_params+0x2c>
   18fe6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   18fed:	00 00 00 

0000000000018ff0 <mbedtls_dhm_make_params>:
   18ff0:	55                   	push   %rbp
   18ff1:	48 89 e5             	mov    %rsp,%rbp
   18ff4:	41 57                	push   %r15
   18ff6:	41 56                	push   %r14
   18ff8:	41 55                	push   %r13
   18ffa:	41 54                	push   %r12
   18ffc:	4c 8d 67 08          	lea    0x8(%rdi),%r12
   19000:	53                   	push   %rbx
   19001:	49 89 fd             	mov    %rdi,%r13
   19004:	89 f3                	mov    %esi,%ebx
   19006:	4c 89 e7             	mov    %r12,%rdi
   19009:	31 f6                	xor    %esi,%esi
   1900b:	4d 89 c6             	mov    %r8,%r14
   1900e:	48 83 ec 38          	sub    $0x38,%rsp
   19012:	4d 89 cf             	mov    %r9,%r15
   19015:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   19019:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   1901d:	e8 6e 4b 00 00       	callq  1db90 <mbedtls_mpi_cmp_int>
   19022:	85 c0                	test   %eax,%eax
   19024:	0f 84 c7 00 00 00    	je     190f1 <mbedtls_dhm_make_params+0x101>
   1902a:	48 63 c3             	movslq %ebx,%rax
   1902d:	49 8d 5d 38          	lea    0x38(%r13),%rbx
   19031:	c7 45 c0 0c 00 00 00 	movl   $0xc,-0x40(%rbp)
   19038:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1903c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   19040:	4c 89 f9             	mov    %r15,%rcx
   19043:	4c 89 f2             	mov    %r14,%rdx
   19046:	48 89 df             	mov    %rbx,%rdi
   19049:	e8 a2 6c 00 00       	callq  1fcf0 <mbedtls_mpi_fill_random>
   1904e:	eb 11                	jmp    19061 <mbedtls_dhm_make_params+0x71>
   19050:	be 01 00 00 00       	mov    $0x1,%esi
   19055:	48 89 df             	mov    %rbx,%rdi
   19058:	e8 c3 46 00 00       	callq  1d720 <mbedtls_mpi_shift_r>
   1905d:	85 c0                	test   %eax,%eax
   1905f:	75 6f                	jne    190d0 <mbedtls_dhm_make_params+0xe0>
   19061:	4c 89 e6             	mov    %r12,%rsi
   19064:	48 89 df             	mov    %rbx,%rdi
   19067:	e8 24 4a 00 00       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1906c:	85 c0                	test   %eax,%eax
   1906e:	79 e0                	jns    19050 <mbedtls_dhm_make_params+0x60>
   19070:	83 6d c0 01          	subl   $0x1,-0x40(%rbp)
   19074:	74 73                	je     190e9 <mbedtls_dhm_make_params+0xf9>
   19076:	4c 89 e6             	mov    %r12,%rsi
   19079:	48 89 df             	mov    %rbx,%rdi
   1907c:	e8 0f fe ff ff       	callq  18e90 <dhm_check_range>
   19081:	85 c0                	test   %eax,%eax
   19083:	75 b7                	jne    1903c <mbedtls_dhm_make_params+0x4c>
   19085:	89 45 c0             	mov    %eax,-0x40(%rbp)
   19088:	4d 8d 7d 50          	lea    0x50(%r13),%r15
   1908c:	49 8d 45 20          	lea    0x20(%r13),%rax
   19090:	4d 8d 85 98 00 00 00 	lea    0x98(%r13),%r8
   19097:	4c 89 e1             	mov    %r12,%rcx
   1909a:	48 89 da             	mov    %rbx,%rdx
   1909d:	48 89 c6             	mov    %rax,%rsi
   190a0:	4c 89 ff             	mov    %r15,%rdi
   190a3:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   190a7:	e8 54 5f 00 00       	callq  1f000 <mbedtls_mpi_exp_mod>
   190ac:	85 c0                	test   %eax,%eax
   190ae:	75 20                	jne    190d0 <mbedtls_dhm_make_params+0xe0>
   190b0:	4c 89 e6             	mov    %r12,%rsi
   190b3:	4c 89 ff             	mov    %r15,%rdi
   190b6:	e8 d5 fd ff ff       	callq  18e90 <dhm_check_range>
   190bb:	85 c0                	test   %eax,%eax
   190bd:	44 8b 4d c0          	mov    -0x40(%rbp),%r9d
   190c1:	74 36                	je     190f9 <mbedtls_dhm_make_params+0x109>
   190c3:	41 89 c1             	mov    %eax,%r9d
   190c6:	eb 0f                	jmp    190d7 <mbedtls_dhm_make_params+0xe7>
   190c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   190cf:	00 
   190d0:	44 8d 88 80 ce ff ff 	lea    -0x3180(%rax),%r9d
   190d7:	48 83 c4 38          	add    $0x38,%rsp
   190db:	44 89 c8             	mov    %r9d,%eax
   190de:	5b                   	pop    %rbx
   190df:	41 5c                	pop    %r12
   190e1:	41 5d                	pop    %r13
   190e3:	41 5e                	pop    %r14
   190e5:	41 5f                	pop    %r15
   190e7:	5d                   	pop    %rbp
   190e8:	c3                   	retq   
   190e9:	41 b9 80 ce ff ff    	mov    $0xffffce80,%r9d
   190ef:	eb e6                	jmp    190d7 <mbedtls_dhm_make_params+0xe7>
   190f1:	41 b9 80 cf ff ff    	mov    $0xffffcf80,%r9d
   190f7:	eb de                	jmp    190d7 <mbedtls_dhm_make_params+0xe7>
   190f9:	4c 89 e7             	mov    %r12,%rdi
   190fc:	44 89 4d a4          	mov    %r9d,-0x5c(%rbp)
   19100:	e8 7b 43 00 00       	callq  1d480 <mbedtls_mpi_size>
   19105:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   19109:	48 89 c3             	mov    %rax,%rbx
   1910c:	e8 6f 43 00 00       	callq  1d480 <mbedtls_mpi_size>
   19111:	4c 89 ff             	mov    %r15,%rdi
   19114:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   19118:	e8 63 43 00 00       	callq  1d480 <mbedtls_mpi_size>
   1911d:	49 89 c6             	mov    %rax,%r14
   19120:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   19124:	48 89 da             	mov    %rbx,%rdx
   19127:	4c 89 e7             	mov    %r12,%rdi
   1912a:	4c 8d 40 02          	lea    0x2(%rax),%r8
   1912e:	4c 89 c6             	mov    %r8,%rsi
   19131:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
   19135:	e8 46 44 00 00       	callq  1d580 <mbedtls_mpi_write_binary>
   1913a:	85 c0                	test   %eax,%eax
   1913c:	4c 8b 45 c0          	mov    -0x40(%rbp),%r8
   19140:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
   19144:	75 8a                	jne    190d0 <mbedtls_dhm_make_params+0xe0>
   19146:	4d 8d 24 18          	lea    (%r8,%rbx,1),%r12
   1914a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1914e:	48 89 d8             	mov    %rbx,%rax
   19151:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   19155:	48 c1 e8 08          	shr    $0x8,%rax
   19159:	4d 8d 44 24 02       	lea    0x2(%r12),%r8
   1915e:	88 02                	mov    %al,(%rdx)
   19160:	88 5a 01             	mov    %bl,0x1(%rdx)
   19163:	48 89 ca             	mov    %rcx,%rdx
   19166:	4c 89 c6             	mov    %r8,%rsi
   19169:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
   1916d:	e8 0e 44 00 00       	callq  1d580 <mbedtls_mpi_write_binary>
   19172:	85 c0                	test   %eax,%eax
   19174:	4c 8b 45 c0          	mov    -0x40(%rbp),%r8
   19178:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
   1917c:	44 8b 4d a4          	mov    -0x5c(%rbp),%r9d
   19180:	0f 85 4a ff ff ff    	jne    190d0 <mbedtls_dhm_make_params+0xe0>
   19186:	48 89 c8             	mov    %rcx,%rax
   19189:	41 88 4c 24 01       	mov    %cl,0x1(%r12)
   1918e:	4c 89 f2             	mov    %r14,%rdx
   19191:	48 c1 e8 08          	shr    $0x8,%rax
   19195:	4c 89 ff             	mov    %r15,%rdi
   19198:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
   1919c:	41 88 04 24          	mov    %al,(%r12)
   191a0:	4d 8d 24 08          	lea    (%r8,%rcx,1),%r12
   191a4:	49 8d 4c 24 02       	lea    0x2(%r12),%rcx
   191a9:	48 89 ce             	mov    %rcx,%rsi
   191ac:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
   191b0:	e8 cb 43 00 00       	callq  1d580 <mbedtls_mpi_write_binary>
   191b5:	85 c0                	test   %eax,%eax
   191b7:	0f 85 13 ff ff ff    	jne    190d0 <mbedtls_dhm_make_params+0xe0>
   191bd:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   191c1:	4c 89 f0             	mov    %r14,%rax
   191c4:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   191c8:	48 c1 e8 08          	shr    $0x8,%rax
   191cc:	45 88 74 24 01       	mov    %r14b,0x1(%r12)
   191d1:	44 8b 4d c0          	mov    -0x40(%rbp),%r9d
   191d5:	41 88 04 24          	mov    %al,(%r12)
   191d9:	4a 8d 04 31          	lea    (%rcx,%r14,1),%rax
   191dd:	48 2b 45 b8          	sub    -0x48(%rbp),%rax
   191e1:	48 89 02             	mov    %rax,(%rdx)
   191e4:	49 89 5d 00          	mov    %rbx,0x0(%r13)
   191e8:	e9 ea fe ff ff       	jmpq   190d7 <mbedtls_dhm_make_params+0xe7>
   191ed:	0f 1f 00             	nopl   (%rax)

00000000000191f0 <mbedtls_dhm_read_public>:
   191f0:	48 85 ff             	test   %rdi,%rdi
   191f3:	b8 80 cf ff ff       	mov    $0xffffcf80,%eax
   191f8:	74 2e                	je     19228 <mbedtls_dhm_read_public+0x38>
   191fa:	48 85 d2             	test   %rdx,%rdx
   191fd:	74 29                	je     19228 <mbedtls_dhm_read_public+0x38>
   191ff:	48 3b 17             	cmp    (%rdi),%rdx
   19202:	77 1e                	ja     19222 <mbedtls_dhm_read_public+0x32>
   19204:	55                   	push   %rbp
   19205:	48 83 c7 68          	add    $0x68,%rdi
   19209:	48 89 e5             	mov    %rsp,%rbp
   1920c:	e8 8f 42 00 00       	callq  1d4a0 <mbedtls_mpi_read_binary>
   19211:	5d                   	pop    %rbp
   19212:	8d 90 00 ce ff ff    	lea    -0x3200(%rax),%edx
   19218:	85 c0                	test   %eax,%eax
   1921a:	b8 00 00 00 00       	mov    $0x0,%eax
   1921f:	0f 45 c2             	cmovne %edx,%eax
   19222:	f3 c3                	repz retq 
   19224:	0f 1f 40 00          	nopl   0x0(%rax)
   19228:	f3 c3                	repz retq 
   1922a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000019230 <mbedtls_dhm_make_public>:
   19230:	48 85 ff             	test   %rdi,%rdi
   19233:	0f 84 20 01 00 00    	je     19359 <mbedtls_dhm_make_public+0x129>
   19239:	48 85 c9             	test   %rcx,%rcx
   1923c:	0f 84 17 01 00 00    	je     19359 <mbedtls_dhm_make_public+0x129>
   19242:	48 3b 0f             	cmp    (%rdi),%rcx
   19245:	0f 87 0e 01 00 00    	ja     19359 <mbedtls_dhm_make_public+0x129>
   1924b:	55                   	push   %rbp
   1924c:	48 89 e5             	mov    %rsp,%rbp
   1924f:	41 57                	push   %r15
   19251:	41 56                	push   %r14
   19253:	41 55                	push   %r13
   19255:	41 54                	push   %r12
   19257:	4c 8d 67 08          	lea    0x8(%rdi),%r12
   1925b:	53                   	push   %rbx
   1925c:	49 89 fd             	mov    %rdi,%r13
   1925f:	89 f3                	mov    %esi,%ebx
   19261:	4c 89 e7             	mov    %r12,%rdi
   19264:	31 f6                	xor    %esi,%esi
   19266:	4d 89 cf             	mov    %r9,%r15
   19269:	48 83 ec 28          	sub    $0x28,%rsp
   1926d:	4d 89 c6             	mov    %r8,%r14
   19270:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   19274:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   19278:	e8 13 49 00 00       	callq  1db90 <mbedtls_mpi_cmp_int>
   1927d:	85 c0                	test   %eax,%eax
   1927f:	0f 84 e6 00 00 00    	je     1936b <mbedtls_dhm_make_public+0x13b>
   19285:	48 63 c3             	movslq %ebx,%rax
   19288:	49 8d 5d 38          	lea    0x38(%r13),%rbx
   1928c:	c7 45 c4 0c 00 00 00 	movl   $0xc,-0x3c(%rbp)
   19293:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   19297:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   1929b:	4c 89 f9             	mov    %r15,%rcx
   1929e:	4c 89 f2             	mov    %r14,%rdx
   192a1:	48 89 df             	mov    %rbx,%rdi
   192a4:	e8 47 6a 00 00       	callq  1fcf0 <mbedtls_mpi_fill_random>
   192a9:	eb 16                	jmp    192c1 <mbedtls_dhm_make_public+0x91>
   192ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   192b0:	be 01 00 00 00       	mov    $0x1,%esi
   192b5:	48 89 df             	mov    %rbx,%rdi
   192b8:	e8 63 44 00 00       	callq  1d720 <mbedtls_mpi_shift_r>
   192bd:	85 c0                	test   %eax,%eax
   192bf:	75 7f                	jne    19340 <mbedtls_dhm_make_public+0x110>
   192c1:	4c 89 e6             	mov    %r12,%rsi
   192c4:	48 89 df             	mov    %rbx,%rdi
   192c7:	e8 c4 47 00 00       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   192cc:	85 c0                	test   %eax,%eax
   192ce:	79 e0                	jns    192b0 <mbedtls_dhm_make_public+0x80>
   192d0:	83 6d c4 01          	subl   $0x1,-0x3c(%rbp)
   192d4:	0f 84 89 00 00 00    	je     19363 <mbedtls_dhm_make_public+0x133>
   192da:	4c 89 e6             	mov    %r12,%rsi
   192dd:	48 89 df             	mov    %rbx,%rdi
   192e0:	e8 ab fb ff ff       	callq  18e90 <dhm_check_range>
   192e5:	85 c0                	test   %eax,%eax
   192e7:	75 ae                	jne    19297 <mbedtls_dhm_make_public+0x67>
   192e9:	4d 8d 75 50          	lea    0x50(%r13),%r14
   192ed:	49 8d 75 20          	lea    0x20(%r13),%rsi
   192f1:	4d 8d 85 98 00 00 00 	lea    0x98(%r13),%r8
   192f8:	4c 89 e1             	mov    %r12,%rcx
   192fb:	48 89 da             	mov    %rbx,%rdx
   192fe:	89 45 c8             	mov    %eax,-0x38(%rbp)
   19301:	4c 89 f7             	mov    %r14,%rdi
   19304:	e8 f7 5c 00 00       	callq  1f000 <mbedtls_mpi_exp_mod>
   19309:	85 c0                	test   %eax,%eax
   1930b:	75 33                	jne    19340 <mbedtls_dhm_make_public+0x110>
   1930d:	4c 89 e6             	mov    %r12,%rsi
   19310:	4c 89 f7             	mov    %r14,%rdi
   19313:	e8 78 fb ff ff       	callq  18e90 <dhm_check_range>
   19318:	85 c0                	test   %eax,%eax
   1931a:	41 89 c1             	mov    %eax,%r9d
   1931d:	75 28                	jne    19347 <mbedtls_dhm_make_public+0x117>
   1931f:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   19323:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   19327:	4c 89 f7             	mov    %r14,%rdi
   1932a:	e8 51 42 00 00       	callq  1d580 <mbedtls_mpi_write_binary>
   1932f:	85 c0                	test   %eax,%eax
   19331:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
   19335:	74 10                	je     19347 <mbedtls_dhm_make_public+0x117>
   19337:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1933e:	00 00 
   19340:	44 8d 88 80 cd ff ff 	lea    -0x3280(%rax),%r9d
   19347:	48 83 c4 28          	add    $0x28,%rsp
   1934b:	44 89 c8             	mov    %r9d,%eax
   1934e:	5b                   	pop    %rbx
   1934f:	41 5c                	pop    %r12
   19351:	41 5d                	pop    %r13
   19353:	41 5e                	pop    %r14
   19355:	41 5f                	pop    %r15
   19357:	5d                   	pop    %rbp
   19358:	c3                   	retq   
   19359:	41 b9 80 cf ff ff    	mov    $0xffffcf80,%r9d
   1935f:	44 89 c8             	mov    %r9d,%eax
   19362:	c3                   	retq   
   19363:	41 b9 80 cd ff ff    	mov    $0xffffcd80,%r9d
   19369:	eb dc                	jmp    19347 <mbedtls_dhm_make_public+0x117>
   1936b:	41 b9 80 cf ff ff    	mov    $0xffffcf80,%r9d
   19371:	eb d4                	jmp    19347 <mbedtls_dhm_make_public+0x117>
   19373:	0f 1f 00             	nopl   (%rax)
   19376:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1937d:	00 00 00 

0000000000019380 <mbedtls_dhm_calc_secret>:
   19380:	48 85 ff             	test   %rdi,%rdi
   19383:	b8 80 cf ff ff       	mov    $0xffffcf80,%eax
   19388:	0f 84 20 03 00 00    	je     196ae <mbedtls_dhm_calc_secret+0x32e>
   1938e:	48 39 17             	cmp    %rdx,(%rdi)
   19391:	77 48                	ja     193db <mbedtls_dhm_calc_secret+0x5b>
   19393:	55                   	push   %rbp
   19394:	48 89 e5             	mov    %rsp,%rbp
   19397:	41 57                	push   %r15
   19399:	4c 8d 7f 68          	lea    0x68(%rdi),%r15
   1939d:	41 56                	push   %r14
   1939f:	41 55                	push   %r13
   193a1:	4c 8d 6f 08          	lea    0x8(%rdi),%r13
   193a5:	41 54                	push   %r12
   193a7:	53                   	push   %rbx
   193a8:	48 89 fb             	mov    %rdi,%rbx
   193ab:	4c 89 ff             	mov    %r15,%rdi
   193ae:	4d 89 c6             	mov    %r8,%r14
   193b1:	48 83 ec 58          	sub    $0x58,%rsp
   193b5:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   193b9:	4c 89 ee             	mov    %r13,%rsi
   193bc:	4c 89 4d a8          	mov    %r9,-0x58(%rbp)
   193c0:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
   193c4:	e8 c7 fa ff ff       	callq  18e90 <dhm_check_range>
   193c9:	85 c0                	test   %eax,%eax
   193cb:	74 13                	je     193e0 <mbedtls_dhm_calc_secret+0x60>
   193cd:	48 83 c4 58          	add    $0x58,%rsp
   193d1:	5b                   	pop    %rbx
   193d2:	41 5c                	pop    %r12
   193d4:	41 5d                	pop    %r13
   193d6:	41 5e                	pop    %r14
   193d8:	41 5f                	pop    %r15
   193da:	5d                   	pop    %rbp
   193db:	f3 c3                	repz retq 
   193dd:	0f 1f 00             	nopl   (%rax)
   193e0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   193e4:	48 89 c7             	mov    %rax,%rdi
   193e7:	48 89 45 90          	mov    %rax,-0x70(%rbp)
   193eb:	e8 20 39 00 00       	callq  1cd10 <mbedtls_mpi_init>
   193f0:	4d 85 f6             	test   %r14,%r14
   193f3:	0f 84 cf 01 00 00    	je     195c8 <mbedtls_dhm_calc_secret+0x248>
   193f9:	48 8d 43 38          	lea    0x38(%rbx),%rax
   193fd:	4c 8d a3 e0 00 00 00 	lea    0xe0(%rbx),%r12
   19404:	48 89 c7             	mov    %rax,%rdi
   19407:	4c 89 e6             	mov    %r12,%rsi
   1940a:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   1940e:	e8 7d 46 00 00       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   19413:	85 c0                	test   %eax,%eax
   19415:	0f 85 c5 00 00 00    	jne    194e0 <mbedtls_dhm_calc_secret+0x160>
   1941b:	4c 8d a3 b0 00 00 00 	lea    0xb0(%rbx),%r12
   19422:	be 01 00 00 00       	mov    $0x1,%esi
   19427:	4c 89 e7             	mov    %r12,%rdi
   1942a:	e8 61 47 00 00       	callq  1db90 <mbedtls_mpi_cmp_int>
   1942f:	85 c0                	test   %eax,%eax
   19431:	c7 45 84 0c 00 00 00 	movl   $0xc,-0x7c(%rbp)
   19438:	0f 85 02 02 00 00    	jne    19640 <mbedtls_dhm_calc_secret+0x2c0>
   1943e:	4c 89 ef             	mov    %r13,%rdi
   19441:	e8 3a 40 00 00       	callq  1d480 <mbedtls_mpi_size>
   19446:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
   1944a:	4c 89 f2             	mov    %r14,%rdx
   1944d:	48 89 c6             	mov    %rax,%rsi
   19450:	4c 89 e7             	mov    %r12,%rdi
   19453:	e8 98 68 00 00       	callq  1fcf0 <mbedtls_mpi_fill_random>
   19458:	eb 17                	jmp    19471 <mbedtls_dhm_calc_secret+0xf1>
   1945a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   19460:	be 01 00 00 00       	mov    $0x1,%esi
   19465:	4c 89 e7             	mov    %r12,%rdi
   19468:	e8 b3 42 00 00       	callq  1d720 <mbedtls_mpi_shift_r>
   1946d:	85 c0                	test   %eax,%eax
   1946f:	75 67                	jne    194d8 <mbedtls_dhm_calc_secret+0x158>
   19471:	4c 89 ee             	mov    %r13,%rsi
   19474:	4c 89 e7             	mov    %r12,%rdi
   19477:	e8 14 46 00 00       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1947c:	85 c0                	test   %eax,%eax
   1947e:	79 e0                	jns    19460 <mbedtls_dhm_calc_secret+0xe0>
   19480:	83 6d 84 01          	subl   $0x1,-0x7c(%rbp)
   19484:	0f 84 1a 02 00 00    	je     196a4 <mbedtls_dhm_calc_secret+0x324>
   1948a:	be 01 00 00 00       	mov    $0x1,%esi
   1948f:	4c 89 e7             	mov    %r12,%rdi
   19492:	e8 f9 46 00 00       	callq  1db90 <mbedtls_mpi_cmp_int>
   19497:	85 c0                	test   %eax,%eax
   19499:	7e a3                	jle    1943e <mbedtls_dhm_calc_secret+0xbe>
   1949b:	4c 8d b3 c8 00 00 00 	lea    0xc8(%rbx),%r14
   194a2:	4c 89 ea             	mov    %r13,%rdx
   194a5:	4c 89 e6             	mov    %r12,%rsi
   194a8:	4c 89 f7             	mov    %r14,%rdi
   194ab:	e8 80 6c 00 00       	callq  20130 <mbedtls_mpi_inv_mod>
   194b0:	85 c0                	test   %eax,%eax
   194b2:	75 24                	jne    194d8 <mbedtls_dhm_calc_secret+0x158>
   194b4:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   194b8:	4c 8d 83 98 00 00 00 	lea    0x98(%rbx),%r8
   194bf:	4c 89 e9             	mov    %r13,%rcx
   194c2:	4c 89 f6             	mov    %r14,%rsi
   194c5:	4c 89 f7             	mov    %r14,%rdi
   194c8:	e8 33 5b 00 00       	callq  1f000 <mbedtls_mpi_exp_mod>
   194cd:	85 c0                	test   %eax,%eax
   194cf:	74 6f                	je     19540 <mbedtls_dhm_calc_secret+0x1c0>
   194d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   194d8:	2d 00 33 00 00       	sub    $0x3300,%eax
   194dd:	eb 19                	jmp    194f8 <mbedtls_dhm_calc_secret+0x178>
   194df:	90                   	nop
   194e0:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
   194e4:	4c 89 e7             	mov    %r12,%rdi
   194e7:	e8 84 3a 00 00       	callq  1cf70 <mbedtls_mpi_copy>
   194ec:	89 c2                	mov    %eax,%edx
   194ee:	8d 80 00 cd ff ff    	lea    -0x3300(%rax),%eax
   194f4:	85 d2                	test   %edx,%edx
   194f6:	74 18                	je     19510 <mbedtls_dhm_calc_secret+0x190>
   194f8:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
   194fc:	89 45 a8             	mov    %eax,-0x58(%rbp)
   194ff:	e8 3c 38 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19504:	8b 45 a8             	mov    -0x58(%rbp),%eax
   19507:	e9 c1 fe ff ff       	jmpq   193cd <mbedtls_dhm_calc_secret+0x4d>
   1950c:	0f 1f 40 00          	nopl   0x0(%rax)
   19510:	4c 8d a3 b0 00 00 00 	lea    0xb0(%rbx),%r12
   19517:	be 01 00 00 00       	mov    $0x1,%esi
   1951c:	4c 89 e7             	mov    %r12,%rdi
   1951f:	e8 5c 3d 00 00       	callq  1d280 <mbedtls_mpi_lset>
   19524:	85 c0                	test   %eax,%eax
   19526:	75 b0                	jne    194d8 <mbedtls_dhm_calc_secret+0x158>
   19528:	4c 8d b3 c8 00 00 00 	lea    0xc8(%rbx),%r14
   1952f:	be 01 00 00 00       	mov    $0x1,%esi
   19534:	4c 89 f7             	mov    %r14,%rdi
   19537:	e8 44 3d 00 00       	callq  1d280 <mbedtls_mpi_lset>
   1953c:	85 c0                	test   %eax,%eax
   1953e:	75 98                	jne    194d8 <mbedtls_dhm_calc_secret+0x158>
   19540:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
   19544:	4c 89 e2             	mov    %r12,%rdx
   19547:	4c 89 fe             	mov    %r15,%rsi
   1954a:	e8 71 4a 00 00       	callq  1dfc0 <mbedtls_mpi_mul_mpi>
   1954f:	85 c0                	test   %eax,%eax
   19551:	75 85                	jne    194d8 <mbedtls_dhm_calc_secret+0x158>
   19553:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
   19557:	4c 89 ea             	mov    %r13,%rdx
   1955a:	48 89 fe             	mov    %rdi,%rsi
   1955d:	e8 be 55 00 00       	callq  1eb20 <mbedtls_mpi_mod_mpi>
   19562:	85 c0                	test   %eax,%eax
   19564:	0f 85 6e ff ff ff    	jne    194d8 <mbedtls_dhm_calc_secret+0x158>
   1956a:	4c 8d a3 80 00 00 00 	lea    0x80(%rbx),%r12
   19571:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   19575:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
   19579:	4c 8d 83 98 00 00 00 	lea    0x98(%rbx),%r8
   19580:	4c 89 e9             	mov    %r13,%rcx
   19583:	4c 89 e7             	mov    %r12,%rdi
   19586:	e8 75 5a 00 00       	callq  1f000 <mbedtls_mpi_exp_mod>
   1958b:	85 c0                	test   %eax,%eax
   1958d:	0f 85 45 ff ff ff    	jne    194d8 <mbedtls_dhm_calc_secret+0x158>
   19593:	4c 89 f2             	mov    %r14,%rdx
   19596:	4c 89 e6             	mov    %r12,%rsi
   19599:	4c 89 e7             	mov    %r12,%rdi
   1959c:	e8 1f 4a 00 00       	callq  1dfc0 <mbedtls_mpi_mul_mpi>
   195a1:	85 c0                	test   %eax,%eax
   195a3:	0f 85 2f ff ff ff    	jne    194d8 <mbedtls_dhm_calc_secret+0x158>
   195a9:	4c 89 ea             	mov    %r13,%rdx
   195ac:	4c 89 e6             	mov    %r12,%rsi
   195af:	4c 89 e7             	mov    %r12,%rdi
   195b2:	e8 69 55 00 00       	callq  1eb20 <mbedtls_mpi_mod_mpi>
   195b7:	85 c0                	test   %eax,%eax
   195b9:	0f 85 19 ff ff ff    	jne    194d8 <mbedtls_dhm_calc_secret+0x158>
   195bf:	eb 44                	jmp    19605 <mbedtls_dhm_calc_secret+0x285>
   195c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   195c8:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
   195cc:	4c 89 fe             	mov    %r15,%rsi
   195cf:	e8 9c 39 00 00       	callq  1cf70 <mbedtls_mpi_copy>
   195d4:	85 c0                	test   %eax,%eax
   195d6:	0f 85 fc fe ff ff    	jne    194d8 <mbedtls_dhm_calc_secret+0x158>
   195dc:	4c 8d a3 80 00 00 00 	lea    0x80(%rbx),%r12
   195e3:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
   195e7:	48 8d 53 38          	lea    0x38(%rbx),%rdx
   195eb:	4c 8d 83 98 00 00 00 	lea    0x98(%rbx),%r8
   195f2:	4c 89 e9             	mov    %r13,%rcx
   195f5:	4c 89 e7             	mov    %r12,%rdi
   195f8:	e8 03 5a 00 00       	callq  1f000 <mbedtls_mpi_exp_mod>
   195fd:	85 c0                	test   %eax,%eax
   195ff:	0f 85 d3 fe ff ff    	jne    194d8 <mbedtls_dhm_calc_secret+0x158>
   19605:	4c 89 e7             	mov    %r12,%rdi
   19608:	e8 73 3e 00 00       	callq  1d480 <mbedtls_mpi_size>
   1960d:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
   19611:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   19615:	48 89 c2             	mov    %rax,%rdx
   19618:	4c 89 e7             	mov    %r12,%rdi
   1961b:	48 89 01             	mov    %rax,(%rcx)
   1961e:	e8 5d 3f 00 00       	callq  1d580 <mbedtls_mpi_write_binary>
   19623:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
   19627:	89 c3                	mov    %eax,%ebx
   19629:	e8 12 37 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1962e:	85 db                	test   %ebx,%ebx
   19630:	75 7e                	jne    196b0 <mbedtls_dhm_calc_secret+0x330>
   19632:	31 c0                	xor    %eax,%eax
   19634:	e9 94 fd ff ff       	jmpq   193cd <mbedtls_dhm_calc_secret+0x4d>
   19639:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19640:	4c 89 e2             	mov    %r12,%rdx
   19643:	4c 89 e6             	mov    %r12,%rsi
   19646:	4c 89 e7             	mov    %r12,%rdi
   19649:	e8 72 49 00 00       	callq  1dfc0 <mbedtls_mpi_mul_mpi>
   1964e:	85 c0                	test   %eax,%eax
   19650:	0f 85 82 fe ff ff    	jne    194d8 <mbedtls_dhm_calc_secret+0x158>
   19656:	4c 89 ea             	mov    %r13,%rdx
   19659:	4c 89 e6             	mov    %r12,%rsi
   1965c:	4c 89 e7             	mov    %r12,%rdi
   1965f:	e8 bc 54 00 00       	callq  1eb20 <mbedtls_mpi_mod_mpi>
   19664:	85 c0                	test   %eax,%eax
   19666:	0f 85 6c fe ff ff    	jne    194d8 <mbedtls_dhm_calc_secret+0x158>
   1966c:	4c 8d b3 c8 00 00 00 	lea    0xc8(%rbx),%r14
   19673:	4c 89 f2             	mov    %r14,%rdx
   19676:	4c 89 f6             	mov    %r14,%rsi
   19679:	4c 89 f7             	mov    %r14,%rdi
   1967c:	e8 3f 49 00 00       	callq  1dfc0 <mbedtls_mpi_mul_mpi>
   19681:	85 c0                	test   %eax,%eax
   19683:	0f 85 4f fe ff ff    	jne    194d8 <mbedtls_dhm_calc_secret+0x158>
   19689:	4c 89 ea             	mov    %r13,%rdx
   1968c:	4c 89 f6             	mov    %r14,%rsi
   1968f:	4c 89 f7             	mov    %r14,%rdi
   19692:	e8 89 54 00 00       	callq  1eb20 <mbedtls_mpi_mod_mpi>
   19697:	85 c0                	test   %eax,%eax
   19699:	0f 84 a1 fe ff ff    	je     19540 <mbedtls_dhm_calc_secret+0x1c0>
   1969f:	e9 34 fe ff ff       	jmpq   194d8 <mbedtls_dhm_calc_secret+0x158>
   196a4:	b8 f2 cc ff ff       	mov    $0xffffccf2,%eax
   196a9:	e9 4a fe ff ff       	jmpq   194f8 <mbedtls_dhm_calc_secret+0x178>
   196ae:	f3 c3                	repz retq 
   196b0:	8d 83 00 cd ff ff    	lea    -0x3300(%rbx),%eax
   196b6:	e9 12 fd ff ff       	jmpq   193cd <mbedtls_dhm_calc_secret+0x4d>
   196bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000196c0 <mbedtls_dhm_free>:
   196c0:	55                   	push   %rbp
   196c1:	48 89 e5             	mov    %rsp,%rbp
   196c4:	53                   	push   %rbx
   196c5:	48 89 fb             	mov    %rdi,%rbx
   196c8:	48 8d bf e0 00 00 00 	lea    0xe0(%rdi),%rdi
   196cf:	48 83 ec 08          	sub    $0x8,%rsp
   196d3:	e8 68 36 00 00       	callq  1cd40 <mbedtls_mpi_free>
   196d8:	48 8d bb c8 00 00 00 	lea    0xc8(%rbx),%rdi
   196df:	e8 5c 36 00 00       	callq  1cd40 <mbedtls_mpi_free>
   196e4:	48 8d bb b0 00 00 00 	lea    0xb0(%rbx),%rdi
   196eb:	e8 50 36 00 00       	callq  1cd40 <mbedtls_mpi_free>
   196f0:	48 8d bb 98 00 00 00 	lea    0x98(%rbx),%rdi
   196f7:	e8 44 36 00 00       	callq  1cd40 <mbedtls_mpi_free>
   196fc:	48 8d bb 80 00 00 00 	lea    0x80(%rbx),%rdi
   19703:	e8 38 36 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19708:	48 8d 7b 68          	lea    0x68(%rbx),%rdi
   1970c:	e8 2f 36 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19711:	48 8d 7b 50          	lea    0x50(%rbx),%rdi
   19715:	e8 26 36 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1971a:	48 8d 7b 38          	lea    0x38(%rbx),%rdi
   1971e:	e8 1d 36 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19723:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
   19727:	e8 14 36 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1972c:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
   19730:	e8 0b 36 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19735:	48 8d 83 f8 00 00 00 	lea    0xf8(%rbx),%rax
   1973c:	0f 1f 40 00          	nopl   0x0(%rax)
   19740:	c6 03 00             	movb   $0x0,(%rbx)
   19743:	48 83 c3 01          	add    $0x1,%rbx
   19747:	48 39 d8             	cmp    %rbx,%rax
   1974a:	75 f4                	jne    19740 <mbedtls_dhm_free+0x80>
   1974c:	48 83 c4 08          	add    $0x8,%rsp
   19750:	5b                   	pop    %rbx
   19751:	5d                   	pop    %rbp
   19752:	c3                   	retq   
   19753:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1975a:	00 00 00 
   1975d:	0f 1f 00             	nopl   (%rax)

0000000000019760 <mbedtls_cipher_list>:
   19760:	8b 05 02 2d 21 04    	mov    0x4212d02(%rip),%eax        # 422c468 <supported_init>
   19766:	55                   	push   %rbp
   19767:	48 89 e5             	mov    %rsp,%rbp
   1976a:	85 c0                	test   %eax,%eax
   1976c:	75 42                	jne    197b0 <mbedtls_cipher_list+0x50>
   1976e:	48 8d 15 2b 1b 21 00 	lea    0x211b2b(%rip),%rdx        # 22b2a0 <mbedtls_cipher_definitions>
   19775:	48 8d 05 b4 57 21 04 	lea    0x42157b4(%rip),%rax        # 422ef30 <mbedtls_cipher_supported>
   1977c:	8b 0a                	mov    (%rdx),%ecx
   1977e:	48 89 c6             	mov    %rax,%rsi
   19781:	85 c9                	test   %ecx,%ecx
   19783:	74 14                	je     19799 <mbedtls_cipher_list+0x39>
   19785:	0f 1f 00             	nopl   (%rax)
   19788:	48 83 c6 04          	add    $0x4,%rsi
   1978c:	48 83 c2 10          	add    $0x10,%rdx
   19790:	89 4e fc             	mov    %ecx,-0x4(%rsi)
   19793:	8b 0a                	mov    (%rdx),%ecx
   19795:	85 c9                	test   %ecx,%ecx
   19797:	75 ef                	jne    19788 <mbedtls_cipher_list+0x28>
   19799:	c7 06 00 00 00 00    	movl   $0x0,(%rsi)
   1979f:	c7 05 bf 2c 21 04 01 	movl   $0x1,0x4212cbf(%rip)        # 422c468 <supported_init>
   197a6:	00 00 00 
   197a9:	5d                   	pop    %rbp
   197aa:	c3                   	retq   
   197ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   197b0:	48 8d 05 79 57 21 04 	lea    0x4215779(%rip),%rax        # 422ef30 <mbedtls_cipher_supported>
   197b7:	5d                   	pop    %rbp
   197b8:	c3                   	retq   
   197b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000197c0 <mbedtls_cipher_info_from_type>:
   197c0:	48 8d 15 d9 1a 21 00 	lea    0x211ad9(%rip),%rdx        # 22b2a0 <mbedtls_cipher_definitions>
   197c7:	55                   	push   %rbp
   197c8:	48 89 e5             	mov    %rsp,%rbp
   197cb:	48 8b 42 08          	mov    0x8(%rdx),%rax
   197cf:	48 85 c0             	test   %rax,%rax
   197d2:	74 1d                	je     197f1 <mbedtls_cipher_info_from_type+0x31>
   197d4:	3b 3a                	cmp    (%rdx),%edi
   197d6:	75 0c                	jne    197e4 <mbedtls_cipher_info_from_type+0x24>
   197d8:	eb 17                	jmp    197f1 <mbedtls_cipher_info_from_type+0x31>
   197da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   197e0:	39 3a                	cmp    %edi,(%rdx)
   197e2:	74 0d                	je     197f1 <mbedtls_cipher_info_from_type+0x31>
   197e4:	48 83 c2 10          	add    $0x10,%rdx
   197e8:	48 8b 42 08          	mov    0x8(%rdx),%rax
   197ec:	48 85 c0             	test   %rax,%rax
   197ef:	75 ef                	jne    197e0 <mbedtls_cipher_info_from_type+0x20>
   197f1:	5d                   	pop    %rbp
   197f2:	c3                   	retq   
   197f3:	0f 1f 00             	nopl   (%rax)
   197f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   197fd:	00 00 00 

0000000000019800 <mbedtls_cipher_info_from_values>:
   19800:	48 8d 0d 99 1a 21 00 	lea    0x211a99(%rip),%rcx        # 22b2a0 <mbedtls_cipher_definitions>
   19807:	55                   	push   %rbp
   19808:	48 89 e5             	mov    %rsp,%rbp
   1980b:	48 8b 41 08          	mov    0x8(%rcx),%rax
   1980f:	48 85 c0             	test   %rax,%rax
   19812:	75 19                	jne    1982d <mbedtls_cipher_info_from_values+0x2d>
   19814:	eb 2a                	jmp    19840 <mbedtls_cipher_info_from_values+0x40>
   19816:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1981d:	00 00 00 
   19820:	48 83 c1 10          	add    $0x10,%rcx
   19824:	48 8b 41 08          	mov    0x8(%rcx),%rax
   19828:	48 85 c0             	test   %rax,%rax
   1982b:	74 13                	je     19840 <mbedtls_cipher_info_from_values+0x40>
   1982d:	4c 8b 40 28          	mov    0x28(%rax),%r8
   19831:	41 39 38             	cmp    %edi,(%r8)
   19834:	75 ea                	jne    19820 <mbedtls_cipher_info_from_values+0x20>
   19836:	39 70 08             	cmp    %esi,0x8(%rax)
   19839:	75 e5                	jne    19820 <mbedtls_cipher_info_from_values+0x20>
   1983b:	39 50 04             	cmp    %edx,0x4(%rax)
   1983e:	75 e0                	jne    19820 <mbedtls_cipher_info_from_values+0x20>
   19840:	5d                   	pop    %rbp
   19841:	c3                   	retq   
   19842:	0f 1f 40 00          	nopl   0x0(%rax)
   19846:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1984d:	00 00 00 

0000000000019850 <mbedtls_cipher_init>:
   19850:	55                   	push   %rbp
   19851:	ba 50 00 00 00       	mov    $0x50,%edx
   19856:	31 f6                	xor    %esi,%esi
   19858:	48 89 e5             	mov    %rsp,%rbp
   1985b:	5d                   	pop    %rbp
   1985c:	e9 ff cb ff ff       	jmpq   16460 <memset>
   19861:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19866:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1986d:	00 00 00 

0000000000019870 <mbedtls_cipher_free>:
   19870:	48 85 ff             	test   %rdi,%rdi
   19873:	74 5d                	je     198d2 <mbedtls_cipher_free+0x62>
   19875:	55                   	push   %rbp
   19876:	48 89 e5             	mov    %rsp,%rbp
   19879:	53                   	push   %rbx
   1987a:	48 89 fb             	mov    %rdi,%rbx
   1987d:	48 83 ec 08          	sub    $0x8,%rsp
   19881:	48 8b 47 48          	mov    0x48(%rdi),%rax
   19885:	48 85 c0             	test   %rax,%rax
   19888:	74 1b                	je     198a5 <mbedtls_cipher_free+0x35>
   1988a:	48 8d 50 28          	lea    0x28(%rax),%rdx
   1988e:	66 90                	xchg   %ax,%ax
   19890:	c6 00 00             	movb   $0x0,(%rax)
   19893:	48 83 c0 01          	add    $0x1,%rax
   19897:	48 39 d0             	cmp    %rdx,%rax
   1989a:	75 f4                	jne    19890 <mbedtls_cipher_free+0x20>
   1989c:	48 8b 7b 48          	mov    0x48(%rbx),%rdi
   198a0:	e8 bb fb fe ff       	callq  9460 <free>
   198a5:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
   198a9:	48 85 ff             	test   %rdi,%rdi
   198ac:	74 0a                	je     198b8 <mbedtls_cipher_free+0x48>
   198ae:	48 8b 03             	mov    (%rbx),%rax
   198b1:	48 8b 40 28          	mov    0x28(%rax),%rax
   198b5:	ff 50 28             	callq  *0x28(%rax)
   198b8:	48 8d 43 50          	lea    0x50(%rbx),%rax
   198bc:	0f 1f 40 00          	nopl   0x0(%rax)
   198c0:	c6 03 00             	movb   $0x0,(%rbx)
   198c3:	48 83 c3 01          	add    $0x1,%rbx
   198c7:	48 39 d8             	cmp    %rbx,%rax
   198ca:	75 f4                	jne    198c0 <mbedtls_cipher_free+0x50>
   198cc:	48 83 c4 08          	add    $0x8,%rsp
   198d0:	5b                   	pop    %rbx
   198d1:	5d                   	pop    %rbp
   198d2:	f3 c3                	repz retq 
   198d4:	66 90                	xchg   %ax,%ax
   198d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   198dd:	00 00 00 

00000000000198e0 <mbedtls_cipher_setup>:
   198e0:	48 85 f6             	test   %rsi,%rsi
   198e3:	74 3b                	je     19920 <mbedtls_cipher_setup+0x40>
   198e5:	48 85 ff             	test   %rdi,%rdi
   198e8:	74 36                	je     19920 <mbedtls_cipher_setup+0x40>
   198ea:	55                   	push   %rbp
   198eb:	ba 50 00 00 00       	mov    $0x50,%edx
   198f0:	48 89 e5             	mov    %rsp,%rbp
   198f3:	41 54                	push   %r12
   198f5:	53                   	push   %rbx
   198f6:	49 89 f4             	mov    %rsi,%r12
   198f9:	31 f6                	xor    %esi,%esi
   198fb:	48 89 fb             	mov    %rdi,%rbx
   198fe:	e8 5d cb ff ff       	callq  16460 <memset>
   19903:	49 8b 44 24 28       	mov    0x28(%r12),%rax
   19908:	ff 50 20             	callq  *0x20(%rax)
   1990b:	48 85 c0             	test   %rax,%rax
   1990e:	48 89 43 40          	mov    %rax,0x40(%rbx)
   19912:	74 12                	je     19926 <mbedtls_cipher_setup+0x46>
   19914:	4c 89 23             	mov    %r12,(%rbx)
   19917:	31 c0                	xor    %eax,%eax
   19919:	5b                   	pop    %rbx
   1991a:	41 5c                	pop    %r12
   1991c:	5d                   	pop    %rbp
   1991d:	c3                   	retq   
   1991e:	66 90                	xchg   %ax,%ax
   19920:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
   19925:	c3                   	retq   
   19926:	b8 80 9e ff ff       	mov    $0xffff9e80,%eax
   1992b:	eb ec                	jmp    19919 <mbedtls_cipher_setup+0x39>
   1992d:	0f 1f 00             	nopl   (%rax)

0000000000019930 <mbedtls_cipher_setkey>:
   19930:	55                   	push   %rbp
   19931:	48 85 ff             	test   %rdi,%rdi
   19934:	48 89 e5             	mov    %rsp,%rbp
   19937:	74 44                	je     1997d <mbedtls_cipher_setkey+0x4d>
   19939:	48 8b 07             	mov    (%rdi),%rax
   1993c:	48 85 c0             	test   %rax,%rax
   1993f:	74 3c                	je     1997d <mbedtls_cipher_setkey+0x4d>
   19941:	f6 40 1c 02          	testb  $0x2,0x1c(%rax)
   19945:	74 31                	je     19978 <mbedtls_cipher_setkey+0x48>
   19947:	83 f9 01             	cmp    $0x1,%ecx
   1994a:	89 57 08             	mov    %edx,0x8(%rdi)
   1994d:	89 4f 0c             	mov    %ecx,0xc(%rdi)
   19950:	74 36                	je     19988 <mbedtls_cipher_setkey+0x58>
   19952:	44 8b 48 04          	mov    0x4(%rax),%r9d
   19956:	45 8d 41 fd          	lea    -0x3(%r9),%r8d
   1995a:	41 83 e0 fd          	and    $0xfffffffd,%r8d
   1995e:	74 28                	je     19988 <mbedtls_cipher_setkey+0x58>
   19960:	85 c9                	test   %ecx,%ecx
   19962:	75 19                	jne    1997d <mbedtls_cipher_setkey+0x4d>
   19964:	48 8b 40 28          	mov    0x28(%rax),%rax
   19968:	48 8b 7f 40          	mov    0x40(%rdi),%rdi
   1996c:	5d                   	pop    %rbp
   1996d:	48 8b 40 18          	mov    0x18(%rax),%rax
   19971:	ff e0                	jmpq   *%rax
   19973:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19978:	39 50 08             	cmp    %edx,0x8(%rax)
   1997b:	74 ca                	je     19947 <mbedtls_cipher_setkey+0x17>
   1997d:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
   19982:	5d                   	pop    %rbp
   19983:	c3                   	retq   
   19984:	0f 1f 40 00          	nopl   0x0(%rax)
   19988:	48 8b 40 28          	mov    0x28(%rax),%rax
   1998c:	48 8b 7f 40          	mov    0x40(%rdi),%rdi
   19990:	5d                   	pop    %rbp
   19991:	48 8b 40 10          	mov    0x10(%rax),%rax
   19995:	ff e0                	jmpq   *%rax
   19997:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1999e:	00 00 

00000000000199a0 <mbedtls_cipher_set_iv>:
   199a0:	48 85 ff             	test   %rdi,%rdi
   199a3:	74 6b                	je     19a10 <mbedtls_cipher_set_iv+0x70>
   199a5:	48 8b 07             	mov    (%rdi),%rax
   199a8:	48 85 c0             	test   %rax,%rax
   199ab:	74 63                	je     19a10 <mbedtls_cipher_set_iv+0x70>
   199ad:	48 85 f6             	test   %rsi,%rsi
   199b0:	74 5e                	je     19a10 <mbedtls_cipher_set_iv+0x70>
   199b2:	48 83 fa 10          	cmp    $0x10,%rdx
   199b6:	77 40                	ja     199f8 <mbedtls_cipher_set_iv+0x58>
   199b8:	55                   	push   %rbp
   199b9:	48 89 e5             	mov    %rsp,%rbp
   199bc:	41 54                	push   %r12
   199be:	53                   	push   %rbx
   199bf:	f6 40 1c 01          	testb  $0x1,0x1c(%rax)
   199c3:	75 2b                	jne    199f0 <mbedtls_cipher_set_iv+0x50>
   199c5:	44 8b 60 18          	mov    0x18(%rax),%r12d
   199c9:	4c 39 e2             	cmp    %r12,%rdx
   199cc:	72 32                	jb     19a00 <mbedtls_cipher_set_iv+0x60>
   199ce:	48 89 fb             	mov    %rdi,%rbx
   199d1:	48 8d 7f 28          	lea    0x28(%rdi),%rdi
   199d5:	4c 89 e2             	mov    %r12,%rdx
   199d8:	e8 13 c2 ff ff       	callq  15bf0 <memcpy>
   199dd:	4c 89 63 38          	mov    %r12,0x38(%rbx)
   199e1:	31 c0                	xor    %eax,%eax
   199e3:	5b                   	pop    %rbx
   199e4:	41 5c                	pop    %r12
   199e6:	5d                   	pop    %rbp
   199e7:	c3                   	retq   
   199e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   199ef:	00 
   199f0:	49 89 d4             	mov    %rdx,%r12
   199f3:	eb d9                	jmp    199ce <mbedtls_cipher_set_iv+0x2e>
   199f5:	0f 1f 00             	nopl   (%rax)
   199f8:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
   199fd:	c3                   	retq   
   199fe:	66 90                	xchg   %ax,%ax
   19a00:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
   19a05:	eb dc                	jmp    199e3 <mbedtls_cipher_set_iv+0x43>
   19a07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   19a0e:	00 00 
   19a10:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
   19a15:	c3                   	retq   
   19a16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19a1d:	00 00 00 

0000000000019a20 <mbedtls_cipher_reset>:
   19a20:	55                   	push   %rbp
   19a21:	48 85 ff             	test   %rdi,%rdi
   19a24:	48 89 e5             	mov    %rsp,%rbp
   19a27:	74 17                	je     19a40 <mbedtls_cipher_reset+0x20>
   19a29:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   19a2d:	74 11                	je     19a40 <mbedtls_cipher_reset+0x20>
   19a2f:	31 c0                	xor    %eax,%eax
   19a31:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
   19a38:	00 
   19a39:	5d                   	pop    %rbp
   19a3a:	c3                   	retq   
   19a3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   19a40:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
   19a45:	5d                   	pop    %rbp
   19a46:	c3                   	retq   
   19a47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   19a4e:	00 00 

0000000000019a50 <mbedtls_cipher_update>:
   19a50:	55                   	push   %rbp
   19a51:	48 85 ff             	test   %rdi,%rdi
   19a54:	48 89 e5             	mov    %rsp,%rbp
   19a57:	74 43                	je     19a9c <mbedtls_cipher_update+0x4c>
   19a59:	4d 85 c0             	test   %r8,%r8
   19a5c:	4c 8b 0f             	mov    (%rdi),%r9
   19a5f:	74 3b                	je     19a9c <mbedtls_cipher_update+0x4c>
   19a61:	4d 85 c9             	test   %r9,%r9
   19a64:	74 36                	je     19a9c <mbedtls_cipher_update+0x4c>
   19a66:	41 83 79 04 01       	cmpl   $0x1,0x4(%r9)
   19a6b:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
   19a72:	45 8b 51 20          	mov    0x20(%r9),%r10d
   19a76:	74 38                	je     19ab0 <mbedtls_cipher_update+0x60>
   19a78:	4d 85 d2             	test   %r10,%r10
   19a7b:	74 63                	je     19ae0 <mbedtls_cipher_update+0x90>
   19a7d:	48 39 ce             	cmp    %rcx,%rsi
   19a80:	41 b8 80 9f ff ff    	mov    $0xffff9f80,%r8d
   19a86:	75 1a                	jne    19aa2 <mbedtls_cipher_update+0x52>
   19a88:	48 83 7f 20 00       	cmpq   $0x0,0x20(%rdi)
   19a8d:	75 0d                	jne    19a9c <mbedtls_cipher_update+0x4c>
   19a8f:	48 89 d0             	mov    %rdx,%rax
   19a92:	31 d2                	xor    %edx,%edx
   19a94:	49 f7 f2             	div    %r10
   19a97:	48 85 d2             	test   %rdx,%rdx
   19a9a:	74 06                	je     19aa2 <mbedtls_cipher_update+0x52>
   19a9c:	41 b8 00 9f ff ff    	mov    $0xffff9f00,%r8d
   19aa2:	44 89 c0             	mov    %r8d,%eax
   19aa5:	5d                   	pop    %rbp
   19aa6:	c3                   	retq   
   19aa7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   19aae:	00 00 
   19ab0:	49 39 d2             	cmp    %rdx,%r10
   19ab3:	75 23                	jne    19ad8 <mbedtls_cipher_update+0x88>
   19ab5:	4d 89 10             	mov    %r10,(%r8)
   19ab8:	49 8b 41 28          	mov    0x28(%r9),%rax
   19abc:	48 89 f2             	mov    %rsi,%rdx
   19abf:	44 8b 47 0c          	mov    0xc(%rdi),%r8d
   19ac3:	48 8b 7f 40          	mov    0x40(%rdi),%rdi
   19ac7:	5d                   	pop    %rbp
   19ac8:	48 8b 40 08          	mov    0x8(%rax),%rax
   19acc:	44 89 c6             	mov    %r8d,%esi
   19acf:	ff e0                	jmpq   *%rax
   19ad1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19ad8:	41 b8 80 9d ff ff    	mov    $0xffff9d80,%r8d
   19ade:	eb c2                	jmp    19aa2 <mbedtls_cipher_update+0x52>
   19ae0:	41 b8 80 9c ff ff    	mov    $0xffff9c80,%r8d
   19ae6:	eb ba                	jmp    19aa2 <mbedtls_cipher_update+0x52>
   19ae8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   19aef:	00 

0000000000019af0 <mbedtls_cipher_finish>:
   19af0:	55                   	push   %rbp
   19af1:	48 85 ff             	test   %rdi,%rdi
   19af4:	48 89 e5             	mov    %rsp,%rbp
   19af7:	74 4f                	je     19b48 <mbedtls_cipher_finish+0x58>
   19af9:	48 85 d2             	test   %rdx,%rdx
   19afc:	48 8b 07             	mov    (%rdi),%rax
   19aff:	74 47                	je     19b48 <mbedtls_cipher_finish+0x58>
   19b01:	48 85 c0             	test   %rax,%rax
   19b04:	74 42                	je     19b48 <mbedtls_cipher_finish+0x58>
   19b06:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
   19b0d:	8b 50 04             	mov    0x4(%rax),%edx
   19b10:	8d 42 fb             	lea    -0x5(%rdx),%eax
   19b13:	83 f8 02             	cmp    $0x2,%eax
   19b16:	76 28                	jbe    19b40 <mbedtls_cipher_finish+0x50>
   19b18:	83 fa 03             	cmp    $0x3,%edx
   19b1b:	74 23                	je     19b40 <mbedtls_cipher_finish+0x50>
   19b1d:	83 fa 01             	cmp    $0x1,%edx
   19b20:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
   19b25:	75 0e                	jne    19b35 <mbedtls_cipher_finish+0x45>
   19b27:	48 83 7f 20 01       	cmpq   $0x1,0x20(%rdi)
   19b2c:	19 c0                	sbb    %eax,%eax
   19b2e:	f7 d0                	not    %eax
   19b30:	25 80 9d ff ff       	and    $0xffff9d80,%eax
   19b35:	5d                   	pop    %rbp
   19b36:	c3                   	retq   
   19b37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   19b3e:	00 00 
   19b40:	31 c0                	xor    %eax,%eax
   19b42:	5d                   	pop    %rbp
   19b43:	c3                   	retq   
   19b44:	0f 1f 40 00          	nopl   0x0(%rax)
   19b48:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
   19b4d:	5d                   	pop    %rbp
   19b4e:	c3                   	retq   
   19b4f:	90                   	nop

0000000000019b50 <mbedtls_cipher_crypt>:
   19b50:	55                   	push   %rbp
   19b51:	48 89 e5             	mov    %rsp,%rbp
   19b54:	41 56                	push   %r14
   19b56:	41 55                	push   %r13
   19b58:	41 54                	push   %r12
   19b5a:	53                   	push   %rbx
   19b5b:	49 89 cd             	mov    %rcx,%r13
   19b5e:	48 89 fb             	mov    %rdi,%rbx
   19b61:	4d 89 c6             	mov    %r8,%r14
   19b64:	4d 89 cc             	mov    %r9,%r12
   19b67:	48 83 ec 10          	sub    $0x10,%rsp
   19b6b:	e8 30 fe ff ff       	callq  199a0 <mbedtls_cipher_set_iv>
   19b70:	85 c0                	test   %eax,%eax
   19b72:	74 14                	je     19b88 <mbedtls_cipher_crypt+0x38>
   19b74:	48 83 c4 10          	add    $0x10,%rsp
   19b78:	5b                   	pop    %rbx
   19b79:	41 5c                	pop    %r12
   19b7b:	41 5d                	pop    %r13
   19b7d:	41 5e                	pop    %r14
   19b7f:	5d                   	pop    %rbp
   19b80:	c3                   	retq   
   19b81:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   19b88:	48 89 df             	mov    %rbx,%rdi
   19b8b:	e8 90 fe ff ff       	callq  19a20 <mbedtls_cipher_reset>
   19b90:	85 c0                	test   %eax,%eax
   19b92:	75 e0                	jne    19b74 <mbedtls_cipher_crypt+0x24>
   19b94:	4c 8b 45 10          	mov    0x10(%rbp),%r8
   19b98:	4c 89 e1             	mov    %r12,%rcx
   19b9b:	4c 89 f2             	mov    %r14,%rdx
   19b9e:	4c 89 ee             	mov    %r13,%rsi
   19ba1:	48 89 df             	mov    %rbx,%rdi
   19ba4:	e8 a7 fe ff ff       	callq  19a50 <mbedtls_cipher_update>
   19ba9:	85 c0                	test   %eax,%eax
   19bab:	75 c7                	jne    19b74 <mbedtls_cipher_crypt+0x24>
   19bad:	48 8b 45 10          	mov    0x10(%rbp),%rax
   19bb1:	4c 89 e6             	mov    %r12,%rsi
   19bb4:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   19bb8:	48 89 df             	mov    %rbx,%rdi
   19bbb:	48 03 30             	add    (%rax),%rsi
   19bbe:	e8 2d ff ff ff       	callq  19af0 <mbedtls_cipher_finish>
   19bc3:	85 c0                	test   %eax,%eax
   19bc5:	75 ad                	jne    19b74 <mbedtls_cipher_crypt+0x24>
   19bc7:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
   19bcb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   19bcf:	48 01 11             	add    %rdx,(%rcx)
   19bd2:	eb a0                	jmp    19b74 <mbedtls_cipher_crypt+0x24>
   19bd4:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   19bdb:	00 00 00 
   19bde:	66 90                	xchg   %ax,%ax

0000000000019be0 <mbedtls_rsa_check_privkey.part.0>:
   19be0:	55                   	push   %rbp
   19be1:	48 89 e5             	mov    %rsp,%rbp
   19be4:	41 57                	push   %r15
   19be6:	41 56                	push   %r14
   19be8:	41 55                	push   %r13
   19bea:	41 54                	push   %r12
   19bec:	4c 8d ad 50 fe ff ff 	lea    -0x1b0(%rbp),%r13
   19bf3:	53                   	push   %rbx
   19bf4:	48 8d 9d 30 fe ff ff 	lea    -0x1d0(%rbp),%rbx
   19bfb:	49 89 fc             	mov    %rdi,%r12
   19bfe:	4c 8d b5 70 fe ff ff 	lea    -0x190(%rbp),%r14
   19c05:	4c 8d bd 90 fe ff ff 	lea    -0x170(%rbp),%r15
   19c0c:	48 81 ec 18 02 00 00 	sub    $0x218,%rsp
   19c13:	48 89 df             	mov    %rbx,%rdi
   19c16:	e8 f5 30 00 00       	callq  1cd10 <mbedtls_mpi_init>
   19c1b:	4c 89 ef             	mov    %r13,%rdi
   19c1e:	e8 ed 30 00 00       	callq  1cd10 <mbedtls_mpi_init>
   19c23:	4c 89 f7             	mov    %r14,%rdi
   19c26:	e8 e5 30 00 00       	callq  1cd10 <mbedtls_mpi_init>
   19c2b:	4c 89 ff             	mov    %r15,%rdi
   19c2e:	e8 dd 30 00 00       	callq  1cd10 <mbedtls_mpi_init>
   19c33:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   19c3a:	48 89 c7             	mov    %rax,%rdi
   19c3d:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
   19c44:	e8 c7 30 00 00       	callq  1cd10 <mbedtls_mpi_init>
   19c49:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
   19c50:	48 89 c7             	mov    %rax,%rdi
   19c53:	48 89 85 f8 fd ff ff 	mov    %rax,-0x208(%rbp)
   19c5a:	e8 b1 30 00 00       	callq  1cd10 <mbedtls_mpi_init>
   19c5f:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   19c66:	48 89 c7             	mov    %rax,%rdi
   19c69:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
   19c70:	e8 9b 30 00 00       	callq  1cd10 <mbedtls_mpi_init>
   19c75:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   19c7c:	48 89 c7             	mov    %rax,%rdi
   19c7f:	48 89 85 08 fe ff ff 	mov    %rax,-0x1f8(%rbp)
   19c86:	e8 85 30 00 00       	callq  1cd10 <mbedtls_mpi_init>
   19c8b:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   19c92:	48 89 c7             	mov    %rax,%rdi
   19c95:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
   19c9c:	e8 6f 30 00 00       	callq  1cd10 <mbedtls_mpi_init>
   19ca1:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   19ca8:	48 89 c7             	mov    %rax,%rdi
   19cab:	48 89 85 18 fe ff ff 	mov    %rax,-0x1e8(%rbp)
   19cb2:	e8 59 30 00 00       	callq  1cd10 <mbedtls_mpi_init>
   19cb7:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   19cbe:	48 89 c7             	mov    %rax,%rdi
   19cc1:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
   19cc8:	e8 43 30 00 00       	callq  1cd10 <mbedtls_mpi_init>
   19ccd:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   19cd1:	48 89 c7             	mov    %rax,%rdi
   19cd4:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)
   19cdb:	e8 30 30 00 00       	callq  1cd10 <mbedtls_mpi_init>
   19ce0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   19ce4:	48 89 c7             	mov    %rax,%rdi
   19ce7:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
   19cee:	e8 1d 30 00 00       	callq  1cd10 <mbedtls_mpi_init>
   19cf3:	49 8d 44 24 70       	lea    0x70(%r12),%rax
   19cf8:	49 8d 4c 24 58       	lea    0x58(%r12),%rcx
   19cfd:	48 89 df             	mov    %rbx,%rdi
   19d00:	48 89 ce             	mov    %rcx,%rsi
   19d03:	48 89 c2             	mov    %rax,%rdx
   19d06:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
   19d0d:	48 89 8d e0 fd ff ff 	mov    %rcx,-0x220(%rbp)
   19d14:	e8 a7 42 00 00       	callq  1dfc0 <mbedtls_mpi_mul_mpi>
   19d19:	85 c0                	test   %eax,%eax
   19d1b:	0f 84 bf 00 00 00    	je     19de0 <mbedtls_rsa_check_privkey.part.0+0x200>
   19d21:	48 89 df             	mov    %rbx,%rdi
   19d24:	89 85 e0 fd ff ff    	mov    %eax,-0x220(%rbp)
   19d2a:	e8 11 30 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19d2f:	4c 89 ef             	mov    %r13,%rdi
   19d32:	e8 09 30 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19d37:	4c 89 f7             	mov    %r14,%rdi
   19d3a:	e8 01 30 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19d3f:	4c 89 ff             	mov    %r15,%rdi
   19d42:	e8 f9 2f 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19d47:	48 8b bd 28 fe ff ff 	mov    -0x1d8(%rbp),%rdi
   19d4e:	e8 ed 2f 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19d53:	48 8b bd f8 fd ff ff 	mov    -0x208(%rbp),%rdi
   19d5a:	e8 e1 2f 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19d5f:	48 8b bd 20 fe ff ff 	mov    -0x1e0(%rbp),%rdi
   19d66:	e8 d5 2f 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19d6b:	48 8b bd 08 fe ff ff 	mov    -0x1f8(%rbp),%rdi
   19d72:	e8 c9 2f 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19d77:	48 8b bd f0 fd ff ff 	mov    -0x210(%rbp),%rdi
   19d7e:	e8 bd 2f 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19d83:	48 8b bd 18 fe ff ff 	mov    -0x1e8(%rbp),%rdi
   19d8a:	e8 b1 2f 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19d8f:	48 8b bd 00 fe ff ff 	mov    -0x200(%rbp),%rdi
   19d96:	e8 a5 2f 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19d9b:	48 8b bd e8 fd ff ff 	mov    -0x218(%rbp),%rdi
   19da2:	e8 99 2f 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19da7:	48 8b bd 10 fe ff ff 	mov    -0x1f0(%rbp),%rdi
   19dae:	e8 8d 2f 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19db3:	8b 85 e0 fd ff ff    	mov    -0x220(%rbp),%eax
   19db9:	8d 90 00 be ff ff    	lea    -0x4200(%rax),%edx
   19dbf:	3d 00 be ff ff       	cmp    $0xffffbe00,%eax
   19dc4:	b8 00 be ff ff       	mov    $0xffffbe00,%eax
   19dc9:	0f 45 c2             	cmovne %edx,%eax
   19dcc:	48 81 c4 18 02 00 00 	add    $0x218,%rsp
   19dd3:	5b                   	pop    %rbx
   19dd4:	41 5c                	pop    %r12
   19dd6:	41 5d                	pop    %r13
   19dd8:	41 5e                	pop    %r14
   19dda:	41 5f                	pop    %r15
   19ddc:	5d                   	pop    %rbp
   19ddd:	c3                   	retq   
   19dde:	66 90                	xchg   %ax,%ax
   19de0:	49 8d 44 24 28       	lea    0x28(%r12),%rax
   19de5:	49 8d 4c 24 40       	lea    0x40(%r12),%rcx
   19dea:	4c 89 ef             	mov    %r13,%rdi
   19ded:	48 89 c2             	mov    %rax,%rdx
   19df0:	48 89 ce             	mov    %rcx,%rsi
   19df3:	48 89 85 d0 fd ff ff 	mov    %rax,-0x230(%rbp)
   19dfa:	48 89 8d c8 fd ff ff 	mov    %rcx,-0x238(%rbp)
   19e01:	e8 ba 41 00 00       	callq  1dfc0 <mbedtls_mpi_mul_mpi>
   19e06:	85 c0                	test   %eax,%eax
   19e08:	0f 85 13 ff ff ff    	jne    19d21 <mbedtls_rsa_check_privkey.part.0+0x141>
   19e0e:	48 8b b5 e0 fd ff ff 	mov    -0x220(%rbp),%rsi
   19e15:	ba 01 00 00 00       	mov    $0x1,%edx
   19e1a:	4c 89 f7             	mov    %r14,%rdi
   19e1d:	e8 5e 41 00 00       	callq  1df80 <mbedtls_mpi_sub_int>
   19e22:	85 c0                	test   %eax,%eax
   19e24:	0f 85 f7 fe ff ff    	jne    19d21 <mbedtls_rsa_check_privkey.part.0+0x141>
   19e2a:	48 8b b5 d8 fd ff ff 	mov    -0x228(%rbp),%rsi
   19e31:	ba 01 00 00 00       	mov    $0x1,%edx
   19e36:	4c 89 ff             	mov    %r15,%rdi
   19e39:	e8 42 41 00 00       	callq  1df80 <mbedtls_mpi_sub_int>
   19e3e:	85 c0                	test   %eax,%eax
   19e40:	0f 85 db fe ff ff    	jne    19d21 <mbedtls_rsa_check_privkey.part.0+0x141>
   19e46:	48 8b bd 28 fe ff ff 	mov    -0x1d8(%rbp),%rdi
   19e4d:	4c 89 fa             	mov    %r15,%rdx
   19e50:	4c 89 f6             	mov    %r14,%rsi
   19e53:	e8 68 41 00 00       	callq  1dfc0 <mbedtls_mpi_mul_mpi>
   19e58:	85 c0                	test   %eax,%eax
   19e5a:	0f 85 c1 fe ff ff    	jne    19d21 <mbedtls_rsa_check_privkey.part.0+0x141>
   19e60:	48 8b 95 28 fe ff ff 	mov    -0x1d8(%rbp),%rdx
   19e67:	48 8b b5 d0 fd ff ff 	mov    -0x230(%rbp),%rsi
   19e6e:	48 8b bd 20 fe ff ff 	mov    -0x1e0(%rbp),%rdi
   19e75:	e8 a6 5c 00 00       	callq  1fb20 <mbedtls_mpi_gcd>
   19e7a:	85 c0                	test   %eax,%eax
   19e7c:	0f 85 9f fe ff ff    	jne    19d21 <mbedtls_rsa_check_privkey.part.0+0x141>
   19e82:	48 8b bd 08 fe ff ff 	mov    -0x1f8(%rbp),%rdi
   19e89:	4c 89 fa             	mov    %r15,%rdx
   19e8c:	4c 89 f6             	mov    %r14,%rsi
   19e8f:	e8 8c 5c 00 00       	callq  1fb20 <mbedtls_mpi_gcd>
   19e94:	85 c0                	test   %eax,%eax
   19e96:	0f 85 85 fe ff ff    	jne    19d21 <mbedtls_rsa_check_privkey.part.0+0x141>
   19e9c:	48 8b 8d 08 fe ff ff 	mov    -0x1f8(%rbp),%rcx
   19ea3:	48 8b 95 28 fe ff ff 	mov    -0x1d8(%rbp),%rdx
   19eaa:	48 8b b5 18 fe ff ff 	mov    -0x1e8(%rbp),%rsi
   19eb1:	48 8b bd f0 fd ff ff 	mov    -0x210(%rbp),%rdi
   19eb8:	e8 53 45 00 00       	callq  1e410 <mbedtls_mpi_div_mpi>
   19ebd:	85 c0                	test   %eax,%eax
   19ebf:	0f 85 5c fe ff ff    	jne    19d21 <mbedtls_rsa_check_privkey.part.0+0x141>
   19ec5:	48 8b 95 f0 fd ff ff 	mov    -0x210(%rbp),%rdx
   19ecc:	48 8b bd f8 fd ff ff 	mov    -0x208(%rbp),%rdi
   19ed3:	4c 89 ee             	mov    %r13,%rsi
   19ed6:	e8 45 4c 00 00       	callq  1eb20 <mbedtls_mpi_mod_mpi>
   19edb:	85 c0                	test   %eax,%eax
   19edd:	0f 85 3e fe ff ff    	jne    19d21 <mbedtls_rsa_check_privkey.part.0+0x141>
   19ee3:	48 8b b5 c8 fd ff ff 	mov    -0x238(%rbp),%rsi
   19eea:	48 8b bd 00 fe ff ff 	mov    -0x200(%rbp),%rdi
   19ef1:	4c 89 f2             	mov    %r14,%rdx
   19ef4:	e8 27 4c 00 00       	callq  1eb20 <mbedtls_mpi_mod_mpi>
   19ef9:	85 c0                	test   %eax,%eax
   19efb:	0f 85 20 fe ff ff    	jne    19d21 <mbedtls_rsa_check_privkey.part.0+0x141>
   19f01:	48 8b b5 c8 fd ff ff 	mov    -0x238(%rbp),%rsi
   19f08:	48 8b bd e8 fd ff ff 	mov    -0x218(%rbp),%rdi
   19f0f:	4c 89 fa             	mov    %r15,%rdx
   19f12:	e8 09 4c 00 00       	callq  1eb20 <mbedtls_mpi_mod_mpi>
   19f17:	85 c0                	test   %eax,%eax
   19f19:	0f 85 02 fe ff ff    	jne    19d21 <mbedtls_rsa_check_privkey.part.0+0x141>
   19f1f:	48 8b 95 e0 fd ff ff 	mov    -0x220(%rbp),%rdx
   19f26:	48 8b b5 d8 fd ff ff 	mov    -0x228(%rbp),%rsi
   19f2d:	48 8b bd 10 fe ff ff 	mov    -0x1f0(%rbp),%rdi
   19f34:	e8 f7 61 00 00       	callq  20130 <mbedtls_mpi_inv_mod>
   19f39:	85 c0                	test   %eax,%eax
   19f3b:	0f 85 e0 fd ff ff    	jne    19d21 <mbedtls_rsa_check_privkey.part.0+0x141>
   19f41:	49 8d 74 24 10       	lea    0x10(%r12),%rsi
   19f46:	48 89 df             	mov    %rbx,%rdi
   19f49:	e8 42 3b 00 00       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   19f4e:	85 c0                	test   %eax,%eax
   19f50:	0f 84 96 00 00 00    	je     19fec <mbedtls_rsa_check_privkey.part.0+0x40c>
   19f56:	48 89 df             	mov    %rbx,%rdi
   19f59:	e8 e2 2d 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19f5e:	4c 89 ef             	mov    %r13,%rdi
   19f61:	e8 da 2d 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19f66:	4c 89 f7             	mov    %r14,%rdi
   19f69:	e8 d2 2d 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19f6e:	4c 89 ff             	mov    %r15,%rdi
   19f71:	e8 ca 2d 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19f76:	48 8b bd 28 fe ff ff 	mov    -0x1d8(%rbp),%rdi
   19f7d:	e8 be 2d 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19f82:	48 8b bd f8 fd ff ff 	mov    -0x208(%rbp),%rdi
   19f89:	e8 b2 2d 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19f8e:	48 8b bd 20 fe ff ff 	mov    -0x1e0(%rbp),%rdi
   19f95:	e8 a6 2d 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19f9a:	48 8b bd 08 fe ff ff 	mov    -0x1f8(%rbp),%rdi
   19fa1:	e8 9a 2d 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19fa6:	48 8b bd f0 fd ff ff 	mov    -0x210(%rbp),%rdi
   19fad:	e8 8e 2d 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19fb2:	48 8b bd 18 fe ff ff 	mov    -0x1e8(%rbp),%rdi
   19fb9:	e8 82 2d 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19fbe:	48 8b bd 00 fe ff ff 	mov    -0x200(%rbp),%rdi
   19fc5:	e8 76 2d 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19fca:	48 8b bd e8 fd ff ff 	mov    -0x218(%rbp),%rdi
   19fd1:	e8 6a 2d 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19fd6:	48 8b bd 10 fe ff ff 	mov    -0x1f0(%rbp),%rdi
   19fdd:	e8 5e 2d 00 00       	callq  1cd40 <mbedtls_mpi_free>
   19fe2:	b8 00 be ff ff       	mov    $0xffffbe00,%eax
   19fe7:	e9 e0 fd ff ff       	jmpq   19dcc <mbedtls_rsa_check_privkey.part.0+0x1ec>
   19fec:	48 8b bd 00 fe ff ff 	mov    -0x200(%rbp),%rdi
   19ff3:	49 8d b4 24 88 00 00 	lea    0x88(%r12),%rsi
   19ffa:	00 
   19ffb:	e8 90 3a 00 00       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1a000:	85 c0                	test   %eax,%eax
   1a002:	0f 85 4e ff ff ff    	jne    19f56 <mbedtls_rsa_check_privkey.part.0+0x376>
   1a008:	48 8b bd e8 fd ff ff 	mov    -0x218(%rbp),%rdi
   1a00f:	49 8d b4 24 a0 00 00 	lea    0xa0(%r12),%rsi
   1a016:	00 
   1a017:	e8 74 3a 00 00       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1a01c:	85 c0                	test   %eax,%eax
   1a01e:	0f 85 32 ff ff ff    	jne    19f56 <mbedtls_rsa_check_privkey.part.0+0x376>
   1a024:	48 8b bd 10 fe ff ff 	mov    -0x1f0(%rbp),%rdi
   1a02b:	49 8d b4 24 b8 00 00 	lea    0xb8(%r12),%rsi
   1a032:	00 
   1a033:	e8 58 3a 00 00       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1a038:	85 c0                	test   %eax,%eax
   1a03a:	0f 85 16 ff ff ff    	jne    19f56 <mbedtls_rsa_check_privkey.part.0+0x376>
   1a040:	48 8b bd 18 fe ff ff 	mov    -0x1e8(%rbp),%rdi
   1a047:	31 f6                	xor    %esi,%esi
   1a049:	e8 42 3b 00 00       	callq  1db90 <mbedtls_mpi_cmp_int>
   1a04e:	85 c0                	test   %eax,%eax
   1a050:	0f 85 00 ff ff ff    	jne    19f56 <mbedtls_rsa_check_privkey.part.0+0x376>
   1a056:	48 8b bd f8 fd ff ff 	mov    -0x208(%rbp),%rdi
   1a05d:	be 01 00 00 00       	mov    $0x1,%esi
   1a062:	e8 29 3b 00 00       	callq  1db90 <mbedtls_mpi_cmp_int>
   1a067:	85 c0                	test   %eax,%eax
   1a069:	0f 85 e7 fe ff ff    	jne    19f56 <mbedtls_rsa_check_privkey.part.0+0x376>
   1a06f:	4c 8b a5 20 fe ff ff 	mov    -0x1e0(%rbp),%r12
   1a076:	be 01 00 00 00       	mov    $0x1,%esi
   1a07b:	4c 89 e7             	mov    %r12,%rdi
   1a07e:	e8 0d 3b 00 00       	callq  1db90 <mbedtls_mpi_cmp_int>
   1a083:	85 c0                	test   %eax,%eax
   1a085:	89 85 e0 fd ff ff    	mov    %eax,-0x220(%rbp)
   1a08b:	0f 85 c5 fe ff ff    	jne    19f56 <mbedtls_rsa_check_privkey.part.0+0x376>
   1a091:	48 89 df             	mov    %rbx,%rdi
   1a094:	e8 a7 2c 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a099:	4c 89 ef             	mov    %r13,%rdi
   1a09c:	e8 9f 2c 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a0a1:	4c 89 f7             	mov    %r14,%rdi
   1a0a4:	e8 97 2c 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a0a9:	4c 89 ff             	mov    %r15,%rdi
   1a0ac:	e8 8f 2c 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a0b1:	48 8b bd 28 fe ff ff 	mov    -0x1d8(%rbp),%rdi
   1a0b8:	e8 83 2c 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a0bd:	48 8b bd f8 fd ff ff 	mov    -0x208(%rbp),%rdi
   1a0c4:	e8 77 2c 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a0c9:	4c 89 e7             	mov    %r12,%rdi
   1a0cc:	e8 6f 2c 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a0d1:	48 8b bd 08 fe ff ff 	mov    -0x1f8(%rbp),%rdi
   1a0d8:	e8 63 2c 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a0dd:	48 8b bd f0 fd ff ff 	mov    -0x210(%rbp),%rdi
   1a0e4:	e8 57 2c 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a0e9:	48 8b bd 18 fe ff ff 	mov    -0x1e8(%rbp),%rdi
   1a0f0:	e8 4b 2c 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a0f5:	48 8b bd 00 fe ff ff 	mov    -0x200(%rbp),%rdi
   1a0fc:	e8 3f 2c 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a101:	48 8b bd e8 fd ff ff 	mov    -0x218(%rbp),%rdi
   1a108:	e8 33 2c 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a10d:	48 8b bd 10 fe ff ff 	mov    -0x1f0(%rbp),%rdi
   1a114:	e8 27 2c 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a119:	8b 85 e0 fd ff ff    	mov    -0x220(%rbp),%eax
   1a11f:	e9 a8 fc ff ff       	jmpq   19dcc <mbedtls_rsa_check_privkey.part.0+0x1ec>
   1a124:	66 90                	xchg   %ax,%ax
   1a126:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1a12d:	00 00 00 

000000000001a130 <mbedtls_rsa_set_padding>:
   1a130:	55                   	push   %rbp
   1a131:	89 b7 48 01 00 00    	mov    %esi,0x148(%rdi)
   1a137:	89 97 4c 01 00 00    	mov    %edx,0x14c(%rdi)
   1a13d:	48 89 e5             	mov    %rsp,%rbp
   1a140:	5d                   	pop    %rbp
   1a141:	c3                   	retq   
   1a142:	0f 1f 40 00          	nopl   0x0(%rax)
   1a146:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1a14d:	00 00 00 

000000000001a150 <mbedtls_rsa_init>:
   1a150:	55                   	push   %rbp
   1a151:	48 89 e5             	mov    %rsp,%rbp
   1a154:	41 55                	push   %r13
   1a156:	41 54                	push   %r12
   1a158:	53                   	push   %rbx
   1a159:	41 89 f4             	mov    %esi,%r12d
   1a15c:	41 89 d5             	mov    %edx,%r13d
   1a15f:	31 f6                	xor    %esi,%esi
   1a161:	ba 50 01 00 00       	mov    $0x150,%edx
   1a166:	48 89 fb             	mov    %rdi,%rbx
   1a169:	48 83 ec 08          	sub    $0x8,%rsp
   1a16d:	e8 ee c2 ff ff       	callq  16460 <memset>
   1a172:	48 83 c4 08          	add    $0x8,%rsp
   1a176:	44 89 ea             	mov    %r13d,%edx
   1a179:	44 89 e6             	mov    %r12d,%esi
   1a17c:	48 89 df             	mov    %rbx,%rdi
   1a17f:	5b                   	pop    %rbx
   1a180:	41 5c                	pop    %r12
   1a182:	41 5d                	pop    %r13
   1a184:	5d                   	pop    %rbp
   1a185:	e9 a6 ff ff ff       	jmpq   1a130 <mbedtls_rsa_set_padding>
   1a18a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001a190 <mbedtls_rsa_check_pubkey>:
   1a190:	48 8b 47 20          	mov    0x20(%rdi),%rax
   1a194:	48 85 c0             	test   %rax,%rax
   1a197:	74 7f                	je     1a218 <mbedtls_rsa_check_pubkey+0x88>
   1a199:	48 8b 57 38          	mov    0x38(%rdi),%rdx
   1a19d:	48 85 d2             	test   %rdx,%rdx
   1a1a0:	74 76                	je     1a218 <mbedtls_rsa_check_pubkey+0x88>
   1a1a2:	f6 00 01             	testb  $0x1,(%rax)
   1a1a5:	74 71                	je     1a218 <mbedtls_rsa_check_pubkey+0x88>
   1a1a7:	f6 02 01             	testb  $0x1,(%rdx)
   1a1aa:	74 6c                	je     1a218 <mbedtls_rsa_check_pubkey+0x88>
   1a1ac:	55                   	push   %rbp
   1a1ad:	48 89 e5             	mov    %rsp,%rbp
   1a1b0:	41 54                	push   %r12
   1a1b2:	4c 8d 67 10          	lea    0x10(%rdi),%r12
   1a1b6:	53                   	push   %rbx
   1a1b7:	48 89 fb             	mov    %rdi,%rbx
   1a1ba:	4c 89 e7             	mov    %r12,%rdi
   1a1bd:	e8 2e 32 00 00       	callq  1d3f0 <mbedtls_mpi_bitlen>
   1a1c2:	48 83 f8 7f          	cmp    $0x7f,%rax
   1a1c6:	76 40                	jbe    1a208 <mbedtls_rsa_check_pubkey+0x78>
   1a1c8:	4c 89 e7             	mov    %r12,%rdi
   1a1cb:	e8 20 32 00 00       	callq  1d3f0 <mbedtls_mpi_bitlen>
   1a1d0:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
   1a1d6:	77 30                	ja     1a208 <mbedtls_rsa_check_pubkey+0x78>
   1a1d8:	48 83 c3 28          	add    $0x28,%rbx
   1a1dc:	48 89 df             	mov    %rbx,%rdi
   1a1df:	e8 0c 32 00 00       	callq  1d3f0 <mbedtls_mpi_bitlen>
   1a1e4:	48 83 f8 01          	cmp    $0x1,%rax
   1a1e8:	76 1e                	jbe    1a208 <mbedtls_rsa_check_pubkey+0x78>
   1a1ea:	4c 89 e6             	mov    %r12,%rsi
   1a1ed:	48 89 df             	mov    %rbx,%rdi
   1a1f0:	e8 9b 38 00 00       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1a1f5:	31 d2                	xor    %edx,%edx
   1a1f7:	85 c0                	test   %eax,%eax
   1a1f9:	79 0d                	jns    1a208 <mbedtls_rsa_check_pubkey+0x78>
   1a1fb:	5b                   	pop    %rbx
   1a1fc:	89 d0                	mov    %edx,%eax
   1a1fe:	41 5c                	pop    %r12
   1a200:	5d                   	pop    %rbp
   1a201:	c3                   	retq   
   1a202:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a208:	ba 00 be ff ff       	mov    $0xffffbe00,%edx
   1a20d:	5b                   	pop    %rbx
   1a20e:	89 d0                	mov    %edx,%eax
   1a210:	41 5c                	pop    %r12
   1a212:	5d                   	pop    %rbp
   1a213:	c3                   	retq   
   1a214:	0f 1f 40 00          	nopl   0x0(%rax)
   1a218:	ba 00 be ff ff       	mov    $0xffffbe00,%edx
   1a21d:	89 d0                	mov    %edx,%eax
   1a21f:	c3                   	retq   

000000000001a220 <mbedtls_rsa_check_privkey>:
   1a220:	55                   	push   %rbp
   1a221:	48 89 e5             	mov    %rsp,%rbp
   1a224:	53                   	push   %rbx
   1a225:	48 89 fb             	mov    %rdi,%rbx
   1a228:	48 83 ec 08          	sub    $0x8,%rsp
   1a22c:	e8 5f ff ff ff       	callq  1a190 <mbedtls_rsa_check_pubkey>
   1a231:	85 c0                	test   %eax,%eax
   1a233:	75 30                	jne    1a265 <mbedtls_rsa_check_privkey+0x45>
   1a235:	48 83 7b 68 00       	cmpq   $0x0,0x68(%rbx)
   1a23a:	74 24                	je     1a260 <mbedtls_rsa_check_privkey+0x40>
   1a23c:	48 83 bb 80 00 00 00 	cmpq   $0x0,0x80(%rbx)
   1a243:	00 
   1a244:	74 1a                	je     1a260 <mbedtls_rsa_check_privkey+0x40>
   1a246:	48 83 7b 50 00       	cmpq   $0x0,0x50(%rbx)
   1a24b:	74 13                	je     1a260 <mbedtls_rsa_check_privkey+0x40>
   1a24d:	48 83 c4 08          	add    $0x8,%rsp
   1a251:	48 89 df             	mov    %rbx,%rdi
   1a254:	5b                   	pop    %rbx
   1a255:	5d                   	pop    %rbp
   1a256:	e9 85 f9 ff ff       	jmpq   19be0 <mbedtls_rsa_check_privkey.part.0>
   1a25b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a260:	b8 00 be ff ff       	mov    $0xffffbe00,%eax
   1a265:	48 83 c4 08          	add    $0x8,%rsp
   1a269:	5b                   	pop    %rbx
   1a26a:	5d                   	pop    %rbp
   1a26b:	c3                   	retq   
   1a26c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001a270 <mbedtls_rsa_check_pub_priv>:
   1a270:	55                   	push   %rbp
   1a271:	48 89 e5             	mov    %rsp,%rbp
   1a274:	41 54                	push   %r12
   1a276:	53                   	push   %rbx
   1a277:	49 89 f4             	mov    %rsi,%r12
   1a27a:	48 89 fb             	mov    %rdi,%rbx
   1a27d:	e8 0e ff ff ff       	callq  1a190 <mbedtls_rsa_check_pubkey>
   1a282:	85 c0                	test   %eax,%eax
   1a284:	75 3a                	jne    1a2c0 <mbedtls_rsa_check_pub_priv+0x50>
   1a286:	4c 89 e7             	mov    %r12,%rdi
   1a289:	e8 92 ff ff ff       	callq  1a220 <mbedtls_rsa_check_privkey>
   1a28e:	85 c0                	test   %eax,%eax
   1a290:	75 2e                	jne    1a2c0 <mbedtls_rsa_check_pub_priv+0x50>
   1a292:	49 8d 74 24 10       	lea    0x10(%r12),%rsi
   1a297:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   1a29b:	e8 f0 37 00 00       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1a2a0:	85 c0                	test   %eax,%eax
   1a2a2:	75 1c                	jne    1a2c0 <mbedtls_rsa_check_pub_priv+0x50>
   1a2a4:	49 8d 74 24 28       	lea    0x28(%r12),%rsi
   1a2a9:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
   1a2ad:	e8 de 37 00 00       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1a2b2:	85 c0                	test   %eax,%eax
   1a2b4:	75 0a                	jne    1a2c0 <mbedtls_rsa_check_pub_priv+0x50>
   1a2b6:	5b                   	pop    %rbx
   1a2b7:	41 5c                	pop    %r12
   1a2b9:	5d                   	pop    %rbp
   1a2ba:	c3                   	retq   
   1a2bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a2c0:	5b                   	pop    %rbx
   1a2c1:	b8 00 be ff ff       	mov    $0xffffbe00,%eax
   1a2c6:	41 5c                	pop    %r12
   1a2c8:	5d                   	pop    %rbp
   1a2c9:	c3                   	retq   
   1a2ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001a2d0 <mbedtls_rsa_public>:
   1a2d0:	55                   	push   %rbp
   1a2d1:	48 89 e5             	mov    %rsp,%rbp
   1a2d4:	41 57                	push   %r15
   1a2d6:	41 56                	push   %r14
   1a2d8:	41 55                	push   %r13
   1a2da:	41 54                	push   %r12
   1a2dc:	49 89 fd             	mov    %rdi,%r13
   1a2df:	53                   	push   %rbx
   1a2e0:	48 8d 5d b0          	lea    -0x50(%rbp),%rbx
   1a2e4:	49 89 f4             	mov    %rsi,%r12
   1a2e7:	49 89 d6             	mov    %rdx,%r14
   1a2ea:	48 83 ec 28          	sub    $0x28,%rsp
   1a2ee:	48 89 df             	mov    %rbx,%rdi
   1a2f1:	e8 1a 2a 00 00       	callq  1cd10 <mbedtls_mpi_init>
   1a2f6:	49 8b 55 08          	mov    0x8(%r13),%rdx
   1a2fa:	4c 89 e6             	mov    %r12,%rsi
   1a2fd:	48 89 df             	mov    %rbx,%rdi
   1a300:	e8 9b 31 00 00       	callq  1d4a0 <mbedtls_mpi_read_binary>
   1a305:	85 c0                	test   %eax,%eax
   1a307:	44 8d a0 80 bd ff ff 	lea    -0x4280(%rax),%r12d
   1a30e:	74 20                	je     1a330 <mbedtls_rsa_public+0x60>
   1a310:	48 89 df             	mov    %rbx,%rdi
   1a313:	e8 28 2a 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a318:	48 83 c4 28          	add    $0x28,%rsp
   1a31c:	44 89 e0             	mov    %r12d,%eax
   1a31f:	5b                   	pop    %rbx
   1a320:	41 5c                	pop    %r12
   1a322:	41 5d                	pop    %r13
   1a324:	41 5e                	pop    %r14
   1a326:	41 5f                	pop    %r15
   1a328:	5d                   	pop    %rbp
   1a329:	c3                   	retq   
   1a32a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1a330:	4d 8d 7d 10          	lea    0x10(%r13),%r15
   1a334:	48 89 df             	mov    %rbx,%rdi
   1a337:	41 bc 7c bd ff ff    	mov    $0xffffbd7c,%r12d
   1a33d:	4c 89 fe             	mov    %r15,%rsi
   1a340:	e8 4b 37 00 00       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1a345:	85 c0                	test   %eax,%eax
   1a347:	79 c7                	jns    1a310 <mbedtls_rsa_public+0x40>
   1a349:	49 8d 55 28          	lea    0x28(%r13),%rdx
   1a34d:	4d 8d 85 d0 00 00 00 	lea    0xd0(%r13),%r8
   1a354:	4c 89 f9             	mov    %r15,%rcx
   1a357:	48 89 de             	mov    %rbx,%rsi
   1a35a:	48 89 df             	mov    %rbx,%rdi
   1a35d:	4d 8b 65 08          	mov    0x8(%r13),%r12
   1a361:	e8 9a 4c 00 00       	callq  1f000 <mbedtls_mpi_exp_mod>
   1a366:	85 c0                	test   %eax,%eax
   1a368:	74 0e                	je     1a378 <mbedtls_rsa_public+0xa8>
   1a36a:	44 8d a0 80 bd ff ff 	lea    -0x4280(%rax),%r12d
   1a371:	eb 9d                	jmp    1a310 <mbedtls_rsa_public+0x40>
   1a373:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1a378:	4c 89 e2             	mov    %r12,%rdx
   1a37b:	4c 89 f6             	mov    %r14,%rsi
   1a37e:	48 89 df             	mov    %rbx,%rdi
   1a381:	e8 fa 31 00 00       	callq  1d580 <mbedtls_mpi_write_binary>
   1a386:	48 89 df             	mov    %rbx,%rdi
   1a389:	41 89 c4             	mov    %eax,%r12d
   1a38c:	e8 af 29 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a391:	45 85 e4             	test   %r12d,%r12d
   1a394:	75 08                	jne    1a39e <mbedtls_rsa_public+0xce>
   1a396:	45 31 e4             	xor    %r12d,%r12d
   1a399:	e9 7a ff ff ff       	jmpq   1a318 <mbedtls_rsa_public+0x48>
   1a39e:	41 81 ec 80 42 00 00 	sub    $0x4280,%r12d
   1a3a5:	e9 6e ff ff ff       	jmpq   1a318 <mbedtls_rsa_public+0x48>
   1a3aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001a3b0 <mbedtls_rsa_private>:
   1a3b0:	55                   	push   %rbp
   1a3b1:	48 89 e5             	mov    %rsp,%rbp
   1a3b4:	41 57                	push   %r15
   1a3b6:	41 56                	push   %r14
   1a3b8:	41 55                	push   %r13
   1a3ba:	41 54                	push   %r12
   1a3bc:	53                   	push   %rbx
   1a3bd:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
   1a3c4:	48 83 7f 68 00       	cmpq   $0x0,0x68(%rdi)
   1a3c9:	0f 84 a1 03 00 00    	je     1a770 <mbedtls_rsa_private+0x3c0>
   1a3cf:	48 83 bf 80 00 00 00 	cmpq   $0x0,0x80(%rdi)
   1a3d6:	00 
   1a3d7:	0f 84 93 03 00 00    	je     1a770 <mbedtls_rsa_private+0x3c0>
   1a3dd:	48 83 7f 50 00       	cmpq   $0x0,0x50(%rdi)
   1a3e2:	0f 84 88 03 00 00    	je     1a770 <mbedtls_rsa_private+0x3c0>
   1a3e8:	4c 8d a5 70 ff ff ff 	lea    -0x90(%rbp),%r12
   1a3ef:	4c 8d 75 90          	lea    -0x70(%rbp),%r14
   1a3f3:	48 89 fb             	mov    %rdi,%rbx
   1a3f6:	4c 8d 7d b0          	lea    -0x50(%rbp),%r15
   1a3fa:	49 89 cd             	mov    %rcx,%r13
   1a3fd:	4c 89 85 58 ff ff ff 	mov    %r8,-0xa8(%rbp)
   1a404:	4c 89 e7             	mov    %r12,%rdi
   1a407:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
   1a40e:	48 89 b5 68 ff ff ff 	mov    %rsi,-0x98(%rbp)
   1a415:	e8 f6 28 00 00       	callq  1cd10 <mbedtls_mpi_init>
   1a41a:	4c 89 f7             	mov    %r14,%rdi
   1a41d:	e8 ee 28 00 00       	callq  1cd10 <mbedtls_mpi_init>
   1a422:	4c 89 ff             	mov    %r15,%rdi
   1a425:	e8 e6 28 00 00       	callq  1cd10 <mbedtls_mpi_init>
   1a42a:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   1a42e:	4c 89 ee             	mov    %r13,%rsi
   1a431:	4c 89 e7             	mov    %r12,%rdi
   1a434:	e8 67 30 00 00       	callq  1d4a0 <mbedtls_mpi_read_binary>
   1a439:	85 c0                	test   %eax,%eax
   1a43b:	74 3b                	je     1a478 <mbedtls_rsa_private+0xc8>
   1a43d:	44 8d a8 00 bd ff ff 	lea    -0x4300(%rax),%r13d
   1a444:	4c 89 e7             	mov    %r12,%rdi
   1a447:	e8 f4 28 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a44c:	4c 89 f7             	mov    %r14,%rdi
   1a44f:	e8 ec 28 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a454:	4c 89 ff             	mov    %r15,%rdi
   1a457:	e8 e4 28 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a45c:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
   1a463:	44 89 e8             	mov    %r13d,%eax
   1a466:	5b                   	pop    %rbx
   1a467:	41 5c                	pop    %r12
   1a469:	41 5d                	pop    %r13
   1a46b:	41 5e                	pop    %r14
   1a46d:	41 5f                	pop    %r15
   1a46f:	5d                   	pop    %rbp
   1a470:	c3                   	retq   
   1a471:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1a478:	48 8d 43 10          	lea    0x10(%rbx),%rax
   1a47c:	4c 89 e7             	mov    %r12,%rdi
   1a47f:	41 bd fc bc ff ff    	mov    $0xffffbcfc,%r13d
   1a485:	48 89 c6             	mov    %rax,%rsi
   1a488:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
   1a48f:	e8 fc 35 00 00       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1a494:	85 c0                	test   %eax,%eax
   1a496:	79 ac                	jns    1a444 <mbedtls_rsa_private+0x94>
   1a498:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
   1a49f:	00 
   1a4a0:	0f 84 ca 00 00 00    	je     1a570 <mbedtls_rsa_private+0x1c0>
   1a4a6:	48 83 bb 40 01 00 00 	cmpq   $0x0,0x140(%rbx)
   1a4ad:	00 
   1a4ae:	0f 84 0c 02 00 00    	je     1a6c0 <mbedtls_rsa_private+0x310>
   1a4b4:	48 8d 83 18 01 00 00 	lea    0x118(%rbx),%rax
   1a4bb:	48 89 c7             	mov    %rax,%rdi
   1a4be:	48 89 c2             	mov    %rax,%rdx
   1a4c1:	48 89 c6             	mov    %rax,%rsi
   1a4c4:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1a4cb:	e8 f0 3a 00 00       	callq  1dfc0 <mbedtls_mpi_mul_mpi>
   1a4d0:	85 c0                	test   %eax,%eax
   1a4d2:	44 8d a8 00 bd ff ff 	lea    -0x4300(%rax),%r13d
   1a4d9:	0f 85 65 ff ff ff    	jne    1a444 <mbedtls_rsa_private+0x94>
   1a4df:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
   1a4e6:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1a4ed:	48 89 fe             	mov    %rdi,%rsi
   1a4f0:	e8 2b 46 00 00       	callq  1eb20 <mbedtls_mpi_mod_mpi>
   1a4f5:	85 c0                	test   %eax,%eax
   1a4f7:	0f 85 40 ff ff ff    	jne    1a43d <mbedtls_rsa_private+0x8d>
   1a4fd:	4c 8d ab 30 01 00 00 	lea    0x130(%rbx),%r13
   1a504:	4c 89 ea             	mov    %r13,%rdx
   1a507:	4c 89 ee             	mov    %r13,%rsi
   1a50a:	4c 89 ef             	mov    %r13,%rdi
   1a50d:	e8 ae 3a 00 00       	callq  1dfc0 <mbedtls_mpi_mul_mpi>
   1a512:	85 c0                	test   %eax,%eax
   1a514:	0f 85 23 ff ff ff    	jne    1a43d <mbedtls_rsa_private+0x8d>
   1a51a:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1a521:	4c 89 ee             	mov    %r13,%rsi
   1a524:	4c 89 ef             	mov    %r13,%rdi
   1a527:	e8 f4 45 00 00       	callq  1eb20 <mbedtls_mpi_mod_mpi>
   1a52c:	85 c0                	test   %eax,%eax
   1a52e:	0f 85 09 ff ff ff    	jne    1a43d <mbedtls_rsa_private+0x8d>
   1a534:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1a53b:	4c 89 e6             	mov    %r12,%rsi
   1a53e:	4c 89 e7             	mov    %r12,%rdi
   1a541:	e8 7a 3a 00 00       	callq  1dfc0 <mbedtls_mpi_mul_mpi>
   1a546:	85 c0                	test   %eax,%eax
   1a548:	0f 85 ef fe ff ff    	jne    1a43d <mbedtls_rsa_private+0x8d>
   1a54e:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1a555:	4c 89 e6             	mov    %r12,%rsi
   1a558:	4c 89 e7             	mov    %r12,%rdi
   1a55b:	e8 c0 45 00 00       	callq  1eb20 <mbedtls_mpi_mod_mpi>
   1a560:	85 c0                	test   %eax,%eax
   1a562:	0f 85 d5 fe ff ff    	jne    1a43d <mbedtls_rsa_private+0x8d>
   1a568:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a56f:	00 
   1a570:	48 8d 43 58          	lea    0x58(%rbx),%rax
   1a574:	48 8d 93 88 00 00 00 	lea    0x88(%rbx),%rdx
   1a57b:	4c 8d 83 e8 00 00 00 	lea    0xe8(%rbx),%r8
   1a582:	4c 89 e6             	mov    %r12,%rsi
   1a585:	4c 89 f7             	mov    %r14,%rdi
   1a588:	48 89 c1             	mov    %rax,%rcx
   1a58b:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1a592:	e8 69 4a 00 00       	callq  1f000 <mbedtls_mpi_exp_mod>
   1a597:	85 c0                	test   %eax,%eax
   1a599:	44 8d a8 00 bd ff ff 	lea    -0x4300(%rax),%r13d
   1a5a0:	0f 85 9e fe ff ff    	jne    1a444 <mbedtls_rsa_private+0x94>
   1a5a6:	4c 8d 6b 70          	lea    0x70(%rbx),%r13
   1a5aa:	48 8d 93 a0 00 00 00 	lea    0xa0(%rbx),%rdx
   1a5b1:	4c 8d 83 00 01 00 00 	lea    0x100(%rbx),%r8
   1a5b8:	4c 89 e6             	mov    %r12,%rsi
   1a5bb:	4c 89 ff             	mov    %r15,%rdi
   1a5be:	4c 89 e9             	mov    %r13,%rcx
   1a5c1:	e8 3a 4a 00 00       	callq  1f000 <mbedtls_mpi_exp_mod>
   1a5c6:	85 c0                	test   %eax,%eax
   1a5c8:	0f 85 6f fe ff ff    	jne    1a43d <mbedtls_rsa_private+0x8d>
   1a5ce:	4c 89 fa             	mov    %r15,%rdx
   1a5d1:	4c 89 f6             	mov    %r14,%rsi
   1a5d4:	4c 89 e7             	mov    %r12,%rdi
   1a5d7:	e8 d4 38 00 00       	callq  1deb0 <mbedtls_mpi_sub_mpi>
   1a5dc:	85 c0                	test   %eax,%eax
   1a5de:	0f 85 59 fe ff ff    	jne    1a43d <mbedtls_rsa_private+0x8d>
   1a5e4:	48 8d 93 b8 00 00 00 	lea    0xb8(%rbx),%rdx
   1a5eb:	4c 89 e6             	mov    %r12,%rsi
   1a5ee:	4c 89 f7             	mov    %r14,%rdi
   1a5f1:	e8 ca 39 00 00       	callq  1dfc0 <mbedtls_mpi_mul_mpi>
   1a5f6:	85 c0                	test   %eax,%eax
   1a5f8:	0f 85 3f fe ff ff    	jne    1a43d <mbedtls_rsa_private+0x8d>
   1a5fe:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1a605:	4c 89 f6             	mov    %r14,%rsi
   1a608:	4c 89 e7             	mov    %r12,%rdi
   1a60b:	e8 10 45 00 00       	callq  1eb20 <mbedtls_mpi_mod_mpi>
   1a610:	85 c0                	test   %eax,%eax
   1a612:	0f 85 25 fe ff ff    	jne    1a43d <mbedtls_rsa_private+0x8d>
   1a618:	4c 89 ea             	mov    %r13,%rdx
   1a61b:	4c 89 e6             	mov    %r12,%rsi
   1a61e:	4c 89 f7             	mov    %r14,%rdi
   1a621:	e8 9a 39 00 00       	callq  1dfc0 <mbedtls_mpi_mul_mpi>
   1a626:	85 c0                	test   %eax,%eax
   1a628:	0f 85 0f fe ff ff    	jne    1a43d <mbedtls_rsa_private+0x8d>
   1a62e:	4c 89 f2             	mov    %r14,%rdx
   1a631:	4c 89 fe             	mov    %r15,%rsi
   1a634:	4c 89 e7             	mov    %r12,%rdi
   1a637:	e8 e4 37 00 00       	callq  1de20 <mbedtls_mpi_add_mpi>
   1a63c:	85 c0                	test   %eax,%eax
   1a63e:	0f 85 f9 fd ff ff    	jne    1a43d <mbedtls_rsa_private+0x8d>
   1a644:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
   1a64b:	00 
   1a64c:	74 34                	je     1a682 <mbedtls_rsa_private+0x2d2>
   1a64e:	48 8d 93 30 01 00 00 	lea    0x130(%rbx),%rdx
   1a655:	4c 89 e6             	mov    %r12,%rsi
   1a658:	4c 89 e7             	mov    %r12,%rdi
   1a65b:	e8 60 39 00 00       	callq  1dfc0 <mbedtls_mpi_mul_mpi>
   1a660:	85 c0                	test   %eax,%eax
   1a662:	0f 85 d5 fd ff ff    	jne    1a43d <mbedtls_rsa_private+0x8d>
   1a668:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1a66f:	4c 89 e6             	mov    %r12,%rsi
   1a672:	4c 89 e7             	mov    %r12,%rdi
   1a675:	e8 a6 44 00 00       	callq  1eb20 <mbedtls_mpi_mod_mpi>
   1a67a:	85 c0                	test   %eax,%eax
   1a67c:	0f 85 bb fd ff ff    	jne    1a43d <mbedtls_rsa_private+0x8d>
   1a682:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   1a686:	48 8b b5 58 ff ff ff 	mov    -0xa8(%rbp),%rsi
   1a68d:	4c 89 e7             	mov    %r12,%rdi
   1a690:	e8 eb 2e 00 00       	callq  1d580 <mbedtls_mpi_write_binary>
   1a695:	4c 89 e7             	mov    %r12,%rdi
   1a698:	89 c3                	mov    %eax,%ebx
   1a69a:	e8 a1 26 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a69f:	4c 89 f7             	mov    %r14,%rdi
   1a6a2:	e8 99 26 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a6a7:	4c 89 ff             	mov    %r15,%rdi
   1a6aa:	e8 91 26 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a6af:	85 db                	test   %ebx,%ebx
   1a6b1:	0f 85 45 01 00 00    	jne    1a7fc <mbedtls_rsa_private+0x44c>
   1a6b7:	45 31 ed             	xor    %r13d,%r13d
   1a6ba:	e9 9d fd ff ff       	jmpq   1a45c <mbedtls_rsa_private+0xac>
   1a6bf:	90                   	nop
   1a6c0:	48 8d 83 30 01 00 00 	lea    0x130(%rbx),%rax
   1a6c7:	b9 0b 00 00 00       	mov    $0xb,%ecx
   1a6cc:	4c 8d ab 18 01 00 00 	lea    0x118(%rbx),%r13
   1a6d3:	4c 89 a5 48 ff ff ff 	mov    %r12,-0xb8(%rbp)
   1a6da:	4c 89 b5 40 ff ff ff 	mov    %r14,-0xc0(%rbp)
   1a6e1:	41 89 cc             	mov    %ecx,%r12d
   1a6e4:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   1a6eb:	49 89 c6             	mov    %rax,%r14
   1a6ee:	4c 89 bd 38 ff ff ff 	mov    %r15,-0xc8(%rbp)
   1a6f5:	0f 1f 00             	nopl   (%rax)
   1a6f8:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1a6fc:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
   1a703:	4c 89 f7             	mov    %r14,%rdi
   1a706:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
   1a70d:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
   1a711:	e8 da 55 00 00       	callq  1fcf0 <mbedtls_mpi_fill_random>
   1a716:	85 c0                	test   %eax,%eax
   1a718:	75 61                	jne    1a77b <mbedtls_rsa_private+0x3cb>
   1a71a:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1a721:	4c 89 f6             	mov    %r14,%rsi
   1a724:	4c 89 ef             	mov    %r13,%rdi
   1a727:	e8 f4 53 00 00       	callq  1fb20 <mbedtls_mpi_gcd>
   1a72c:	85 c0                	test   %eax,%eax
   1a72e:	75 4b                	jne    1a77b <mbedtls_rsa_private+0x3cb>
   1a730:	be 01 00 00 00       	mov    $0x1,%esi
   1a735:	4c 89 ef             	mov    %r13,%rdi
   1a738:	e8 53 34 00 00       	callq  1db90 <mbedtls_mpi_cmp_int>
   1a73d:	85 c0                	test   %eax,%eax
   1a73f:	74 5b                	je     1a79c <mbedtls_rsa_private+0x3ec>
   1a741:	41 83 ec 01          	sub    $0x1,%r12d
   1a745:	75 b1                	jne    1a6f8 <mbedtls_rsa_private+0x348>
   1a747:	4c 8b a5 48 ff ff ff 	mov    -0xb8(%rbp),%r12
   1a74e:	4c 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%r14
   1a755:	41 bd 80 78 ff ff    	mov    $0xffff7880,%r13d
   1a75b:	4c 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%r15
   1a762:	e9 dd fc ff ff       	jmpq   1a444 <mbedtls_rsa_private+0x94>
   1a767:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1a76e:	00 00 
   1a770:	41 bd 80 bf ff ff    	mov    $0xffffbf80,%r13d
   1a776:	e9 e1 fc ff ff       	jmpq   1a45c <mbedtls_rsa_private+0xac>
   1a77b:	4c 8b a5 48 ff ff ff 	mov    -0xb8(%rbp),%r12
   1a782:	4c 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%r14
   1a789:	44 8d a8 00 bd ff ff 	lea    -0x4300(%rax),%r13d
   1a790:	4c 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%r15
   1a797:	e9 a8 fc ff ff       	jmpq   1a444 <mbedtls_rsa_private+0x94>
   1a79c:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
   1a7a3:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
   1a7aa:	4c 89 ef             	mov    %r13,%rdi
   1a7ad:	4c 8b a5 48 ff ff ff 	mov    -0xb8(%rbp),%r12
   1a7b4:	4c 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%r14
   1a7bb:	4c 89 ad 60 ff ff ff 	mov    %r13,-0xa0(%rbp)
   1a7c2:	4c 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%r15
   1a7c9:	e8 62 59 00 00       	callq  20130 <mbedtls_mpi_inv_mod>
   1a7ce:	85 c0                	test   %eax,%eax
   1a7d0:	0f 85 67 fc ff ff    	jne    1a43d <mbedtls_rsa_private+0x8d>
   1a7d6:	48 8b bd 60 ff ff ff 	mov    -0xa0(%rbp),%rdi
   1a7dd:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx
   1a7e4:	48 8d 53 28          	lea    0x28(%rbx),%rdx
   1a7e8:	4c 8d 83 d0 00 00 00 	lea    0xd0(%rbx),%r8
   1a7ef:	48 89 fe             	mov    %rdi,%rsi
   1a7f2:	e8 09 48 00 00       	callq  1f000 <mbedtls_mpi_exp_mod>
   1a7f7:	e9 30 fd ff ff       	jmpq   1a52c <mbedtls_rsa_private+0x17c>
   1a7fc:	44 8d ab 00 bd ff ff 	lea    -0x4300(%rbx),%r13d
   1a803:	e9 54 fc ff ff       	jmpq   1a45c <mbedtls_rsa_private+0xac>
   1a808:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a80f:	00 

000000000001a810 <mbedtls_rsa_pkcs1_encrypt>:
   1a810:	55                   	push   %rbp
   1a811:	b8 00 bf ff ff       	mov    $0xffffbf00,%eax
   1a816:	48 89 e5             	mov    %rsp,%rbp
   1a819:	5d                   	pop    %rbp
   1a81a:	c3                   	retq   
   1a81b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001a820 <mbedtls_rsa_rsaes_pkcs1_v15_decrypt>:
   1a820:	55                   	push   %rbp
   1a821:	48 89 e5             	mov    %rsp,%rbp
   1a824:	41 55                	push   %r13
   1a826:	41 54                	push   %r12
   1a828:	53                   	push   %rbx
   1a829:	4c 89 c3             	mov    %r8,%rbx
   1a82c:	48 81 ec 08 04 00 00 	sub    $0x408,%rsp
   1a833:	83 f9 01             	cmp    $0x1,%ecx
   1a836:	0f 84 ec 00 00 00    	je     1a928 <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0x108>
   1a83c:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   1a840:	49 8d 44 24 f0       	lea    -0x10(%r12),%rax
   1a845:	48 3d f0 03 00 00    	cmp    $0x3f0,%rax
   1a84b:	0f 87 67 01 00 00    	ja     1a9b8 <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0x198>
   1a851:	85 c9                	test   %ecx,%ecx
   1a853:	4c 8d ad e0 fb ff ff 	lea    -0x420(%rbp),%r13
   1a85a:	0f 85 b0 00 00 00    	jne    1a910 <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0xf0>
   1a860:	4c 89 ea             	mov    %r13,%rdx
   1a863:	4c 89 ce             	mov    %r9,%rsi
   1a866:	e8 65 fa ff ff       	callq  1a2d0 <mbedtls_rsa_public>
   1a86b:	85 c0                	test   %eax,%eax
   1a86d:	0f 85 8c 00 00 00    	jne    1a8ff <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0xdf>
   1a873:	44 0f b6 85 e1 fb ff 	movzbl -0x41f(%rbp),%r8d
   1a87a:	ff 
   1a87b:	0f b6 85 e0 fb ff ff 	movzbl -0x420(%rbp),%eax
   1a882:	4d 8d 4c 24 fd       	lea    -0x3(%r12),%r9
   1a887:	49 8d 75 02          	lea    0x2(%r13),%rsi
   1a88b:	31 d2                	xor    %edx,%edx
   1a88d:	31 ff                	xor    %edi,%edi
   1a88f:	41 83 f0 01          	xor    $0x1,%r8d
   1a893:	41 09 c0             	or     %eax,%r8d
   1a896:	31 c0                	xor    %eax,%eax
   1a898:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1a89f:	00 
   1a8a0:	80 3c 06 ff          	cmpb   $0xff,(%rsi,%rax,1)
   1a8a4:	0f 95 c1             	setne  %cl
   1a8a7:	48 83 c0 01          	add    $0x1,%rax
   1a8ab:	09 ca                	or     %ecx,%edx
   1a8ad:	89 d1                	mov    %edx,%ecx
   1a8af:	83 f1 01             	xor    $0x1,%ecx
   1a8b2:	0f b6 c9             	movzbl %cl,%ecx
   1a8b5:	48 01 cf             	add    %rcx,%rdi
   1a8b8:	4c 39 c8             	cmp    %r9,%rax
   1a8bb:	75 e3                	jne    1a8a0 <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0x80>
   1a8bd:	48 83 ff 07          	cmp    $0x7,%rdi
   1a8c1:	48 8d 74 3e 01       	lea    0x1(%rsi,%rdi,1),%rsi
   1a8c6:	0f 96 c0             	setbe  %al
   1a8c9:	44 0a 84 3d e2 fb ff 	or     -0x41e(%rbp,%rdi,1),%r8b
   1a8d0:	ff 
   1a8d1:	41 08 c0             	or     %al,%r8b
   1a8d4:	0f 85 e8 00 00 00    	jne    1a9c2 <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0x1a2>
   1a8da:	48 89 f0             	mov    %rsi,%rax
   1a8dd:	4c 89 e2             	mov    %r12,%rdx
   1a8e0:	4c 29 e8             	sub    %r13,%rax
   1a8e3:	48 29 c2             	sub    %rax,%rdx
   1a8e6:	48 3b 55 18          	cmp    0x18(%rbp),%rdx
   1a8ea:	b8 00 bc ff ff       	mov    $0xffffbc00,%eax
   1a8ef:	77 0e                	ja     1a8ff <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0xdf>
   1a8f1:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
   1a8f5:	48 89 13             	mov    %rdx,(%rbx)
   1a8f8:	e8 f3 b2 ff ff       	callq  15bf0 <memcpy>
   1a8fd:	31 c0                	xor    %eax,%eax
   1a8ff:	48 81 c4 08 04 00 00 	add    $0x408,%rsp
   1a906:	5b                   	pop    %rbx
   1a907:	41 5c                	pop    %r12
   1a909:	41 5d                	pop    %r13
   1a90b:	5d                   	pop    %rbp
   1a90c:	c3                   	retq   
   1a90d:	0f 1f 00             	nopl   (%rax)
   1a910:	4d 89 e8             	mov    %r13,%r8
   1a913:	4c 89 c9             	mov    %r9,%rcx
   1a916:	e8 95 fa ff ff       	callq  1a3b0 <mbedtls_rsa_private>
   1a91b:	85 c0                	test   %eax,%eax
   1a91d:	0f 84 50 ff ff ff    	je     1a873 <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0x53>
   1a923:	eb da                	jmp    1a8ff <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0xdf>
   1a925:	0f 1f 00             	nopl   (%rax)
   1a928:	8b 87 48 01 00 00    	mov    0x148(%rdi),%eax
   1a92e:	85 c0                	test   %eax,%eax
   1a930:	0f 85 82 00 00 00    	jne    1a9b8 <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0x198>
   1a936:	4c 8b 67 08          	mov    0x8(%rdi),%r12
   1a93a:	49 8d 44 24 f0       	lea    -0x10(%r12),%rax
   1a93f:	48 3d f0 03 00 00    	cmp    $0x3f0,%rax
   1a945:	77 71                	ja     1a9b8 <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0x198>
   1a947:	4c 8d ad e0 fb ff ff 	lea    -0x420(%rbp),%r13
   1a94e:	4c 89 c9             	mov    %r9,%rcx
   1a951:	4d 89 e8             	mov    %r13,%r8
   1a954:	e8 57 fa ff ff       	callq  1a3b0 <mbedtls_rsa_private>
   1a959:	85 c0                	test   %eax,%eax
   1a95b:	75 a2                	jne    1a8ff <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0xdf>
   1a95d:	44 0f b6 85 e1 fb ff 	movzbl -0x41f(%rbp),%r8d
   1a964:	ff 
   1a965:	4d 8d 4c 24 fd       	lea    -0x3(%r12),%r9
   1a96a:	49 8d 75 02          	lea    0x2(%r13),%rsi
   1a96e:	31 c9                	xor    %ecx,%ecx
   1a970:	31 d2                	xor    %edx,%edx
   1a972:	31 ff                	xor    %edi,%edi
   1a974:	41 83 f0 02          	xor    $0x2,%r8d
   1a978:	44 0a 85 e0 fb ff ff 	or     -0x420(%rbp),%r8b
   1a97f:	90                   	nop
   1a980:	0f b6 04 16          	movzbl (%rsi,%rdx,1),%eax
   1a984:	48 83 c2 01          	add    $0x1,%rdx
   1a988:	41 89 c2             	mov    %eax,%r10d
   1a98b:	41 f7 da             	neg    %r10d
   1a98e:	44 09 d0             	or     %r10d,%eax
   1a991:	c0 e8 07             	shr    $0x7,%al
   1a994:	83 f0 01             	xor    $0x1,%eax
   1a997:	09 c1                	or     %eax,%ecx
   1a999:	89 c8                	mov    %ecx,%eax
   1a99b:	f7 d8                	neg    %eax
   1a99d:	09 c8                	or     %ecx,%eax
   1a99f:	c0 e8 07             	shr    $0x7,%al
   1a9a2:	83 f0 01             	xor    $0x1,%eax
   1a9a5:	0f b6 c0             	movzbl %al,%eax
   1a9a8:	48 01 c7             	add    %rax,%rdi
   1a9ab:	4c 39 ca             	cmp    %r9,%rdx
   1a9ae:	75 d0                	jne    1a980 <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0x160>
   1a9b0:	e9 08 ff ff ff       	jmpq   1a8bd <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0x9d>
   1a9b5:	0f 1f 00             	nopl   (%rax)
   1a9b8:	b8 80 bf ff ff       	mov    $0xffffbf80,%eax
   1a9bd:	e9 3d ff ff ff       	jmpq   1a8ff <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0xdf>
   1a9c2:	b8 00 bf ff ff       	mov    $0xffffbf00,%eax
   1a9c7:	e9 33 ff ff ff       	jmpq   1a8ff <mbedtls_rsa_rsaes_pkcs1_v15_decrypt+0xdf>
   1a9cc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001a9d0 <mbedtls_rsa_pkcs1_decrypt>:
   1a9d0:	55                   	push   %rbp
   1a9d1:	b8 00 bf ff ff       	mov    $0xffffbf00,%eax
   1a9d6:	48 89 e5             	mov    %rsp,%rbp
   1a9d9:	5d                   	pop    %rbp
   1a9da:	c3                   	retq   
   1a9db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001a9e0 <mbedtls_rsa_free>:
   1a9e0:	55                   	push   %rbp
   1a9e1:	48 89 e5             	mov    %rsp,%rbp
   1a9e4:	53                   	push   %rbx
   1a9e5:	48 89 fb             	mov    %rdi,%rbx
   1a9e8:	48 8d bf 18 01 00 00 	lea    0x118(%rdi),%rdi
   1a9ef:	48 83 ec 08          	sub    $0x8,%rsp
   1a9f3:	e8 48 23 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1a9f8:	48 8d bb 30 01 00 00 	lea    0x130(%rbx),%rdi
   1a9ff:	e8 3c 23 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1aa04:	48 8d bb 00 01 00 00 	lea    0x100(%rbx),%rdi
   1aa0b:	e8 30 23 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1aa10:	48 8d bb e8 00 00 00 	lea    0xe8(%rbx),%rdi
   1aa17:	e8 24 23 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1aa1c:	48 8d bb d0 00 00 00 	lea    0xd0(%rbx),%rdi
   1aa23:	e8 18 23 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1aa28:	48 8d bb b8 00 00 00 	lea    0xb8(%rbx),%rdi
   1aa2f:	e8 0c 23 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1aa34:	48 8d bb a0 00 00 00 	lea    0xa0(%rbx),%rdi
   1aa3b:	e8 00 23 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1aa40:	48 8d bb 88 00 00 00 	lea    0x88(%rbx),%rdi
   1aa47:	e8 f4 22 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1aa4c:	48 8d 7b 70          	lea    0x70(%rbx),%rdi
   1aa50:	e8 eb 22 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1aa55:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
   1aa59:	e8 e2 22 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1aa5e:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
   1aa62:	e8 d9 22 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1aa67:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
   1aa6b:	e8 d0 22 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1aa70:	48 83 c4 08          	add    $0x8,%rsp
   1aa74:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   1aa78:	5b                   	pop    %rbx
   1aa79:	5d                   	pop    %rbp
   1aa7a:	e9 c1 22 00 00       	jmpq   1cd40 <mbedtls_mpi_free>
   1aa7f:	90                   	nop

000000000001aa80 <mbedtls_rsa_gen_key>:
   1aa80:	48 85 f6             	test   %rsi,%rsi
   1aa83:	41 0f 94 c1          	sete   %r9b
   1aa87:	83 f9 7f             	cmp    $0x7f,%ecx
   1aa8a:	0f 96 c0             	setbe  %al
   1aa8d:	41 08 c1             	or     %al,%r9b
   1aa90:	41 b9 80 bf ff ff    	mov    $0xffffbf80,%r9d
   1aa96:	0f 85 64 02 00 00    	jne    1ad00 <mbedtls_rsa_gen_key+0x280>
   1aa9c:	41 83 f8 02          	cmp    $0x2,%r8d
   1aaa0:	0f 8e 5a 02 00 00    	jle    1ad00 <mbedtls_rsa_gen_key+0x280>
   1aaa6:	f6 c1 01             	test   $0x1,%cl
   1aaa9:	0f 85 51 02 00 00    	jne    1ad00 <mbedtls_rsa_gen_key+0x280>
   1aaaf:	55                   	push   %rbp
   1aab0:	48 89 e5             	mov    %rsp,%rbp
   1aab3:	41 57                	push   %r15
   1aab5:	41 56                	push   %r14
   1aab7:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   1aabe:	41 55                	push   %r13
   1aac0:	41 54                	push   %r12
   1aac2:	53                   	push   %rbx
   1aac3:	49 89 fe             	mov    %rdi,%r14
   1aac6:	45 89 c5             	mov    %r8d,%r13d
   1aac9:	41 89 cf             	mov    %ecx,%r15d
   1aacc:	49 89 d4             	mov    %rdx,%r12
   1aacf:	48 89 f3             	mov    %rsi,%rbx
   1aad2:	48 81 ec c8 00 00 00 	sub    $0xc8,%rsp
   1aad9:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
   1aae0:	48 89 c7             	mov    %rax,%rdi
   1aae3:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
   1aaea:	e8 21 22 00 00       	callq  1cd10 <mbedtls_mpi_init>
   1aaef:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1aaf6:	48 89 c7             	mov    %rax,%rdi
   1aaf9:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   1ab00:	e8 0b 22 00 00       	callq  1cd10 <mbedtls_mpi_init>
   1ab05:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1ab09:	48 89 c7             	mov    %rax,%rdi
   1ab0c:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
   1ab13:	e8 f8 21 00 00       	callq  1cd10 <mbedtls_mpi_init>
   1ab18:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1ab1c:	48 89 c7             	mov    %rax,%rdi
   1ab1f:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
   1ab26:	e8 e5 21 00 00       	callq  1cd10 <mbedtls_mpi_init>
   1ab2b:	4c 89 f0             	mov    %r14,%rax
   1ab2e:	49 63 f5             	movslq %r13d,%rsi
   1ab31:	48 83 c0 28          	add    $0x28,%rax
   1ab35:	48 89 c7             	mov    %rax,%rdi
   1ab38:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
   1ab3f:	e8 3c 27 00 00       	callq  1d280 <mbedtls_mpi_lset>
   1ab44:	85 c0                	test   %eax,%eax
   1ab46:	0f 85 4c 01 00 00    	jne    1ac98 <mbedtls_rsa_gen_key+0x218>
   1ab4c:	44 89 f8             	mov    %r15d,%eax
   1ab4f:	44 89 fa             	mov    %r15d,%edx
   1ab52:	4d 8d 6e 58          	lea    0x58(%r14),%r13
   1ab56:	d1 e8                	shr    %eax
   1ab58:	41 89 c7             	mov    %eax,%r15d
   1ab5b:	4c 89 f0             	mov    %r14,%rax
   1ab5e:	4d 8d 76 70          	lea    0x70(%r14),%r14
   1ab62:	48 83 c0 10          	add    $0x10,%rax
   1ab66:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
   1ab6d:	89 d0                	mov    %edx,%eax
   1ab6f:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   1ab76:	eb 21                	jmp    1ab99 <mbedtls_rsa_gen_key+0x119>
   1ab78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1ab7f:	00 
   1ab80:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
   1ab87:	be 01 00 00 00       	mov    $0x1,%esi
   1ab8c:	e8 ff 2f 00 00       	callq  1db90 <mbedtls_mpi_cmp_int>
   1ab91:	85 c0                	test   %eax,%eax
   1ab93:	0f 84 6f 01 00 00    	je     1ad08 <mbedtls_rsa_gen_key+0x288>
   1ab99:	31 d2                	xor    %edx,%edx
   1ab9b:	4d 89 e0             	mov    %r12,%r8
   1ab9e:	48 89 d9             	mov    %rbx,%rcx
   1aba1:	4c 89 fe             	mov    %r15,%rsi
   1aba4:	4c 89 ef             	mov    %r13,%rdi
   1aba7:	e8 04 5b 00 00       	callq  206b0 <mbedtls_mpi_gen_prime>
   1abac:	85 c0                	test   %eax,%eax
   1abae:	0f 85 e4 00 00 00    	jne    1ac98 <mbedtls_rsa_gen_key+0x218>
   1abb4:	31 d2                	xor    %edx,%edx
   1abb6:	4d 89 e0             	mov    %r12,%r8
   1abb9:	48 89 d9             	mov    %rbx,%rcx
   1abbc:	4c 89 fe             	mov    %r15,%rsi
   1abbf:	4c 89 f7             	mov    %r14,%rdi
   1abc2:	e8 e9 5a 00 00       	callq  206b0 <mbedtls_mpi_gen_prime>
   1abc7:	85 c0                	test   %eax,%eax
   1abc9:	0f 85 c9 00 00 00    	jne    1ac98 <mbedtls_rsa_gen_key+0x218>
   1abcf:	4c 89 f6             	mov    %r14,%rsi
   1abd2:	4c 89 ef             	mov    %r13,%rdi
   1abd5:	e8 b6 2e 00 00       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1abda:	85 c0                	test   %eax,%eax
   1abdc:	74 a2                	je     1ab80 <mbedtls_rsa_gen_key+0x100>
   1abde:	48 8b bd 40 ff ff ff 	mov    -0xc0(%rbp),%rdi
   1abe5:	4c 89 f2             	mov    %r14,%rdx
   1abe8:	4c 89 ee             	mov    %r13,%rsi
   1abeb:	e8 d0 33 00 00       	callq  1dfc0 <mbedtls_mpi_mul_mpi>
   1abf0:	85 c0                	test   %eax,%eax
   1abf2:	0f 85 a0 00 00 00    	jne    1ac98 <mbedtls_rsa_gen_key+0x218>
   1abf8:	48 8b bd 40 ff ff ff 	mov    -0xc0(%rbp),%rdi
   1abff:	e8 ec 27 00 00       	callq  1d3f0 <mbedtls_mpi_bitlen>
   1ac04:	48 3b 85 20 ff ff ff 	cmp    -0xe0(%rbp),%rax
   1ac0b:	0f 85 6f ff ff ff    	jne    1ab80 <mbedtls_rsa_gen_key+0x100>
   1ac11:	4c 89 f6             	mov    %r14,%rsi
   1ac14:	4c 89 ef             	mov    %r13,%rdi
   1ac17:	e8 74 2e 00 00       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1ac1c:	85 c0                	test   %eax,%eax
   1ac1e:	0f 88 dc 01 00 00    	js     1ae00 <mbedtls_rsa_gen_key+0x380>
   1ac24:	48 8b bd 30 ff ff ff 	mov    -0xd0(%rbp),%rdi
   1ac2b:	ba 01 00 00 00       	mov    $0x1,%edx
   1ac30:	4c 89 ee             	mov    %r13,%rsi
   1ac33:	e8 48 33 00 00       	callq  1df80 <mbedtls_mpi_sub_int>
   1ac38:	85 c0                	test   %eax,%eax
   1ac3a:	75 5c                	jne    1ac98 <mbedtls_rsa_gen_key+0x218>
   1ac3c:	48 8b bd 28 ff ff ff 	mov    -0xd8(%rbp),%rdi
   1ac43:	ba 01 00 00 00       	mov    $0x1,%edx
   1ac48:	4c 89 f6             	mov    %r14,%rsi
   1ac4b:	e8 30 33 00 00       	callq  1df80 <mbedtls_mpi_sub_int>
   1ac50:	85 c0                	test   %eax,%eax
   1ac52:	75 44                	jne    1ac98 <mbedtls_rsa_gen_key+0x218>
   1ac54:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   1ac5b:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
   1ac62:	48 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%rdi
   1ac69:	e8 52 33 00 00       	callq  1dfc0 <mbedtls_mpi_mul_mpi>
   1ac6e:	85 c0                	test   %eax,%eax
   1ac70:	75 26                	jne    1ac98 <mbedtls_rsa_gen_key+0x218>
   1ac72:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   1ac79:	48 8b b5 10 ff ff ff 	mov    -0xf0(%rbp),%rsi
   1ac80:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
   1ac87:	e8 94 4e 00 00       	callq  1fb20 <mbedtls_mpi_gcd>
   1ac8c:	85 c0                	test   %eax,%eax
   1ac8e:	0f 84 ec fe ff ff    	je     1ab80 <mbedtls_rsa_gen_key+0x100>
   1ac94:	0f 1f 40 00          	nopl   0x0(%rax)
   1ac98:	48 8b bd 30 ff ff ff 	mov    -0xd0(%rbp),%rdi
   1ac9f:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
   1aca5:	e8 96 20 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1acaa:	48 8b bd 28 ff ff ff 	mov    -0xd8(%rbp),%rdi
   1acb1:	e8 8a 20 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1acb6:	48 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%rdi
   1acbd:	e8 7e 20 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1acc2:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
   1acc9:	e8 72 20 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1acce:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
   1acd5:	e8 06 fd ff ff       	callq  1a9e0 <mbedtls_rsa_free>
   1acda:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
   1ace0:	44 8d 88 80 be ff ff 	lea    -0x4180(%rax),%r9d
   1ace7:	48 81 c4 c8 00 00 00 	add    $0xc8,%rsp
   1acee:	44 89 c8             	mov    %r9d,%eax
   1acf1:	5b                   	pop    %rbx
   1acf2:	41 5c                	pop    %r12
   1acf4:	41 5d                	pop    %r13
   1acf6:	41 5e                	pop    %r14
   1acf8:	41 5f                	pop    %r15
   1acfa:	5d                   	pop    %rbp
   1acfb:	c3                   	retq   
   1acfc:	0f 1f 40 00          	nopl   0x0(%rax)
   1ad00:	44 89 c8             	mov    %r9d,%eax
   1ad03:	c3                   	retq   
   1ad04:	0f 1f 40 00          	nopl   0x0(%rax)
   1ad08:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
   1ad0e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1ad15:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   1ad1c:	48 8b b5 10 ff ff ff 	mov    -0xf0(%rbp),%rsi
   1ad23:	48 8d 58 40          	lea    0x40(%rax),%rbx
   1ad27:	48 89 df             	mov    %rbx,%rdi
   1ad2a:	e8 01 54 00 00       	callq  20130 <mbedtls_mpi_inv_mod>
   1ad2f:	85 c0                	test   %eax,%eax
   1ad31:	0f 85 61 ff ff ff    	jne    1ac98 <mbedtls_rsa_gen_key+0x218>
   1ad37:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1ad3e:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
   1ad45:	48 89 de             	mov    %rbx,%rsi
   1ad48:	48 8d b8 88 00 00 00 	lea    0x88(%rax),%rdi
   1ad4f:	e8 cc 3d 00 00       	callq  1eb20 <mbedtls_mpi_mod_mpi>
   1ad54:	85 c0                	test   %eax,%eax
   1ad56:	0f 85 3c ff ff ff    	jne    1ac98 <mbedtls_rsa_gen_key+0x218>
   1ad5c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1ad63:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   1ad6a:	48 89 de             	mov    %rbx,%rsi
   1ad6d:	48 8d b8 a0 00 00 00 	lea    0xa0(%rax),%rdi
   1ad74:	e8 a7 3d 00 00       	callq  1eb20 <mbedtls_mpi_mod_mpi>
   1ad79:	85 c0                	test   %eax,%eax
   1ad7b:	0f 85 17 ff ff ff    	jne    1ac98 <mbedtls_rsa_gen_key+0x218>
   1ad81:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1ad88:	4c 89 ea             	mov    %r13,%rdx
   1ad8b:	4c 89 f6             	mov    %r14,%rsi
   1ad8e:	48 8d b8 b8 00 00 00 	lea    0xb8(%rax),%rdi
   1ad95:	e8 96 53 00 00       	callq  20130 <mbedtls_mpi_inv_mod>
   1ad9a:	85 c0                	test   %eax,%eax
   1ad9c:	0f 85 f6 fe ff ff    	jne    1ac98 <mbedtls_rsa_gen_key+0x218>
   1ada2:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   1ada9:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
   1adad:	e8 3e 26 00 00       	callq  1d3f0 <mbedtls_mpi_bitlen>
   1adb2:	48 8b bd 30 ff ff ff 	mov    -0xd0(%rbp),%rdi
   1adb9:	48 83 c0 07          	add    $0x7,%rax
   1adbd:	48 c1 e8 03          	shr    $0x3,%rax
   1adc1:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1adc5:	e8 76 1f 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1adca:	48 8b bd 28 ff ff ff 	mov    -0xd8(%rbp),%rdi
   1add1:	e8 6a 1f 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1add6:	48 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%rdi
   1addd:	e8 5e 1f 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1ade2:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
   1ade9:	e8 52 1f 00 00       	callq  1cd40 <mbedtls_mpi_free>
   1adee:	44 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%r9d
   1adf5:	e9 ed fe ff ff       	jmpq   1ace7 <mbedtls_rsa_gen_key+0x267>
   1adfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1ae00:	4c 89 f6             	mov    %r14,%rsi
   1ae03:	4c 89 ef             	mov    %r13,%rdi
   1ae06:	e8 45 22 00 00       	callq  1d050 <mbedtls_mpi_swap>
   1ae0b:	e9 14 fe ff ff       	jmpq   1ac24 <mbedtls_rsa_gen_key+0x1a4>

000000000001ae10 <mbedtls_rsa_copy>:
   1ae10:	55                   	push   %rbp
   1ae11:	48 89 e5             	mov    %rsp,%rbp
   1ae14:	41 55                	push   %r13
   1ae16:	41 54                	push   %r12
   1ae18:	53                   	push   %rbx
   1ae19:	49 89 f4             	mov    %rsi,%r12
   1ae1c:	48 89 fb             	mov    %rdi,%rbx
   1ae1f:	48 83 c6 10          	add    $0x10,%rsi
   1ae23:	48 83 c7 10          	add    $0x10,%rdi
   1ae27:	48 83 ec 08          	sub    $0x8,%rsp
   1ae2b:	8b 46 f0             	mov    -0x10(%rsi),%eax
   1ae2e:	89 47 f0             	mov    %eax,-0x10(%rdi)
   1ae31:	48 8b 46 f8          	mov    -0x8(%rsi),%rax
   1ae35:	48 89 47 f8          	mov    %rax,-0x8(%rdi)
   1ae39:	e8 32 21 00 00       	callq  1cf70 <mbedtls_mpi_copy>
   1ae3e:	85 c0                	test   %eax,%eax
   1ae40:	41 89 c5             	mov    %eax,%r13d
   1ae43:	74 1b                	je     1ae60 <mbedtls_rsa_copy+0x50>
   1ae45:	48 89 df             	mov    %rbx,%rdi
   1ae48:	e8 93 fb ff ff       	callq  1a9e0 <mbedtls_rsa_free>
   1ae4d:	48 83 c4 08          	add    $0x8,%rsp
   1ae51:	44 89 e8             	mov    %r13d,%eax
   1ae54:	5b                   	pop    %rbx
   1ae55:	41 5c                	pop    %r12
   1ae57:	41 5d                	pop    %r13
   1ae59:	5d                   	pop    %rbp
   1ae5a:	c3                   	retq   
   1ae5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ae60:	49 8d 74 24 28       	lea    0x28(%r12),%rsi
   1ae65:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
   1ae69:	e8 02 21 00 00       	callq  1cf70 <mbedtls_mpi_copy>
   1ae6e:	85 c0                	test   %eax,%eax
   1ae70:	41 89 c5             	mov    %eax,%r13d
   1ae73:	75 d0                	jne    1ae45 <mbedtls_rsa_copy+0x35>
   1ae75:	49 8d 74 24 40       	lea    0x40(%r12),%rsi
   1ae7a:	48 8d 7b 40          	lea    0x40(%rbx),%rdi
   1ae7e:	e8 ed 20 00 00       	callq  1cf70 <mbedtls_mpi_copy>
   1ae83:	85 c0                	test   %eax,%eax
   1ae85:	41 89 c5             	mov    %eax,%r13d
   1ae88:	75 bb                	jne    1ae45 <mbedtls_rsa_copy+0x35>
   1ae8a:	49 8d 74 24 58       	lea    0x58(%r12),%rsi
   1ae8f:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
   1ae93:	e8 d8 20 00 00       	callq  1cf70 <mbedtls_mpi_copy>
   1ae98:	85 c0                	test   %eax,%eax
   1ae9a:	41 89 c5             	mov    %eax,%r13d
   1ae9d:	75 a6                	jne    1ae45 <mbedtls_rsa_copy+0x35>
   1ae9f:	49 8d 74 24 70       	lea    0x70(%r12),%rsi
   1aea4:	48 8d 7b 70          	lea    0x70(%rbx),%rdi
   1aea8:	e8 c3 20 00 00       	callq  1cf70 <mbedtls_mpi_copy>
   1aead:	85 c0                	test   %eax,%eax
   1aeaf:	41 89 c5             	mov    %eax,%r13d
   1aeb2:	75 91                	jne    1ae45 <mbedtls_rsa_copy+0x35>
   1aeb4:	49 8d b4 24 88 00 00 	lea    0x88(%r12),%rsi
   1aebb:	00 
   1aebc:	48 8d bb 88 00 00 00 	lea    0x88(%rbx),%rdi
   1aec3:	e8 a8 20 00 00       	callq  1cf70 <mbedtls_mpi_copy>
   1aec8:	85 c0                	test   %eax,%eax
   1aeca:	41 89 c5             	mov    %eax,%r13d
   1aecd:	0f 85 72 ff ff ff    	jne    1ae45 <mbedtls_rsa_copy+0x35>
   1aed3:	49 8d b4 24 a0 00 00 	lea    0xa0(%r12),%rsi
   1aeda:	00 
   1aedb:	48 8d bb a0 00 00 00 	lea    0xa0(%rbx),%rdi
   1aee2:	e8 89 20 00 00       	callq  1cf70 <mbedtls_mpi_copy>
   1aee7:	85 c0                	test   %eax,%eax
   1aee9:	41 89 c5             	mov    %eax,%r13d
   1aeec:	0f 85 53 ff ff ff    	jne    1ae45 <mbedtls_rsa_copy+0x35>
   1aef2:	49 8d b4 24 b8 00 00 	lea    0xb8(%r12),%rsi
   1aef9:	00 
   1aefa:	48 8d bb b8 00 00 00 	lea    0xb8(%rbx),%rdi
   1af01:	e8 6a 20 00 00       	callq  1cf70 <mbedtls_mpi_copy>
   1af06:	85 c0                	test   %eax,%eax
   1af08:	41 89 c5             	mov    %eax,%r13d
   1af0b:	0f 85 34 ff ff ff    	jne    1ae45 <mbedtls_rsa_copy+0x35>
   1af11:	49 8d b4 24 d0 00 00 	lea    0xd0(%r12),%rsi
   1af18:	00 
   1af19:	48 8d bb d0 00 00 00 	lea    0xd0(%rbx),%rdi
   1af20:	e8 4b 20 00 00       	callq  1cf70 <mbedtls_mpi_copy>
   1af25:	85 c0                	test   %eax,%eax
   1af27:	41 89 c5             	mov    %eax,%r13d
   1af2a:	0f 85 15 ff ff ff    	jne    1ae45 <mbedtls_rsa_copy+0x35>
   1af30:	49 8d b4 24 e8 00 00 	lea    0xe8(%r12),%rsi
   1af37:	00 
   1af38:	48 8d bb e8 00 00 00 	lea    0xe8(%rbx),%rdi
   1af3f:	e8 2c 20 00 00       	callq  1cf70 <mbedtls_mpi_copy>
   1af44:	85 c0                	test   %eax,%eax
   1af46:	41 89 c5             	mov    %eax,%r13d
   1af49:	0f 85 f6 fe ff ff    	jne    1ae45 <mbedtls_rsa_copy+0x35>
   1af4f:	49 8d b4 24 00 01 00 	lea    0x100(%r12),%rsi
   1af56:	00 
   1af57:	48 8d bb 00 01 00 00 	lea    0x100(%rbx),%rdi
   1af5e:	e8 0d 20 00 00       	callq  1cf70 <mbedtls_mpi_copy>
   1af63:	85 c0                	test   %eax,%eax
   1af65:	41 89 c5             	mov    %eax,%r13d
   1af68:	0f 85 d7 fe ff ff    	jne    1ae45 <mbedtls_rsa_copy+0x35>
   1af6e:	49 8d b4 24 18 01 00 	lea    0x118(%r12),%rsi
   1af75:	00 
   1af76:	48 8d bb 18 01 00 00 	lea    0x118(%rbx),%rdi
   1af7d:	e8 ee 1f 00 00       	callq  1cf70 <mbedtls_mpi_copy>
   1af82:	85 c0                	test   %eax,%eax
   1af84:	41 89 c5             	mov    %eax,%r13d
   1af87:	0f 85 b8 fe ff ff    	jne    1ae45 <mbedtls_rsa_copy+0x35>
   1af8d:	49 8d b4 24 30 01 00 	lea    0x130(%r12),%rsi
   1af94:	00 
   1af95:	48 8d bb 30 01 00 00 	lea    0x130(%rbx),%rdi
   1af9c:	e8 cf 1f 00 00       	callq  1cf70 <mbedtls_mpi_copy>
   1afa1:	85 c0                	test   %eax,%eax
   1afa3:	41 89 c5             	mov    %eax,%r13d
   1afa6:	0f 85 99 fe ff ff    	jne    1ae45 <mbedtls_rsa_copy+0x35>
   1afac:	41 8b 84 24 48 01 00 	mov    0x148(%r12),%eax
   1afb3:	00 
   1afb4:	89 83 48 01 00 00    	mov    %eax,0x148(%rbx)
   1afba:	41 8b 84 24 4c 01 00 	mov    0x14c(%r12),%eax
   1afc1:	00 
   1afc2:	89 83 4c 01 00 00    	mov    %eax,0x14c(%rbx)
   1afc8:	e9 80 fe ff ff       	jmpq   1ae4d <mbedtls_rsa_copy+0x3d>
   1afcd:	0f 1f 00             	nopl   (%rax)

000000000001afd0 <cmac_multiply_by_u>:
   1afd0:	55                   	push   %rbp
   1afd1:	48 83 fa 10          	cmp    $0x10,%rdx
   1afd5:	48 89 e5             	mov    %rsp,%rbp
   1afd8:	53                   	push   %rbx
   1afd9:	74 65                	je     1b040 <cmac_multiply_by_u+0x70>
   1afdb:	48 83 fa 08          	cmp    $0x8,%rdx
   1afdf:	bb 1b 00 00 00       	mov    $0x1b,%ebx
   1afe4:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
   1afe9:	75 4c                	jne    1b037 <cmac_multiply_by_u+0x67>
   1afeb:	44 8d 5a ff          	lea    -0x1(%rdx),%r11d
   1afef:	45 31 c0             	xor    %r8d,%r8d
   1aff2:	4d 63 d3             	movslq %r11d,%r10
   1aff5:	4e 8d 0c 16          	lea    (%rsi,%r10,1),%r9
   1aff9:	49 01 fa             	add    %rdi,%r10
   1affc:	0f 1f 40 00          	nopl   0x0(%rax)
   1b000:	41 0f b6 09          	movzbl (%r9),%ecx
   1b004:	41 83 eb 01          	sub    $0x1,%r11d
   1b008:	49 83 e9 01          	sub    $0x1,%r9
   1b00c:	49 83 ea 01          	sub    $0x1,%r10
   1b010:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
   1b013:	44 09 c0             	or     %r8d,%eax
   1b016:	41 88 42 01          	mov    %al,0x1(%r10)
   1b01a:	45 0f b6 41 01       	movzbl 0x1(%r9),%r8d
   1b01f:	41 c0 e8 07          	shr    $0x7,%r8b
   1b023:	41 83 fb ff          	cmp    $0xffffffff,%r11d
   1b027:	75 d7                	jne    1b000 <cmac_multiply_by_u+0x30>
   1b029:	0f b6 06             	movzbl (%rsi),%eax
   1b02c:	c0 f8 07             	sar    $0x7,%al
   1b02f:	21 c3                	and    %eax,%ebx
   1b031:	30 5c 17 ff          	xor    %bl,-0x1(%rdi,%rdx,1)
   1b035:	31 c0                	xor    %eax,%eax
   1b037:	5b                   	pop    %rbx
   1b038:	5d                   	pop    %rbp
   1b039:	c3                   	retq   
   1b03a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b040:	bb 87 ff ff ff       	mov    $0xffffff87,%ebx
   1b045:	eb a4                	jmp    1afeb <cmac_multiply_by_u+0x1b>
   1b047:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b04e:	00 00 

000000000001b050 <mbedtls_cipher_cmac_starts>:
   1b050:	48 85 ff             	test   %rdi,%rdi
   1b053:	74 77                	je     1b0cc <mbedtls_cipher_cmac_starts+0x7c>
   1b055:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   1b059:	74 71                	je     1b0cc <mbedtls_cipher_cmac_starts+0x7c>
   1b05b:	48 85 f6             	test   %rsi,%rsi
   1b05e:	74 6c                	je     1b0cc <mbedtls_cipher_cmac_starts+0x7c>
   1b060:	55                   	push   %rbp
   1b061:	b9 01 00 00 00       	mov    $0x1,%ecx
   1b066:	48 89 e5             	mov    %rsp,%rbp
   1b069:	53                   	push   %rbx
   1b06a:	48 89 fb             	mov    %rdi,%rbx
   1b06d:	48 83 ec 08          	sub    $0x8,%rsp
   1b071:	e8 ba e8 ff ff       	callq  19930 <mbedtls_cipher_setkey>
   1b076:	85 c0                	test   %eax,%eax
   1b078:	75 44                	jne    1b0be <mbedtls_cipher_cmac_starts+0x6e>
   1b07a:	48 8b 03             	mov    (%rbx),%rax
   1b07d:	8b 00                	mov    (%rax),%eax
   1b07f:	83 f8 24             	cmp    $0x24,%eax
   1b082:	77 41                	ja     1b0c5 <mbedtls_cipher_cmac_starts+0x75>
   1b084:	48 ba 1c 00 00 00 10 	movabs $0x100000001c,%rdx
   1b08b:	00 00 00 
   1b08e:	48 0f a3 c2          	bt     %rax,%rdx
   1b092:	73 31                	jae    1b0c5 <mbedtls_cipher_cmac_starts+0x75>
   1b094:	be 28 00 00 00       	mov    $0x28,%esi
   1b099:	bf 01 00 00 00       	mov    $0x1,%edi
   1b09e:	e8 7d e3 fe ff       	callq  9420 <calloc>
   1b0a3:	48 85 c0             	test   %rax,%rax
   1b0a6:	74 2a                	je     1b0d2 <mbedtls_cipher_cmac_starts+0x82>
   1b0a8:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1b0ac:	48 89 43 48          	mov    %rax,0x48(%rbx)
   1b0b0:	c6 00 00             	movb   $0x0,(%rax)
   1b0b3:	48 83 c0 01          	add    $0x1,%rax
   1b0b7:	48 39 d0             	cmp    %rdx,%rax
   1b0ba:	75 f4                	jne    1b0b0 <mbedtls_cipher_cmac_starts+0x60>
   1b0bc:	31 c0                	xor    %eax,%eax
   1b0be:	48 83 c4 08          	add    $0x8,%rsp
   1b0c2:	5b                   	pop    %rbx
   1b0c3:	5d                   	pop    %rbp
   1b0c4:	c3                   	retq   
   1b0c5:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
   1b0ca:	eb f2                	jmp    1b0be <mbedtls_cipher_cmac_starts+0x6e>
   1b0cc:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
   1b0d1:	c3                   	retq   
   1b0d2:	b8 80 9e ff ff       	mov    $0xffff9e80,%eax
   1b0d7:	eb e5                	jmp    1b0be <mbedtls_cipher_cmac_starts+0x6e>
   1b0d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001b0e0 <mbedtls_cipher_cmac_update>:
   1b0e0:	55                   	push   %rbp
   1b0e1:	48 89 e5             	mov    %rsp,%rbp
   1b0e4:	41 57                	push   %r15
   1b0e6:	41 56                	push   %r14
   1b0e8:	41 55                	push   %r13
   1b0ea:	41 54                	push   %r12
   1b0ec:	53                   	push   %rbx
   1b0ed:	48 83 ec 38          	sub    $0x38,%rsp
   1b0f1:	48 85 ff             	test   %rdi,%rdi
   1b0f4:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1b0f8:	0f 84 67 01 00 00    	je     1b265 <mbedtls_cipher_cmac_update+0x185>
   1b0fe:	48 8b 07             	mov    (%rdi),%rax
   1b101:	48 85 c0             	test   %rax,%rax
   1b104:	0f 84 5b 01 00 00    	je     1b265 <mbedtls_cipher_cmac_update+0x185>
   1b10a:	48 85 f6             	test   %rsi,%rsi
   1b10d:	49 89 f7             	mov    %rsi,%r15
   1b110:	0f 84 4f 01 00 00    	je     1b265 <mbedtls_cipher_cmac_update+0x185>
   1b116:	48 8b 5f 48          	mov    0x48(%rdi),%rbx
   1b11a:	48 85 db             	test   %rbx,%rbx
   1b11d:	0f 84 42 01 00 00    	je     1b265 <mbedtls_cipher_cmac_update+0x185>
   1b123:	44 8b 68 20          	mov    0x20(%rax),%r13d
   1b127:	48 8b 43 20          	mov    0x20(%rbx),%rax
   1b12b:	49 89 d4             	mov    %rdx,%r12
   1b12e:	48 85 c0             	test   %rax,%rax
   1b131:	0f 85 aa 00 00 00    	jne    1b1e1 <mbedtls_cipher_cmac_update+0x101>
   1b137:	4b 8d 44 25 ff       	lea    -0x1(%r13,%r12,1),%rax
   1b13c:	31 d2                	xor    %edx,%edx
   1b13e:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
   1b142:	41 be 01 00 00 00    	mov    $0x1,%r14d
   1b148:	49 f7 f5             	div    %r13
   1b14b:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   1b14f:	48 83 f8 01          	cmp    $0x1,%rax
   1b153:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1b157:	76 56                	jbe    1b1af <mbedtls_cipher_cmac_update+0xcf>
   1b159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b160:	31 c0                	xor    %eax,%eax
   1b162:	4d 85 ed             	test   %r13,%r13
   1b165:	74 1a                	je     1b181 <mbedtls_cipher_cmac_update+0xa1>
   1b167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b16e:	00 00 
   1b170:	41 0f b6 14 07       	movzbl (%r15,%rax,1),%edx
   1b175:	30 14 03             	xor    %dl,(%rbx,%rax,1)
   1b178:	48 83 c0 01          	add    $0x1,%rax
   1b17c:	49 39 c5             	cmp    %rax,%r13
   1b17f:	75 ef                	jne    1b170 <mbedtls_cipher_cmac_update+0x90>
   1b181:	4c 8b 45 b0          	mov    -0x50(%rbp),%r8
   1b185:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   1b189:	48 89 d9             	mov    %rbx,%rcx
   1b18c:	4c 89 ea             	mov    %r13,%rdx
   1b18f:	48 89 de             	mov    %rbx,%rsi
   1b192:	e8 b9 e8 ff ff       	callq  19a50 <mbedtls_cipher_update>
   1b197:	85 c0                	test   %eax,%eax
   1b199:	0f 85 be 00 00 00    	jne    1b25d <mbedtls_cipher_cmac_update+0x17d>
   1b19f:	4d 29 ec             	sub    %r13,%r12
   1b1a2:	4d 01 ef             	add    %r13,%r15
   1b1a5:	49 83 c6 01          	add    $0x1,%r14
   1b1a9:	4c 39 75 a8          	cmp    %r14,-0x58(%rbp)
   1b1ad:	75 b1                	jne    1b160 <mbedtls_cipher_cmac_update+0x80>
   1b1af:	45 31 f6             	xor    %r14d,%r14d
   1b1b2:	4d 85 e4             	test   %r12,%r12
   1b1b5:	74 18                	je     1b1cf <mbedtls_cipher_cmac_update+0xef>
   1b1b7:	48 8b 43 20          	mov    0x20(%rbx),%rax
   1b1bb:	4c 89 e2             	mov    %r12,%rdx
   1b1be:	4c 89 fe             	mov    %r15,%rsi
   1b1c1:	48 8d 7c 03 10       	lea    0x10(%rbx,%rax,1),%rdi
   1b1c6:	e8 25 aa ff ff       	callq  15bf0 <memcpy>
   1b1cb:	4c 01 63 20          	add    %r12,0x20(%rbx)
   1b1cf:	48 83 c4 38          	add    $0x38,%rsp
   1b1d3:	44 89 f0             	mov    %r14d,%eax
   1b1d6:	5b                   	pop    %rbx
   1b1d7:	41 5c                	pop    %r12
   1b1d9:	41 5d                	pop    %r13
   1b1db:	41 5e                	pop    %r14
   1b1dd:	41 5f                	pop    %r15
   1b1df:	5d                   	pop    %rbp
   1b1e0:	c3                   	retq   
   1b1e1:	4c 89 ea             	mov    %r13,%rdx
   1b1e4:	48 29 c2             	sub    %rax,%rdx
   1b1e7:	49 39 d4             	cmp    %rdx,%r12
   1b1ea:	0f 86 47 ff ff ff    	jbe    1b137 <mbedtls_cipher_cmac_update+0x57>
   1b1f0:	48 8d 7c 03 10       	lea    0x10(%rbx,%rax,1),%rdi
   1b1f5:	4c 89 fe             	mov    %r15,%rsi
   1b1f8:	e8 f3 a9 ff ff       	callq  15bf0 <memcpy>
   1b1fd:	31 c0                	xor    %eax,%eax
   1b1ff:	4d 85 ed             	test   %r13,%r13
   1b202:	48 8d 4b 10          	lea    0x10(%rbx),%rcx
   1b206:	74 18                	je     1b220 <mbedtls_cipher_cmac_update+0x140>
   1b208:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b20f:	00 
   1b210:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
   1b214:	30 14 03             	xor    %dl,(%rbx,%rax,1)
   1b217:	48 83 c0 01          	add    $0x1,%rax
   1b21b:	49 39 c5             	cmp    %rax,%r13
   1b21e:	75 f0                	jne    1b210 <mbedtls_cipher_cmac_update+0x130>
   1b220:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   1b224:	4c 8d 45 c8          	lea    -0x38(%rbp),%r8
   1b228:	48 89 d9             	mov    %rbx,%rcx
   1b22b:	4c 89 ea             	mov    %r13,%rdx
   1b22e:	48 89 de             	mov    %rbx,%rsi
   1b231:	e8 1a e8 ff ff       	callq  19a50 <mbedtls_cipher_update>
   1b236:	85 c0                	test   %eax,%eax
   1b238:	41 89 c6             	mov    %eax,%r14d
   1b23b:	75 92                	jne    1b1cf <mbedtls_cipher_cmac_update+0xef>
   1b23d:	48 8b 43 20          	mov    0x20(%rbx),%rax
   1b241:	4c 89 ea             	mov    %r13,%rdx
   1b244:	4d 29 ec             	sub    %r13,%r12
   1b247:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
   1b24e:	00 
   1b24f:	48 29 c2             	sub    %rax,%rdx
   1b252:	49 01 c4             	add    %rax,%r12
   1b255:	49 01 d7             	add    %rdx,%r15
   1b258:	e9 da fe ff ff       	jmpq   1b137 <mbedtls_cipher_cmac_update+0x57>
   1b25d:	41 89 c6             	mov    %eax,%r14d
   1b260:	e9 6a ff ff ff       	jmpq   1b1cf <mbedtls_cipher_cmac_update+0xef>
   1b265:	41 be 00 9f ff ff    	mov    $0xffff9f00,%r14d
   1b26b:	e9 5f ff ff ff       	jmpq   1b1cf <mbedtls_cipher_cmac_update+0xef>

000000000001b270 <mbedtls_cipher_cmac_finish>:
   1b270:	48 85 ff             	test   %rdi,%rdi
   1b273:	0f 84 d2 02 00 00    	je     1b54b <mbedtls_cipher_cmac_finish+0x2db>
   1b279:	48 8b 0f             	mov    (%rdi),%rcx
   1b27c:	48 85 c9             	test   %rcx,%rcx
   1b27f:	0f 84 c6 02 00 00    	je     1b54b <mbedtls_cipher_cmac_finish+0x2db>
   1b285:	55                   	push   %rbp
   1b286:	48 89 e5             	mov    %rsp,%rbp
   1b289:	41 57                	push   %r15
   1b28b:	41 56                	push   %r14
   1b28d:	41 55                	push   %r13
   1b28f:	41 54                	push   %r12
   1b291:	53                   	push   %rbx
   1b292:	48 83 ec 78          	sub    $0x78,%rsp
   1b296:	48 85 f6             	test   %rsi,%rsi
   1b299:	4c 8b 7f 48          	mov    0x48(%rdi),%r15
   1b29d:	0f 84 ae 02 00 00    	je     1b551 <mbedtls_cipher_cmac_finish+0x2e1>
   1b2a3:	4d 85 ff             	test   %r15,%r15
   1b2a6:	0f 84 a5 02 00 00    	je     1b551 <mbedtls_cipher_cmac_finish+0x2e1>
   1b2ac:	48 8d 5d a0          	lea    -0x60(%rbp),%rbx
   1b2b0:	44 8b 51 20          	mov    0x20(%rcx),%r10d
   1b2b4:	4d 89 fd             	mov    %r15,%r13
   1b2b7:	48 8d 53 10          	lea    0x10(%rbx),%rdx
   1b2bb:	48 89 d8             	mov    %rbx,%rax
   1b2be:	66 90                	xchg   %ax,%ax
   1b2c0:	c6 00 00             	movb   $0x0,(%rax)
   1b2c3:	48 83 c0 01          	add    $0x1,%rax
   1b2c7:	48 39 d0             	cmp    %rdx,%rax
   1b2ca:	75 f4                	jne    1b2c0 <mbedtls_cipher_cmac_finish+0x50>
   1b2cc:	4c 8d 65 b0          	lea    -0x50(%rbp),%r12
   1b2d0:	49 8d 54 24 10       	lea    0x10(%r12),%rdx
   1b2d5:	4c 89 e0             	mov    %r12,%rax
   1b2d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b2df:	00 
   1b2e0:	c6 00 00             	movb   $0x0,(%rax)
   1b2e3:	48 83 c0 01          	add    $0x1,%rax
   1b2e7:	48 39 d0             	cmp    %rdx,%rax
   1b2ea:	75 f4                	jne    1b2e0 <mbedtls_cipher_cmac_finish+0x70>
   1b2ec:	4c 8d 4d c0          	lea    -0x40(%rbp),%r9
   1b2f0:	4c 89 c8             	mov    %r9,%rax
   1b2f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b2f8:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1b2fc:	c6 00 00             	movb   $0x0,(%rax)
   1b2ff:	48 83 c0 01          	add    $0x1,%rax
   1b303:	48 39 d0             	cmp    %rdx,%rax
   1b306:	75 f0                	jne    1b2f8 <mbedtls_cipher_cmac_finish+0x88>
   1b308:	44 8b 71 20          	mov    0x20(%rcx),%r14d
   1b30c:	48 8d 45 98          	lea    -0x68(%rbp),%rax
   1b310:	48 89 b5 68 ff ff ff 	mov    %rsi,-0x98(%rbp)
   1b317:	4c 89 c9             	mov    %r9,%rcx
   1b31a:	4c 89 ce             	mov    %r9,%rsi
   1b31d:	4c 89 95 70 ff ff ff 	mov    %r10,-0x90(%rbp)
   1b324:	49 89 c0             	mov    %rax,%r8
   1b327:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
   1b32e:	48 89 7d 80          	mov    %rdi,-0x80(%rbp)
   1b332:	48 89 45 88          	mov    %rax,-0x78(%rbp)
   1b336:	4c 89 f2             	mov    %r14,%rdx
   1b339:	e8 12 e7 ff ff       	callq  19a50 <mbedtls_cipher_update>
   1b33e:	85 c0                	test   %eax,%eax
   1b340:	4c 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%r9
   1b347:	4c 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%r10
   1b34e:	0f 84 a4 01 00 00    	je     1b4f8 <mbedtls_cipher_cmac_finish+0x288>
   1b354:	4c 89 c8             	mov    %r9,%rax
   1b357:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b35e:	00 00 
   1b360:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
   1b364:	c6 00 00             	movb   $0x0,(%rax)
   1b367:	48 83 c0 01          	add    $0x1,%rax
   1b36b:	48 39 f0             	cmp    %rsi,%rax
   1b36e:	75 f0                	jne    1b360 <mbedtls_cipher_cmac_finish+0xf0>
   1b370:	49 8b 57 20          	mov    0x20(%r15),%rdx
   1b374:	4d 8d 5f 10          	lea    0x10(%r15),%r11
   1b378:	4d 89 de             	mov    %r11,%r14
   1b37b:	49 39 d2             	cmp    %rdx,%r10
   1b37e:	0f 86 1c 01 00 00    	jbe    1b4a0 <mbedtls_cipher_cmac_finish+0x230>
   1b384:	4d 85 d2             	test   %r10,%r10
   1b387:	74 69                	je     1b3f2 <mbedtls_cipher_cmac_finish+0x182>
   1b389:	31 c0                	xor    %eax,%eax
   1b38b:	eb 15                	jmp    1b3a2 <mbedtls_cipher_cmac_finish+0x132>
   1b38d:	0f 1f 00             	nopl   (%rax)
   1b390:	41 0f b6 0c 03       	movzbl (%r11,%rax,1),%ecx
   1b395:	41 88 0c 01          	mov    %cl,(%r9,%rax,1)
   1b399:	48 83 c0 01          	add    $0x1,%rax
   1b39d:	49 39 c2             	cmp    %rax,%r10
   1b3a0:	74 19                	je     1b3bb <mbedtls_cipher_cmac_finish+0x14b>
   1b3a2:	48 39 c2             	cmp    %rax,%rdx
   1b3a5:	77 e9                	ja     1b390 <mbedtls_cipher_cmac_finish+0x120>
   1b3a7:	0f 84 ae 01 00 00    	je     1b55b <mbedtls_cipher_cmac_finish+0x2eb>
   1b3ad:	41 c6 04 01 00       	movb   $0x0,(%r9,%rax,1)
   1b3b2:	48 83 c0 01          	add    $0x1,%rax
   1b3b6:	49 39 c2             	cmp    %rax,%r10
   1b3b9:	75 e7                	jne    1b3a2 <mbedtls_cipher_cmac_finish+0x132>
   1b3bb:	31 c0                	xor    %eax,%eax
   1b3bd:	0f 1f 00             	nopl   (%rax)
   1b3c0:	41 0f b6 14 01       	movzbl (%r9,%rax,1),%edx
   1b3c5:	41 32 14 04          	xor    (%r12,%rax,1),%dl
   1b3c9:	41 88 14 01          	mov    %dl,(%r9,%rax,1)
   1b3cd:	48 83 c0 01          	add    $0x1,%rax
   1b3d1:	49 39 c2             	cmp    %rax,%r10
   1b3d4:	75 ea                	jne    1b3c0 <mbedtls_cipher_cmac_finish+0x150>
   1b3d6:	31 c0                	xor    %eax,%eax
   1b3d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1b3df:	00 
   1b3e0:	41 0f b6 14 01       	movzbl (%r9,%rax,1),%edx
   1b3e5:	41 30 14 07          	xor    %dl,(%r15,%rax,1)
   1b3e9:	48 83 c0 01          	add    $0x1,%rax
   1b3ed:	49 39 c2             	cmp    %rax,%r10
   1b3f0:	77 ee                	ja     1b3e0 <mbedtls_cipher_cmac_finish+0x170>
   1b3f2:	4c 8b 45 88          	mov    -0x78(%rbp),%r8
   1b3f6:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
   1b3fa:	4c 89 f9             	mov    %r15,%rcx
   1b3fd:	4c 89 d2             	mov    %r10,%rdx
   1b400:	4c 89 fe             	mov    %r15,%rsi
   1b403:	4c 89 9d 78 ff ff ff 	mov    %r11,-0x88(%rbp)
   1b40a:	4c 89 55 88          	mov    %r10,-0x78(%rbp)
   1b40e:	e8 3d e6 ff ff       	callq  19a50 <mbedtls_cipher_update>
   1b413:	85 c0                	test   %eax,%eax
   1b415:	89 c1                	mov    %eax,%ecx
   1b417:	4c 8b 55 88          	mov    -0x78(%rbp),%r10
   1b41b:	4c 8b 9d 78 ff ff ff 	mov    -0x88(%rbp),%r11
   1b422:	0f 84 a8 00 00 00    	je     1b4d0 <mbedtls_cipher_cmac_finish+0x260>
   1b428:	48 8d 43 10          	lea    0x10(%rbx),%rax
   1b42c:	0f 1f 40 00          	nopl   0x0(%rax)
   1b430:	c6 03 00             	movb   $0x0,(%rbx)
   1b433:	48 83 c3 01          	add    $0x1,%rbx
   1b437:	48 39 c3             	cmp    %rax,%rbx
   1b43a:	75 f4                	jne    1b430 <mbedtls_cipher_cmac_finish+0x1c0>
   1b43c:	49 8d 44 24 10       	lea    0x10(%r12),%rax
   1b441:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b448:	41 c6 04 24 00       	movb   $0x0,(%r12)
   1b44d:	49 83 c4 01          	add    $0x1,%r12
   1b451:	49 39 c4             	cmp    %rax,%r12
   1b454:	75 f2                	jne    1b448 <mbedtls_cipher_cmac_finish+0x1d8>
   1b456:	49 c7 47 20 00 00 00 	movq   $0x0,0x20(%r15)
   1b45d:	00 
   1b45e:	49 83 c7 20          	add    $0x20,%r15
   1b462:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b468:	41 c6 06 00          	movb   $0x0,(%r14)
   1b46c:	49 83 c6 01          	add    $0x1,%r14
   1b470:	4d 39 fe             	cmp    %r15,%r14
   1b473:	75 f3                	jne    1b468 <mbedtls_cipher_cmac_finish+0x1f8>
   1b475:	0f 1f 00             	nopl   (%rax)
   1b478:	41 c6 45 00 00       	movb   $0x0,0x0(%r13)
   1b47d:	49 83 c5 01          	add    $0x1,%r13
   1b481:	4d 39 dd             	cmp    %r11,%r13
   1b484:	75 f2                	jne    1b478 <mbedtls_cipher_cmac_finish+0x208>
   1b486:	89 c8                	mov    %ecx,%eax
   1b488:	48 83 c4 78          	add    $0x78,%rsp
   1b48c:	5b                   	pop    %rbx
   1b48d:	41 5c                	pop    %r12
   1b48f:	41 5d                	pop    %r13
   1b491:	41 5e                	pop    %r14
   1b493:	41 5f                	pop    %r15
   1b495:	5d                   	pop    %rbp
   1b496:	c3                   	retq   
   1b497:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b49e:	00 00 
   1b4a0:	31 c0                	xor    %eax,%eax
   1b4a2:	4d 85 d2             	test   %r10,%r10
   1b4a5:	0f 84 47 ff ff ff    	je     1b3f2 <mbedtls_cipher_cmac_finish+0x182>
   1b4ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b4b0:	41 0f b6 14 03       	movzbl (%r11,%rax,1),%edx
   1b4b5:	32 14 03             	xor    (%rbx,%rax,1),%dl
   1b4b8:	41 88 14 01          	mov    %dl,(%r9,%rax,1)
   1b4bc:	48 83 c0 01          	add    $0x1,%rax
   1b4c0:	49 39 c2             	cmp    %rax,%r10
   1b4c3:	75 eb                	jne    1b4b0 <mbedtls_cipher_cmac_finish+0x240>
   1b4c5:	e9 0c ff ff ff       	jmpq   1b3d6 <mbedtls_cipher_cmac_finish+0x166>
   1b4ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b4d0:	48 8b bd 68 ff ff ff 	mov    -0x98(%rbp),%rdi
   1b4d7:	4c 89 d2             	mov    %r10,%rdx
   1b4da:	4c 89 fe             	mov    %r15,%rsi
   1b4dd:	4c 89 5d 80          	mov    %r11,-0x80(%rbp)
   1b4e1:	89 45 88             	mov    %eax,-0x78(%rbp)
   1b4e4:	e8 07 a7 ff ff       	callq  15bf0 <memcpy>
   1b4e9:	4c 8b 5d 80          	mov    -0x80(%rbp),%r11
   1b4ed:	8b 4d 88             	mov    -0x78(%rbp),%ecx
   1b4f0:	e9 33 ff ff ff       	jmpq   1b428 <mbedtls_cipher_cmac_finish+0x1b8>
   1b4f5:	0f 1f 00             	nopl   (%rax)
   1b4f8:	4c 89 ce             	mov    %r9,%rsi
   1b4fb:	4c 89 f2             	mov    %r14,%rdx
   1b4fe:	48 89 df             	mov    %rbx,%rdi
   1b501:	e8 ca fa ff ff       	callq  1afd0 <cmac_multiply_by_u>
   1b506:	85 c0                	test   %eax,%eax
   1b508:	4c 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%r9
   1b50f:	4c 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%r10
   1b516:	0f 85 38 fe ff ff    	jne    1b354 <mbedtls_cipher_cmac_finish+0xe4>
   1b51c:	4c 89 f2             	mov    %r14,%rdx
   1b51f:	48 89 de             	mov    %rbx,%rsi
   1b522:	4c 89 e7             	mov    %r12,%rdi
   1b525:	4c 89 8d 70 ff ff ff 	mov    %r9,-0x90(%rbp)
   1b52c:	4c 89 95 78 ff ff ff 	mov    %r10,-0x88(%rbp)
   1b533:	e8 98 fa ff ff       	callq  1afd0 <cmac_multiply_by_u>
   1b538:	4c 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%r9
   1b53f:	4c 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%r10
   1b546:	e9 09 fe ff ff       	jmpq   1b354 <mbedtls_cipher_cmac_finish+0xe4>
   1b54b:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
   1b550:	c3                   	retq   
   1b551:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
   1b556:	e9 2d ff ff ff       	jmpq   1b488 <mbedtls_cipher_cmac_finish+0x218>
   1b55b:	41 c6 04 11 80       	movb   $0x80,(%r9,%rdx,1)
   1b560:	e9 34 fe ff ff       	jmpq   1b399 <mbedtls_cipher_cmac_finish+0x129>
   1b565:	90                   	nop
   1b566:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1b56d:	00 00 00 

000000000001b570 <mbedtls_cipher_cmac_reset>:
   1b570:	55                   	push   %rbp
   1b571:	48 85 ff             	test   %rdi,%rdi
   1b574:	48 89 e5             	mov    %rsp,%rbp
   1b577:	74 47                	je     1b5c0 <mbedtls_cipher_cmac_reset+0x50>
   1b579:	48 83 3f 00          	cmpq   $0x0,(%rdi)
   1b57d:	74 41                	je     1b5c0 <mbedtls_cipher_cmac_reset+0x50>
   1b57f:	48 8b 47 48          	mov    0x48(%rdi),%rax
   1b583:	48 85 c0             	test   %rax,%rax
   1b586:	74 38                	je     1b5c0 <mbedtls_cipher_cmac_reset+0x50>
   1b588:	48 8d 48 10          	lea    0x10(%rax),%rcx
   1b58c:	48 8d 70 20          	lea    0x20(%rax),%rsi
   1b590:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   1b597:	00 
   1b598:	48 89 ca             	mov    %rcx,%rdx
   1b59b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b5a0:	c6 02 00             	movb   $0x0,(%rdx)
   1b5a3:	48 83 c2 01          	add    $0x1,%rdx
   1b5a7:	48 39 f2             	cmp    %rsi,%rdx
   1b5aa:	75 f4                	jne    1b5a0 <mbedtls_cipher_cmac_reset+0x30>
   1b5ac:	0f 1f 40 00          	nopl   0x0(%rax)
   1b5b0:	c6 00 00             	movb   $0x0,(%rax)
   1b5b3:	48 83 c0 01          	add    $0x1,%rax
   1b5b7:	48 39 c1             	cmp    %rax,%rcx
   1b5ba:	75 f4                	jne    1b5b0 <mbedtls_cipher_cmac_reset+0x40>
   1b5bc:	31 c0                	xor    %eax,%eax
   1b5be:	5d                   	pop    %rbp
   1b5bf:	c3                   	retq   
   1b5c0:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
   1b5c5:	5d                   	pop    %rbp
   1b5c6:	c3                   	retq   
   1b5c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b5ce:	00 00 

000000000001b5d0 <mbedtls_cipher_cmac>:
   1b5d0:	48 85 ff             	test   %rdi,%rdi
   1b5d3:	0f 84 c7 00 00 00    	je     1b6a0 <mbedtls_cipher_cmac+0xd0>
   1b5d9:	48 85 f6             	test   %rsi,%rsi
   1b5dc:	0f 84 be 00 00 00    	je     1b6a0 <mbedtls_cipher_cmac+0xd0>
   1b5e2:	48 85 c9             	test   %rcx,%rcx
   1b5e5:	0f 84 b5 00 00 00    	je     1b6a0 <mbedtls_cipher_cmac+0xd0>
   1b5eb:	4d 85 c9             	test   %r9,%r9
   1b5ee:	0f 84 ac 00 00 00    	je     1b6a0 <mbedtls_cipher_cmac+0xd0>
   1b5f4:	55                   	push   %rbp
   1b5f5:	48 89 e5             	mov    %rsp,%rbp
   1b5f8:	41 57                	push   %r15
   1b5fa:	41 56                	push   %r14
   1b5fc:	41 55                	push   %r13
   1b5fe:	41 54                	push   %r12
   1b600:	4c 8d 65 80          	lea    -0x80(%rbp),%r12
   1b604:	53                   	push   %rbx
   1b605:	49 89 fd             	mov    %rdi,%r13
   1b608:	4d 89 c7             	mov    %r8,%r15
   1b60b:	4c 89 e7             	mov    %r12,%rdi
   1b60e:	49 89 d6             	mov    %rdx,%r14
   1b611:	48 89 f3             	mov    %rsi,%rbx
   1b614:	48 83 ec 68          	sub    $0x68,%rsp
   1b618:	4c 89 8d 70 ff ff ff 	mov    %r9,-0x90(%rbp)
   1b61f:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
   1b626:	e8 25 e2 ff ff       	callq  19850 <mbedtls_cipher_init>
   1b62b:	4c 89 ee             	mov    %r13,%rsi
   1b62e:	4c 89 e7             	mov    %r12,%rdi
   1b631:	e8 aa e2 ff ff       	callq  198e0 <mbedtls_cipher_setup>
   1b636:	85 c0                	test   %eax,%eax
   1b638:	74 26                	je     1b660 <mbedtls_cipher_cmac+0x90>
   1b63a:	4c 89 e7             	mov    %r12,%rdi
   1b63d:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
   1b643:	e8 28 e2 ff ff       	callq  19870 <mbedtls_cipher_free>
   1b648:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
   1b64e:	48 83 c4 68          	add    $0x68,%rsp
   1b652:	5b                   	pop    %rbx
   1b653:	41 5c                	pop    %r12
   1b655:	41 5d                	pop    %r13
   1b657:	41 5e                	pop    %r14
   1b659:	41 5f                	pop    %r15
   1b65b:	5d                   	pop    %rbp
   1b65c:	c3                   	retq   
   1b65d:	0f 1f 00             	nopl   (%rax)
   1b660:	4c 89 f2             	mov    %r14,%rdx
   1b663:	48 89 de             	mov    %rbx,%rsi
   1b666:	4c 89 e7             	mov    %r12,%rdi
   1b669:	e8 e2 f9 ff ff       	callq  1b050 <mbedtls_cipher_cmac_starts>
   1b66e:	85 c0                	test   %eax,%eax
   1b670:	75 c8                	jne    1b63a <mbedtls_cipher_cmac+0x6a>
   1b672:	48 8b b5 78 ff ff ff 	mov    -0x88(%rbp),%rsi
   1b679:	4c 89 fa             	mov    %r15,%rdx
   1b67c:	4c 89 e7             	mov    %r12,%rdi
   1b67f:	e8 5c fa ff ff       	callq  1b0e0 <mbedtls_cipher_cmac_update>
   1b684:	85 c0                	test   %eax,%eax
   1b686:	75 b2                	jne    1b63a <mbedtls_cipher_cmac+0x6a>
   1b688:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
   1b68f:	4c 89 e7             	mov    %r12,%rdi
   1b692:	e8 d9 fb ff ff       	callq  1b270 <mbedtls_cipher_cmac_finish>
   1b697:	eb a1                	jmp    1b63a <mbedtls_cipher_cmac+0x6a>
   1b699:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b6a0:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
   1b6a5:	c3                   	retq   
   1b6a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1b6ad:	00 00 00 

000000000001b6b0 <mbedtls_aes_cmac_prf_128>:
   1b6b0:	48 85 d2             	test   %rdx,%rdx
   1b6b3:	41 0f 94 c1          	sete   %r9b
   1b6b7:	4d 85 c0             	test   %r8,%r8
   1b6ba:	0f 94 c0             	sete   %al
   1b6bd:	41 08 c1             	or     %al,%r9b
   1b6c0:	0f 85 0b 01 00 00    	jne    1b7d1 <mbedtls_aes_cmac_prf_128+0x121>
   1b6c6:	48 85 ff             	test   %rdi,%rdi
   1b6c9:	0f 84 02 01 00 00    	je     1b7d1 <mbedtls_aes_cmac_prf_128+0x121>
   1b6cf:	55                   	push   %rbp
   1b6d0:	48 89 e5             	mov    %rsp,%rbp
   1b6d3:	41 57                	push   %r15
   1b6d5:	41 56                	push   %r14
   1b6d7:	41 55                	push   %r13
   1b6d9:	41 54                	push   %r12
   1b6db:	49 89 fc             	mov    %rdi,%r12
   1b6de:	53                   	push   %rbx
   1b6df:	bf 02 00 00 00       	mov    $0x2,%edi
   1b6e4:	49 89 ce             	mov    %rcx,%r14
   1b6e7:	49 89 f5             	mov    %rsi,%r13
   1b6ea:	48 83 ec 48          	sub    $0x48,%rsp
   1b6ee:	4c 89 45 a0          	mov    %r8,-0x60(%rbp)
   1b6f2:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   1b6f6:	e8 c5 e0 ff ff       	callq  197c0 <mbedtls_cipher_info_from_type>
   1b6fb:	48 85 c0             	test   %rax,%rax
   1b6fe:	49 89 c7             	mov    %rax,%r15
   1b701:	0f 84 ab 00 00 00    	je     1b7b2 <mbedtls_aes_cmac_prf_128+0x102>
   1b707:	49 83 fd 10          	cmp    $0x10,%r13
   1b70b:	74 63                	je     1b770 <mbedtls_aes_cmac_prf_128+0xc0>
   1b70d:	4c 8d 55 b0          	lea    -0x50(%rbp),%r10
   1b711:	31 f6                	xor    %esi,%esi
   1b713:	ba 10 00 00 00       	mov    $0x10,%edx
   1b718:	48 8d 5d c0          	lea    -0x40(%rbp),%rbx
   1b71c:	4c 89 d7             	mov    %r10,%rdi
   1b71f:	4c 89 55 98          	mov    %r10,-0x68(%rbp)
   1b723:	e8 38 ad ff ff       	callq  16460 <memset>
   1b728:	4c 8b 55 98          	mov    -0x68(%rbp),%r10
   1b72c:	49 89 d9             	mov    %rbx,%r9
   1b72f:	4d 89 e8             	mov    %r13,%r8
   1b732:	4c 89 e1             	mov    %r12,%rcx
   1b735:	ba 80 00 00 00       	mov    $0x80,%edx
   1b73a:	4c 89 ff             	mov    %r15,%rdi
   1b73d:	4c 89 d6             	mov    %r10,%rsi
   1b740:	e8 8b fe ff ff       	callq  1b5d0 <mbedtls_cipher_cmac>
   1b745:	85 c0                	test   %eax,%eax
   1b747:	74 3b                	je     1b784 <mbedtls_aes_cmac_prf_128+0xd4>
   1b749:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b750:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
   1b754:	c6 03 00             	movb   $0x0,(%rbx)
   1b757:	48 83 c3 01          	add    $0x1,%rbx
   1b75b:	48 39 cb             	cmp    %rcx,%rbx
   1b75e:	75 f0                	jne    1b750 <mbedtls_aes_cmac_prf_128+0xa0>
   1b760:	48 83 c4 48          	add    $0x48,%rsp
   1b764:	5b                   	pop    %rbx
   1b765:	41 5c                	pop    %r12
   1b767:	41 5d                	pop    %r13
   1b769:	41 5e                	pop    %r14
   1b76b:	41 5f                	pop    %r15
   1b76d:	5d                   	pop    %rbp
   1b76e:	c3                   	retq   
   1b76f:	90                   	nop
   1b770:	48 8d 5d c0          	lea    -0x40(%rbp),%rbx
   1b774:	ba 10 00 00 00       	mov    $0x10,%edx
   1b779:	4c 89 e6             	mov    %r12,%rsi
   1b77c:	48 89 df             	mov    %rbx,%rdi
   1b77f:	e8 6c a4 ff ff       	callq  15bf0 <memcpy>
   1b784:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
   1b788:	4c 8b 4d a0          	mov    -0x60(%rbp),%r9
   1b78c:	48 89 de             	mov    %rbx,%rsi
   1b78f:	4d 89 f0             	mov    %r14,%r8
   1b792:	ba 80 00 00 00       	mov    $0x80,%edx
   1b797:	4c 89 ff             	mov    %r15,%rdi
   1b79a:	48 83 c3 01          	add    $0x1,%rbx
   1b79e:	e8 2d fe ff ff       	callq  1b5d0 <mbedtls_cipher_cmac>
   1b7a3:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
   1b7a7:	c6 43 ff 00          	movb   $0x0,-0x1(%rbx)
   1b7ab:	48 39 cb             	cmp    %rcx,%rbx
   1b7ae:	75 a0                	jne    1b750 <mbedtls_aes_cmac_prf_128+0xa0>
   1b7b0:	eb ae                	jmp    1b760 <mbedtls_aes_cmac_prf_128+0xb0>
   1b7b2:	48 8d 5d c0          	lea    -0x40(%rbp),%rbx
   1b7b6:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
   1b7ba:	c6 03 00             	movb   $0x0,(%rbx)
   1b7bd:	b8 80 9f ff ff       	mov    $0xffff9f80,%eax
   1b7c2:	48 83 c3 01          	add    $0x1,%rbx
   1b7c6:	48 39 cb             	cmp    %rcx,%rbx
   1b7c9:	0f 85 81 ff ff ff    	jne    1b750 <mbedtls_aes_cmac_prf_128+0xa0>
   1b7cf:	eb 8f                	jmp    1b760 <mbedtls_aes_cmac_prf_128+0xb0>
   1b7d1:	b8 00 9f ff ff       	mov    $0xffff9f00,%eax
   1b7d6:	c3                   	retq   
   1b7d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1b7de:	00 00 

000000000001b7e0 <mbedtls_sha256_init>:
   1b7e0:	55                   	push   %rbp
   1b7e1:	ba 6c 00 00 00       	mov    $0x6c,%edx
   1b7e6:	31 f6                	xor    %esi,%esi
   1b7e8:	48 89 e5             	mov    %rsp,%rbp
   1b7eb:	5d                   	pop    %rbp
   1b7ec:	e9 6f ac ff ff       	jmpq   16460 <memset>
   1b7f1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b7f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1b7fd:	00 00 00 

000000000001b800 <mbedtls_sha256_free>:
   1b800:	55                   	push   %rbp
   1b801:	48 85 ff             	test   %rdi,%rdi
   1b804:	48 89 e5             	mov    %rsp,%rbp
   1b807:	74 13                	je     1b81c <mbedtls_sha256_free+0x1c>
   1b809:	48 8d 47 6c          	lea    0x6c(%rdi),%rax
   1b80d:	0f 1f 00             	nopl   (%rax)
   1b810:	c6 07 00             	movb   $0x0,(%rdi)
   1b813:	48 83 c7 01          	add    $0x1,%rdi
   1b817:	48 39 c7             	cmp    %rax,%rdi
   1b81a:	75 f4                	jne    1b810 <mbedtls_sha256_free+0x10>
   1b81c:	5d                   	pop    %rbp
   1b81d:	c3                   	retq   
   1b81e:	66 90                	xchg   %ax,%ax

000000000001b820 <mbedtls_sha256_clone>:
   1b820:	48 8b 06             	mov    (%rsi),%rax
   1b823:	55                   	push   %rbp
   1b824:	48 89 e5             	mov    %rsp,%rbp
   1b827:	48 89 07             	mov    %rax,(%rdi)
   1b82a:	48 8b 46 08          	mov    0x8(%rsi),%rax
   1b82e:	5d                   	pop    %rbp
   1b82f:	48 89 47 08          	mov    %rax,0x8(%rdi)
   1b833:	48 8b 46 10          	mov    0x10(%rsi),%rax
   1b837:	48 89 47 10          	mov    %rax,0x10(%rdi)
   1b83b:	48 8b 46 18          	mov    0x18(%rsi),%rax
   1b83f:	48 89 47 18          	mov    %rax,0x18(%rdi)
   1b843:	48 8b 46 20          	mov    0x20(%rsi),%rax
   1b847:	48 89 47 20          	mov    %rax,0x20(%rdi)
   1b84b:	48 8b 46 28          	mov    0x28(%rsi),%rax
   1b84f:	48 89 47 28          	mov    %rax,0x28(%rdi)
   1b853:	48 8b 46 30          	mov    0x30(%rsi),%rax
   1b857:	48 89 47 30          	mov    %rax,0x30(%rdi)
   1b85b:	48 8b 46 38          	mov    0x38(%rsi),%rax
   1b85f:	48 89 47 38          	mov    %rax,0x38(%rdi)
   1b863:	48 8b 46 40          	mov    0x40(%rsi),%rax
   1b867:	48 89 47 40          	mov    %rax,0x40(%rdi)
   1b86b:	48 8b 46 48          	mov    0x48(%rsi),%rax
   1b86f:	48 89 47 48          	mov    %rax,0x48(%rdi)
   1b873:	48 8b 46 50          	mov    0x50(%rsi),%rax
   1b877:	48 89 47 50          	mov    %rax,0x50(%rdi)
   1b87b:	48 8b 46 58          	mov    0x58(%rsi),%rax
   1b87f:	48 89 47 58          	mov    %rax,0x58(%rdi)
   1b883:	48 8b 46 60          	mov    0x60(%rsi),%rax
   1b887:	48 89 47 60          	mov    %rax,0x60(%rdi)
   1b88b:	8b 46 68             	mov    0x68(%rsi),%eax
   1b88e:	89 47 68             	mov    %eax,0x68(%rdi)
   1b891:	c3                   	retq   
   1b892:	0f 1f 40 00          	nopl   0x0(%rax)
   1b896:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1b89d:	00 00 00 

000000000001b8a0 <mbedtls_sha256_starts>:
   1b8a0:	55                   	push   %rbp
   1b8a1:	85 f6                	test   %esi,%esi
   1b8a3:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
   1b8a9:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
   1b8b0:	48 89 e5             	mov    %rsp,%rbp
   1b8b3:	74 43                	je     1b8f8 <mbedtls_sha256_starts+0x58>
   1b8b5:	c7 47 08 d8 9e 05 c1 	movl   $0xc1059ed8,0x8(%rdi)
   1b8bc:	c7 47 0c 07 d5 7c 36 	movl   $0x367cd507,0xc(%rdi)
   1b8c3:	c7 47 10 17 dd 70 30 	movl   $0x3070dd17,0x10(%rdi)
   1b8ca:	c7 47 14 39 59 0e f7 	movl   $0xf70e5939,0x14(%rdi)
   1b8d1:	c7 47 18 31 0b c0 ff 	movl   $0xffc00b31,0x18(%rdi)
   1b8d8:	c7 47 1c 11 15 58 68 	movl   $0x68581511,0x1c(%rdi)
   1b8df:	c7 47 20 a7 8f f9 64 	movl   $0x64f98fa7,0x20(%rdi)
   1b8e6:	c7 47 24 a4 4f fa be 	movl   $0xbefa4fa4,0x24(%rdi)
   1b8ed:	89 77 68             	mov    %esi,0x68(%rdi)
   1b8f0:	5d                   	pop    %rbp
   1b8f1:	c3                   	retq   
   1b8f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1b8f8:	c7 47 08 67 e6 09 6a 	movl   $0x6a09e667,0x8(%rdi)
   1b8ff:	c7 47 0c 85 ae 67 bb 	movl   $0xbb67ae85,0xc(%rdi)
   1b906:	c7 47 10 72 f3 6e 3c 	movl   $0x3c6ef372,0x10(%rdi)
   1b90d:	c7 47 14 3a f5 4f a5 	movl   $0xa54ff53a,0x14(%rdi)
   1b914:	c7 47 18 7f 52 0e 51 	movl   $0x510e527f,0x18(%rdi)
   1b91b:	c7 47 1c 8c 68 05 9b 	movl   $0x9b05688c,0x1c(%rdi)
   1b922:	c7 47 20 ab d9 83 1f 	movl   $0x1f83d9ab,0x20(%rdi)
   1b929:	c7 47 24 19 cd e0 5b 	movl   $0x5be0cd19,0x24(%rdi)
   1b930:	89 77 68             	mov    %esi,0x68(%rdi)
   1b933:	5d                   	pop    %rbp
   1b934:	c3                   	retq   
   1b935:	90                   	nop
   1b936:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1b93d:	00 00 00 

000000000001b940 <mbedtls_sha256_process>:
   1b940:	55                   	push   %rbp
   1b941:	48 89 f9             	mov    %rdi,%rcx
   1b944:	31 c0                	xor    %eax,%eax
   1b946:	48 89 e5             	mov    %rsp,%rbp
   1b949:	41 57                	push   %r15
   1b94b:	41 56                	push   %r14
   1b94d:	41 55                	push   %r13
   1b94f:	41 54                	push   %r12
   1b951:	53                   	push   %rbx
   1b952:	48 8d 9d b0 fe ff ff 	lea    -0x150(%rbp),%rbx
   1b959:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
   1b960:	48 89 bd 68 fe ff ff 	mov    %rdi,-0x198(%rbp)
   1b967:	48 89 9d 60 fe ff ff 	mov    %rbx,-0x1a0(%rbp)
   1b96e:	48 89 df             	mov    %rbx,%rdi
   1b971:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1b978:	8b 54 01 08          	mov    0x8(%rcx,%rax,1),%edx
   1b97c:	89 14 07             	mov    %edx,(%rdi,%rax,1)
   1b97f:	48 83 c0 04          	add    $0x4,%rax
   1b983:	48 83 f8 20          	cmp    $0x20,%rax
   1b987:	75 ef                	jne    1b978 <mbedtls_sha256_process+0x38>
   1b989:	4c 8d ad d0 fe ff ff 	lea    -0x130(%rbp),%r13
   1b990:	48 83 c6 01          	add    $0x1,%rsi
   1b994:	4d 8d 45 40          	lea    0x40(%r13),%r8
   1b998:	4c 89 ef             	mov    %r13,%rdi
   1b99b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1b9a0:	0f b6 46 ff          	movzbl -0x1(%rsi),%eax
   1b9a4:	48 83 c7 04          	add    $0x4,%rdi
   1b9a8:	48 83 c6 04          	add    $0x4,%rsi
   1b9ac:	c1 e0 18             	shl    $0x18,%eax
   1b9af:	89 c2                	mov    %eax,%edx
   1b9b1:	0f b6 46 fc          	movzbl -0x4(%rsi),%eax
   1b9b5:	c1 e0 10             	shl    $0x10,%eax
   1b9b8:	09 d0                	or     %edx,%eax
   1b9ba:	0f b6 56 fe          	movzbl -0x2(%rsi),%edx
   1b9be:	09 d0                	or     %edx,%eax
   1b9c0:	0f b6 56 fd          	movzbl -0x3(%rsi),%edx
   1b9c4:	c1 e2 08             	shl    $0x8,%edx
   1b9c7:	09 d0                	or     %edx,%eax
   1b9c9:	89 47 fc             	mov    %eax,-0x4(%rdi)
   1b9cc:	49 39 f8             	cmp    %rdi,%r8
   1b9cf:	75 cf                	jne    1b9a0 <mbedtls_sha256_process+0x60>
   1b9d1:	8b bd c0 fe ff ff    	mov    -0x140(%rbp),%edi
   1b9d7:	8b 9d bc fe ff ff    	mov    -0x144(%rbp),%ebx
   1b9dd:	4c 89 ea             	mov    %r13,%rdx
   1b9e0:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
   1b9e6:	44 8b b5 c4 fe ff ff 	mov    -0x13c(%rbp),%r14d
   1b9ed:	41 b8 91 44 37 71    	mov    $0x71374491,%r8d
   1b9f3:	44 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%r10d
   1b9fa:	44 8b bd b4 fe ff ff 	mov    -0x14c(%rbp),%r15d
   1ba01:	41 bb 98 2f 8a 42    	mov    $0x428a2f98,%r11d
   1ba07:	89 fe                	mov    %edi,%esi
   1ba09:	89 d9                	mov    %ebx,%ecx
   1ba0b:	8b bd b0 fe ff ff    	mov    -0x150(%rbp),%edi
   1ba11:	48 8d 1d 68 e5 00 00 	lea    0xe568(%rip),%rbx        # 29f80 <K>
   1ba18:	44 8b a5 b8 fe ff ff 	mov    -0x148(%rbp),%r12d
   1ba1f:	c7 85 90 fe ff ff d5 	movl   $0xab1c5ed5,-0x170(%rbp)
   1ba26:	5e 1c ab 
   1ba29:	c7 85 94 fe ff ff a4 	movl   $0x923f82a4,-0x16c(%rbp)
   1ba30:	82 3f 92 
   1ba33:	c7 85 a0 fe ff ff f1 	movl   $0x59f111f1,-0x160(%rbp)
   1ba3a:	11 f1 59 
   1ba3d:	48 89 9d 98 fe ff ff 	mov    %rbx,-0x168(%rbp)
   1ba44:	48 89 9d 88 fe ff ff 	mov    %rbx,-0x178(%rbp)
   1ba4b:	bb cf fb c0 b5       	mov    $0xb5c0fbcf,%ebx
   1ba50:	c7 85 a8 fe ff ff 5b 	movl   $0x3956c25b,-0x158(%rbp)
   1ba57:	c2 56 39 
   1ba5a:	c7 85 ac fe ff ff a5 	movl   $0xe9b5dba5,-0x154(%rbp)
   1ba61:	db b5 e9 
   1ba64:	c7 85 a4 fe ff ff 00 	movl   $0x0,-0x15c(%rbp)
   1ba6b:	00 00 00 
   1ba6e:	4c 89 ad 80 fe ff ff 	mov    %r13,-0x180(%rbp)
   1ba75:	41 89 f5             	mov    %esi,%r13d
   1ba78:	41 89 f1             	mov    %esi,%r9d
   1ba7b:	41 c1 c9 0b          	ror    $0xb,%r9d
   1ba7f:	41 c1 cd 06          	ror    $0x6,%r13d
   1ba83:	45 31 cd             	xor    %r9d,%r13d
   1ba86:	41 89 f1             	mov    %esi,%r9d
   1ba89:	41 c1 c1 07          	rol    $0x7,%r9d
   1ba8d:	45 31 cd             	xor    %r9d,%r13d
   1ba90:	45 89 f1             	mov    %r14d,%r9d
   1ba93:	45 31 d1             	xor    %r10d,%r9d
   1ba96:	41 21 f1             	and    %esi,%r9d
   1ba99:	45 31 d1             	xor    %r10d,%r9d
   1ba9c:	44 03 52 04          	add    0x4(%rdx),%r10d
   1baa0:	45 01 e9             	add    %r13d,%r9d
   1baa3:	44 03 0a             	add    (%rdx),%r9d
   1baa6:	41 89 fd             	mov    %edi,%r13d
   1baa9:	41 c1 cd 02          	ror    $0x2,%r13d
   1baad:	44 01 c8             	add    %r9d,%eax
   1bab0:	41 89 f9             	mov    %edi,%r9d
   1bab3:	41 01 c3             	add    %eax,%r11d
   1bab6:	89 f8                	mov    %edi,%eax
   1bab8:	45 21 f9             	and    %r15d,%r9d
   1babb:	c1 c8 0d             	ror    $0xd,%eax
   1babe:	44 01 d9             	add    %r11d,%ecx
   1bac1:	41 31 c5             	xor    %eax,%r13d
   1bac4:	89 f8                	mov    %edi,%eax
   1bac6:	c1 c0 0a             	rol    $0xa,%eax
   1bac9:	41 31 c5             	xor    %eax,%r13d
   1bacc:	89 f8                	mov    %edi,%eax
   1bace:	44 09 f8             	or     %r15d,%eax
   1bad1:	44 21 e0             	and    %r12d,%eax
   1bad4:	41 09 c1             	or     %eax,%r9d
   1bad7:	43 8d 44 0d 00       	lea    0x0(%r13,%r9,1),%eax
   1badc:	41 89 c9             	mov    %ecx,%r9d
   1badf:	41 c1 c9 0b          	ror    $0xb,%r9d
   1bae3:	44 01 d8             	add    %r11d,%eax
   1bae6:	41 89 f3             	mov    %esi,%r11d
   1bae9:	45 31 f3             	xor    %r14d,%r11d
   1baec:	41 21 cb             	and    %ecx,%r11d
   1baef:	45 31 f3             	xor    %r14d,%r11d
   1baf2:	45 01 da             	add    %r11d,%r10d
   1baf5:	41 89 cb             	mov    %ecx,%r11d
   1baf8:	41 c1 cb 06          	ror    $0x6,%r11d
   1bafc:	45 31 d9             	xor    %r11d,%r9d
   1baff:	41 89 cb             	mov    %ecx,%r11d
   1bb02:	41 c1 c3 07          	rol    $0x7,%r11d
   1bb06:	45 31 cb             	xor    %r9d,%r11d
   1bb09:	44 03 72 08          	add    0x8(%rdx),%r14d
   1bb0d:	47 8d 0c 1a          	lea    (%r10,%r11,1),%r9d
   1bb11:	41 89 c3             	mov    %eax,%r11d
   1bb14:	41 89 c2             	mov    %eax,%r10d
   1bb17:	41 c1 cb 02          	ror    $0x2,%r11d
   1bb1b:	41 21 fa             	and    %edi,%r10d
   1bb1e:	45 01 c8             	add    %r9d,%r8d
   1bb21:	41 89 c1             	mov    %eax,%r9d
   1bb24:	41 c1 c9 0d          	ror    $0xd,%r9d
   1bb28:	45 01 c4             	add    %r8d,%r12d
   1bb2b:	45 31 cb             	xor    %r9d,%r11d
   1bb2e:	41 89 c1             	mov    %eax,%r9d
   1bb31:	41 c1 c1 0a          	rol    $0xa,%r9d
   1bb35:	45 31 cb             	xor    %r9d,%r11d
   1bb38:	41 89 c1             	mov    %eax,%r9d
   1bb3b:	41 09 f9             	or     %edi,%r9d
   1bb3e:	45 21 f9             	and    %r15d,%r9d
   1bb41:	45 09 ca             	or     %r9d,%r10d
   1bb44:	47 8d 0c 13          	lea    (%r11,%r10,1),%r9d
   1bb48:	41 89 ca             	mov    %ecx,%r10d
   1bb4b:	41 31 f2             	xor    %esi,%r10d
   1bb4e:	45 21 e2             	and    %r12d,%r10d
   1bb51:	45 01 c1             	add    %r8d,%r9d
   1bb54:	45 89 e0             	mov    %r12d,%r8d
   1bb57:	41 31 f2             	xor    %esi,%r10d
   1bb5a:	41 c1 c8 0b          	ror    $0xb,%r8d
   1bb5e:	45 89 cb             	mov    %r9d,%r11d
   1bb61:	45 01 d6             	add    %r10d,%r14d
   1bb64:	45 89 e2             	mov    %r12d,%r10d
   1bb67:	41 c1 cb 02          	ror    $0x2,%r11d
   1bb6b:	41 c1 ca 06          	ror    $0x6,%r10d
   1bb6f:	45 31 d0             	xor    %r10d,%r8d
   1bb72:	45 89 e2             	mov    %r12d,%r10d
   1bb75:	41 c1 c2 07          	rol    $0x7,%r10d
   1bb79:	45 31 c2             	xor    %r8d,%r10d
   1bb7c:	47 8d 04 16          	lea    (%r14,%r10,1),%r8d
   1bb80:	41 89 c2             	mov    %eax,%r10d
   1bb83:	44 01 c3             	add    %r8d,%ebx
   1bb86:	45 89 c8             	mov    %r9d,%r8d
   1bb89:	41 c1 c8 0d          	ror    $0xd,%r8d
   1bb8d:	41 01 df             	add    %ebx,%r15d
   1bb90:	45 31 c3             	xor    %r8d,%r11d
   1bb93:	45 89 c8             	mov    %r9d,%r8d
   1bb96:	41 c1 c0 0a          	rol    $0xa,%r8d
   1bb9a:	45 31 c3             	xor    %r8d,%r11d
   1bb9d:	41 89 c0             	mov    %eax,%r8d
   1bba0:	45 09 c8             	or     %r9d,%r8d
   1bba3:	41 21 f8             	and    %edi,%r8d
   1bba6:	45 21 ca             	and    %r9d,%r10d
   1bba9:	03 72 0c             	add    0xc(%rdx),%esi
   1bbac:	45 09 c2             	or     %r8d,%r10d
   1bbaf:	47 8d 04 13          	lea    (%r11,%r10,1),%r8d
   1bbb3:	45 89 fa             	mov    %r15d,%r10d
   1bbb6:	45 89 fb             	mov    %r15d,%r11d
   1bbb9:	41 c1 ca 06          	ror    $0x6,%r10d
   1bbbd:	41 c1 c3 07          	rol    $0x7,%r11d
   1bbc1:	41 01 d8             	add    %ebx,%r8d
   1bbc4:	89 cb                	mov    %ecx,%ebx
   1bbc6:	44 31 e3             	xor    %r12d,%ebx
   1bbc9:	44 21 fb             	and    %r15d,%ebx
   1bbcc:	31 cb                	xor    %ecx,%ebx
   1bbce:	03 4a 10             	add    0x10(%rdx),%ecx
   1bbd1:	01 f3                	add    %esi,%ebx
   1bbd3:	44 89 fe             	mov    %r15d,%esi
   1bbd6:	c1 ce 0b             	ror    $0xb,%esi
   1bbd9:	41 31 f2             	xor    %esi,%r10d
   1bbdc:	44 89 c6             	mov    %r8d,%esi
   1bbdf:	45 31 d3             	xor    %r10d,%r11d
   1bbe2:	c1 ce 0d             	ror    $0xd,%esi
   1bbe5:	46 8d 14 1b          	lea    (%rbx,%r11,1),%r10d
   1bbe9:	44 89 c3             	mov    %r8d,%ebx
   1bbec:	44 03 95 ac fe ff ff 	add    -0x154(%rbp),%r10d
   1bbf3:	c1 cb 02             	ror    $0x2,%ebx
   1bbf6:	45 89 cb             	mov    %r9d,%r11d
   1bbf9:	31 f3                	xor    %esi,%ebx
   1bbfb:	44 89 c6             	mov    %r8d,%esi
   1bbfe:	45 21 c3             	and    %r8d,%r11d
   1bc01:	c1 c6 0a             	rol    $0xa,%esi
   1bc04:	31 f3                	xor    %esi,%ebx
   1bc06:	44 89 ce             	mov    %r9d,%esi
   1bc09:	44 01 d7             	add    %r10d,%edi
   1bc0c:	44 09 c6             	or     %r8d,%esi
   1bc0f:	21 c6                	and    %eax,%esi
   1bc11:	41 09 f3             	or     %esi,%r11d
   1bc14:	42 8d 34 1b          	lea    (%rbx,%r11,1),%esi
   1bc18:	45 89 e3             	mov    %r12d,%r11d
   1bc1b:	45 31 fb             	xor    %r15d,%r11d
   1bc1e:	41 21 fb             	and    %edi,%r11d
   1bc21:	44 01 d6             	add    %r10d,%esi
   1bc24:	41 89 fa             	mov    %edi,%r10d
   1bc27:	45 31 e3             	xor    %r12d,%r11d
   1bc2a:	41 c1 ca 06          	ror    $0x6,%r10d
   1bc2e:	89 f3                	mov    %esi,%ebx
   1bc30:	41 01 cb             	add    %ecx,%r11d
   1bc33:	89 f9                	mov    %edi,%ecx
   1bc35:	c1 c9 0b             	ror    $0xb,%ecx
   1bc38:	41 31 ca             	xor    %ecx,%r10d
   1bc3b:	89 f9                	mov    %edi,%ecx
   1bc3d:	c1 cb 02             	ror    $0x2,%ebx
   1bc40:	c1 c1 07             	rol    $0x7,%ecx
   1bc43:	44 03 62 14          	add    0x14(%rdx),%r12d
   1bc47:	44 31 d1             	xor    %r10d,%ecx
   1bc4a:	44 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%r10d
   1bc51:	44 01 d9             	add    %r11d,%ecx
   1bc54:	45 89 c3             	mov    %r8d,%r11d
   1bc57:	41 21 f3             	and    %esi,%r11d
   1bc5a:	41 01 ca             	add    %ecx,%r10d
   1bc5d:	89 f1                	mov    %esi,%ecx
   1bc5f:	c1 c9 0d             	ror    $0xd,%ecx
   1bc62:	44 01 d0             	add    %r10d,%eax
   1bc65:	31 cb                	xor    %ecx,%ebx
   1bc67:	89 f1                	mov    %esi,%ecx
   1bc69:	c1 c1 0a             	rol    $0xa,%ecx
   1bc6c:	31 cb                	xor    %ecx,%ebx
   1bc6e:	44 89 c1             	mov    %r8d,%ecx
   1bc71:	09 f1                	or     %esi,%ecx
   1bc73:	44 21 c9             	and    %r9d,%ecx
   1bc76:	41 09 cb             	or     %ecx,%r11d
   1bc79:	42 8d 0c 1b          	lea    (%rbx,%r11,1),%ecx
   1bc7d:	41 89 c3             	mov    %eax,%r11d
   1bc80:	41 c1 cb 0b          	ror    $0xb,%r11d
   1bc84:	44 01 d1             	add    %r10d,%ecx
   1bc87:	45 89 fa             	mov    %r15d,%r10d
   1bc8a:	41 31 fa             	xor    %edi,%r10d
   1bc8d:	89 cb                	mov    %ecx,%ebx
   1bc8f:	41 21 c2             	and    %eax,%r10d
   1bc92:	c1 cb 02             	ror    $0x2,%ebx
   1bc95:	45 31 fa             	xor    %r15d,%r10d
   1bc98:	45 01 e2             	add    %r12d,%r10d
   1bc9b:	41 89 c4             	mov    %eax,%r12d
   1bc9e:	41 c1 cc 06          	ror    $0x6,%r12d
   1bca2:	45 31 dc             	xor    %r11d,%r12d
   1bca5:	41 89 c3             	mov    %eax,%r11d
   1bca8:	41 c1 c3 07          	rol    $0x7,%r11d
   1bcac:	45 31 e3             	xor    %r12d,%r11d
   1bcaf:	41 89 cc             	mov    %ecx,%r12d
   1bcb2:	45 01 d3             	add    %r10d,%r11d
   1bcb5:	44 03 9d a0 fe ff ff 	add    -0x160(%rbp),%r11d
   1bcbc:	41 c1 c4 0a          	rol    $0xa,%r12d
   1bcc0:	47 8d 14 19          	lea    (%r9,%r11,1),%r10d
   1bcc4:	41 89 c9             	mov    %ecx,%r9d
   1bcc7:	41 c1 c9 0d          	ror    $0xd,%r9d
   1bccb:	44 31 cb             	xor    %r9d,%ebx
   1bcce:	41 89 f1             	mov    %esi,%r9d
   1bcd1:	44 31 e3             	xor    %r12d,%ebx
   1bcd4:	41 89 f4             	mov    %esi,%r12d
   1bcd7:	41 21 c9             	and    %ecx,%r9d
   1bcda:	41 09 cc             	or     %ecx,%r12d
   1bcdd:	44 03 7a 18          	add    0x18(%rdx),%r15d
   1bce1:	45 21 c4             	and    %r8d,%r12d
   1bce4:	45 09 e1             	or     %r12d,%r9d
   1bce7:	46 8d 24 0b          	lea    (%rbx,%r9,1),%r12d
   1bceb:	45 89 d1             	mov    %r10d,%r9d
   1bcee:	41 c1 c9 0b          	ror    $0xb,%r9d
   1bcf2:	45 01 dc             	add    %r11d,%r12d
   1bcf5:	41 89 fb             	mov    %edi,%r11d
   1bcf8:	41 31 c3             	xor    %eax,%r11d
   1bcfb:	45 21 d3             	and    %r10d,%r11d
   1bcfe:	41 31 fb             	xor    %edi,%r11d
   1bd01:	03 7a 1c             	add    0x1c(%rdx),%edi
   1bd04:	45 01 fb             	add    %r15d,%r11d
   1bd07:	45 89 d7             	mov    %r10d,%r15d
   1bd0a:	41 c1 cf 06          	ror    $0x6,%r15d
   1bd0e:	45 31 cf             	xor    %r9d,%r15d
   1bd11:	45 89 d1             	mov    %r10d,%r9d
   1bd14:	41 c1 c1 07          	rol    $0x7,%r9d
   1bd18:	45 31 f9             	xor    %r15d,%r9d
   1bd1b:	45 89 e7             	mov    %r12d,%r15d
   1bd1e:	45 01 d9             	add    %r11d,%r9d
   1bd21:	44 03 8d 94 fe ff ff 	add    -0x16c(%rbp),%r9d
   1bd28:	45 89 e3             	mov    %r12d,%r11d
   1bd2b:	41 c1 cb 02          	ror    $0x2,%r11d
   1bd2f:	41 c1 c7 0a          	rol    $0xa,%r15d
   1bd33:	47 8d 34 08          	lea    (%r8,%r9,1),%r14d
   1bd37:	45 89 e0             	mov    %r12d,%r8d
   1bd3a:	41 c1 c8 0d          	ror    $0xd,%r8d
   1bd3e:	45 31 c3             	xor    %r8d,%r11d
   1bd41:	41 89 c8             	mov    %ecx,%r8d
   1bd44:	45 31 fb             	xor    %r15d,%r11d
   1bd47:	41 89 cf             	mov    %ecx,%r15d
   1bd4a:	45 21 e0             	and    %r12d,%r8d
   1bd4d:	45 09 e7             	or     %r12d,%r15d
   1bd50:	41 21 f7             	and    %esi,%r15d
   1bd53:	45 09 f8             	or     %r15d,%r8d
   1bd56:	47 8d 3c 03          	lea    (%r11,%r8,1),%r15d
   1bd5a:	45 89 f0             	mov    %r14d,%r8d
   1bd5d:	45 01 cf             	add    %r9d,%r15d
   1bd60:	41 89 c1             	mov    %eax,%r9d
   1bd63:	45 31 d1             	xor    %r10d,%r9d
   1bd66:	45 89 fb             	mov    %r15d,%r11d
   1bd69:	45 21 f1             	and    %r14d,%r9d
   1bd6c:	41 31 c1             	xor    %eax,%r9d
   1bd6f:	41 01 f9             	add    %edi,%r9d
   1bd72:	44 89 f7             	mov    %r14d,%edi
   1bd75:	41 c1 c8 06          	ror    $0x6,%r8d
   1bd79:	c1 cf 0b             	ror    $0xb,%edi
   1bd7c:	41 c1 cb 02          	ror    $0x2,%r11d
   1bd80:	83 85 a4 fe ff ff 08 	addl   $0x8,-0x15c(%rbp)
   1bd87:	41 31 f8             	xor    %edi,%r8d
   1bd8a:	44 89 f7             	mov    %r14d,%edi
   1bd8d:	8b 9d a4 fe ff ff    	mov    -0x15c(%rbp),%ebx
   1bd93:	c1 c7 07             	rol    $0x7,%edi
   1bd96:	48 83 c2 20          	add    $0x20,%rdx
   1bd9a:	48 83 85 88 fe ff ff 	addq   $0x20,-0x178(%rbp)
   1bda1:	20 
   1bda2:	44 31 c7             	xor    %r8d,%edi
   1bda5:	44 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%r8d
   1bdac:	44 01 cf             	add    %r9d,%edi
   1bdaf:	45 89 e1             	mov    %r12d,%r9d
   1bdb2:	45 21 f9             	and    %r15d,%r9d
   1bdb5:	41 01 f8             	add    %edi,%r8d
   1bdb8:	44 89 ff             	mov    %r15d,%edi
   1bdbb:	c1 cf 0d             	ror    $0xd,%edi
   1bdbe:	44 01 c6             	add    %r8d,%esi
   1bdc1:	41 31 fb             	xor    %edi,%r11d
   1bdc4:	44 89 ff             	mov    %r15d,%edi
   1bdc7:	c1 c7 0a             	rol    $0xa,%edi
   1bdca:	41 31 fb             	xor    %edi,%r11d
   1bdcd:	44 89 e7             	mov    %r12d,%edi
   1bdd0:	44 09 ff             	or     %r15d,%edi
   1bdd3:	21 cf                	and    %ecx,%edi
   1bdd5:	44 09 cf             	or     %r9d,%edi
   1bdd8:	44 01 df             	add    %r11d,%edi
   1bddb:	44 01 c7             	add    %r8d,%edi
   1bdde:	83 fb 10             	cmp    $0x10,%ebx
   1bde1:	0f 85 61 07 00 00    	jne    1c548 <mbedtls_sha256_process+0xc08>
   1bde7:	41 bb 86 47 be ef    	mov    $0xefbe4786,%r11d
   1bded:	89 b5 a8 fe ff ff    	mov    %esi,-0x158(%rbp)
   1bdf3:	4c 8b ad 80 fe ff ff 	mov    -0x180(%rbp),%r13
   1bdfa:	89 b5 c0 fe ff ff    	mov    %esi,-0x140(%rbp)
   1be00:	89 85 ac fe ff ff    	mov    %eax,-0x154(%rbp)
   1be06:	be c1 69 9b e4       	mov    $0xe49b69c1,%esi
   1be0b:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
   1be11:	89 8d bc fe ff ff    	mov    %ecx,-0x144(%rbp)
   1be17:	89 cb                	mov    %ecx,%ebx
   1be19:	44 89 95 c8 fe ff ff 	mov    %r10d,-0x138(%rbp)
   1be20:	44 89 a5 b8 fe ff ff 	mov    %r12d,-0x148(%rbp)
   1be27:	44 89 b5 c4 fe ff ff 	mov    %r14d,-0x13c(%rbp)
   1be2e:	44 89 bd b4 fe ff ff 	mov    %r15d,-0x14c(%rbp)
   1be35:	89 bd b0 fe ff ff    	mov    %edi,-0x150(%rbp)
   1be3b:	c7 85 78 fe ff ff da 	movl   $0x76f988da,-0x188(%rbp)
   1be42:	88 f9 76 
   1be45:	c7 85 7c fe ff ff dc 	movl   $0x5cb0a9dc,-0x184(%rbp)
   1be4c:	a9 b0 5c 
   1be4f:	c7 85 80 fe ff ff aa 	movl   $0x4a7484aa,-0x180(%rbp)
   1be56:	84 74 4a 
   1be59:	c7 85 88 fe ff ff 6f 	movl   $0x2de92c6f,-0x178(%rbp)
   1be60:	2c e9 2d 
   1be63:	c7 85 90 fe ff ff cc 	movl   $0x240ca1cc,-0x170(%rbp)
   1be6a:	a1 0c 24 
   1be6d:	c7 85 94 fe ff ff c6 	movl   $0xfc19dc6,-0x16c(%rbp)
   1be74:	9d c1 0f 
   1be77:	44 89 9d 74 fe ff ff 	mov    %r11d,-0x18c(%rbp)
   1be7e:	eb 49                	jmp    1bec9 <mbedtls_sha256_process+0x589>
   1be80:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
   1be87:	8b 48 44             	mov    0x44(%rax),%ecx
   1be8a:	8b 70 40             	mov    0x40(%rax),%esi
   1be8d:	89 8d 74 fe ff ff    	mov    %ecx,-0x18c(%rbp)
   1be93:	8b 48 48             	mov    0x48(%rax),%ecx
   1be96:	89 8d 94 fe ff ff    	mov    %ecx,-0x16c(%rbp)
   1be9c:	8b 48 4c             	mov    0x4c(%rax),%ecx
   1be9f:	89 8d 90 fe ff ff    	mov    %ecx,-0x170(%rbp)
   1bea5:	8b 48 50             	mov    0x50(%rax),%ecx
   1bea8:	89 8d 88 fe ff ff    	mov    %ecx,-0x178(%rbp)
   1beae:	8b 48 54             	mov    0x54(%rax),%ecx
   1beb1:	89 8d 80 fe ff ff    	mov    %ecx,-0x180(%rbp)
   1beb7:	8b 48 58             	mov    0x58(%rax),%ecx
   1beba:	8b 40 5c             	mov    0x5c(%rax),%eax
   1bebd:	89 8d 7c fe ff ff    	mov    %ecx,-0x184(%rbp)
   1bec3:	89 85 78 fe ff ff    	mov    %eax,-0x188(%rbp)
   1bec9:	41 8b 55 38          	mov    0x38(%r13),%edx
   1becd:	41 8b 45 38          	mov    0x38(%r13),%eax
   1bed1:	41 8b 4d 04          	mov    0x4(%r13),%ecx
   1bed5:	45 8b 45 00          	mov    0x0(%r13),%r8d
   1bed9:	45 03 45 24          	add    0x24(%r13),%r8d
   1bedd:	45 8b 5d 3c          	mov    0x3c(%r13),%r11d
   1bee1:	c1 c0 0d             	rol    $0xd,%eax
   1bee4:	c1 c2 0f             	rol    $0xf,%edx
   1bee7:	31 c2                	xor    %eax,%edx
   1bee9:	41 8b 45 38          	mov    0x38(%r13),%eax
   1beed:	41 89 c9             	mov    %ecx,%r9d
   1bef0:	41 c1 c9 07          	ror    $0x7,%r9d
   1bef4:	c1 e8 0a             	shr    $0xa,%eax
   1bef7:	31 c2                	xor    %eax,%edx
   1bef9:	89 c8                	mov    %ecx,%eax
   1befb:	c1 c0 0e             	rol    $0xe,%eax
   1befe:	44 01 c2             	add    %r8d,%edx
   1bf01:	41 31 c1             	xor    %eax,%r9d
   1bf04:	89 c8                	mov    %ecx,%eax
   1bf06:	c1 e8 03             	shr    $0x3,%eax
   1bf09:	44 31 c8             	xor    %r9d,%eax
   1bf0c:	44 8b 8d a8 fe ff ff 	mov    -0x158(%rbp),%r9d
   1bf13:	01 d0                	add    %edx,%eax
   1bf15:	41 89 45 40          	mov    %eax,0x40(%r13)
   1bf19:	41 89 c0             	mov    %eax,%r8d
   1bf1c:	44 89 ca             	mov    %r9d,%edx
   1bf1f:	44 89 c8             	mov    %r9d,%eax
   1bf22:	44 89 85 a0 fe ff ff 	mov    %r8d,-0x160(%rbp)
   1bf29:	c1 c8 0b             	ror    $0xb,%eax
   1bf2c:	c1 ca 06             	ror    $0x6,%edx
   1bf2f:	31 c2                	xor    %eax,%edx
   1bf31:	44 89 c8             	mov    %r9d,%eax
   1bf34:	c1 c0 07             	rol    $0x7,%eax
   1bf37:	31 c2                	xor    %eax,%edx
   1bf39:	44 89 f0             	mov    %r14d,%eax
   1bf3c:	44 31 d0             	xor    %r10d,%eax
   1bf3f:	44 21 c8             	and    %r9d,%eax
   1bf42:	44 31 d0             	xor    %r10d,%eax
   1bf45:	01 d0                	add    %edx,%eax
   1bf47:	46 8d 04 00          	lea    (%rax,%r8,1),%r8d
   1bf4b:	44 03 85 ac fe ff ff 	add    -0x154(%rbp),%r8d
   1bf52:	44 01 c6             	add    %r8d,%esi
   1bf55:	41 89 f8             	mov    %edi,%r8d
   1bf58:	8d 04 1e             	lea    (%rsi,%rbx,1),%eax
   1bf5b:	41 c1 c0 0a          	rol    $0xa,%r8d
   1bf5f:	89 c3                	mov    %eax,%ebx
   1bf61:	89 f8                	mov    %edi,%eax
   1bf63:	c1 c8 02             	ror    $0x2,%eax
   1bf66:	89 9d ac fe ff ff    	mov    %ebx,-0x154(%rbp)
   1bf6c:	89 c2                	mov    %eax,%edx
   1bf6e:	89 f8                	mov    %edi,%eax
   1bf70:	c1 c8 0d             	ror    $0xd,%eax
   1bf73:	31 c2                	xor    %eax,%edx
   1bf75:	89 f8                	mov    %edi,%eax
   1bf77:	44 31 c2             	xor    %r8d,%edx
   1bf7a:	41 89 f8             	mov    %edi,%r8d
   1bf7d:	44 21 f8             	and    %r15d,%eax
   1bf80:	45 09 f8             	or     %r15d,%r8d
   1bf83:	45 21 e0             	and    %r12d,%r8d
   1bf86:	44 09 c0             	or     %r8d,%eax
   1bf89:	41 c1 c3 0f          	rol    $0xf,%r11d
   1bf8d:	41 03 4d 28          	add    0x28(%r13),%ecx
   1bf91:	44 8d 04 02          	lea    (%rdx,%rax,1),%r8d
   1bf95:	41 8b 45 3c          	mov    0x3c(%r13),%eax
   1bf99:	41 8b 55 08          	mov    0x8(%r13),%edx
   1bf9d:	41 01 f0             	add    %esi,%r8d
   1bfa0:	89 de                	mov    %ebx,%esi
   1bfa2:	c1 c0 0d             	rol    $0xd,%eax
   1bfa5:	c1 c6 07             	rol    $0x7,%esi
   1bfa8:	41 31 c3             	xor    %eax,%r11d
   1bfab:	41 8b 45 3c          	mov    0x3c(%r13),%eax
   1bfaf:	c1 e8 0a             	shr    $0xa,%eax
   1bfb2:	44 31 d8             	xor    %r11d,%eax
   1bfb5:	41 89 d3             	mov    %edx,%r11d
   1bfb8:	01 c1                	add    %eax,%ecx
   1bfba:	89 d0                	mov    %edx,%eax
   1bfbc:	41 c1 cb 07          	ror    $0x7,%r11d
   1bfc0:	c1 c0 0e             	rol    $0xe,%eax
   1bfc3:	41 31 c3             	xor    %eax,%r11d
   1bfc6:	89 d0                	mov    %edx,%eax
   1bfc8:	c1 e8 03             	shr    $0x3,%eax
   1bfcb:	41 31 c3             	xor    %eax,%r11d
   1bfce:	89 d8                	mov    %ebx,%eax
   1bfd0:	41 01 cb             	add    %ecx,%r11d
   1bfd3:	89 d9                	mov    %ebx,%ecx
   1bfd5:	c1 c8 0b             	ror    $0xb,%eax
   1bfd8:	c1 c9 06             	ror    $0x6,%ecx
   1bfdb:	45 89 5d 44          	mov    %r11d,0x44(%r13)
   1bfdf:	31 c1                	xor    %eax,%ecx
   1bfe1:	44 89 c8             	mov    %r9d,%eax
   1bfe4:	44 31 f0             	xor    %r14d,%eax
   1bfe7:	31 f1                	xor    %esi,%ecx
   1bfe9:	43 8d 34 13          	lea    (%r11,%r10,1),%esi
   1bfed:	21 d8                	and    %ebx,%eax
   1bfef:	44 31 f0             	xor    %r14d,%eax
   1bff2:	44 8d 14 30          	lea    (%rax,%rsi,1),%r10d
   1bff6:	44 89 c6             	mov    %r8d,%esi
   1bff9:	c1 ce 02             	ror    $0x2,%esi
   1bffc:	41 01 ca             	add    %ecx,%r10d
   1bfff:	44 89 c1             	mov    %r8d,%ecx
   1c002:	41 89 f1             	mov    %esi,%r9d
   1c005:	c1 c9 0d             	ror    $0xd,%ecx
   1c008:	44 89 c6             	mov    %r8d,%esi
   1c00b:	44 03 95 74 fe ff ff 	add    -0x18c(%rbp),%r10d
   1c012:	41 31 c9             	xor    %ecx,%r9d
   1c015:	c1 c6 0a             	rol    $0xa,%esi
   1c018:	44 89 c1             	mov    %r8d,%ecx
   1c01b:	41 31 f1             	xor    %esi,%r9d
   1c01e:	44 89 c6             	mov    %r8d,%esi
   1c021:	09 fe                	or     %edi,%esi
   1c023:	44 21 fe             	and    %r15d,%esi
   1c026:	21 f9                	and    %edi,%ecx
   1c028:	43 8d 04 22          	lea    (%r10,%r12,1),%eax
   1c02c:	09 f1                	or     %esi,%ecx
   1c02e:	45 8b 65 0c          	mov    0xc(%r13),%r12d
   1c032:	41 03 55 2c          	add    0x2c(%r13),%edx
   1c036:	41 8d 34 09          	lea    (%r9,%rcx,1),%esi
   1c03a:	44 8b 8d a0 fe ff ff 	mov    -0x160(%rbp),%r9d
   1c041:	44 01 d6             	add    %r10d,%esi
   1c044:	44 89 c9             	mov    %r9d,%ecx
   1c047:	45 89 ca             	mov    %r9d,%r10d
   1c04a:	c1 c1 0d             	rol    $0xd,%ecx
   1c04d:	41 c1 c2 0f          	rol    $0xf,%r10d
   1c051:	41 31 ca             	xor    %ecx,%r10d
   1c054:	44 89 c9             	mov    %r9d,%ecx
   1c057:	45 89 e1             	mov    %r12d,%r9d
   1c05a:	c1 e9 0a             	shr    $0xa,%ecx
   1c05d:	41 c1 c1 0e          	rol    $0xe,%r9d
   1c061:	44 31 d1             	xor    %r10d,%ecx
   1c064:	45 89 e2             	mov    %r12d,%r10d
   1c067:	41 c1 ca 07          	ror    $0x7,%r10d
   1c06b:	01 ca                	add    %ecx,%edx
   1c06d:	45 31 ca             	xor    %r9d,%r10d
   1c070:	45 89 e1             	mov    %r12d,%r9d
   1c073:	41 c1 e9 03          	shr    $0x3,%r9d
   1c077:	45 31 ca             	xor    %r9d,%r10d
   1c07a:	41 89 c1             	mov    %eax,%r9d
   1c07d:	41 01 d2             	add    %edx,%r10d
   1c080:	89 c2                	mov    %eax,%edx
   1c082:	41 c1 c9 06          	ror    $0x6,%r9d
   1c086:	c1 ca 0b             	ror    $0xb,%edx
   1c089:	43 8d 0c 32          	lea    (%r10,%r14,1),%ecx
   1c08d:	45 89 55 48          	mov    %r10d,0x48(%r13)
   1c091:	41 31 d1             	xor    %edx,%r9d
   1c094:	89 c2                	mov    %eax,%edx
   1c096:	c1 c2 07             	rol    $0x7,%edx
   1c099:	41 31 d1             	xor    %edx,%r9d
   1c09c:	89 da                	mov    %ebx,%edx
   1c09e:	8b 9d a8 fe ff ff    	mov    -0x158(%rbp),%ebx
   1c0a4:	31 da                	xor    %ebx,%edx
   1c0a6:	21 c2                	and    %eax,%edx
   1c0a8:	31 da                	xor    %ebx,%edx
   1c0aa:	44 8d 34 0a          	lea    (%rdx,%rcx,1),%r14d
   1c0ae:	45 01 ce             	add    %r9d,%r14d
   1c0b1:	44 03 b5 94 fe ff ff 	add    -0x16c(%rbp),%r14d
   1c0b8:	45 89 c1             	mov    %r8d,%r9d
   1c0bb:	43 8d 14 3e          	lea    (%r14,%r15,1),%edx
   1c0bf:	41 89 f7             	mov    %esi,%r15d
   1c0c2:	41 c1 cf 02          	ror    $0x2,%r15d
   1c0c6:	44 89 fb             	mov    %r15d,%ebx
   1c0c9:	41 89 f7             	mov    %esi,%r15d
   1c0cc:	41 c1 cf 0d          	ror    $0xd,%r15d
   1c0d0:	44 31 fb             	xor    %r15d,%ebx
   1c0d3:	41 89 f7             	mov    %esi,%r15d
   1c0d6:	41 c1 c7 0a          	rol    $0xa,%r15d
   1c0da:	44 31 fb             	xor    %r15d,%ebx
   1c0dd:	45 89 c7             	mov    %r8d,%r15d
   1c0e0:	41 09 f7             	or     %esi,%r15d
   1c0e3:	44 89 f9             	mov    %r15d,%ecx
   1c0e6:	21 f9                	and    %edi,%ecx
   1c0e8:	41 21 f1             	and    %esi,%r9d
   1c0eb:	41 09 c9             	or     %ecx,%r9d
   1c0ee:	42 8d 0c 0b          	lea    (%rbx,%r9,1),%ecx
   1c0f2:	45 89 d9             	mov    %r11d,%r9d
   1c0f5:	41 8b 5d 10          	mov    0x10(%r13),%ebx
   1c0f9:	41 c1 c1 0d          	rol    $0xd,%r9d
   1c0fd:	44 01 f1             	add    %r14d,%ecx
   1c100:	45 89 de             	mov    %r11d,%r14d
   1c103:	41 c1 eb 0a          	shr    $0xa,%r11d
   1c107:	41 c1 c6 0f          	rol    $0xf,%r14d
   1c10b:	41 89 df             	mov    %ebx,%r15d
   1c10e:	45 31 f1             	xor    %r14d,%r9d
   1c111:	41 c1 cf 07          	ror    $0x7,%r15d
   1c115:	44 8b b5 ac fe ff ff 	mov    -0x154(%rbp),%r14d
   1c11c:	45 31 d9             	xor    %r11d,%r9d
   1c11f:	45 8b 5d 30          	mov    0x30(%r13),%r11d
   1c123:	45 01 e3             	add    %r12d,%r11d
   1c126:	44 8b a5 a8 fe ff ff 	mov    -0x158(%rbp),%r12d
   1c12d:	45 01 cb             	add    %r9d,%r11d
   1c130:	41 89 d9             	mov    %ebx,%r9d
   1c133:	41 c1 c1 0e          	rol    $0xe,%r9d
   1c137:	45 31 f9             	xor    %r15d,%r9d
   1c13a:	41 89 df             	mov    %ebx,%r15d
   1c13d:	41 c1 ef 03          	shr    $0x3,%r15d
   1c141:	45 31 f9             	xor    %r15d,%r9d
   1c144:	41 89 d7             	mov    %edx,%r15d
   1c147:	45 01 d9             	add    %r11d,%r9d
   1c14a:	41 89 d3             	mov    %edx,%r11d
   1c14d:	41 c1 cf 06          	ror    $0x6,%r15d
   1c151:	41 c1 cb 0b          	ror    $0xb,%r11d
   1c155:	45 01 cc             	add    %r9d,%r12d
   1c158:	45 89 4d 4c          	mov    %r9d,0x4c(%r13)
   1c15c:	45 31 df             	xor    %r11d,%r15d
   1c15f:	41 89 d3             	mov    %edx,%r11d
   1c162:	41 c1 c3 07          	rol    $0x7,%r11d
   1c166:	45 31 df             	xor    %r11d,%r15d
   1c169:	45 89 f3             	mov    %r14d,%r11d
   1c16c:	41 31 c3             	xor    %eax,%r11d
   1c16f:	41 21 d3             	and    %edx,%r11d
   1c172:	45 31 f3             	xor    %r14d,%r11d
   1c175:	45 01 dc             	add    %r11d,%r12d
   1c178:	45 01 fc             	add    %r15d,%r12d
   1c17b:	44 03 a5 90 fe ff ff 	add    -0x170(%rbp),%r12d
   1c182:	41 89 f7             	mov    %esi,%r15d
   1c185:	45 8d 1c 3c          	lea    (%r12,%rdi,1),%r11d
   1c189:	89 cf                	mov    %ecx,%edi
   1c18b:	c1 cf 02             	ror    $0x2,%edi
   1c18e:	41 89 fe             	mov    %edi,%r14d
   1c191:	89 cf                	mov    %ecx,%edi
   1c193:	c1 cf 0d             	ror    $0xd,%edi
   1c196:	41 31 fe             	xor    %edi,%r14d
   1c199:	89 cf                	mov    %ecx,%edi
   1c19b:	c1 c7 0a             	rol    $0xa,%edi
   1c19e:	41 09 cf             	or     %ecx,%r15d
   1c1a1:	41 03 5d 34          	add    0x34(%r13),%ebx
   1c1a5:	41 31 fe             	xor    %edi,%r14d
   1c1a8:	89 f7                	mov    %esi,%edi
   1c1aa:	45 21 c7             	and    %r8d,%r15d
   1c1ad:	21 cf                	and    %ecx,%edi
   1c1af:	44 09 ff             	or     %r15d,%edi
   1c1b2:	45 8b 7d 14          	mov    0x14(%r13),%r15d
   1c1b6:	44 01 f7             	add    %r14d,%edi
   1c1b9:	44 01 e7             	add    %r12d,%edi
   1c1bc:	45 89 d4             	mov    %r10d,%r12d
   1c1bf:	41 c1 c4 0f          	rol    $0xf,%r12d
   1c1c3:	45 89 e6             	mov    %r12d,%r14d
   1c1c6:	45 89 d4             	mov    %r10d,%r12d
   1c1c9:	41 c1 ea 0a          	shr    $0xa,%r10d
   1c1cd:	41 c1 c4 0d          	rol    $0xd,%r12d
   1c1d1:	45 31 f4             	xor    %r14d,%r12d
   1c1d4:	45 31 d4             	xor    %r10d,%r12d
   1c1d7:	45 89 da             	mov    %r11d,%r10d
   1c1da:	41 01 dc             	add    %ebx,%r12d
   1c1dd:	44 89 fb             	mov    %r15d,%ebx
   1c1e0:	41 c1 ca 0b          	ror    $0xb,%r10d
   1c1e4:	c1 cb 07             	ror    $0x7,%ebx
   1c1e7:	41 89 de             	mov    %ebx,%r14d
   1c1ea:	44 89 fb             	mov    %r15d,%ebx
   1c1ed:	c1 c3 0e             	rol    $0xe,%ebx
   1c1f0:	41 31 de             	xor    %ebx,%r14d
   1c1f3:	44 89 fb             	mov    %r15d,%ebx
   1c1f6:	c1 eb 03             	shr    $0x3,%ebx
   1c1f9:	41 31 de             	xor    %ebx,%r14d
   1c1fc:	44 89 db             	mov    %r11d,%ebx
   1c1ff:	c1 cb 06             	ror    $0x6,%ebx
   1c202:	45 01 e6             	add    %r12d,%r14d
   1c205:	41 89 c4             	mov    %eax,%r12d
   1c208:	44 31 d3             	xor    %r10d,%ebx
   1c20b:	45 89 da             	mov    %r11d,%r10d
   1c20e:	45 89 75 50          	mov    %r14d,0x50(%r13)
   1c212:	41 c1 c2 07          	rol    $0x7,%r10d
   1c216:	41 31 d4             	xor    %edx,%r12d
   1c219:	44 31 d3             	xor    %r10d,%ebx
   1c21c:	44 8b 95 ac fe ff ff 	mov    -0x154(%rbp),%r10d
   1c223:	45 21 dc             	and    %r11d,%r12d
   1c226:	41 31 c4             	xor    %eax,%r12d
   1c229:	45 01 f2             	add    %r14d,%r10d
   1c22c:	45 01 e2             	add    %r12d,%r10d
   1c22f:	41 89 fc             	mov    %edi,%r12d
   1c232:	41 01 da             	add    %ebx,%r10d
   1c235:	44 03 95 88 fe ff ff 	add    -0x178(%rbp),%r10d
   1c23c:	41 c1 cc 02          	ror    $0x2,%r12d
   1c240:	43 8d 1c 10          	lea    (%r8,%r10,1),%ebx
   1c244:	41 89 f8             	mov    %edi,%r8d
   1c247:	41 c1 c8 0d          	ror    $0xd,%r8d
   1c24b:	89 9d ac fe ff ff    	mov    %ebx,-0x154(%rbp)
   1c251:	89 fb                	mov    %edi,%ebx
   1c253:	45 31 c4             	xor    %r8d,%r12d
   1c256:	c1 c3 0a             	rol    $0xa,%ebx
   1c259:	41 89 c8             	mov    %ecx,%r8d
   1c25c:	41 31 dc             	xor    %ebx,%r12d
   1c25f:	89 cb                	mov    %ecx,%ebx
   1c261:	41 21 f8             	and    %edi,%r8d
   1c264:	09 fb                	or     %edi,%ebx
   1c266:	21 f3                	and    %esi,%ebx
   1c268:	41 09 d8             	or     %ebx,%r8d
   1c26b:	43 8d 1c 04          	lea    (%r12,%r8,1),%ebx
   1c26f:	45 89 cc             	mov    %r9d,%r12d
   1c272:	45 8b 45 18          	mov    0x18(%r13),%r8d
   1c276:	41 c1 c4 0f          	rol    $0xf,%r12d
   1c27a:	44 01 d3             	add    %r10d,%ebx
   1c27d:	45 89 ca             	mov    %r9d,%r10d
   1c280:	41 c1 e9 0a          	shr    $0xa,%r9d
   1c284:	41 c1 c2 0d          	rol    $0xd,%r10d
   1c288:	45 31 e2             	xor    %r12d,%r10d
   1c28b:	45 89 c4             	mov    %r8d,%r12d
   1c28e:	45 31 ca             	xor    %r9d,%r10d
   1c291:	45 8b 4d 38          	mov    0x38(%r13),%r9d
   1c295:	41 c1 cc 07          	ror    $0x7,%r12d
   1c299:	45 01 f9             	add    %r15d,%r9d
   1c29c:	44 8b bd ac fe ff ff 	mov    -0x154(%rbp),%r15d
   1c2a3:	45 01 ca             	add    %r9d,%r10d
   1c2a6:	45 89 c1             	mov    %r8d,%r9d
   1c2a9:	41 c1 c1 0e          	rol    $0xe,%r9d
   1c2ad:	45 31 e1             	xor    %r12d,%r9d
   1c2b0:	45 89 c4             	mov    %r8d,%r12d
   1c2b3:	41 c1 ec 03          	shr    $0x3,%r12d
   1c2b7:	45 31 e1             	xor    %r12d,%r9d
   1c2ba:	45 89 fc             	mov    %r15d,%r12d
   1c2bd:	45 01 d1             	add    %r10d,%r9d
   1c2c0:	45 89 fa             	mov    %r15d,%r10d
   1c2c3:	41 c1 cc 06          	ror    $0x6,%r12d
   1c2c7:	41 c1 ca 0b          	ror    $0xb,%r10d
   1c2cb:	41 c1 c7 07          	rol    $0x7,%r15d
   1c2cf:	45 89 4d 54          	mov    %r9d,0x54(%r13)
   1c2d3:	45 31 d4             	xor    %r10d,%r12d
   1c2d6:	41 89 d2             	mov    %edx,%r10d
   1c2d9:	45 31 da             	xor    %r11d,%r10d
   1c2dc:	44 23 95 ac fe ff ff 	and    -0x154(%rbp),%r10d
   1c2e3:	45 31 fc             	xor    %r15d,%r12d
   1c2e6:	41 31 d2             	xor    %edx,%r10d
   1c2e9:	44 01 c8             	add    %r9d,%eax
   1c2ec:	45 03 45 3c          	add    0x3c(%r13),%r8d
   1c2f0:	44 01 d0             	add    %r10d,%eax
   1c2f3:	44 8b 95 80 fe ff ff 	mov    -0x180(%rbp),%r10d
   1c2fa:	44 01 e0             	add    %r12d,%eax
   1c2fd:	41 89 dc             	mov    %ebx,%r12d
   1c300:	41 c1 cc 02          	ror    $0x2,%r12d
   1c304:	41 01 c2             	add    %eax,%r10d
   1c307:	89 d8                	mov    %ebx,%eax
   1c309:	c1 c8 0d             	ror    $0xd,%eax
   1c30c:	45 89 d7             	mov    %r10d,%r15d
   1c30f:	46 8d 14 16          	lea    (%rsi,%r10,1),%r10d
   1c313:	44 31 e0             	xor    %r12d,%eax
   1c316:	41 89 dc             	mov    %ebx,%r12d
   1c319:	89 fe                	mov    %edi,%esi
   1c31b:	41 c1 c4 0a          	rol    $0xa,%r12d
   1c31f:	21 de                	and    %ebx,%esi
   1c321:	44 31 e0             	xor    %r12d,%eax
   1c324:	41 89 fc             	mov    %edi,%r12d
   1c327:	41 09 dc             	or     %ebx,%r12d
   1c32a:	41 21 cc             	and    %ecx,%r12d
   1c32d:	44 09 e6             	or     %r12d,%esi
   1c330:	44 8d 24 30          	lea    (%rax,%rsi,1),%r12d
   1c334:	44 89 f6             	mov    %r14d,%esi
   1c337:	41 8b 45 1c          	mov    0x1c(%r13),%eax
   1c33b:	c1 c6 0f             	rol    $0xf,%esi
   1c33e:	45 01 fc             	add    %r15d,%r12d
   1c341:	41 89 f7             	mov    %esi,%r15d
   1c344:	44 89 f6             	mov    %r14d,%esi
   1c347:	c1 c6 0d             	rol    $0xd,%esi
   1c34a:	41 c1 ee 0a          	shr    $0xa,%r14d
   1c34e:	44 31 fe             	xor    %r15d,%esi
   1c351:	44 31 f6             	xor    %r14d,%esi
   1c354:	41 89 c6             	mov    %eax,%r14d
   1c357:	44 01 c6             	add    %r8d,%esi
   1c35a:	41 89 c0             	mov    %eax,%r8d
   1c35d:	41 c1 ce 07          	ror    $0x7,%r14d
   1c361:	41 c1 c0 0e          	rol    $0xe,%r8d
   1c365:	45 31 c6             	xor    %r8d,%r14d
   1c368:	41 89 c0             	mov    %eax,%r8d
   1c36b:	41 c1 e8 03          	shr    $0x3,%r8d
   1c36f:	45 31 f0             	xor    %r14d,%r8d
   1c372:	44 8b b5 ac fe ff ff 	mov    -0x154(%rbp),%r14d
   1c379:	44 01 c6             	add    %r8d,%esi
   1c37c:	45 89 e0             	mov    %r12d,%r8d
   1c37f:	41 89 75 58          	mov    %esi,0x58(%r13)
   1c383:	01 d6                	add    %edx,%esi
   1c385:	44 89 d2             	mov    %r10d,%edx
   1c388:	45 31 de             	xor    %r11d,%r14d
   1c38b:	c1 ca 06             	ror    $0x6,%edx
   1c38e:	45 21 d6             	and    %r10d,%r14d
   1c391:	45 89 f7             	mov    %r14d,%r15d
   1c394:	45 31 df             	xor    %r11d,%r15d
   1c397:	45 8d 34 37          	lea    (%r15,%rsi,1),%r14d
   1c39b:	89 d6                	mov    %edx,%esi
   1c39d:	44 89 d2             	mov    %r10d,%edx
   1c3a0:	c1 ca 0b             	ror    $0xb,%edx
   1c3a3:	45 89 e7             	mov    %r12d,%r15d
   1c3a6:	41 c1 c8 02          	ror    $0x2,%r8d
   1c3aa:	31 d6                	xor    %edx,%esi
   1c3ac:	44 89 d2             	mov    %r10d,%edx
   1c3af:	41 c1 c7 0a          	rol    $0xa,%r15d
   1c3b3:	c1 c2 07             	rol    $0x7,%edx
   1c3b6:	03 85 a0 fe ff ff    	add    -0x160(%rbp),%eax
   1c3bc:	31 f2                	xor    %esi,%edx
   1c3be:	8b b5 7c fe ff ff    	mov    -0x184(%rbp),%esi
   1c3c4:	44 01 f2             	add    %r14d,%edx
   1c3c7:	01 d6                	add    %edx,%esi
   1c3c9:	44 89 e2             	mov    %r12d,%edx
   1c3cc:	c1 ca 0d             	ror    $0xd,%edx
   1c3cf:	44 8d 34 31          	lea    (%rcx,%rsi,1),%r14d
   1c3d3:	41 31 d0             	xor    %edx,%r8d
   1c3d6:	89 da                	mov    %ebx,%edx
   1c3d8:	45 31 f8             	xor    %r15d,%r8d
   1c3db:	41 89 df             	mov    %ebx,%r15d
   1c3de:	44 21 e2             	and    %r12d,%edx
   1c3e1:	45 09 e7             	or     %r12d,%r15d
   1c3e4:	89 d1                	mov    %edx,%ecx
   1c3e6:	41 8b 55 20          	mov    0x20(%r13),%edx
   1c3ea:	41 21 ff             	and    %edi,%r15d
   1c3ed:	44 09 f9             	or     %r15d,%ecx
   1c3f0:	45 8d 3c 08          	lea    (%r8,%rcx,1),%r15d
   1c3f4:	45 89 c8             	mov    %r9d,%r8d
   1c3f7:	41 c1 c0 0d          	rol    $0xd,%r8d
   1c3fb:	41 01 f7             	add    %esi,%r15d
   1c3fe:	44 89 ce             	mov    %r9d,%esi
   1c401:	44 89 c1             	mov    %r8d,%ecx
   1c404:	c1 c6 0f             	rol    $0xf,%esi
   1c407:	41 c1 e9 0a          	shr    $0xa,%r9d
   1c40b:	45 89 f0             	mov    %r14d,%r8d
   1c40e:	31 f1                	xor    %esi,%ecx
   1c410:	44 89 f6             	mov    %r14d,%esi
   1c413:	44 31 c9             	xor    %r9d,%ecx
   1c416:	41 89 d1             	mov    %edx,%r9d
   1c419:	c1 ce 06             	ror    $0x6,%esi
   1c41c:	01 c1                	add    %eax,%ecx
   1c41e:	89 d0                	mov    %edx,%eax
   1c420:	41 c1 c9 07          	ror    $0x7,%r9d
   1c424:	c1 c0 0e             	rol    $0xe,%eax
   1c427:	c1 ea 03             	shr    $0x3,%edx
   1c42a:	44 31 c8             	xor    %r9d,%eax
   1c42d:	31 d0                	xor    %edx,%eax
   1c42f:	44 89 e2             	mov    %r12d,%edx
   1c432:	01 c1                	add    %eax,%ecx
   1c434:	44 89 f0             	mov    %r14d,%eax
   1c437:	c1 c8 0b             	ror    $0xb,%eax
   1c43a:	41 89 4d 5c          	mov    %ecx,0x5c(%r13)
   1c43e:	31 c6                	xor    %eax,%esi
   1c440:	8b 85 ac fe ff ff    	mov    -0x154(%rbp),%eax
   1c446:	41 c1 c0 07          	rol    $0x7,%r8d
   1c44a:	44 31 c6             	xor    %r8d,%esi
   1c44d:	44 01 d9             	add    %r11d,%ecx
   1c450:	45 89 fb             	mov    %r15d,%r11d
   1c453:	41 c1 cb 02          	ror    $0x2,%r11d
   1c457:	44 21 fa             	and    %r15d,%edx
   1c45a:	83 85 a4 fe ff ff 08 	addl   $0x8,-0x15c(%rbp)
   1c461:	41 89 c0             	mov    %eax,%r8d
   1c464:	49 83 c5 20          	add    $0x20,%r13
   1c468:	48 83 85 98 fe ff ff 	addq   $0x20,-0x168(%rbp)
   1c46f:	20 
   1c470:	45 31 d0             	xor    %r10d,%r8d
   1c473:	45 21 f0             	and    %r14d,%r8d
   1c476:	41 31 c0             	xor    %eax,%r8d
   1c479:	41 01 c8             	add    %ecx,%r8d
   1c47c:	44 89 f9             	mov    %r15d,%ecx
   1c47f:	44 01 c6             	add    %r8d,%esi
   1c482:	03 b5 78 fe ff ff    	add    -0x188(%rbp),%esi
   1c488:	c1 c1 0a             	rol    $0xa,%ecx
   1c48b:	8d 04 37             	lea    (%rdi,%rsi,1),%eax
   1c48e:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%rbp)
   1c494:	44 89 f8             	mov    %r15d,%eax
   1c497:	c1 c8 0d             	ror    $0xd,%eax
   1c49a:	41 31 c3             	xor    %eax,%r11d
   1c49d:	44 31 d9             	xor    %r11d,%ecx
   1c4a0:	45 89 e3             	mov    %r12d,%r11d
   1c4a3:	45 09 fb             	or     %r15d,%r11d
   1c4a6:	41 21 db             	and    %ebx,%r11d
   1c4a9:	44 89 d8             	mov    %r11d,%eax
   1c4ac:	09 d0                	or     %edx,%eax
   1c4ae:	44 8d 1c 01          	lea    (%rcx,%rax,1),%r11d
   1c4b2:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
   1c4b8:	41 8d 3c 33          	lea    (%r11,%rsi,1),%edi
   1c4bc:	83 f8 40             	cmp    $0x40,%eax
   1c4bf:	0f 85 bb f9 ff ff    	jne    1be80 <mbedtls_sha256_process+0x540>
   1c4c5:	8b 85 ac fe ff ff    	mov    -0x154(%rbp),%eax
   1c4cb:	89 9d bc fe ff ff    	mov    %ebx,-0x144(%rbp)
   1c4d1:	44 89 95 c8 fe ff ff 	mov    %r10d,-0x138(%rbp)
   1c4d8:	44 89 a5 b8 fe ff ff 	mov    %r12d,-0x148(%rbp)
   1c4df:	44 89 b5 c4 fe ff ff 	mov    %r14d,-0x13c(%rbp)
   1c4e6:	44 89 bd b4 fe ff ff 	mov    %r15d,-0x14c(%rbp)
   1c4ed:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
   1c4f3:	8b 85 a8 fe ff ff    	mov    -0x158(%rbp),%eax
   1c4f9:	89 bd b0 fe ff ff    	mov    %edi,-0x150(%rbp)
   1c4ff:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
   1c506:	48 8b 8d 60 fe ff ff 	mov    -0x1a0(%rbp),%rcx
   1c50d:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
   1c513:	31 c0                	xor    %eax,%eax
   1c515:	eb 0c                	jmp    1c523 <mbedtls_sha256_process+0xbe3>
   1c517:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c51e:	00 00 
   1c520:	8b 3c 01             	mov    (%rcx,%rax,1),%edi
   1c523:	01 7c 02 08          	add    %edi,0x8(%rdx,%rax,1)
   1c527:	48 83 c0 04          	add    $0x4,%rax
   1c52b:	48 83 f8 20          	cmp    $0x20,%rax
   1c52f:	75 ef                	jne    1c520 <mbedtls_sha256_process+0xbe0>
   1c531:	48 81 c4 00 01 00 00 	add    $0x100,%rsp
   1c538:	5b                   	pop    %rbx
   1c539:	41 5c                	pop    %r12
   1c53b:	41 5d                	pop    %r13
   1c53d:	41 5e                	pop    %r14
   1c53f:	41 5f                	pop    %r15
   1c541:	5d                   	pop    %rbp
   1c542:	c3                   	retq   
   1c543:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c548:	4c 8b 8d 88 fe ff ff 	mov    -0x178(%rbp),%r9
   1c54f:	45 8b 69 0c          	mov    0xc(%r9),%r13d
   1c553:	45 8b 19             	mov    (%r9),%r11d
   1c556:	45 8b 41 04          	mov    0x4(%r9),%r8d
   1c55a:	41 8b 59 08          	mov    0x8(%r9),%ebx
   1c55e:	44 89 ad ac fe ff ff 	mov    %r13d,-0x154(%rbp)
   1c565:	45 8b 69 10          	mov    0x10(%r9),%r13d
   1c569:	44 89 ad a8 fe ff ff 	mov    %r13d,-0x158(%rbp)
   1c570:	45 8b 69 14          	mov    0x14(%r9),%r13d
   1c574:	44 89 ad a0 fe ff ff 	mov    %r13d,-0x160(%rbp)
   1c57b:	45 8b 69 18          	mov    0x18(%r9),%r13d
   1c57f:	45 8b 49 1c          	mov    0x1c(%r9),%r9d
   1c583:	44 89 ad 94 fe ff ff 	mov    %r13d,-0x16c(%rbp)
   1c58a:	44 89 8d 90 fe ff ff 	mov    %r9d,-0x170(%rbp)
   1c591:	e9 df f4 ff ff       	jmpq   1ba75 <mbedtls_sha256_process+0x135>
   1c596:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c59d:	00 00 00 

000000000001c5a0 <mbedtls_sha256_update>:
   1c5a0:	48 85 d2             	test   %rdx,%rdx
   1c5a3:	0f 84 94 00 00 00    	je     1c63d <mbedtls_sha256_update+0x9d>
   1c5a9:	55                   	push   %rbp
   1c5aa:	48 89 e5             	mov    %rsp,%rbp
   1c5ad:	41 57                	push   %r15
   1c5af:	41 56                	push   %r14
   1c5b1:	41 55                	push   %r13
   1c5b3:	41 54                	push   %r12
   1c5b5:	49 89 f7             	mov    %rsi,%r15
   1c5b8:	53                   	push   %rbx
   1c5b9:	bb 40 00 00 00       	mov    $0x40,%ebx
   1c5be:	49 89 fc             	mov    %rdi,%r12
   1c5c1:	49 89 d5             	mov    %rdx,%r13
   1c5c4:	48 83 ec 18          	sub    $0x18,%rsp
   1c5c8:	8b 07                	mov    (%rdi),%eax
   1c5ca:	89 c1                	mov    %eax,%ecx
   1c5cc:	01 d0                	add    %edx,%eax
   1c5ce:	83 e1 3f             	and    $0x3f,%ecx
   1c5d1:	89 07                	mov    %eax,(%rdi)
   1c5d3:	29 cb                	sub    %ecx,%ebx
   1c5d5:	39 c2                	cmp    %eax,%edx
   1c5d7:	89 4d cc             	mov    %ecx,-0x34(%rbp)
   1c5da:	76 04                	jbe    1c5e0 <mbedtls_sha256_update+0x40>
   1c5dc:	83 47 04 01          	addl   $0x1,0x4(%rdi)
   1c5e0:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1c5e3:	85 c0                	test   %eax,%eax
   1c5e5:	74 05                	je     1c5ec <mbedtls_sha256_update+0x4c>
   1c5e7:	49 39 dd             	cmp    %rbx,%r13
   1c5ea:	73 7c                	jae    1c668 <mbedtls_sha256_update+0xc8>
   1c5ec:	49 83 fd 3f          	cmp    $0x3f,%r13
   1c5f0:	76 4e                	jbe    1c640 <mbedtls_sha256_update+0xa0>
   1c5f2:	4d 89 ee             	mov    %r13,%r14
   1c5f5:	4c 89 fb             	mov    %r15,%rbx
   1c5f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1c5ff:	00 
   1c600:	48 89 de             	mov    %rbx,%rsi
   1c603:	4c 89 e7             	mov    %r12,%rdi
   1c606:	49 83 ee 40          	sub    $0x40,%r14
   1c60a:	e8 31 f3 ff ff       	callq  1b940 <mbedtls_sha256_process>
   1c60f:	48 83 c3 40          	add    $0x40,%rbx
   1c613:	49 83 fe 3f          	cmp    $0x3f,%r14
   1c617:	77 e7                	ja     1c600 <mbedtls_sha256_update+0x60>
   1c619:	49 8d 45 c0          	lea    -0x40(%r13),%rax
   1c61d:	41 83 e5 3f          	and    $0x3f,%r13d
   1c621:	48 83 e0 c0          	and    $0xffffffffffffffc0,%rax
   1c625:	4d 8d 7c 07 40       	lea    0x40(%r15,%rax,1),%r15
   1c62a:	4d 85 ed             	test   %r13,%r13
   1c62d:	75 11                	jne    1c640 <mbedtls_sha256_update+0xa0>
   1c62f:	48 83 c4 18          	add    $0x18,%rsp
   1c633:	5b                   	pop    %rbx
   1c634:	41 5c                	pop    %r12
   1c636:	41 5d                	pop    %r13
   1c638:	41 5e                	pop    %r14
   1c63a:	41 5f                	pop    %r15
   1c63c:	5d                   	pop    %rbp
   1c63d:	f3 c3                	repz retq 
   1c63f:	90                   	nop
   1c640:	44 8b 75 cc          	mov    -0x34(%rbp),%r14d
   1c644:	48 83 c4 18          	add    $0x18,%rsp
   1c648:	4c 89 ea             	mov    %r13,%rdx
   1c64b:	5b                   	pop    %rbx
   1c64c:	4c 89 fe             	mov    %r15,%rsi
   1c64f:	4b 8d 7c 34 28       	lea    0x28(%r12,%r14,1),%rdi
   1c654:	41 5c                	pop    %r12
   1c656:	41 5d                	pop    %r13
   1c658:	41 5e                	pop    %r14
   1c65a:	41 5f                	pop    %r15
   1c65c:	5d                   	pop    %rbp
   1c65d:	e9 8e 95 ff ff       	jmpq   15bf0 <memcpy>
   1c662:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1c668:	4d 8d 74 24 28       	lea    0x28(%r12),%r14
   1c66d:	89 c7                	mov    %eax,%edi
   1c66f:	4c 89 fe             	mov    %r15,%rsi
   1c672:	48 89 da             	mov    %rbx,%rdx
   1c675:	49 29 dd             	sub    %rbx,%r13
   1c678:	49 01 df             	add    %rbx,%r15
   1c67b:	4c 01 f7             	add    %r14,%rdi
   1c67e:	e8 6d 95 ff ff       	callq  15bf0 <memcpy>
   1c683:	4c 89 f6             	mov    %r14,%rsi
   1c686:	4c 89 e7             	mov    %r12,%rdi
   1c689:	e8 b2 f2 ff ff       	callq  1b940 <mbedtls_sha256_process>
   1c68e:	49 83 fd 3f          	cmp    $0x3f,%r13
   1c692:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
   1c699:	0f 87 53 ff ff ff    	ja     1c5f2 <mbedtls_sha256_update+0x52>
   1c69f:	eb 89                	jmp    1c62a <mbedtls_sha256_update+0x8a>
   1c6a1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1c6a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c6ad:	00 00 00 

000000000001c6b0 <mbedtls_sha256_finish>:
   1c6b0:	55                   	push   %rbp
   1c6b1:	48 89 e5             	mov    %rsp,%rbp
   1c6b4:	41 54                	push   %r12
   1c6b6:	53                   	push   %rbx
   1c6b7:	48 89 fb             	mov    %rdi,%rbx
   1c6ba:	49 89 f4             	mov    %rsi,%r12
   1c6bd:	48 83 ec 10          	sub    $0x10,%rsp
   1c6c1:	8b 07                	mov    (%rdi),%eax
   1c6c3:	8b 7f 04             	mov    0x4(%rdi),%edi
   1c6c6:	89 c2                	mov    %eax,%edx
   1c6c8:	8d 0c fd 00 00 00 00 	lea    0x0(,%rdi,8),%ecx
   1c6cf:	c1 ea 1d             	shr    $0x1d,%edx
   1c6d2:	09 ca                	or     %ecx,%edx
   1c6d4:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
   1c6db:	83 e0 3f             	and    $0x3f,%eax
   1c6de:	89 d6                	mov    %edx,%esi
   1c6e0:	88 55 e3             	mov    %dl,-0x1d(%rbp)
   1c6e3:	c1 ee 18             	shr    $0x18,%esi
   1c6e6:	88 4d e7             	mov    %cl,-0x19(%rbp)
   1c6e9:	40 88 75 e0          	mov    %sil,-0x20(%rbp)
   1c6ed:	89 d6                	mov    %edx,%esi
   1c6ef:	c1 ee 10             	shr    $0x10,%esi
   1c6f2:	40 88 75 e1          	mov    %sil,-0x1f(%rbp)
   1c6f6:	89 d6                	mov    %edx,%esi
   1c6f8:	89 ca                	mov    %ecx,%edx
   1c6fa:	c1 ea 18             	shr    $0x18,%edx
   1c6fd:	c1 ee 08             	shr    $0x8,%esi
   1c700:	88 55 e4             	mov    %dl,-0x1c(%rbp)
   1c703:	89 ca                	mov    %ecx,%edx
   1c705:	40 88 75 e2          	mov    %sil,-0x1e(%rbp)
   1c709:	c1 ea 10             	shr    $0x10,%edx
   1c70c:	88 55 e5             	mov    %dl,-0x1b(%rbp)
   1c70f:	89 ca                	mov    %ecx,%edx
   1c711:	c1 ea 08             	shr    $0x8,%edx
   1c714:	83 f8 37             	cmp    $0x37,%eax
   1c717:	88 55 e6             	mov    %dl,-0x1a(%rbp)
   1c71a:	0f 87 60 01 00 00    	ja     1c880 <mbedtls_sha256_finish+0x1d0>
   1c720:	ba 38 00 00 00       	mov    $0x38,%edx
   1c725:	29 c2                	sub    %eax,%edx
   1c727:	48 8d 35 12 d8 00 00 	lea    0xd812(%rip),%rsi        # 29f40 <sha256_padding>
   1c72e:	48 89 df             	mov    %rbx,%rdi
   1c731:	e8 6a fe ff ff       	callq  1c5a0 <mbedtls_sha256_update>
   1c736:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi
   1c73a:	ba 08 00 00 00       	mov    $0x8,%edx
   1c73f:	48 89 df             	mov    %rbx,%rdi
   1c742:	e8 59 fe ff ff       	callq  1c5a0 <mbedtls_sha256_update>
   1c747:	0f b6 43 0b          	movzbl 0xb(%rbx),%eax
   1c74b:	41 88 04 24          	mov    %al,(%r12)
   1c74f:	0f b7 43 0a          	movzwl 0xa(%rbx),%eax
   1c753:	41 88 44 24 01       	mov    %al,0x1(%r12)
   1c758:	8b 43 08             	mov    0x8(%rbx),%eax
   1c75b:	c1 e8 08             	shr    $0x8,%eax
   1c75e:	41 88 44 24 02       	mov    %al,0x2(%r12)
   1c763:	8b 43 08             	mov    0x8(%rbx),%eax
   1c766:	41 88 44 24 03       	mov    %al,0x3(%r12)
   1c76b:	0f b6 43 0f          	movzbl 0xf(%rbx),%eax
   1c76f:	41 88 44 24 04       	mov    %al,0x4(%r12)
   1c774:	0f b7 43 0e          	movzwl 0xe(%rbx),%eax
   1c778:	41 88 44 24 05       	mov    %al,0x5(%r12)
   1c77d:	8b 43 0c             	mov    0xc(%rbx),%eax
   1c780:	c1 e8 08             	shr    $0x8,%eax
   1c783:	41 88 44 24 06       	mov    %al,0x6(%r12)
   1c788:	8b 43 0c             	mov    0xc(%rbx),%eax
   1c78b:	41 88 44 24 07       	mov    %al,0x7(%r12)
   1c790:	0f b6 43 13          	movzbl 0x13(%rbx),%eax
   1c794:	41 88 44 24 08       	mov    %al,0x8(%r12)
   1c799:	0f b7 43 12          	movzwl 0x12(%rbx),%eax
   1c79d:	41 88 44 24 09       	mov    %al,0x9(%r12)
   1c7a2:	8b 43 10             	mov    0x10(%rbx),%eax
   1c7a5:	c1 e8 08             	shr    $0x8,%eax
   1c7a8:	41 88 44 24 0a       	mov    %al,0xa(%r12)
   1c7ad:	8b 43 10             	mov    0x10(%rbx),%eax
   1c7b0:	41 88 44 24 0b       	mov    %al,0xb(%r12)
   1c7b5:	0f b6 43 17          	movzbl 0x17(%rbx),%eax
   1c7b9:	41 88 44 24 0c       	mov    %al,0xc(%r12)
   1c7be:	0f b7 43 16          	movzwl 0x16(%rbx),%eax
   1c7c2:	41 88 44 24 0d       	mov    %al,0xd(%r12)
   1c7c7:	8b 43 14             	mov    0x14(%rbx),%eax
   1c7ca:	c1 e8 08             	shr    $0x8,%eax
   1c7cd:	41 88 44 24 0e       	mov    %al,0xe(%r12)
   1c7d2:	8b 43 14             	mov    0x14(%rbx),%eax
   1c7d5:	41 88 44 24 0f       	mov    %al,0xf(%r12)
   1c7da:	0f b6 43 1b          	movzbl 0x1b(%rbx),%eax
   1c7de:	41 88 44 24 10       	mov    %al,0x10(%r12)
   1c7e3:	0f b7 43 1a          	movzwl 0x1a(%rbx),%eax
   1c7e7:	41 88 44 24 11       	mov    %al,0x11(%r12)
   1c7ec:	8b 43 18             	mov    0x18(%rbx),%eax
   1c7ef:	c1 e8 08             	shr    $0x8,%eax
   1c7f2:	41 88 44 24 12       	mov    %al,0x12(%r12)
   1c7f7:	8b 43 18             	mov    0x18(%rbx),%eax
   1c7fa:	41 88 44 24 13       	mov    %al,0x13(%r12)
   1c7ff:	0f b6 43 1f          	movzbl 0x1f(%rbx),%eax
   1c803:	41 88 44 24 14       	mov    %al,0x14(%r12)
   1c808:	0f b7 43 1e          	movzwl 0x1e(%rbx),%eax
   1c80c:	41 88 44 24 15       	mov    %al,0x15(%r12)
   1c811:	8b 43 1c             	mov    0x1c(%rbx),%eax
   1c814:	c1 e8 08             	shr    $0x8,%eax
   1c817:	41 88 44 24 16       	mov    %al,0x16(%r12)
   1c81c:	8b 43 1c             	mov    0x1c(%rbx),%eax
   1c81f:	41 88 44 24 17       	mov    %al,0x17(%r12)
   1c824:	0f b6 43 23          	movzbl 0x23(%rbx),%eax
   1c828:	41 88 44 24 18       	mov    %al,0x18(%r12)
   1c82d:	0f b7 43 22          	movzwl 0x22(%rbx),%eax
   1c831:	41 88 44 24 19       	mov    %al,0x19(%r12)
   1c836:	8b 43 20             	mov    0x20(%rbx),%eax
   1c839:	c1 e8 08             	shr    $0x8,%eax
   1c83c:	41 88 44 24 1a       	mov    %al,0x1a(%r12)
   1c841:	8b 43 20             	mov    0x20(%rbx),%eax
   1c844:	41 88 44 24 1b       	mov    %al,0x1b(%r12)
   1c849:	8b 43 68             	mov    0x68(%rbx),%eax
   1c84c:	85 c0                	test   %eax,%eax
   1c84e:	75 25                	jne    1c875 <mbedtls_sha256_finish+0x1c5>
   1c850:	0f b6 43 27          	movzbl 0x27(%rbx),%eax
   1c854:	41 88 44 24 1c       	mov    %al,0x1c(%r12)
   1c859:	0f b7 43 26          	movzwl 0x26(%rbx),%eax
   1c85d:	41 88 44 24 1d       	mov    %al,0x1d(%r12)
   1c862:	8b 43 24             	mov    0x24(%rbx),%eax
   1c865:	c1 e8 08             	shr    $0x8,%eax
   1c868:	41 88 44 24 1e       	mov    %al,0x1e(%r12)
   1c86d:	8b 43 24             	mov    0x24(%rbx),%eax
   1c870:	41 88 44 24 1f       	mov    %al,0x1f(%r12)
   1c875:	48 83 c4 10          	add    $0x10,%rsp
   1c879:	5b                   	pop    %rbx
   1c87a:	41 5c                	pop    %r12
   1c87c:	5d                   	pop    %rbp
   1c87d:	c3                   	retq   
   1c87e:	66 90                	xchg   %ax,%ax
   1c880:	ba 78 00 00 00       	mov    $0x78,%edx
   1c885:	29 c2                	sub    %eax,%edx
   1c887:	e9 9b fe ff ff       	jmpq   1c727 <mbedtls_sha256_finish+0x77>
   1c88c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001c890 <mbedtls_sha256>:
   1c890:	55                   	push   %rbp
   1c891:	48 89 e5             	mov    %rsp,%rbp
   1c894:	41 57                	push   %r15
   1c896:	41 56                	push   %r14
   1c898:	41 55                	push   %r13
   1c89a:	41 54                	push   %r12
   1c89c:	41 89 cf             	mov    %ecx,%r15d
   1c89f:	53                   	push   %rbx
   1c8a0:	48 8d 9d 60 ff ff ff 	lea    -0xa0(%rbp),%rbx
   1c8a7:	49 89 fd             	mov    %rdi,%r13
   1c8aa:	49 89 d4             	mov    %rdx,%r12
   1c8ad:	49 89 f6             	mov    %rsi,%r14
   1c8b0:	48 83 ec 78          	sub    $0x78,%rsp
   1c8b4:	48 89 df             	mov    %rbx,%rdi
   1c8b7:	e8 24 ef ff ff       	callq  1b7e0 <mbedtls_sha256_init>
   1c8bc:	44 89 fe             	mov    %r15d,%esi
   1c8bf:	48 89 df             	mov    %rbx,%rdi
   1c8c2:	e8 d9 ef ff ff       	callq  1b8a0 <mbedtls_sha256_starts>
   1c8c7:	4c 89 f2             	mov    %r14,%rdx
   1c8ca:	4c 89 ee             	mov    %r13,%rsi
   1c8cd:	48 89 df             	mov    %rbx,%rdi
   1c8d0:	e8 cb fc ff ff       	callq  1c5a0 <mbedtls_sha256_update>
   1c8d5:	4c 89 e6             	mov    %r12,%rsi
   1c8d8:	48 89 df             	mov    %rbx,%rdi
   1c8db:	e8 d0 fd ff ff       	callq  1c6b0 <mbedtls_sha256_finish>
   1c8e0:	48 89 df             	mov    %rbx,%rdi
   1c8e3:	e8 18 ef ff ff       	callq  1b800 <mbedtls_sha256_free>
   1c8e8:	48 83 c4 78          	add    $0x78,%rsp
   1c8ec:	5b                   	pop    %rbx
   1c8ed:	41 5c                	pop    %r12
   1c8ef:	41 5d                	pop    %r13
   1c8f1:	41 5e                	pop    %r14
   1c8f3:	41 5f                	pop    %r15
   1c8f5:	5d                   	pop    %rbp
   1c8f6:	c3                   	retq   
   1c8f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1c8fe:	00 00 

000000000001c900 <mpi_sub_hlp>:
   1c900:	55                   	push   %rbp
   1c901:	48 85 ff             	test   %rdi,%rdi
   1c904:	48 89 e5             	mov    %rsp,%rbp
   1c907:	74 69                	je     1c972 <mpi_sub_hlp+0x72>
   1c909:	31 c0                	xor    %eax,%eax
   1c90b:	45 31 c0             	xor    %r8d,%r8d
   1c90e:	66 90                	xchg   %ax,%ax
   1c910:	4a 8b 0c c2          	mov    (%rdx,%r8,8),%rcx
   1c914:	45 31 d2             	xor    %r10d,%r10d
   1c917:	48 39 c1             	cmp    %rax,%rcx
   1c91a:	41 0f 92 c2          	setb   %r10b
   1c91e:	48 29 c1             	sub    %rax,%rcx
   1c921:	31 c0                	xor    %eax,%eax
   1c923:	4a 89 0c c2          	mov    %rcx,(%rdx,%r8,8)
   1c927:	4e 8b 0c c6          	mov    (%rsi,%r8,8),%r9
   1c92b:	4c 39 c9             	cmp    %r9,%rcx
   1c92e:	0f 92 c0             	setb   %al
   1c931:	4c 29 c9             	sub    %r9,%rcx
   1c934:	4a 89 0c c2          	mov    %rcx,(%rdx,%r8,8)
   1c938:	49 83 c0 01          	add    $0x1,%r8
   1c93c:	4c 01 d0             	add    %r10,%rax
   1c93f:	4c 39 c7             	cmp    %r8,%rdi
   1c942:	75 cc                	jne    1c910 <mpi_sub_hlp+0x10>
   1c944:	48 85 c0             	test   %rax,%rax
   1c947:	48 8d 14 fa          	lea    (%rdx,%rdi,8),%rdx
   1c94b:	75 06                	jne    1c953 <mpi_sub_hlp+0x53>
   1c94d:	eb 23                	jmp    1c972 <mpi_sub_hlp+0x72>
   1c94f:	90                   	nop
   1c950:	48 89 f8             	mov    %rdi,%rax
   1c953:	48 8b 0a             	mov    (%rdx),%rcx
   1c956:	31 ff                	xor    %edi,%edi
   1c958:	48 89 ce             	mov    %rcx,%rsi
   1c95b:	48 39 c1             	cmp    %rax,%rcx
   1c95e:	40 0f 92 c7          	setb   %dil
   1c962:	48 29 c6             	sub    %rax,%rsi
   1c965:	48 83 c2 08          	add    $0x8,%rdx
   1c969:	48 89 72 f8          	mov    %rsi,-0x8(%rdx)
   1c96d:	48 39 c1             	cmp    %rax,%rcx
   1c970:	72 de                	jb     1c950 <mpi_sub_hlp+0x50>
   1c972:	5d                   	pop    %rbp
   1c973:	c3                   	retq   
   1c974:	66 90                	xchg   %ax,%ax
   1c976:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1c97d:	00 00 00 

000000000001c980 <mpi_mul_hlp>:
   1c980:	55                   	push   %rbp
   1c981:	49 89 f9             	mov    %rdi,%r9
   1c984:	48 89 d7             	mov    %rdx,%rdi
   1c987:	49 83 f9 0f          	cmp    $0xf,%r9
   1c98b:	48 89 e5             	mov    %rsp,%rbp
   1c98e:	53                   	push   %rbx
   1c98f:	48 89 cb             	mov    %rcx,%rbx
   1c992:	0f 86 70 03 00 00    	jbe    1cd08 <mpi_mul_hlp+0x388>
   1c998:	4d 89 ca             	mov    %r9,%r10
   1c99b:	31 c9                	xor    %ecx,%ecx
   1c99d:	0f 1f 00             	nopl   (%rax)
   1c9a0:	49 83 ea 10          	sub    $0x10,%r10
   1c9a4:	4d 31 c0             	xor    %r8,%r8
   1c9a7:	48 8b 06             	mov    (%rsi),%rax
   1c9aa:	48 f7 e3             	mul    %rbx
   1c9ad:	48 83 c6 08          	add    $0x8,%rsi
   1c9b1:	48 01 c8             	add    %rcx,%rax
   1c9b4:	4c 89 c1             	mov    %r8,%rcx
   1c9b7:	48 83 d2 00          	adc    $0x0,%rdx
   1c9bb:	90                   	nop
   1c9bc:	48 01 07             	add    %rax,(%rdi)
   1c9bf:	48 11 d1             	adc    %rdx,%rcx
   1c9c2:	48 83 c7 08          	add    $0x8,%rdi
   1c9c6:	48 8b 06             	mov    (%rsi),%rax
   1c9c9:	48 f7 e3             	mul    %rbx
   1c9cc:	48 83 c6 08          	add    $0x8,%rsi
   1c9d0:	48 01 c8             	add    %rcx,%rax
   1c9d3:	4c 89 c1             	mov    %r8,%rcx
   1c9d6:	48 83 d2 00          	adc    $0x0,%rdx
   1c9da:	90                   	nop
   1c9db:	48 01 07             	add    %rax,(%rdi)
   1c9de:	48 11 d1             	adc    %rdx,%rcx
   1c9e1:	48 83 c7 08          	add    $0x8,%rdi
   1c9e5:	48 8b 06             	mov    (%rsi),%rax
   1c9e8:	48 f7 e3             	mul    %rbx
   1c9eb:	48 83 c6 08          	add    $0x8,%rsi
   1c9ef:	48 01 c8             	add    %rcx,%rax
   1c9f2:	4c 89 c1             	mov    %r8,%rcx
   1c9f5:	48 83 d2 00          	adc    $0x0,%rdx
   1c9f9:	90                   	nop
   1c9fa:	48 01 07             	add    %rax,(%rdi)
   1c9fd:	48 11 d1             	adc    %rdx,%rcx
   1ca00:	48 83 c7 08          	add    $0x8,%rdi
   1ca04:	48 8b 06             	mov    (%rsi),%rax
   1ca07:	48 f7 e3             	mul    %rbx
   1ca0a:	48 83 c6 08          	add    $0x8,%rsi
   1ca0e:	48 01 c8             	add    %rcx,%rax
   1ca11:	4c 89 c1             	mov    %r8,%rcx
   1ca14:	48 83 d2 00          	adc    $0x0,%rdx
   1ca18:	90                   	nop
   1ca19:	48 01 07             	add    %rax,(%rdi)
   1ca1c:	48 11 d1             	adc    %rdx,%rcx
   1ca1f:	48 83 c7 08          	add    $0x8,%rdi
   1ca23:	48 8b 06             	mov    (%rsi),%rax
   1ca26:	48 f7 e3             	mul    %rbx
   1ca29:	48 83 c6 08          	add    $0x8,%rsi
   1ca2d:	48 01 c8             	add    %rcx,%rax
   1ca30:	4c 89 c1             	mov    %r8,%rcx
   1ca33:	48 83 d2 00          	adc    $0x0,%rdx
   1ca37:	90                   	nop
   1ca38:	48 01 07             	add    %rax,(%rdi)
   1ca3b:	48 11 d1             	adc    %rdx,%rcx
   1ca3e:	48 83 c7 08          	add    $0x8,%rdi
   1ca42:	48 8b 06             	mov    (%rsi),%rax
   1ca45:	48 f7 e3             	mul    %rbx
   1ca48:	48 83 c6 08          	add    $0x8,%rsi
   1ca4c:	48 01 c8             	add    %rcx,%rax
   1ca4f:	4c 89 c1             	mov    %r8,%rcx
   1ca52:	48 83 d2 00          	adc    $0x0,%rdx
   1ca56:	90                   	nop
   1ca57:	48 01 07             	add    %rax,(%rdi)
   1ca5a:	48 11 d1             	adc    %rdx,%rcx
   1ca5d:	48 83 c7 08          	add    $0x8,%rdi
   1ca61:	48 8b 06             	mov    (%rsi),%rax
   1ca64:	48 f7 e3             	mul    %rbx
   1ca67:	48 83 c6 08          	add    $0x8,%rsi
   1ca6b:	48 01 c8             	add    %rcx,%rax
   1ca6e:	4c 89 c1             	mov    %r8,%rcx
   1ca71:	48 83 d2 00          	adc    $0x0,%rdx
   1ca75:	90                   	nop
   1ca76:	48 01 07             	add    %rax,(%rdi)
   1ca79:	48 11 d1             	adc    %rdx,%rcx
   1ca7c:	48 83 c7 08          	add    $0x8,%rdi
   1ca80:	48 8b 06             	mov    (%rsi),%rax
   1ca83:	48 f7 e3             	mul    %rbx
   1ca86:	48 83 c6 08          	add    $0x8,%rsi
   1ca8a:	48 01 c8             	add    %rcx,%rax
   1ca8d:	4c 89 c1             	mov    %r8,%rcx
   1ca90:	48 83 d2 00          	adc    $0x0,%rdx
   1ca94:	90                   	nop
   1ca95:	48 01 07             	add    %rax,(%rdi)
   1ca98:	48 11 d1             	adc    %rdx,%rcx
   1ca9b:	48 83 c7 08          	add    $0x8,%rdi
   1ca9f:	48 8b 06             	mov    (%rsi),%rax
   1caa2:	48 f7 e3             	mul    %rbx
   1caa5:	48 83 c6 08          	add    $0x8,%rsi
   1caa9:	48 01 c8             	add    %rcx,%rax
   1caac:	4c 89 c1             	mov    %r8,%rcx
   1caaf:	48 83 d2 00          	adc    $0x0,%rdx
   1cab3:	90                   	nop
   1cab4:	48 01 07             	add    %rax,(%rdi)
   1cab7:	48 11 d1             	adc    %rdx,%rcx
   1caba:	48 83 c7 08          	add    $0x8,%rdi
   1cabe:	48 8b 06             	mov    (%rsi),%rax
   1cac1:	48 f7 e3             	mul    %rbx
   1cac4:	48 83 c6 08          	add    $0x8,%rsi
   1cac8:	48 01 c8             	add    %rcx,%rax
   1cacb:	4c 89 c1             	mov    %r8,%rcx
   1cace:	48 83 d2 00          	adc    $0x0,%rdx
   1cad2:	90                   	nop
   1cad3:	48 01 07             	add    %rax,(%rdi)
   1cad6:	48 11 d1             	adc    %rdx,%rcx
   1cad9:	48 83 c7 08          	add    $0x8,%rdi
   1cadd:	48 8b 06             	mov    (%rsi),%rax
   1cae0:	48 f7 e3             	mul    %rbx
   1cae3:	48 83 c6 08          	add    $0x8,%rsi
   1cae7:	48 01 c8             	add    %rcx,%rax
   1caea:	4c 89 c1             	mov    %r8,%rcx
   1caed:	48 83 d2 00          	adc    $0x0,%rdx
   1caf1:	90                   	nop
   1caf2:	48 01 07             	add    %rax,(%rdi)
   1caf5:	48 11 d1             	adc    %rdx,%rcx
   1caf8:	48 83 c7 08          	add    $0x8,%rdi
   1cafc:	48 8b 06             	mov    (%rsi),%rax
   1caff:	48 f7 e3             	mul    %rbx
   1cb02:	48 83 c6 08          	add    $0x8,%rsi
   1cb06:	48 01 c8             	add    %rcx,%rax
   1cb09:	4c 89 c1             	mov    %r8,%rcx
   1cb0c:	48 83 d2 00          	adc    $0x0,%rdx
   1cb10:	90                   	nop
   1cb11:	48 01 07             	add    %rax,(%rdi)
   1cb14:	48 11 d1             	adc    %rdx,%rcx
   1cb17:	48 83 c7 08          	add    $0x8,%rdi
   1cb1b:	48 8b 06             	mov    (%rsi),%rax
   1cb1e:	48 f7 e3             	mul    %rbx
   1cb21:	48 83 c6 08          	add    $0x8,%rsi
   1cb25:	48 01 c8             	add    %rcx,%rax
   1cb28:	4c 89 c1             	mov    %r8,%rcx
   1cb2b:	48 83 d2 00          	adc    $0x0,%rdx
   1cb2f:	90                   	nop
   1cb30:	48 01 07             	add    %rax,(%rdi)
   1cb33:	48 11 d1             	adc    %rdx,%rcx
   1cb36:	48 83 c7 08          	add    $0x8,%rdi
   1cb3a:	48 8b 06             	mov    (%rsi),%rax
   1cb3d:	48 f7 e3             	mul    %rbx
   1cb40:	48 83 c6 08          	add    $0x8,%rsi
   1cb44:	48 01 c8             	add    %rcx,%rax
   1cb47:	4c 89 c1             	mov    %r8,%rcx
   1cb4a:	48 83 d2 00          	adc    $0x0,%rdx
   1cb4e:	90                   	nop
   1cb4f:	48 01 07             	add    %rax,(%rdi)
   1cb52:	48 11 d1             	adc    %rdx,%rcx
   1cb55:	48 83 c7 08          	add    $0x8,%rdi
   1cb59:	48 8b 06             	mov    (%rsi),%rax
   1cb5c:	48 f7 e3             	mul    %rbx
   1cb5f:	48 83 c6 08          	add    $0x8,%rsi
   1cb63:	48 01 c8             	add    %rcx,%rax
   1cb66:	4c 89 c1             	mov    %r8,%rcx
   1cb69:	48 83 d2 00          	adc    $0x0,%rdx
   1cb6d:	90                   	nop
   1cb6e:	48 01 07             	add    %rax,(%rdi)
   1cb71:	48 11 d1             	adc    %rdx,%rcx
   1cb74:	48 83 c7 08          	add    $0x8,%rdi
   1cb78:	48 8b 06             	mov    (%rsi),%rax
   1cb7b:	48 f7 e3             	mul    %rbx
   1cb7e:	48 83 c6 08          	add    $0x8,%rsi
   1cb82:	48 01 c8             	add    %rcx,%rax
   1cb85:	4c 89 c1             	mov    %r8,%rcx
   1cb88:	48 83 d2 00          	adc    $0x0,%rdx
   1cb8c:	90                   	nop
   1cb8d:	48 01 07             	add    %rax,(%rdi)
   1cb90:	48 11 d1             	adc    %rdx,%rcx
   1cb93:	48 83 c7 08          	add    $0x8,%rdi
   1cb97:	49 83 fa 0f          	cmp    $0xf,%r10
   1cb9b:	0f 87 ff fd ff ff    	ja     1c9a0 <mpi_mul_hlp+0x20>
   1cba1:	41 83 e1 0f          	and    $0xf,%r9d
   1cba5:	49 83 f9 07          	cmp    $0x7,%r9
   1cba9:	0f 86 ff 00 00 00    	jbe    1ccae <mpi_mul_hlp+0x32e>
   1cbaf:	41 83 e1 07          	and    $0x7,%r9d
   1cbb3:	4d 31 c0             	xor    %r8,%r8
   1cbb6:	48 8b 06             	mov    (%rsi),%rax
   1cbb9:	48 f7 e3             	mul    %rbx
   1cbbc:	48 83 c6 08          	add    $0x8,%rsi
   1cbc0:	48 01 c8             	add    %rcx,%rax
   1cbc3:	4c 89 c1             	mov    %r8,%rcx
   1cbc6:	48 83 d2 00          	adc    $0x0,%rdx
   1cbca:	90                   	nop
   1cbcb:	48 01 07             	add    %rax,(%rdi)
   1cbce:	48 11 d1             	adc    %rdx,%rcx
   1cbd1:	48 83 c7 08          	add    $0x8,%rdi
   1cbd5:	48 8b 06             	mov    (%rsi),%rax
   1cbd8:	48 f7 e3             	mul    %rbx
   1cbdb:	48 83 c6 08          	add    $0x8,%rsi
   1cbdf:	48 01 c8             	add    %rcx,%rax
   1cbe2:	4c 89 c1             	mov    %r8,%rcx
   1cbe5:	48 83 d2 00          	adc    $0x0,%rdx
   1cbe9:	90                   	nop
   1cbea:	48 01 07             	add    %rax,(%rdi)
   1cbed:	48 11 d1             	adc    %rdx,%rcx
   1cbf0:	48 83 c7 08          	add    $0x8,%rdi
   1cbf4:	48 8b 06             	mov    (%rsi),%rax
   1cbf7:	48 f7 e3             	mul    %rbx
   1cbfa:	48 83 c6 08          	add    $0x8,%rsi
   1cbfe:	48 01 c8             	add    %rcx,%rax
   1cc01:	4c 89 c1             	mov    %r8,%rcx
   1cc04:	48 83 d2 00          	adc    $0x0,%rdx
   1cc08:	90                   	nop
   1cc09:	48 01 07             	add    %rax,(%rdi)
   1cc0c:	48 11 d1             	adc    %rdx,%rcx
   1cc0f:	48 83 c7 08          	add    $0x8,%rdi
   1cc13:	48 8b 06             	mov    (%rsi),%rax
   1cc16:	48 f7 e3             	mul    %rbx
   1cc19:	48 83 c6 08          	add    $0x8,%rsi
   1cc1d:	48 01 c8             	add    %rcx,%rax
   1cc20:	4c 89 c1             	mov    %r8,%rcx
   1cc23:	48 83 d2 00          	adc    $0x0,%rdx
   1cc27:	90                   	nop
   1cc28:	48 01 07             	add    %rax,(%rdi)
   1cc2b:	48 11 d1             	adc    %rdx,%rcx
   1cc2e:	48 83 c7 08          	add    $0x8,%rdi
   1cc32:	48 8b 06             	mov    (%rsi),%rax
   1cc35:	48 f7 e3             	mul    %rbx
   1cc38:	48 83 c6 08          	add    $0x8,%rsi
   1cc3c:	48 01 c8             	add    %rcx,%rax
   1cc3f:	4c 89 c1             	mov    %r8,%rcx
   1cc42:	48 83 d2 00          	adc    $0x0,%rdx
   1cc46:	90                   	nop
   1cc47:	48 01 07             	add    %rax,(%rdi)
   1cc4a:	48 11 d1             	adc    %rdx,%rcx
   1cc4d:	48 83 c7 08          	add    $0x8,%rdi
   1cc51:	48 8b 06             	mov    (%rsi),%rax
   1cc54:	48 f7 e3             	mul    %rbx
   1cc57:	48 83 c6 08          	add    $0x8,%rsi
   1cc5b:	48 01 c8             	add    %rcx,%rax
   1cc5e:	4c 89 c1             	mov    %r8,%rcx
   1cc61:	48 83 d2 00          	adc    $0x0,%rdx
   1cc65:	90                   	nop
   1cc66:	48 01 07             	add    %rax,(%rdi)
   1cc69:	48 11 d1             	adc    %rdx,%rcx
   1cc6c:	48 83 c7 08          	add    $0x8,%rdi
   1cc70:	48 8b 06             	mov    (%rsi),%rax
   1cc73:	48 f7 e3             	mul    %rbx
   1cc76:	48 83 c6 08          	add    $0x8,%rsi
   1cc7a:	48 01 c8             	add    %rcx,%rax
   1cc7d:	4c 89 c1             	mov    %r8,%rcx
   1cc80:	48 83 d2 00          	adc    $0x0,%rdx
   1cc84:	90                   	nop
   1cc85:	48 01 07             	add    %rax,(%rdi)
   1cc88:	48 11 d1             	adc    %rdx,%rcx
   1cc8b:	48 83 c7 08          	add    $0x8,%rdi
   1cc8f:	48 8b 06             	mov    (%rsi),%rax
   1cc92:	48 f7 e3             	mul    %rbx
   1cc95:	48 83 c6 08          	add    $0x8,%rsi
   1cc99:	48 01 c8             	add    %rcx,%rax
   1cc9c:	4c 89 c1             	mov    %r8,%rcx
   1cc9f:	48 83 d2 00          	adc    $0x0,%rdx
   1cca3:	90                   	nop
   1cca4:	48 01 07             	add    %rax,(%rdi)
   1cca7:	48 11 d1             	adc    %rdx,%rcx
   1ccaa:	48 83 c7 08          	add    $0x8,%rdi
   1ccae:	4d 85 c9             	test   %r9,%r9
   1ccb1:	74 38                	je     1cceb <mpi_mul_hlp+0x36b>
   1ccb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ccb8:	4d 31 c0             	xor    %r8,%r8
   1ccbb:	48 8b 06             	mov    (%rsi),%rax
   1ccbe:	48 f7 e3             	mul    %rbx
   1ccc1:	48 83 c6 08          	add    $0x8,%rsi
   1ccc5:	48 01 c8             	add    %rcx,%rax
   1ccc8:	4c 89 c1             	mov    %r8,%rcx
   1cccb:	48 83 d2 00          	adc    $0x0,%rdx
   1cccf:	90                   	nop
   1ccd0:	48 01 07             	add    %rax,(%rdi)
   1ccd3:	48 11 d1             	adc    %rdx,%rcx
   1ccd6:	48 83 c7 08          	add    $0x8,%rdi
   1ccda:	49 83 e9 01          	sub    $0x1,%r9
   1ccde:	75 d8                	jne    1ccb8 <mpi_mul_hlp+0x338>
   1cce0:	eb 09                	jmp    1cceb <mpi_mul_hlp+0x36b>
   1cce2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1cce8:	48 89 d1             	mov    %rdx,%rcx
   1cceb:	48 89 c8             	mov    %rcx,%rax
   1ccee:	48 03 07             	add    (%rdi),%rax
   1ccf1:	31 d2                	xor    %edx,%edx
   1ccf3:	48 39 c1             	cmp    %rax,%rcx
   1ccf6:	48 89 07             	mov    %rax,(%rdi)
   1ccf9:	0f 97 c2             	seta   %dl
   1ccfc:	48 83 c7 08          	add    $0x8,%rdi
   1cd00:	48 39 c1             	cmp    %rax,%rcx
   1cd03:	77 e3                	ja     1cce8 <mpi_mul_hlp+0x368>
   1cd05:	5b                   	pop    %rbx
   1cd06:	5d                   	pop    %rbp
   1cd07:	c3                   	retq   
   1cd08:	31 c9                	xor    %ecx,%ecx
   1cd0a:	e9 96 fe ff ff       	jmpq   1cba5 <mpi_mul_hlp+0x225>
   1cd0f:	90                   	nop

000000000001cd10 <mbedtls_mpi_init>:
   1cd10:	55                   	push   %rbp
   1cd11:	48 85 ff             	test   %rdi,%rdi
   1cd14:	48 89 e5             	mov    %rsp,%rbp
   1cd17:	74 16                	je     1cd2f <mbedtls_mpi_init+0x1f>
   1cd19:	c7 07 01 00 00 00    	movl   $0x1,(%rdi)
   1cd1f:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
   1cd26:	00 
   1cd27:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
   1cd2e:	00 
   1cd2f:	5d                   	pop    %rbp
   1cd30:	c3                   	retq   
   1cd31:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1cd36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1cd3d:	00 00 00 

000000000001cd40 <mbedtls_mpi_free>:
   1cd40:	48 85 ff             	test   %rdi,%rdi
   1cd43:	74 61                	je     1cda6 <mbedtls_mpi_free+0x66>
   1cd45:	55                   	push   %rbp
   1cd46:	48 89 e5             	mov    %rsp,%rbp
   1cd49:	53                   	push   %rbx
   1cd4a:	48 89 fb             	mov    %rdi,%rbx
   1cd4d:	48 83 ec 08          	sub    $0x8,%rsp
   1cd51:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1cd55:	48 85 ff             	test   %rdi,%rdi
   1cd58:	74 30                	je     1cd8a <mbedtls_mpi_free+0x4a>
   1cd5a:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   1cd5e:	48 89 f8             	mov    %rdi,%rax
   1cd61:	48 85 c9             	test   %rcx,%rcx
   1cd64:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
   1cd68:	74 1b                	je     1cd85 <mbedtls_mpi_free+0x45>
   1cd6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1cd70:	48 83 ea 01          	sub    $0x1,%rdx
   1cd74:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1cd7b:	48 83 c0 08          	add    $0x8,%rax
   1cd7f:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1cd83:	75 eb                	jne    1cd70 <mbedtls_mpi_free+0x30>
   1cd85:	e8 d6 c6 fe ff       	callq  9460 <free>
   1cd8a:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
   1cd90:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   1cd97:	00 
   1cd98:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   1cd9f:	00 
   1cda0:	48 83 c4 08          	add    $0x8,%rsp
   1cda4:	5b                   	pop    %rbx
   1cda5:	5d                   	pop    %rbp
   1cda6:	f3 c3                	repz retq 
   1cda8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1cdaf:	00 

000000000001cdb0 <mbedtls_mpi_grow>:
   1cdb0:	48 81 fe 10 27 00 00 	cmp    $0x2710,%rsi
   1cdb7:	0f 87 a3 00 00 00    	ja     1ce60 <mbedtls_mpi_grow+0xb0>
   1cdbd:	31 c0                	xor    %eax,%eax
   1cdbf:	48 3b 77 08          	cmp    0x8(%rdi),%rsi
   1cdc3:	77 0b                	ja     1cdd0 <mbedtls_mpi_grow+0x20>
   1cdc5:	c3                   	retq   
   1cdc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1cdcd:	00 00 00 
   1cdd0:	55                   	push   %rbp
   1cdd1:	48 89 e5             	mov    %rsp,%rbp
   1cdd4:	41 55                	push   %r13
   1cdd6:	41 54                	push   %r12
   1cdd8:	53                   	push   %rbx
   1cdd9:	49 89 f4             	mov    %rsi,%r12
   1cddc:	48 89 fb             	mov    %rdi,%rbx
   1cddf:	be 08 00 00 00       	mov    $0x8,%esi
   1cde4:	4c 89 e7             	mov    %r12,%rdi
   1cde7:	48 83 ec 08          	sub    $0x8,%rsp
   1cdeb:	e8 30 c6 fe ff       	callq  9420 <calloc>
   1cdf0:	48 85 c0             	test   %rax,%rax
   1cdf3:	49 89 c5             	mov    %rax,%r13
   1cdf6:	74 6e                	je     1ce66 <mbedtls_mpi_grow+0xb6>
   1cdf8:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   1cdfc:	48 85 f6             	test   %rsi,%rsi
   1cdff:	74 49                	je     1ce4a <mbedtls_mpi_grow+0x9a>
   1ce01:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1ce05:	4c 89 ef             	mov    %r13,%rdi
   1ce08:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ce0f:	00 
   1ce10:	e8 db 8d ff ff       	callq  15bf0 <memcpy>
   1ce15:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   1ce19:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1ce1d:	48 85 c9             	test   %rcx,%rcx
   1ce20:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
   1ce24:	48 89 f8             	mov    %rdi,%rax
   1ce27:	74 1c                	je     1ce45 <mbedtls_mpi_grow+0x95>
   1ce29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ce30:	48 83 ea 01          	sub    $0x1,%rdx
   1ce34:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1ce3b:	48 83 c0 08          	add    $0x8,%rax
   1ce3f:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1ce43:	75 eb                	jne    1ce30 <mbedtls_mpi_grow+0x80>
   1ce45:	e8 16 c6 fe ff       	callq  9460 <free>
   1ce4a:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   1ce4e:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
   1ce52:	31 c0                	xor    %eax,%eax
   1ce54:	48 83 c4 08          	add    $0x8,%rsp
   1ce58:	5b                   	pop    %rbx
   1ce59:	41 5c                	pop    %r12
   1ce5b:	41 5d                	pop    %r13
   1ce5d:	5d                   	pop    %rbp
   1ce5e:	c3                   	retq   
   1ce5f:	90                   	nop
   1ce60:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   1ce65:	c3                   	retq   
   1ce66:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   1ce6b:	eb e7                	jmp    1ce54 <mbedtls_mpi_grow+0xa4>
   1ce6d:	0f 1f 00             	nopl   (%rax)

000000000001ce70 <mbedtls_mpi_shrink>:
   1ce70:	55                   	push   %rbp
   1ce71:	48 89 e5             	mov    %rsp,%rbp
   1ce74:	41 55                	push   %r13
   1ce76:	41 54                	push   %r12
   1ce78:	53                   	push   %rbx
   1ce79:	48 83 ec 08          	sub    $0x8,%rsp
   1ce7d:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   1ce81:	48 39 f2             	cmp    %rsi,%rdx
   1ce84:	0f 86 c6 00 00 00    	jbe    1cf50 <mbedtls_mpi_shrink+0xe0>
   1ce8a:	48 89 d0             	mov    %rdx,%rax
   1ce8d:	48 83 e8 01          	sub    $0x1,%rax
   1ce91:	74 24                	je     1ceb7 <mbedtls_mpi_shrink+0x47>
   1ce93:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
   1ce97:	48 83 3c c1 00       	cmpq   $0x0,(%rcx,%rax,8)
   1ce9c:	74 10                	je     1ceae <mbedtls_mpi_shrink+0x3e>
   1ce9e:	eb 1c                	jmp    1cebc <mbedtls_mpi_shrink+0x4c>
   1cea0:	48 83 3c d1 00       	cmpq   $0x0,(%rcx,%rdx,8)
   1cea5:	0f 85 95 00 00 00    	jne    1cf40 <mbedtls_mpi_shrink+0xd0>
   1ceab:	48 89 d0             	mov    %rdx,%rax
   1ceae:	48 89 c2             	mov    %rax,%rdx
   1ceb1:	48 83 ea 01          	sub    $0x1,%rdx
   1ceb5:	75 e9                	jne    1cea0 <mbedtls_mpi_shrink+0x30>
   1ceb7:	ba 01 00 00 00       	mov    $0x1,%edx
   1cebc:	48 39 d6             	cmp    %rdx,%rsi
   1cebf:	48 89 fb             	mov    %rdi,%rbx
   1cec2:	48 0f 43 d6          	cmovae %rsi,%rdx
   1cec6:	be 08 00 00 00       	mov    $0x8,%esi
   1cecb:	48 89 d7             	mov    %rdx,%rdi
   1cece:	49 89 d4             	mov    %rdx,%r12
   1ced1:	e8 4a c5 fe ff       	callq  9420 <calloc>
   1ced6:	48 85 c0             	test   %rax,%rax
   1ced9:	49 89 c5             	mov    %rax,%r13
   1cedc:	0f 84 7d 00 00 00    	je     1cf5f <mbedtls_mpi_shrink+0xef>
   1cee2:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   1cee6:	48 85 f6             	test   %rsi,%rsi
   1cee9:	74 3f                	je     1cf2a <mbedtls_mpi_shrink+0xba>
   1ceeb:	4a 8d 14 e5 00 00 00 	lea    0x0(,%r12,8),%rdx
   1cef2:	00 
   1cef3:	48 89 c7             	mov    %rax,%rdi
   1cef6:	e8 f5 8c ff ff       	callq  15bf0 <memcpy>
   1cefb:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   1ceff:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1cf03:	48 85 c9             	test   %rcx,%rcx
   1cf06:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
   1cf0a:	48 89 f8             	mov    %rdi,%rax
   1cf0d:	74 16                	je     1cf25 <mbedtls_mpi_shrink+0xb5>
   1cf0f:	90                   	nop
   1cf10:	48 83 ea 01          	sub    $0x1,%rdx
   1cf14:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1cf1b:	48 83 c0 08          	add    $0x8,%rax
   1cf1f:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1cf23:	75 eb                	jne    1cf10 <mbedtls_mpi_shrink+0xa0>
   1cf25:	e8 36 c5 fe ff       	callq  9460 <free>
   1cf2a:	4c 89 63 08          	mov    %r12,0x8(%rbx)
   1cf2e:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
   1cf32:	31 c0                	xor    %eax,%eax
   1cf34:	48 83 c4 08          	add    $0x8,%rsp
   1cf38:	5b                   	pop    %rbx
   1cf39:	41 5c                	pop    %r12
   1cf3b:	41 5d                	pop    %r13
   1cf3d:	5d                   	pop    %rbp
   1cf3e:	c3                   	retq   
   1cf3f:	90                   	nop
   1cf40:	48 89 c2             	mov    %rax,%rdx
   1cf43:	e9 74 ff ff ff       	jmpq   1cebc <mbedtls_mpi_shrink+0x4c>
   1cf48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1cf4f:	00 
   1cf50:	48 83 c4 08          	add    $0x8,%rsp
   1cf54:	5b                   	pop    %rbx
   1cf55:	41 5c                	pop    %r12
   1cf57:	41 5d                	pop    %r13
   1cf59:	5d                   	pop    %rbp
   1cf5a:	e9 51 fe ff ff       	jmpq   1cdb0 <mbedtls_mpi_grow>
   1cf5f:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   1cf64:	eb ce                	jmp    1cf34 <mbedtls_mpi_shrink+0xc4>
   1cf66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1cf6d:	00 00 00 

000000000001cf70 <mbedtls_mpi_copy>:
   1cf70:	55                   	push   %rbp
   1cf71:	48 39 f7             	cmp    %rsi,%rdi
   1cf74:	48 89 e5             	mov    %rsp,%rbp
   1cf77:	41 56                	push   %r14
   1cf79:	41 55                	push   %r13
   1cf7b:	41 54                	push   %r12
   1cf7d:	53                   	push   %rbx
   1cf7e:	0f 84 a4 00 00 00    	je     1d028 <mbedtls_mpi_copy+0xb8>
   1cf84:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
   1cf88:	48 89 f3             	mov    %rsi,%rbx
   1cf8b:	49 89 fc             	mov    %rdi,%r12
   1cf8e:	48 85 c9             	test   %rcx,%rcx
   1cf91:	0f 84 a0 00 00 00    	je     1d037 <mbedtls_mpi_copy+0xc7>
   1cf97:	4c 8b 6e 08          	mov    0x8(%rsi),%r13
   1cf9b:	4c 89 e8             	mov    %r13,%rax
   1cf9e:	48 83 e8 01          	sub    $0x1,%rax
   1cfa2:	74 1f                	je     1cfc3 <mbedtls_mpi_copy+0x53>
   1cfa4:	48 83 3c c1 00       	cmpq   $0x0,(%rcx,%rax,8)
   1cfa9:	74 0f                	je     1cfba <mbedtls_mpi_copy+0x4a>
   1cfab:	eb 1c                	jmp    1cfc9 <mbedtls_mpi_copy+0x59>
   1cfad:	0f 1f 00             	nopl   (%rax)
   1cfb0:	48 83 3c d1 00       	cmpq   $0x0,(%rcx,%rdx,8)
   1cfb5:	75 69                	jne    1d020 <mbedtls_mpi_copy+0xb0>
   1cfb7:	48 89 d0             	mov    %rdx,%rax
   1cfba:	48 89 c2             	mov    %rax,%rdx
   1cfbd:	48 83 ea 01          	sub    $0x1,%rdx
   1cfc1:	75 ed                	jne    1cfb0 <mbedtls_mpi_copy+0x40>
   1cfc3:	41 bd 01 00 00 00    	mov    $0x1,%r13d
   1cfc9:	8b 03                	mov    (%rbx),%eax
   1cfcb:	4c 89 ee             	mov    %r13,%rsi
   1cfce:	4c 89 e7             	mov    %r12,%rdi
   1cfd1:	41 89 04 24          	mov    %eax,(%r12)
   1cfd5:	e8 d6 fd ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1cfda:	85 c0                	test   %eax,%eax
   1cfdc:	41 89 c6             	mov    %eax,%r14d
   1cfdf:	75 2f                	jne    1d010 <mbedtls_mpi_copy+0xa0>
   1cfe1:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   1cfe6:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   1cfeb:	31 f6                	xor    %esi,%esi
   1cfed:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1cff4:	00 
   1cff5:	e8 66 94 ff ff       	callq  16460 <memset>
   1cffa:	48 8b 73 10          	mov    0x10(%rbx),%rsi
   1cffe:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   1d003:	4a 8d 14 ed 00 00 00 	lea    0x0(,%r13,8),%rdx
   1d00a:	00 
   1d00b:	e8 e0 8b ff ff       	callq  15bf0 <memcpy>
   1d010:	5b                   	pop    %rbx
   1d011:	44 89 f0             	mov    %r14d,%eax
   1d014:	41 5c                	pop    %r12
   1d016:	41 5d                	pop    %r13
   1d018:	41 5e                	pop    %r14
   1d01a:	5d                   	pop    %rbp
   1d01b:	c3                   	retq   
   1d01c:	0f 1f 40 00          	nopl   0x0(%rax)
   1d020:	49 89 c5             	mov    %rax,%r13
   1d023:	eb a4                	jmp    1cfc9 <mbedtls_mpi_copy+0x59>
   1d025:	0f 1f 00             	nopl   (%rax)
   1d028:	45 31 f6             	xor    %r14d,%r14d
   1d02b:	5b                   	pop    %rbx
   1d02c:	44 89 f0             	mov    %r14d,%eax
   1d02f:	41 5c                	pop    %r12
   1d031:	41 5d                	pop    %r13
   1d033:	41 5e                	pop    %r14
   1d035:	5d                   	pop    %rbp
   1d036:	c3                   	retq   
   1d037:	e8 04 fd ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1d03c:	45 31 f6             	xor    %r14d,%r14d
   1d03f:	eb cf                	jmp    1d010 <mbedtls_mpi_copy+0xa0>
   1d041:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d046:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d04d:	00 00 00 

000000000001d050 <mbedtls_mpi_swap>:
   1d050:	55                   	push   %rbp
   1d051:	ba 18 00 00 00       	mov    $0x18,%edx
   1d056:	48 89 e5             	mov    %rsp,%rbp
   1d059:	41 55                	push   %r13
   1d05b:	41 54                	push   %r12
   1d05d:	4c 8d 65 c0          	lea    -0x40(%rbp),%r12
   1d061:	53                   	push   %rbx
   1d062:	49 89 fd             	mov    %rdi,%r13
   1d065:	48 89 f3             	mov    %rsi,%rbx
   1d068:	48 89 fe             	mov    %rdi,%rsi
   1d06b:	48 83 ec 28          	sub    $0x28,%rsp
   1d06f:	4c 89 e7             	mov    %r12,%rdi
   1d072:	e8 79 8b ff ff       	callq  15bf0 <memcpy>
   1d077:	48 89 de             	mov    %rbx,%rsi
   1d07a:	4c 89 ef             	mov    %r13,%rdi
   1d07d:	ba 18 00 00 00       	mov    $0x18,%edx
   1d082:	e8 69 8b ff ff       	callq  15bf0 <memcpy>
   1d087:	4c 89 e6             	mov    %r12,%rsi
   1d08a:	48 89 df             	mov    %rbx,%rdi
   1d08d:	ba 18 00 00 00       	mov    $0x18,%edx
   1d092:	e8 59 8b ff ff       	callq  15bf0 <memcpy>
   1d097:	48 83 c4 28          	add    $0x28,%rsp
   1d09b:	5b                   	pop    %rbx
   1d09c:	41 5c                	pop    %r12
   1d09e:	41 5d                	pop    %r13
   1d0a0:	5d                   	pop    %rbp
   1d0a1:	c3                   	retq   
   1d0a2:	0f 1f 40 00          	nopl   0x0(%rax)
   1d0a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d0ad:	00 00 00 

000000000001d0b0 <mbedtls_mpi_safe_cond_assign>:
   1d0b0:	55                   	push   %rbp
   1d0b1:	48 89 e5             	mov    %rsp,%rbp
   1d0b4:	41 55                	push   %r13
   1d0b6:	41 54                	push   %r12
   1d0b8:	53                   	push   %rbx
   1d0b9:	49 89 f5             	mov    %rsi,%r13
   1d0bc:	49 89 fc             	mov    %rdi,%r12
   1d0bf:	89 d3                	mov    %edx,%ebx
   1d0c1:	48 83 ec 08          	sub    $0x8,%rsp
   1d0c5:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   1d0c9:	e8 e2 fc ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1d0ce:	85 c0                	test   %eax,%eax
   1d0d0:	0f 85 91 00 00 00    	jne    1d167 <mbedtls_mpi_safe_cond_assign+0xb7>
   1d0d6:	41 89 d8             	mov    %ebx,%r8d
   1d0d9:	bf 01 00 00 00       	mov    $0x1,%edi
   1d0de:	41 8b 0c 24          	mov    (%r12),%ecx
   1d0e2:	41 f7 d8             	neg    %r8d
   1d0e5:	44 09 c3             	or     %r8d,%ebx
   1d0e8:	c0 eb 07             	shr    $0x7,%bl
   1d0eb:	0f b6 d3             	movzbl %bl,%edx
   1d0ee:	29 d7                	sub    %edx,%edi
   1d0f0:	41 0f af 55 00       	imul   0x0(%r13),%edx
   1d0f5:	0f af cf             	imul   %edi,%ecx
   1d0f8:	41 89 f9             	mov    %edi,%r9d
   1d0fb:	01 ca                	add    %ecx,%edx
   1d0fd:	49 83 7d 08 00       	cmpq   $0x0,0x8(%r13)
   1d102:	41 89 14 24          	mov    %edx,(%r12)
   1d106:	74 6a                	je     1d172 <mbedtls_mpi_safe_cond_assign+0xc2>
   1d108:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   1d10d:	4d 8b 55 10          	mov    0x10(%r13),%r10
   1d111:	4c 63 df             	movslq %edi,%r11
   1d114:	44 0f b6 c3          	movzbl %bl,%r8d
   1d118:	31 d2                	xor    %edx,%edx
   1d11a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d120:	4c 89 df             	mov    %r11,%rdi
   1d123:	4c 89 c1             	mov    %r8,%rcx
   1d126:	48 0f af 3c d6       	imul   (%rsi,%rdx,8),%rdi
   1d12b:	49 0f af 0c d2       	imul   (%r10,%rdx,8),%rcx
   1d130:	48 01 f9             	add    %rdi,%rcx
   1d133:	48 89 0c d6          	mov    %rcx,(%rsi,%rdx,8)
   1d137:	48 83 c2 01          	add    $0x1,%rdx
   1d13b:	49 39 55 08          	cmp    %rdx,0x8(%r13)
   1d13f:	77 df                	ja     1d120 <mbedtls_mpi_safe_cond_assign+0x70>
   1d141:	49 3b 54 24 08       	cmp    0x8(%r12),%rdx
   1d146:	73 1f                	jae    1d167 <mbedtls_mpi_safe_cond_assign+0xb7>
   1d148:	49 8b 4c 24 10       	mov    0x10(%r12),%rcx
   1d14d:	49 63 f9             	movslq %r9d,%rdi
   1d150:	48 89 fe             	mov    %rdi,%rsi
   1d153:	48 0f af 34 d1       	imul   (%rcx,%rdx,8),%rsi
   1d158:	48 89 34 d1          	mov    %rsi,(%rcx,%rdx,8)
   1d15c:	48 83 c2 01          	add    $0x1,%rdx
   1d160:	49 39 54 24 08       	cmp    %rdx,0x8(%r12)
   1d165:	77 e9                	ja     1d150 <mbedtls_mpi_safe_cond_assign+0xa0>
   1d167:	48 83 c4 08          	add    $0x8,%rsp
   1d16b:	5b                   	pop    %rbx
   1d16c:	41 5c                	pop    %r12
   1d16e:	41 5d                	pop    %r13
   1d170:	5d                   	pop    %rbp
   1d171:	c3                   	retq   
   1d172:	31 d2                	xor    %edx,%edx
   1d174:	eb cb                	jmp    1d141 <mbedtls_mpi_safe_cond_assign+0x91>
   1d176:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d17d:	00 00 00 

000000000001d180 <mbedtls_mpi_safe_cond_swap>:
   1d180:	48 39 f7             	cmp    %rsi,%rdi
   1d183:	0f 84 e7 00 00 00    	je     1d270 <mbedtls_mpi_safe_cond_swap+0xf0>
   1d189:	55                   	push   %rbp
   1d18a:	48 89 e5             	mov    %rsp,%rbp
   1d18d:	41 55                	push   %r13
   1d18f:	41 54                	push   %r12
   1d191:	53                   	push   %rbx
   1d192:	49 89 f5             	mov    %rsi,%r13
   1d195:	41 89 d4             	mov    %edx,%r12d
   1d198:	48 89 fb             	mov    %rdi,%rbx
   1d19b:	48 83 ec 08          	sub    $0x8,%rsp
   1d19f:	48 8b 76 08          	mov    0x8(%rsi),%rsi
   1d1a3:	e8 08 fc ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1d1a8:	85 c0                	test   %eax,%eax
   1d1aa:	74 14                	je     1d1c0 <mbedtls_mpi_safe_cond_swap+0x40>
   1d1ac:	48 83 c4 08          	add    $0x8,%rsp
   1d1b0:	5b                   	pop    %rbx
   1d1b1:	41 5c                	pop    %r12
   1d1b3:	41 5d                	pop    %r13
   1d1b5:	5d                   	pop    %rbp
   1d1b6:	c3                   	retq   
   1d1b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d1be:	00 00 
   1d1c0:	48 8b 73 08          	mov    0x8(%rbx),%rsi
   1d1c4:	4c 89 ef             	mov    %r13,%rdi
   1d1c7:	e8 e4 fb ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1d1cc:	85 c0                	test   %eax,%eax
   1d1ce:	75 dc                	jne    1d1ac <mbedtls_mpi_safe_cond_swap+0x2c>
   1d1d0:	44 89 e7             	mov    %r12d,%edi
   1d1d3:	8b 0b                	mov    (%rbx),%ecx
   1d1d5:	41 8b 75 00          	mov    0x0(%r13),%esi
   1d1d9:	f7 df                	neg    %edi
   1d1db:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   1d1e1:	41 09 fc             	or     %edi,%r12d
   1d1e4:	41 c0 ec 07          	shr    $0x7,%r12b
   1d1e8:	89 ca                	mov    %ecx,%edx
   1d1ea:	41 0f b6 c4          	movzbl %r12b,%eax
   1d1ee:	41 29 c1             	sub    %eax,%r9d
   1d1f1:	0f af f0             	imul   %eax,%esi
   1d1f4:	41 0f af d1          	imul   %r9d,%edx
   1d1f8:	01 f2                	add    %esi,%edx
   1d1fa:	89 13                	mov    %edx,(%rbx)
   1d1fc:	41 8b 55 00          	mov    0x0(%r13),%edx
   1d200:	0f af c1             	imul   %ecx,%eax
   1d203:	41 0f af d1          	imul   %r9d,%edx
   1d207:	01 d0                	add    %edx,%eax
   1d209:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
   1d20e:	41 89 45 00          	mov    %eax,0x0(%r13)
   1d212:	74 4b                	je     1d25f <mbedtls_mpi_safe_cond_swap+0xdf>
   1d214:	4c 8b 53 10          	mov    0x10(%rbx),%r10
   1d218:	49 8b 75 10          	mov    0x10(%r13),%rsi
   1d21c:	4d 63 c9             	movslq %r9d,%r9
   1d21f:	41 0f b6 fc          	movzbl %r12b,%edi
   1d223:	31 c0                	xor    %eax,%eax
   1d225:	0f 1f 00             	nopl   (%rax)
   1d228:	49 8b 14 c2          	mov    (%r10,%rax,8),%rdx
   1d22c:	49 89 f8             	mov    %rdi,%r8
   1d22f:	4c 0f af 04 c6       	imul   (%rsi,%rax,8),%r8
   1d234:	48 89 d1             	mov    %rdx,%rcx
   1d237:	49 0f af c9          	imul   %r9,%rcx
   1d23b:	48 0f af d7          	imul   %rdi,%rdx
   1d23f:	4c 01 c1             	add    %r8,%rcx
   1d242:	49 89 0c c2          	mov    %rcx,(%r10,%rax,8)
   1d246:	4c 89 c9             	mov    %r9,%rcx
   1d249:	48 0f af 0c c6       	imul   (%rsi,%rax,8),%rcx
   1d24e:	48 01 ca             	add    %rcx,%rdx
   1d251:	48 89 14 c6          	mov    %rdx,(%rsi,%rax,8)
   1d255:	48 83 c0 01          	add    $0x1,%rax
   1d259:	48 39 43 08          	cmp    %rax,0x8(%rbx)
   1d25d:	77 c9                	ja     1d228 <mbedtls_mpi_safe_cond_swap+0xa8>
   1d25f:	48 83 c4 08          	add    $0x8,%rsp
   1d263:	31 c0                	xor    %eax,%eax
   1d265:	5b                   	pop    %rbx
   1d266:	41 5c                	pop    %r12
   1d268:	41 5d                	pop    %r13
   1d26a:	5d                   	pop    %rbp
   1d26b:	c3                   	retq   
   1d26c:	0f 1f 40 00          	nopl   0x0(%rax)
   1d270:	31 c0                	xor    %eax,%eax
   1d272:	c3                   	retq   
   1d273:	0f 1f 00             	nopl   (%rax)
   1d276:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d27d:	00 00 00 

000000000001d280 <mbedtls_mpi_lset>:
   1d280:	55                   	push   %rbp
   1d281:	48 89 e5             	mov    %rsp,%rbp
   1d284:	41 55                	push   %r13
   1d286:	41 54                	push   %r12
   1d288:	53                   	push   %rbx
   1d289:	49 89 f5             	mov    %rsi,%r13
   1d28c:	be 01 00 00 00       	mov    $0x1,%esi
   1d291:	48 89 fb             	mov    %rdi,%rbx
   1d294:	48 83 ec 08          	sub    $0x8,%rsp
   1d298:	e8 13 fb ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1d29d:	85 c0                	test   %eax,%eax
   1d29f:	41 89 c4             	mov    %eax,%r12d
   1d2a2:	75 30                	jne    1d2d4 <mbedtls_mpi_lset+0x54>
   1d2a4:	48 8b 43 08          	mov    0x8(%rbx),%rax
   1d2a8:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1d2ac:	31 f6                	xor    %esi,%esi
   1d2ae:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1d2b5:	00 
   1d2b6:	e8 a5 91 ff ff       	callq  16460 <memset>
   1d2bb:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   1d2bf:	4c 89 e8             	mov    %r13,%rax
   1d2c2:	48 c1 f8 3f          	sar    $0x3f,%rax
   1d2c6:	49 31 c5             	xor    %rax,%r13
   1d2c9:	4c 89 2a             	mov    %r13,(%rdx)
   1d2cc:	48 29 02             	sub    %rax,(%rdx)
   1d2cf:	83 c8 01             	or     $0x1,%eax
   1d2d2:	89 03                	mov    %eax,(%rbx)
   1d2d4:	48 83 c4 08          	add    $0x8,%rsp
   1d2d8:	44 89 e0             	mov    %r12d,%eax
   1d2db:	5b                   	pop    %rbx
   1d2dc:	41 5c                	pop    %r12
   1d2de:	41 5d                	pop    %r13
   1d2e0:	5d                   	pop    %rbp
   1d2e1:	c3                   	retq   
   1d2e2:	0f 1f 40 00          	nopl   0x0(%rax)
   1d2e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d2ed:	00 00 00 

000000000001d2f0 <mbedtls_mpi_get_bit>:
   1d2f0:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   1d2f4:	55                   	push   %rbp
   1d2f5:	31 c0                	xor    %eax,%eax
   1d2f7:	48 89 e5             	mov    %rsp,%rbp
   1d2fa:	48 c1 e2 06          	shl    $0x6,%rdx
   1d2fe:	48 39 f2             	cmp    %rsi,%rdx
   1d301:	76 17                	jbe    1d31a <mbedtls_mpi_get_bit+0x2a>
   1d303:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1d307:	48 89 f2             	mov    %rsi,%rdx
   1d30a:	89 f1                	mov    %esi,%ecx
   1d30c:	48 c1 ea 06          	shr    $0x6,%rdx
   1d310:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
   1d314:	48 d3 e8             	shr    %cl,%rax
   1d317:	83 e0 01             	and    $0x1,%eax
   1d31a:	5d                   	pop    %rbp
   1d31b:	c3                   	retq   
   1d31c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001d320 <mbedtls_mpi_set_bit>:
   1d320:	55                   	push   %rbp
   1d321:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1d326:	48 89 e5             	mov    %rsp,%rbp
   1d329:	41 56                	push   %r14
   1d32b:	49 89 f6             	mov    %rsi,%r14
   1d32e:	49 c1 ee 06          	shr    $0x6,%r14
   1d332:	80 fa 01             	cmp    $0x1,%dl
   1d335:	41 55                	push   %r13
   1d337:	41 54                	push   %r12
   1d339:	53                   	push   %rbx
   1d33a:	77 3d                	ja     1d379 <mbedtls_mpi_set_bit+0x59>
   1d33c:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1d340:	0f b6 da             	movzbl %dl,%ebx
   1d343:	49 89 f5             	mov    %rsi,%r13
   1d346:	49 89 fc             	mov    %rdi,%r12
   1d349:	48 c1 e0 06          	shl    $0x6,%rax
   1d34d:	48 39 c6             	cmp    %rax,%rsi
   1d350:	73 36                	jae    1d388 <mbedtls_mpi_set_bit+0x68>
   1d352:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   1d357:	4c 89 e9             	mov    %r13,%rcx
   1d35a:	83 e1 3f             	and    $0x3f,%ecx
   1d35d:	48 d3 e3             	shl    %cl,%rbx
   1d360:	4a 8d 14 f0          	lea    (%rax,%r14,8),%rdx
   1d364:	48 c7 c0 fe ff ff ff 	mov    $0xfffffffffffffffe,%rax
   1d36b:	48 d3 c0             	rol    %cl,%rax
   1d36e:	48 23 02             	and    (%rdx),%rax
   1d371:	48 09 c3             	or     %rax,%rbx
   1d374:	31 c0                	xor    %eax,%eax
   1d376:	48 89 1a             	mov    %rbx,(%rdx)
   1d379:	5b                   	pop    %rbx
   1d37a:	41 5c                	pop    %r12
   1d37c:	41 5d                	pop    %r13
   1d37e:	41 5e                	pop    %r14
   1d380:	5d                   	pop    %rbp
   1d381:	c3                   	retq   
   1d382:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d388:	31 c0                	xor    %eax,%eax
   1d38a:	84 d2                	test   %dl,%dl
   1d38c:	74 eb                	je     1d379 <mbedtls_mpi_set_bit+0x59>
   1d38e:	49 8d 76 01          	lea    0x1(%r14),%rsi
   1d392:	e8 19 fa ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1d397:	85 c0                	test   %eax,%eax
   1d399:	74 b7                	je     1d352 <mbedtls_mpi_set_bit+0x32>
   1d39b:	eb dc                	jmp    1d379 <mbedtls_mpi_set_bit+0x59>
   1d39d:	0f 1f 00             	nopl   (%rax)

000000000001d3a0 <mbedtls_mpi_lsb>:
   1d3a0:	55                   	push   %rbp
   1d3a1:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1d3a5:	48 89 e5             	mov    %rsp,%rbp
   1d3a8:	48 85 c0             	test   %rax,%rax
   1d3ab:	74 2a                	je     1d3d7 <mbedtls_mpi_lsb+0x37>
   1d3ad:	4c 8b 47 10          	mov    0x10(%rdi),%r8
   1d3b1:	31 c9                	xor    %ecx,%ecx
   1d3b3:	31 ff                	xor    %edi,%edi
   1d3b5:	49 8b 34 f8          	mov    (%r8,%rdi,8),%rsi
   1d3b9:	31 d2                	xor    %edx,%edx
   1d3bb:	eb 11                	jmp    1d3ce <mbedtls_mpi_lsb+0x2e>
   1d3bd:	0f 1f 00             	nopl   (%rax)
   1d3c0:	48 83 c2 01          	add    $0x1,%rdx
   1d3c4:	48 83 c1 01          	add    $0x1,%rcx
   1d3c8:	48 83 fa 40          	cmp    $0x40,%rdx
   1d3cc:	74 12                	je     1d3e0 <mbedtls_mpi_lsb+0x40>
   1d3ce:	48 0f a3 d6          	bt     %rdx,%rsi
   1d3d2:	73 ec                	jae    1d3c0 <mbedtls_mpi_lsb+0x20>
   1d3d4:	48 89 c8             	mov    %rcx,%rax
   1d3d7:	5d                   	pop    %rbp
   1d3d8:	c3                   	retq   
   1d3d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d3e0:	48 83 c7 01          	add    $0x1,%rdi
   1d3e4:	48 39 f8             	cmp    %rdi,%rax
   1d3e7:	75 cc                	jne    1d3b5 <mbedtls_mpi_lsb+0x15>
   1d3e9:	31 c0                	xor    %eax,%eax
   1d3eb:	5d                   	pop    %rbp
   1d3ec:	c3                   	retq   
   1d3ed:	0f 1f 00             	nopl   (%rax)

000000000001d3f0 <mbedtls_mpi_bitlen>:
   1d3f0:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1d3f4:	55                   	push   %rbp
   1d3f5:	48 89 e5             	mov    %rsp,%rbp
   1d3f8:	48 85 c0             	test   %rax,%rax
   1d3fb:	74 58                	je     1d455 <mbedtls_mpi_bitlen+0x65>
   1d3fd:	48 83 e8 01          	sub    $0x1,%rax
   1d401:	74 67                	je     1d46a <mbedtls_mpi_bitlen+0x7a>
   1d403:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   1d407:	48 8b 34 c2          	mov    (%rdx,%rax,8),%rsi
   1d40b:	48 85 f6             	test   %rsi,%rsi
   1d40e:	74 11                	je     1d421 <mbedtls_mpi_bitlen+0x31>
   1d410:	eb 4e                	jmp    1d460 <mbedtls_mpi_bitlen+0x70>
   1d412:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d418:	48 8b 34 c2          	mov    (%rdx,%rax,8),%rsi
   1d41c:	48 85 f6             	test   %rsi,%rsi
   1d41f:	75 3f                	jne    1d460 <mbedtls_mpi_bitlen+0x70>
   1d421:	48 83 e8 01          	sub    $0x1,%rax
   1d425:	75 f1                	jne    1d418 <mbedtls_mpi_bitlen+0x28>
   1d427:	48 8b 32             	mov    (%rdx),%rsi
   1d42a:	b8 40 00 00 00       	mov    $0x40,%eax
   1d42f:	31 d2                	xor    %edx,%edx
   1d431:	48 b9 00 00 00 00 00 	movabs $0x8000000000000000,%rcx
   1d438:	00 00 80 
   1d43b:	eb 10                	jmp    1d44d <mbedtls_mpi_bitlen+0x5d>
   1d43d:	0f 1f 00             	nopl   (%rax)
   1d440:	48 83 c2 01          	add    $0x1,%rdx
   1d444:	48 d1 e9             	shr    %rcx
   1d447:	48 83 fa 40          	cmp    $0x40,%rdx
   1d44b:	74 05                	je     1d452 <mbedtls_mpi_bitlen+0x62>
   1d44d:	48 85 f1             	test   %rsi,%rcx
   1d450:	74 ee                	je     1d440 <mbedtls_mpi_bitlen+0x50>
   1d452:	48 29 d0             	sub    %rdx,%rax
   1d455:	5d                   	pop    %rbp
   1d456:	c3                   	retq   
   1d457:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d45e:	00 00 
   1d460:	48 c1 e0 06          	shl    $0x6,%rax
   1d464:	48 83 c0 40          	add    $0x40,%rax
   1d468:	eb c5                	jmp    1d42f <mbedtls_mpi_bitlen+0x3f>
   1d46a:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1d46e:	48 8b 30             	mov    (%rax),%rsi
   1d471:	b8 40 00 00 00       	mov    $0x40,%eax
   1d476:	eb b7                	jmp    1d42f <mbedtls_mpi_bitlen+0x3f>
   1d478:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1d47f:	00 

000000000001d480 <mbedtls_mpi_size>:
   1d480:	55                   	push   %rbp
   1d481:	48 89 e5             	mov    %rsp,%rbp
   1d484:	e8 67 ff ff ff       	callq  1d3f0 <mbedtls_mpi_bitlen>
   1d489:	48 83 c0 07          	add    $0x7,%rax
   1d48d:	48 c1 e8 03          	shr    $0x3,%rax
   1d491:	5d                   	pop    %rbp
   1d492:	c3                   	retq   
   1d493:	0f 1f 00             	nopl   (%rax)
   1d496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d49d:	00 00 00 

000000000001d4a0 <mbedtls_mpi_read_binary>:
   1d4a0:	55                   	push   %rbp
   1d4a1:	48 89 e5             	mov    %rsp,%rbp
   1d4a4:	41 57                	push   %r15
   1d4a6:	41 56                	push   %r14
   1d4a8:	41 55                	push   %r13
   1d4aa:	41 54                	push   %r12
   1d4ac:	49 89 ff             	mov    %rdi,%r15
   1d4af:	53                   	push   %rbx
   1d4b0:	31 db                	xor    %ebx,%ebx
   1d4b2:	49 89 f5             	mov    %rsi,%r13
   1d4b5:	49 89 d4             	mov    %rdx,%r12
   1d4b8:	48 83 ec 08          	sub    $0x8,%rsp
   1d4bc:	48 85 d2             	test   %rdx,%rdx
   1d4bf:	74 23                	je     1d4e4 <mbedtls_mpi_read_binary+0x44>
   1d4c1:	80 3e 00             	cmpb   $0x0,(%rsi)
   1d4c4:	74 12                	je     1d4d8 <mbedtls_mpi_read_binary+0x38>
   1d4c6:	eb 1c                	jmp    1d4e4 <mbedtls_mpi_read_binary+0x44>
   1d4c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1d4cf:	00 
   1d4d0:	41 80 7c 1d 00 00    	cmpb   $0x0,0x0(%r13,%rbx,1)
   1d4d6:	75 0c                	jne    1d4e4 <mbedtls_mpi_read_binary+0x44>
   1d4d8:	48 83 c3 01          	add    $0x1,%rbx
   1d4dc:	49 39 dc             	cmp    %rbx,%r12
   1d4df:	75 ef                	jne    1d4d0 <mbedtls_mpi_read_binary+0x30>
   1d4e1:	4c 89 e3             	mov    %r12,%rbx
   1d4e4:	4d 89 e6             	mov    %r12,%r14
   1d4e7:	31 f6                	xor    %esi,%esi
   1d4e9:	4c 89 ff             	mov    %r15,%rdi
   1d4ec:	49 29 de             	sub    %rbx,%r14
   1d4ef:	41 f6 c6 07          	test   $0x7,%r14b
   1d4f3:	4c 89 f0             	mov    %r14,%rax
   1d4f6:	40 0f 95 c6          	setne  %sil
   1d4fa:	48 c1 e8 03          	shr    $0x3,%rax
   1d4fe:	48 01 c6             	add    %rax,%rsi
   1d501:	e8 aa f8 ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1d506:	85 c0                	test   %eax,%eax
   1d508:	74 16                	je     1d520 <mbedtls_mpi_read_binary+0x80>
   1d50a:	48 83 c4 08          	add    $0x8,%rsp
   1d50e:	5b                   	pop    %rbx
   1d50f:	41 5c                	pop    %r12
   1d511:	41 5d                	pop    %r13
   1d513:	41 5e                	pop    %r14
   1d515:	41 5f                	pop    %r15
   1d517:	5d                   	pop    %rbp
   1d518:	c3                   	retq   
   1d519:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d520:	31 f6                	xor    %esi,%esi
   1d522:	4c 89 ff             	mov    %r15,%rdi
   1d525:	e8 56 fd ff ff       	callq  1d280 <mbedtls_mpi_lset>
   1d52a:	85 c0                	test   %eax,%eax
   1d52c:	75 dc                	jne    1d50a <mbedtls_mpi_read_binary+0x6a>
   1d52e:	49 39 dc             	cmp    %rbx,%r12
   1d531:	76 d7                	jbe    1d50a <mbedtls_mpi_read_binary+0x6a>
   1d533:	4d 8b 47 10          	mov    0x10(%r15),%r8
   1d537:	4d 01 ec             	add    %r13,%r12
   1d53a:	31 d2                	xor    %edx,%edx
   1d53c:	0f 1f 40 00          	nopl   0x0(%rax)
   1d540:	41 0f b6 74 24 ff    	movzbl -0x1(%r12),%esi
   1d546:	89 d1                	mov    %edx,%ecx
   1d548:	48 89 d7             	mov    %rdx,%rdi
   1d54b:	83 e1 07             	and    $0x7,%ecx
   1d54e:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1d552:	48 83 c2 01          	add    $0x1,%rdx
   1d556:	c1 e1 03             	shl    $0x3,%ecx
   1d559:	49 83 ec 01          	sub    $0x1,%r12
   1d55d:	48 d3 e6             	shl    %cl,%rsi
   1d560:	49 09 34 38          	or     %rsi,(%r8,%rdi,1)
   1d564:	49 39 d6             	cmp    %rdx,%r14
   1d567:	75 d7                	jne    1d540 <mbedtls_mpi_read_binary+0xa0>
   1d569:	48 83 c4 08          	add    $0x8,%rsp
   1d56d:	5b                   	pop    %rbx
   1d56e:	41 5c                	pop    %r12
   1d570:	41 5d                	pop    %r13
   1d572:	41 5e                	pop    %r14
   1d574:	41 5f                	pop    %r15
   1d576:	5d                   	pop    %rbp
   1d577:	c3                   	retq   
   1d578:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1d57f:	00 

000000000001d580 <mbedtls_mpi_write_binary>:
   1d580:	55                   	push   %rbp
   1d581:	48 89 e5             	mov    %rsp,%rbp
   1d584:	41 56                	push   %r14
   1d586:	41 55                	push   %r13
   1d588:	41 54                	push   %r12
   1d58a:	53                   	push   %rbx
   1d58b:	49 89 fd             	mov    %rdi,%r13
   1d58e:	48 89 d3             	mov    %rdx,%rbx
   1d591:	49 89 f6             	mov    %rsi,%r14
   1d594:	e8 e7 fe ff ff       	callq  1d480 <mbedtls_mpi_size>
   1d599:	49 89 c4             	mov    %rax,%r12
   1d59c:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1d5a1:	49 39 dc             	cmp    %rbx,%r12
   1d5a4:	77 46                	ja     1d5ec <mbedtls_mpi_write_binary+0x6c>
   1d5a6:	31 f6                	xor    %esi,%esi
   1d5a8:	48 89 da             	mov    %rbx,%rdx
   1d5ab:	4c 89 f7             	mov    %r14,%rdi
   1d5ae:	e8 ad 8e ff ff       	callq  16460 <memset>
   1d5b3:	31 c0                	xor    %eax,%eax
   1d5b5:	4d 85 e4             	test   %r12,%r12
   1d5b8:	49 8d 34 1e          	lea    (%r14,%rbx,1),%rsi
   1d5bc:	74 2c                	je     1d5ea <mbedtls_mpi_write_binary+0x6a>
   1d5be:	66 90                	xchg   %ax,%ax
   1d5c0:	49 8b 55 10          	mov    0x10(%r13),%rdx
   1d5c4:	48 89 c7             	mov    %rax,%rdi
   1d5c7:	89 c1                	mov    %eax,%ecx
   1d5c9:	48 c1 ef 03          	shr    $0x3,%rdi
   1d5cd:	83 e1 07             	and    $0x7,%ecx
   1d5d0:	48 83 c0 01          	add    $0x1,%rax
   1d5d4:	c1 e1 03             	shl    $0x3,%ecx
   1d5d7:	48 83 ee 01          	sub    $0x1,%rsi
   1d5db:	4c 8b 04 fa          	mov    (%rdx,%rdi,8),%r8
   1d5df:	49 d3 e8             	shr    %cl,%r8
   1d5e2:	44 88 06             	mov    %r8b,(%rsi)
   1d5e5:	49 39 c4             	cmp    %rax,%r12
   1d5e8:	75 d6                	jne    1d5c0 <mbedtls_mpi_write_binary+0x40>
   1d5ea:	31 c0                	xor    %eax,%eax
   1d5ec:	5b                   	pop    %rbx
   1d5ed:	41 5c                	pop    %r12
   1d5ef:	41 5d                	pop    %r13
   1d5f1:	41 5e                	pop    %r14
   1d5f3:	5d                   	pop    %rbp
   1d5f4:	c3                   	retq   
   1d5f5:	90                   	nop
   1d5f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d5fd:	00 00 00 

000000000001d600 <mbedtls_mpi_shift_l>:
   1d600:	55                   	push   %rbp
   1d601:	48 89 e5             	mov    %rsp,%rbp
   1d604:	41 56                	push   %r14
   1d606:	41 55                	push   %r13
   1d608:	41 54                	push   %r12
   1d60a:	53                   	push   %rbx
   1d60b:	49 89 fd             	mov    %rdi,%r13
   1d60e:	49 89 f6             	mov    %rsi,%r14
   1d611:	48 89 f3             	mov    %rsi,%rbx
   1d614:	49 89 f4             	mov    %rsi,%r12
   1d617:	e8 d4 fd ff ff       	callq  1d3f0 <mbedtls_mpi_bitlen>
   1d61c:	49 8b 55 08          	mov    0x8(%r13),%rdx
   1d620:	4c 01 f0             	add    %r14,%rax
   1d623:	48 c1 eb 06          	shr    $0x6,%rbx
   1d627:	41 83 e4 3f          	and    $0x3f,%r12d
   1d62b:	48 c1 e2 06          	shl    $0x6,%rdx
   1d62f:	48 39 d0             	cmp    %rdx,%rax
   1d632:	0f 87 a0 00 00 00    	ja     1d6d8 <mbedtls_mpi_shift_l+0xd8>
   1d638:	48 85 db             	test   %rbx,%rbx
   1d63b:	74 42                	je     1d67f <mbedtls_mpi_shift_l+0x7f>
   1d63d:	49 8b 45 08          	mov    0x8(%r13),%rax
   1d641:	48 39 c3             	cmp    %rax,%rbx
   1d644:	0f 83 b6 00 00 00    	jae    1d700 <mbedtls_mpi_shift_l+0x100>
   1d64a:	49 8b 55 10          	mov    0x10(%r13),%rdx
   1d64e:	48 29 d8             	sub    %rbx,%rax
   1d651:	48 8d 04 c2          	lea    (%rdx,%rax,8),%rax
   1d655:	0f 1f 00             	nopl   (%rax)
   1d658:	48 8b 48 f8          	mov    -0x8(%rax),%rcx
   1d65c:	48 89 4c d8 f8       	mov    %rcx,-0x8(%rax,%rbx,8)
   1d661:	48 83 e8 08          	sub    $0x8,%rax
   1d665:	48 39 d0             	cmp    %rdx,%rax
   1d668:	75 ee                	jne    1d658 <mbedtls_mpi_shift_l+0x58>
   1d66a:	48 89 d8             	mov    %rbx,%rax
   1d66d:	0f 1f 00             	nopl   (%rax)
   1d670:	48 c7 44 c2 f8 00 00 	movq   $0x0,-0x8(%rdx,%rax,8)
   1d677:	00 00 
   1d679:	48 83 e8 01          	sub    $0x1,%rax
   1d67d:	75 f1                	jne    1d670 <mbedtls_mpi_shift_l+0x70>
   1d67f:	4d 85 e4             	test   %r12,%r12
   1d682:	74 42                	je     1d6c6 <mbedtls_mpi_shift_l+0xc6>
   1d684:	49 3b 5d 08          	cmp    0x8(%r13),%rbx
   1d688:	73 3c                	jae    1d6c6 <mbedtls_mpi_shift_l+0xc6>
   1d68a:	49 8b 75 10          	mov    0x10(%r13),%rsi
   1d68e:	bf 40 00 00 00       	mov    $0x40,%edi
   1d693:	45 89 e0             	mov    %r12d,%r8d
   1d696:	44 29 e7             	sub    %r12d,%edi
   1d699:	31 c0                	xor    %eax,%eax
   1d69b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d6a0:	48 8b 14 de          	mov    (%rsi,%rbx,8),%rdx
   1d6a4:	44 89 c1             	mov    %r8d,%ecx
   1d6a7:	49 89 d1             	mov    %rdx,%r9
   1d6aa:	49 d3 e1             	shl    %cl,%r9
   1d6ad:	89 f9                	mov    %edi,%ecx
   1d6af:	4c 09 c8             	or     %r9,%rax
   1d6b2:	48 89 04 de          	mov    %rax,(%rsi,%rbx,8)
   1d6b6:	48 89 d0             	mov    %rdx,%rax
   1d6b9:	48 83 c3 01          	add    $0x1,%rbx
   1d6bd:	48 d3 e8             	shr    %cl,%rax
   1d6c0:	49 39 5d 08          	cmp    %rbx,0x8(%r13)
   1d6c4:	77 da                	ja     1d6a0 <mbedtls_mpi_shift_l+0xa0>
   1d6c6:	5b                   	pop    %rbx
   1d6c7:	31 c0                	xor    %eax,%eax
   1d6c9:	41 5c                	pop    %r12
   1d6cb:	41 5d                	pop    %r13
   1d6cd:	41 5e                	pop    %r14
   1d6cf:	5d                   	pop    %rbp
   1d6d0:	c3                   	retq   
   1d6d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1d6d8:	31 f6                	xor    %esi,%esi
   1d6da:	a8 3f                	test   $0x3f,%al
   1d6dc:	4c 89 ef             	mov    %r13,%rdi
   1d6df:	40 0f 95 c6          	setne  %sil
   1d6e3:	48 c1 e8 06          	shr    $0x6,%rax
   1d6e7:	48 01 c6             	add    %rax,%rsi
   1d6ea:	e8 c1 f6 ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1d6ef:	85 c0                	test   %eax,%eax
   1d6f1:	0f 84 41 ff ff ff    	je     1d638 <mbedtls_mpi_shift_l+0x38>
   1d6f7:	5b                   	pop    %rbx
   1d6f8:	41 5c                	pop    %r12
   1d6fa:	41 5d                	pop    %r13
   1d6fc:	41 5e                	pop    %r14
   1d6fe:	5d                   	pop    %rbp
   1d6ff:	c3                   	retq   
   1d700:	48 85 c0             	test   %rax,%rax
   1d703:	0f 84 76 ff ff ff    	je     1d67f <mbedtls_mpi_shift_l+0x7f>
   1d709:	49 8b 55 10          	mov    0x10(%r13),%rdx
   1d70d:	e9 5e ff ff ff       	jmpq   1d670 <mbedtls_mpi_shift_l+0x70>
   1d712:	0f 1f 40 00          	nopl   0x0(%rax)
   1d716:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d71d:	00 00 00 

000000000001d720 <mbedtls_mpi_shift_r>:
   1d720:	55                   	push   %rbp
   1d721:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1d725:	49 89 f1             	mov    %rsi,%r9
   1d728:	49 c1 e9 06          	shr    $0x6,%r9
   1d72c:	48 89 e5             	mov    %rsp,%rbp
   1d72f:	49 39 c1             	cmp    %rax,%r9
   1d732:	77 0a                	ja     1d73e <mbedtls_mpi_shift_r+0x1e>
   1d734:	83 e6 3f             	and    $0x3f,%esi
   1d737:	74 17                	je     1d750 <mbedtls_mpi_shift_r+0x30>
   1d739:	49 39 c1             	cmp    %rax,%r9
   1d73c:	75 12                	jne    1d750 <mbedtls_mpi_shift_r+0x30>
   1d73e:	5d                   	pop    %rbp
   1d73f:	31 f6                	xor    %esi,%esi
   1d741:	e9 3a fb ff ff       	jmpq   1d280 <mbedtls_mpi_lset>
   1d746:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1d74d:	00 00 00 
   1d750:	4d 85 c9             	test   %r9,%r9
   1d753:	74 4d                	je     1d7a2 <mbedtls_mpi_shift_r+0x82>
   1d755:	49 39 c1             	cmp    %rax,%r9
   1d758:	0f 84 93 00 00 00    	je     1d7f1 <mbedtls_mpi_shift_r+0xd1>
   1d75e:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   1d762:	31 c0                	xor    %eax,%eax
   1d764:	4e 8d 14 ca          	lea    (%rdx,%r9,8),%r10
   1d768:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1d76f:	00 
   1d770:	49 8b 0c c2          	mov    (%r10,%rax,8),%rcx
   1d774:	48 89 0c c2          	mov    %rcx,(%rdx,%rax,8)
   1d778:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   1d77c:	48 83 c0 01          	add    $0x1,%rax
   1d780:	49 89 c8             	mov    %rcx,%r8
   1d783:	4d 29 c8             	sub    %r9,%r8
   1d786:	49 39 c0             	cmp    %rax,%r8
   1d789:	77 e5                	ja     1d770 <mbedtls_mpi_shift_r+0x50>
   1d78b:	48 39 c1             	cmp    %rax,%rcx
   1d78e:	76 12                	jbe    1d7a2 <mbedtls_mpi_shift_r+0x82>
   1d790:	48 c7 04 c2 00 00 00 	movq   $0x0,(%rdx,%rax,8)
   1d797:	00 
   1d798:	48 83 c0 01          	add    $0x1,%rax
   1d79c:	48 39 47 08          	cmp    %rax,0x8(%rdi)
   1d7a0:	77 ee                	ja     1d790 <mbedtls_mpi_shift_r+0x70>
   1d7a2:	48 85 f6             	test   %rsi,%rsi
   1d7a5:	74 46                	je     1d7ed <mbedtls_mpi_shift_r+0xcd>
   1d7a7:	48 8b 47 08          	mov    0x8(%rdi),%rax
   1d7ab:	48 85 c0             	test   %rax,%rax
   1d7ae:	74 3d                	je     1d7ed <mbedtls_mpi_shift_r+0xcd>
   1d7b0:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
   1d7b4:	41 b8 40 00 00 00    	mov    $0x40,%r8d
   1d7ba:	41 89 f1             	mov    %esi,%r9d
   1d7bd:	41 29 f0             	sub    %esi,%r8d
   1d7c0:	31 d2                	xor    %edx,%edx
   1d7c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1d7c8:	48 8b 74 c7 f8       	mov    -0x8(%rdi,%rax,8),%rsi
   1d7cd:	44 89 c9             	mov    %r9d,%ecx
   1d7d0:	49 89 f3             	mov    %rsi,%r11
   1d7d3:	49 d3 eb             	shr    %cl,%r11
   1d7d6:	44 89 c1             	mov    %r8d,%ecx
   1d7d9:	4c 09 da             	or     %r11,%rdx
   1d7dc:	48 d3 e6             	shl    %cl,%rsi
   1d7df:	48 89 54 c7 f8       	mov    %rdx,-0x8(%rdi,%rax,8)
   1d7e4:	48 83 e8 01          	sub    $0x1,%rax
   1d7e8:	48 89 f2             	mov    %rsi,%rdx
   1d7eb:	75 db                	jne    1d7c8 <mbedtls_mpi_shift_r+0xa8>
   1d7ed:	31 c0                	xor    %eax,%eax
   1d7ef:	5d                   	pop    %rbp
   1d7f0:	c3                   	retq   
   1d7f1:	31 c0                	xor    %eax,%eax
   1d7f3:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   1d7f7:	eb 97                	jmp    1d790 <mbedtls_mpi_shift_r+0x70>
   1d7f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000001d800 <mbedtls_mpi_cmp_abs>:
   1d800:	55                   	push   %rbp
   1d801:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   1d805:	48 89 e5             	mov    %rsp,%rbp
   1d808:	48 85 d2             	test   %rdx,%rdx
   1d80b:	74 25                	je     1d832 <mbedtls_mpi_cmp_abs+0x32>
   1d80d:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1d811:	48 83 7c d0 f8 00    	cmpq   $0x0,-0x8(%rax,%rdx,8)
   1d817:	74 13                	je     1d82c <mbedtls_mpi_cmp_abs+0x2c>
   1d819:	e9 92 00 00 00       	jmpq   1d8b0 <mbedtls_mpi_cmp_abs+0xb0>
   1d81e:	66 90                	xchg   %ax,%ax
   1d820:	48 83 7c d0 f8 00    	cmpq   $0x0,-0x8(%rax,%rdx,8)
   1d826:	0f 85 84 00 00 00    	jne    1d8b0 <mbedtls_mpi_cmp_abs+0xb0>
   1d82c:	48 83 ea 01          	sub    $0x1,%rdx
   1d830:	75 ee                	jne    1d820 <mbedtls_mpi_cmp_abs+0x20>
   1d832:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   1d836:	48 85 c9             	test   %rcx,%rcx
   1d839:	74 69                	je     1d8a4 <mbedtls_mpi_cmp_abs+0xa4>
   1d83b:	48 8b 76 10          	mov    0x10(%rsi),%rsi
   1d83f:	31 d2                	xor    %edx,%edx
   1d841:	48 83 7c ce f8 00    	cmpq   $0x0,-0x8(%rsi,%rcx,8)
   1d847:	74 0f                	je     1d858 <mbedtls_mpi_cmp_abs+0x58>
   1d849:	eb 27                	jmp    1d872 <mbedtls_mpi_cmp_abs+0x72>
   1d84b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1d850:	48 83 7c ce f8 00    	cmpq   $0x0,-0x8(%rsi,%rcx,8)
   1d856:	75 06                	jne    1d85e <mbedtls_mpi_cmp_abs+0x5e>
   1d858:	48 83 e9 01          	sub    $0x1,%rcx
   1d85c:	75 f2                	jne    1d850 <mbedtls_mpi_cmp_abs+0x50>
   1d85e:	49 89 c8             	mov    %rcx,%r8
   1d861:	31 c0                	xor    %eax,%eax
   1d863:	49 09 d0             	or     %rdx,%r8
   1d866:	74 3e                	je     1d8a6 <mbedtls_mpi_cmp_abs+0xa6>
   1d868:	48 39 d1             	cmp    %rdx,%rcx
   1d86b:	b8 01 00 00 00       	mov    $0x1,%eax
   1d870:	72 34                	jb     1d8a6 <mbedtls_mpi_cmp_abs+0xa6>
   1d872:	48 39 ca             	cmp    %rcx,%rdx
   1d875:	72 59                	jb     1d8d0 <mbedtls_mpi_cmp_abs+0xd0>
   1d877:	48 85 d2             	test   %rdx,%rdx
   1d87a:	74 28                	je     1d8a4 <mbedtls_mpi_cmp_abs+0xa4>
   1d87c:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1d880:	48 8b 7c d0 f8       	mov    -0x8(%rax,%rdx,8),%rdi
   1d885:	48 39 7c d6 f8       	cmp    %rdi,-0x8(%rsi,%rdx,8)
   1d88a:	72 54                	jb     1d8e0 <mbedtls_mpi_cmp_abs+0xe0>
   1d88c:	76 10                	jbe    1d89e <mbedtls_mpi_cmp_abs+0x9e>
   1d88e:	eb 40                	jmp    1d8d0 <mbedtls_mpi_cmp_abs+0xd0>
   1d890:	48 8b 7c d6 f8       	mov    -0x8(%rsi,%rdx,8),%rdi
   1d895:	48 39 7c d0 f8       	cmp    %rdi,-0x8(%rax,%rdx,8)
   1d89a:	77 44                	ja     1d8e0 <mbedtls_mpi_cmp_abs+0xe0>
   1d89c:	72 32                	jb     1d8d0 <mbedtls_mpi_cmp_abs+0xd0>
   1d89e:	48 83 ea 01          	sub    $0x1,%rdx
   1d8a2:	75 ec                	jne    1d890 <mbedtls_mpi_cmp_abs+0x90>
   1d8a4:	31 c0                	xor    %eax,%eax
   1d8a6:	5d                   	pop    %rbp
   1d8a7:	c3                   	retq   
   1d8a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1d8af:	00 
   1d8b0:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   1d8b4:	48 85 c9             	test   %rcx,%rcx
   1d8b7:	74 27                	je     1d8e0 <mbedtls_mpi_cmp_abs+0xe0>
   1d8b9:	48 8b 76 10          	mov    0x10(%rsi),%rsi
   1d8bd:	48 83 7c ce f8 00    	cmpq   $0x0,-0x8(%rsi,%rcx,8)
   1d8c3:	74 93                	je     1d858 <mbedtls_mpi_cmp_abs+0x58>
   1d8c5:	eb 97                	jmp    1d85e <mbedtls_mpi_cmp_abs+0x5e>
   1d8c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d8ce:	00 00 
   1d8d0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1d8d5:	5d                   	pop    %rbp
   1d8d6:	c3                   	retq   
   1d8d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d8de:	00 00 
   1d8e0:	b8 01 00 00 00       	mov    $0x1,%eax
   1d8e5:	5d                   	pop    %rbp
   1d8e6:	c3                   	retq   
   1d8e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d8ee:	00 00 

000000000001d8f0 <mpi_montmul.isra.3>:
   1d8f0:	48 8b 41 08          	mov    0x8(%rcx),%rax
   1d8f4:	48 83 c0 01          	add    $0x1,%rax
   1d8f8:	4c 39 c8             	cmp    %r9,%rax
   1d8fb:	0f 87 7e 01 00 00    	ja     1da7f <mpi_montmul.isra.3+0x18f>
   1d901:	55                   	push   %rbp
   1d902:	48 89 e5             	mov    %rsp,%rbp
   1d905:	41 57                	push   %r15
   1d907:	41 56                	push   %r14
   1d909:	41 55                	push   %r13
   1d90b:	41 54                	push   %r12
   1d90d:	49 89 fd             	mov    %rdi,%r13
   1d910:	53                   	push   %rbx
   1d911:	48 83 ec 48          	sub    $0x48,%rsp
   1d915:	48 8b 45 10          	mov    0x10(%rbp),%rax
   1d919:	48 8b 38             	mov    (%rax),%rdi
   1d91c:	48 85 ff             	test   %rdi,%rdi
   1d91f:	0f 84 60 01 00 00    	je     1da85 <mpi_montmul.isra.3+0x195>
   1d925:	49 89 d6             	mov    %rdx,%r14
   1d928:	4a 8d 14 cd 00 00 00 	lea    0x0(,%r9,8),%rdx
   1d92f:	00 
   1d930:	49 89 f7             	mov    %rsi,%r15
   1d933:	31 f6                	xor    %esi,%esi
   1d935:	49 89 cc             	mov    %rcx,%r12
   1d938:	4c 89 45 a0          	mov    %r8,-0x60(%rbp)
   1d93c:	e8 1f 8b ff ff       	callq  16460 <memset>
   1d941:	48 8b 45 10          	mov    0x10(%rbp),%rax
   1d945:	48 8b 00             	mov    (%rax),%rax
   1d948:	48 89 c3             	mov    %rax,%rbx
   1d94b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1d94f:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   1d954:	49 39 07             	cmp    %rax,(%r15)
   1d957:	48 89 c7             	mov    %rax,%rdi
   1d95a:	49 0f 46 3f          	cmovbe (%r15),%rdi
   1d95e:	48 85 c0             	test   %rax,%rax
   1d961:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1d965:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   1d969:	0f 84 06 01 00 00    	je     1da75 <mpi_montmul.isra.3+0x185>
   1d96f:	48 8d 04 c5 08 00 00 	lea    0x8(,%rax,8),%rax
   1d976:	00 
   1d977:	45 31 ff             	xor    %r15d,%r15d
   1d97a:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   1d97e:	4c 89 e8             	mov    %r13,%rax
   1d981:	4d 89 fd             	mov    %r15,%r13
   1d984:	49 89 c7             	mov    %rax,%r15
   1d987:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1d98e:	00 00 
   1d990:	49 8b 57 10          	mov    0x10(%r15),%rdx
   1d994:	49 8b 36             	mov    (%r14),%rsi
   1d997:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
   1d99b:	4e 8b 04 ea          	mov    (%rdx,%r13,8),%r8
   1d99f:	48 89 da             	mov    %rbx,%rdx
   1d9a2:	49 83 c5 01          	add    $0x1,%r13
   1d9a6:	4d 89 c3             	mov    %r8,%r11
   1d9a9:	4c 89 c1             	mov    %r8,%rcx
   1d9ac:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
   1d9b0:	4c 0f af 1e          	imul   (%rsi),%r11
   1d9b4:	4c 03 1b             	add    (%rbx),%r11
   1d9b7:	4c 0f af 5d a0       	imul   -0x60(%rbp),%r11
   1d9bc:	4c 89 5d c0          	mov    %r11,-0x40(%rbp)
   1d9c0:	e8 bb ef ff ff       	callq  1c980 <mpi_mul_hlp>
   1d9c5:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1d9c9:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   1d9ce:	48 89 da             	mov    %rbx,%rdx
   1d9d1:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   1d9d5:	48 83 c3 08          	add    $0x8,%rbx
   1d9d9:	e8 a2 ef ff ff       	callq  1c980 <mpi_mul_hlp>
   1d9de:	4c 39 6d c8          	cmp    %r13,-0x38(%rbp)
   1d9e2:	4c 8b 45 b8          	mov    -0x48(%rbp),%r8
   1d9e6:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   1d9ea:	4c 89 43 f8          	mov    %r8,-0x8(%rbx)
   1d9ee:	48 c7 04 0b 00 00 00 	movq   $0x0,(%rbx,%rcx,1)
   1d9f5:	00 
   1d9f6:	75 98                	jne    1d990 <mpi_montmul.isra.3+0xa0>
   1d9f8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1d9fc:	4d 89 fd             	mov    %r15,%r13
   1d9ff:	48 8d 44 08 f8       	lea    -0x8(%rax,%rcx,1),%rax
   1da04:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   1da08:	49 8b 7d 10          	mov    0x10(%r13),%rdi
   1da0c:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   1da10:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
   1da14:	e8 d7 81 ff ff       	callq  15bf0 <memcpy>
   1da19:	4c 89 e6             	mov    %r12,%rsi
   1da1c:	4c 89 ef             	mov    %r13,%rdi
   1da1f:	e8 dc fd ff ff       	callq  1d800 <mbedtls_mpi_cmp_abs>
   1da24:	85 c0                	test   %eax,%eax
   1da26:	78 28                	js     1da50 <mpi_montmul.isra.3+0x160>
   1da28:	49 8b 55 10          	mov    0x10(%r13),%rdx
   1da2c:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   1da31:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   1da35:	e8 c6 ee ff ff       	callq  1c900 <mpi_sub_hlp>
   1da3a:	31 c0                	xor    %eax,%eax
   1da3c:	48 83 c4 48          	add    $0x48,%rsp
   1da40:	5b                   	pop    %rbx
   1da41:	41 5c                	pop    %r12
   1da43:	41 5d                	pop    %r13
   1da45:	41 5e                	pop    %r14
   1da47:	41 5f                	pop    %r15
   1da49:	5d                   	pop    %rbp
   1da4a:	c3                   	retq   
   1da4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1da50:	48 8b 45 10          	mov    0x10(%rbp),%rax
   1da54:	49 8b 75 10          	mov    0x10(%r13),%rsi
   1da58:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   1da5c:	48 8b 10             	mov    (%rax),%rdx
   1da5f:	e8 9c ee ff ff       	callq  1c900 <mpi_sub_hlp>
   1da64:	48 83 c4 48          	add    $0x48,%rsp
   1da68:	31 c0                	xor    %eax,%eax
   1da6a:	5b                   	pop    %rbx
   1da6b:	41 5c                	pop    %r12
   1da6d:	41 5d                	pop    %r13
   1da6f:	41 5e                	pop    %r14
   1da71:	41 5f                	pop    %r15
   1da73:	5d                   	pop    %rbp
   1da74:	c3                   	retq   
   1da75:	48 c7 45 b0 08 00 00 	movq   $0x8,-0x50(%rbp)
   1da7c:	00 
   1da7d:	eb 89                	jmp    1da08 <mpi_montmul.isra.3+0x118>
   1da7f:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1da84:	c3                   	retq   
   1da85:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1da8a:	eb b0                	jmp    1da3c <mpi_montmul.isra.3+0x14c>
   1da8c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000001da90 <mbedtls_mpi_cmp_mpi>:
   1da90:	55                   	push   %rbp
   1da91:	48 8b 57 08          	mov    0x8(%rdi),%rdx
   1da95:	48 89 e5             	mov    %rsp,%rbp
   1da98:	48 85 d2             	test   %rdx,%rdx
   1da9b:	74 25                	je     1dac2 <mbedtls_mpi_cmp_mpi+0x32>
   1da9d:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1daa1:	48 83 7c d0 f8 00    	cmpq   $0x0,-0x8(%rax,%rdx,8)
   1daa7:	74 13                	je     1dabc <mbedtls_mpi_cmp_mpi+0x2c>
   1daa9:	e9 a2 00 00 00       	jmpq   1db50 <mbedtls_mpi_cmp_mpi+0xc0>
   1daae:	66 90                	xchg   %ax,%ax
   1dab0:	48 83 7c d0 f8 00    	cmpq   $0x0,-0x8(%rax,%rdx,8)
   1dab6:	0f 85 94 00 00 00    	jne    1db50 <mbedtls_mpi_cmp_mpi+0xc0>
   1dabc:	48 83 ea 01          	sub    $0x1,%rdx
   1dac0:	75 ee                	jne    1dab0 <mbedtls_mpi_cmp_mpi+0x20>
   1dac2:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   1dac6:	48 85 c9             	test   %rcx,%rcx
   1dac9:	0f 84 7d 00 00 00    	je     1db4c <mbedtls_mpi_cmp_mpi+0xbc>
   1dacf:	4c 8b 46 10          	mov    0x10(%rsi),%r8
   1dad3:	31 d2                	xor    %edx,%edx
   1dad5:	49 83 7c c8 f8 00    	cmpq   $0x0,-0x8(%r8,%rcx,8)
   1dadb:	74 0b                	je     1dae8 <mbedtls_mpi_cmp_mpi+0x58>
   1dadd:	eb 1e                	jmp    1dafd <mbedtls_mpi_cmp_mpi+0x6d>
   1dadf:	90                   	nop
   1dae0:	49 83 7c c8 f8 00    	cmpq   $0x0,-0x8(%r8,%rcx,8)
   1dae6:	75 06                	jne    1daee <mbedtls_mpi_cmp_mpi+0x5e>
   1dae8:	48 83 e9 01          	sub    $0x1,%rcx
   1daec:	75 f2                	jne    1dae0 <mbedtls_mpi_cmp_mpi+0x50>
   1daee:	49 89 c9             	mov    %rcx,%r9
   1daf1:	31 c0                	xor    %eax,%eax
   1daf3:	49 09 d1             	or     %rdx,%r9
   1daf6:	74 56                	je     1db4e <mbedtls_mpi_cmp_mpi+0xbe>
   1daf8:	48 39 d1             	cmp    %rdx,%rcx
   1dafb:	72 73                	jb     1db70 <mbedtls_mpi_cmp_mpi+0xe0>
   1dafd:	48 39 ca             	cmp    %rcx,%rdx
   1db00:	72 76                	jb     1db78 <mbedtls_mpi_cmp_mpi+0xe8>
   1db02:	8b 07                	mov    (%rdi),%eax
   1db04:	8b 0e                	mov    (%rsi),%ecx
   1db06:	85 c0                	test   %eax,%eax
   1db08:	7e 04                	jle    1db0e <mbedtls_mpi_cmp_mpi+0x7e>
   1db0a:	85 c9                	test   %ecx,%ecx
   1db0c:	78 74                	js     1db82 <mbedtls_mpi_cmp_mpi+0xf2>
   1db0e:	89 c6                	mov    %eax,%esi
   1db10:	c1 ee 1f             	shr    $0x1f,%esi
   1db13:	40 84 f6             	test   %sil,%sil
   1db16:	74 04                	je     1db1c <mbedtls_mpi_cmp_mpi+0x8c>
   1db18:	85 c9                	test   %ecx,%ecx
   1db1a:	7f 6d                	jg     1db89 <mbedtls_mpi_cmp_mpi+0xf9>
   1db1c:	48 85 d2             	test   %rdx,%rdx
   1db1f:	74 2b                	je     1db4c <mbedtls_mpi_cmp_mpi+0xbc>
   1db21:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
   1db25:	48 8b 74 d1 f8       	mov    -0x8(%rcx,%rdx,8),%rsi
   1db2a:	49 39 74 d0 f8       	cmp    %rsi,-0x8(%r8,%rdx,8)
   1db2f:	72 1d                	jb     1db4e <mbedtls_mpi_cmp_mpi+0xbe>
   1db31:	76 13                	jbe    1db46 <mbedtls_mpi_cmp_mpi+0xb6>
   1db33:	eb 49                	jmp    1db7e <mbedtls_mpi_cmp_mpi+0xee>
   1db35:	0f 1f 00             	nopl   (%rax)
   1db38:	49 8b 7c d0 f8       	mov    -0x8(%r8,%rdx,8),%rdi
   1db3d:	48 39 7c d1 f8       	cmp    %rdi,-0x8(%rcx,%rdx,8)
   1db42:	77 0a                	ja     1db4e <mbedtls_mpi_cmp_mpi+0xbe>
   1db44:	72 38                	jb     1db7e <mbedtls_mpi_cmp_mpi+0xee>
   1db46:	48 83 ea 01          	sub    $0x1,%rdx
   1db4a:	75 ec                	jne    1db38 <mbedtls_mpi_cmp_mpi+0xa8>
   1db4c:	31 c0                	xor    %eax,%eax
   1db4e:	5d                   	pop    %rbp
   1db4f:	c3                   	retq   
   1db50:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
   1db54:	48 85 c9             	test   %rcx,%rcx
   1db57:	74 17                	je     1db70 <mbedtls_mpi_cmp_mpi+0xe0>
   1db59:	4c 8b 46 10          	mov    0x10(%rsi),%r8
   1db5d:	49 83 7c c8 f8 00    	cmpq   $0x0,-0x8(%r8,%rcx,8)
   1db63:	74 83                	je     1dae8 <mbedtls_mpi_cmp_mpi+0x58>
   1db65:	eb 87                	jmp    1daee <mbedtls_mpi_cmp_mpi+0x5e>
   1db67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1db6e:	00 00 
   1db70:	8b 07                	mov    (%rdi),%eax
   1db72:	5d                   	pop    %rbp
   1db73:	c3                   	retq   
   1db74:	0f 1f 40 00          	nopl   0x0(%rax)
   1db78:	8b 06                	mov    (%rsi),%eax
   1db7a:	5d                   	pop    %rbp
   1db7b:	f7 d8                	neg    %eax
   1db7d:	c3                   	retq   
   1db7e:	f7 d8                	neg    %eax
   1db80:	5d                   	pop    %rbp
   1db81:	c3                   	retq   
   1db82:	b8 01 00 00 00       	mov    $0x1,%eax
   1db87:	5d                   	pop    %rbp
   1db88:	c3                   	retq   
   1db89:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1db8e:	5d                   	pop    %rbp
   1db8f:	c3                   	retq   

000000000001db90 <mbedtls_mpi_cmp_int>:
   1db90:	55                   	push   %rbp
   1db91:	48 89 f0             	mov    %rsi,%rax
   1db94:	48 c1 f8 3f          	sar    $0x3f,%rax
   1db98:	48 89 e5             	mov    %rsp,%rbp
   1db9b:	48 31 c6             	xor    %rax,%rsi
   1db9e:	48 83 ec 30          	sub    $0x30,%rsp
   1dba2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1dba6:	48 29 45 d0          	sub    %rax,-0x30(%rbp)
   1dbaa:	83 c8 01             	or     $0x1,%eax
   1dbad:	89 45 e0             	mov    %eax,-0x20(%rbp)
   1dbb0:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi
   1dbb4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1dbb8:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
   1dbbf:	00 
   1dbc0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1dbc4:	e8 c7 fe ff ff       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1dbc9:	c9                   	leaveq 
   1dbca:	c3                   	retq   
   1dbcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001dbd0 <mbedtls_mpi_add_abs>:
   1dbd0:	55                   	push   %rbp
   1dbd1:	48 89 e5             	mov    %rsp,%rbp
   1dbd4:	41 57                	push   %r15
   1dbd6:	41 56                	push   %r14
   1dbd8:	41 55                	push   %r13
   1dbda:	41 54                	push   %r12
   1dbdc:	49 89 ff             	mov    %rdi,%r15
   1dbdf:	53                   	push   %rbx
   1dbe0:	48 83 ec 08          	sub    $0x8,%rsp
   1dbe4:	48 39 d7             	cmp    %rdx,%rdi
   1dbe7:	0f 84 43 01 00 00    	je     1dd30 <mbedtls_mpi_add_abs+0x160>
   1dbed:	48 39 f7             	cmp    %rsi,%rdi
   1dbf0:	48 89 d3             	mov    %rdx,%rbx
   1dbf3:	74 0c                	je     1dc01 <mbedtls_mpi_add_abs+0x31>
   1dbf5:	e8 76 f3 ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1dbfa:	85 c0                	test   %eax,%eax
   1dbfc:	41 89 c5             	mov    %eax,%r13d
   1dbff:	75 52                	jne    1dc53 <mbedtls_mpi_add_abs+0x83>
   1dc01:	4c 8b 73 08          	mov    0x8(%rbx),%r14
   1dc05:	41 c7 07 01 00 00 00 	movl   $0x1,(%r15)
   1dc0c:	4d 85 f6             	test   %r14,%r14
   1dc0f:	74 1d                	je     1dc2e <mbedtls_mpi_add_abs+0x5e>
   1dc11:	48 8b 43 10          	mov    0x10(%rbx),%rax
   1dc15:	4a 83 7c f0 f8 00    	cmpq   $0x0,-0x8(%rax,%r14,8)
   1dc1b:	74 0b                	je     1dc28 <mbedtls_mpi_add_abs+0x58>
   1dc1d:	eb 49                	jmp    1dc68 <mbedtls_mpi_add_abs+0x98>
   1dc1f:	90                   	nop
   1dc20:	4a 83 7c f0 f8 00    	cmpq   $0x0,-0x8(%rax,%r14,8)
   1dc26:	75 40                	jne    1dc68 <mbedtls_mpi_add_abs+0x98>
   1dc28:	49 83 ee 01          	sub    $0x1,%r14
   1dc2c:	75 f2                	jne    1dc20 <mbedtls_mpi_add_abs+0x50>
   1dc2e:	48 83 c4 08          	add    $0x8,%rsp
   1dc32:	4c 89 ff             	mov    %r15,%rdi
   1dc35:	31 f6                	xor    %esi,%esi
   1dc37:	5b                   	pop    %rbx
   1dc38:	41 5c                	pop    %r12
   1dc3a:	41 5d                	pop    %r13
   1dc3c:	41 5e                	pop    %r14
   1dc3e:	41 5f                	pop    %r15
   1dc40:	5d                   	pop    %rbp
   1dc41:	e9 6a f1 ff ff       	jmpq   1cdb0 <mbedtls_mpi_grow>
   1dc46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1dc4d:	00 00 00 
   1dc50:	41 89 c5             	mov    %eax,%r13d
   1dc53:	48 83 c4 08          	add    $0x8,%rsp
   1dc57:	44 89 e8             	mov    %r13d,%eax
   1dc5a:	5b                   	pop    %rbx
   1dc5b:	41 5c                	pop    %r12
   1dc5d:	41 5d                	pop    %r13
   1dc5f:	41 5e                	pop    %r14
   1dc61:	41 5f                	pop    %r15
   1dc63:	5d                   	pop    %rbp
   1dc64:	c3                   	retq   
   1dc65:	0f 1f 00             	nopl   (%rax)
   1dc68:	4c 89 f6             	mov    %r14,%rsi
   1dc6b:	4c 89 ff             	mov    %r15,%rdi
   1dc6e:	e8 3d f1 ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1dc73:	85 c0                	test   %eax,%eax
   1dc75:	41 89 c5             	mov    %eax,%r13d
   1dc78:	75 d9                	jne    1dc53 <mbedtls_mpi_add_abs+0x83>
   1dc7a:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
   1dc7e:	49 8b 47 10          	mov    0x10(%r15),%rax
   1dc82:	31 db                	xor    %ebx,%ebx
   1dc84:	45 31 e4             	xor    %r12d,%r12d
   1dc87:	eb 0a                	jmp    1dc93 <mbedtls_mpi_add_abs+0xc3>
   1dc89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1dc90:	49 89 d4             	mov    %rdx,%r12
   1dc93:	31 f6                	xor    %esi,%esi
   1dc95:	48 03 18             	add    (%rax),%rbx
   1dc98:	4a 8b 0c e7          	mov    (%rdi,%r12,8),%rcx
   1dc9c:	48 8d 14 19          	lea    (%rcx,%rbx,1),%rdx
   1dca0:	40 0f 92 c6          	setb   %sil
   1dca4:	31 db                	xor    %ebx,%ebx
   1dca6:	48 89 10             	mov    %rdx,(%rax)
   1dca9:	48 39 d1             	cmp    %rdx,%rcx
   1dcac:	49 8d 54 24 01       	lea    0x1(%r12),%rdx
   1dcb1:	0f 97 c3             	seta   %bl
   1dcb4:	48 83 c0 08          	add    $0x8,%rax
   1dcb8:	48 01 f3             	add    %rsi,%rbx
   1dcbb:	49 39 d6             	cmp    %rdx,%r14
   1dcbe:	77 d0                	ja     1dc90 <mbedtls_mpi_add_abs+0xc0>
   1dcc0:	48 85 db             	test   %rbx,%rbx
   1dcc3:	74 8e                	je     1dc53 <mbedtls_mpi_add_abs+0x83>
   1dcc5:	49 83 c4 02          	add    $0x2,%r12
   1dcc9:	4c 8d 34 d5 00 00 00 	lea    0x0(,%rdx,8),%r14
   1dcd0:	00 
   1dcd1:	eb 2e                	jmp    1dd01 <mbedtls_mpi_add_abs+0x131>
   1dcd3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1dcd8:	48 89 da             	mov    %rbx,%rdx
   1dcdb:	48 03 10             	add    (%rax),%rdx
   1dcde:	31 c9                	xor    %ecx,%ecx
   1dce0:	48 39 da             	cmp    %rbx,%rdx
   1dce3:	48 89 10             	mov    %rdx,(%rax)
   1dce6:	0f 92 c1             	setb   %cl
   1dce9:	48 83 c0 08          	add    $0x8,%rax
   1dced:	49 83 c4 01          	add    $0x1,%r12
   1dcf1:	49 83 c6 08          	add    $0x8,%r14
   1dcf5:	48 39 da             	cmp    %rbx,%rdx
   1dcf8:	0f 83 55 ff ff ff    	jae    1dc53 <mbedtls_mpi_add_abs+0x83>
   1dcfe:	48 89 cb             	mov    %rcx,%rbx
   1dd01:	49 8d 54 24 ff       	lea    -0x1(%r12),%rdx
   1dd06:	49 3b 57 08          	cmp    0x8(%r15),%rdx
   1dd0a:	72 cc                	jb     1dcd8 <mbedtls_mpi_add_abs+0x108>
   1dd0c:	4c 89 e6             	mov    %r12,%rsi
   1dd0f:	4c 89 ff             	mov    %r15,%rdi
   1dd12:	e8 99 f0 ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1dd17:	85 c0                	test   %eax,%eax
   1dd19:	0f 85 31 ff ff ff    	jne    1dc50 <mbedtls_mpi_add_abs+0x80>
   1dd1f:	4c 89 f0             	mov    %r14,%rax
   1dd22:	49 03 47 10          	add    0x10(%r15),%rax
   1dd26:	eb b0                	jmp    1dcd8 <mbedtls_mpi_add_abs+0x108>
   1dd28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1dd2f:	00 
   1dd30:	48 89 f3             	mov    %rsi,%rbx
   1dd33:	e9 c9 fe ff ff       	jmpq   1dc01 <mbedtls_mpi_add_abs+0x31>
   1dd38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1dd3f:	00 

000000000001dd40 <mbedtls_mpi_sub_abs>:
   1dd40:	55                   	push   %rbp
   1dd41:	48 89 e5             	mov    %rsp,%rbp
   1dd44:	41 57                	push   %r15
   1dd46:	41 56                	push   %r14
   1dd48:	41 55                	push   %r13
   1dd4a:	41 54                	push   %r12
   1dd4c:	49 89 f7             	mov    %rsi,%r15
   1dd4f:	53                   	push   %rbx
   1dd50:	49 89 fc             	mov    %rdi,%r12
   1dd53:	48 89 d6             	mov    %rdx,%rsi
   1dd56:	4c 89 ff             	mov    %r15,%rdi
   1dd59:	49 89 d6             	mov    %rdx,%r14
   1dd5c:	48 83 ec 28          	sub    $0x28,%rsp
   1dd60:	e8 9b fa ff ff       	callq  1d800 <mbedtls_mpi_cmp_abs>
   1dd65:	85 c0                	test   %eax,%eax
   1dd67:	0f 88 9c 00 00 00    	js     1de09 <mbedtls_mpi_sub_abs+0xc9>
   1dd6d:	4c 8d 6d b0          	lea    -0x50(%rbp),%r13
   1dd71:	4c 89 ef             	mov    %r13,%rdi
   1dd74:	e8 97 ef ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1dd79:	4d 39 e6             	cmp    %r12,%r14
   1dd7c:	74 72                	je     1ddf0 <mbedtls_mpi_sub_abs+0xb0>
   1dd7e:	4d 39 e7             	cmp    %r12,%r15
   1dd81:	74 11                	je     1dd94 <mbedtls_mpi_sub_abs+0x54>
   1dd83:	4c 89 fe             	mov    %r15,%rsi
   1dd86:	4c 89 e7             	mov    %r12,%rdi
   1dd89:	e8 e2 f1 ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1dd8e:	85 c0                	test   %eax,%eax
   1dd90:	89 c3                	mov    %eax,%ebx
   1dd92:	75 3e                	jne    1ddd2 <mbedtls_mpi_sub_abs+0x92>
   1dd94:	49 8b 7e 08          	mov    0x8(%r14),%rdi
   1dd98:	41 c7 04 24 01 00 00 	movl   $0x1,(%r12)
   1dd9f:	00 
   1dda0:	48 85 ff             	test   %rdi,%rdi
   1dda3:	74 6b                	je     1de10 <mbedtls_mpi_sub_abs+0xd0>
   1dda5:	49 8b 76 10          	mov    0x10(%r14),%rsi
   1dda9:	48 83 7c fe f8 00    	cmpq   $0x0,-0x8(%rsi,%rdi,8)
   1ddaf:	74 0f                	je     1ddc0 <mbedtls_mpi_sub_abs+0x80>
   1ddb1:	eb 13                	jmp    1ddc6 <mbedtls_mpi_sub_abs+0x86>
   1ddb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ddb8:	48 83 7c fe f8 00    	cmpq   $0x0,-0x8(%rsi,%rdi,8)
   1ddbe:	75 06                	jne    1ddc6 <mbedtls_mpi_sub_abs+0x86>
   1ddc0:	48 83 ef 01          	sub    $0x1,%rdi
   1ddc4:	75 f2                	jne    1ddb8 <mbedtls_mpi_sub_abs+0x78>
   1ddc6:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
   1ddcb:	31 db                	xor    %ebx,%ebx
   1ddcd:	e8 2e eb ff ff       	callq  1c900 <mpi_sub_hlp>
   1ddd2:	4c 89 ef             	mov    %r13,%rdi
   1ddd5:	e8 66 ef ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1ddda:	89 d8                	mov    %ebx,%eax
   1dddc:	48 83 c4 28          	add    $0x28,%rsp
   1dde0:	5b                   	pop    %rbx
   1dde1:	41 5c                	pop    %r12
   1dde3:	41 5d                	pop    %r13
   1dde5:	41 5e                	pop    %r14
   1dde7:	41 5f                	pop    %r15
   1dde9:	5d                   	pop    %rbp
   1ddea:	c3                   	retq   
   1ddeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ddf0:	4c 89 f6             	mov    %r14,%rsi
   1ddf3:	4c 89 ef             	mov    %r13,%rdi
   1ddf6:	e8 75 f1 ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1ddfb:	85 c0                	test   %eax,%eax
   1ddfd:	89 c3                	mov    %eax,%ebx
   1ddff:	75 d1                	jne    1ddd2 <mbedtls_mpi_sub_abs+0x92>
   1de01:	4d 89 ee             	mov    %r13,%r14
   1de04:	e9 75 ff ff ff       	jmpq   1dd7e <mbedtls_mpi_sub_abs+0x3e>
   1de09:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   1de0e:	eb cc                	jmp    1dddc <mbedtls_mpi_sub_abs+0x9c>
   1de10:	49 8b 76 10          	mov    0x10(%r14),%rsi
   1de14:	eb b0                	jmp    1ddc6 <mbedtls_mpi_sub_abs+0x86>
   1de16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1de1d:	00 00 00 

000000000001de20 <mbedtls_mpi_add_mpi>:
   1de20:	55                   	push   %rbp
   1de21:	48 89 e5             	mov    %rsp,%rbp
   1de24:	41 56                	push   %r14
   1de26:	41 55                	push   %r13
   1de28:	41 54                	push   %r12
   1de2a:	53                   	push   %rbx
   1de2b:	49 89 fe             	mov    %rdi,%r14
   1de2e:	44 8b 2e             	mov    (%rsi),%r13d
   1de31:	8b 02                	mov    (%rdx),%eax
   1de33:	48 89 f3             	mov    %rsi,%rbx
   1de36:	49 89 d4             	mov    %rdx,%r12
   1de39:	41 0f af c5          	imul   %r13d,%eax
   1de3d:	85 c0                	test   %eax,%eax
   1de3f:	78 1f                	js     1de60 <mbedtls_mpi_add_mpi+0x40>
   1de41:	e8 8a fd ff ff       	callq  1dbd0 <mbedtls_mpi_add_abs>
   1de46:	85 c0                	test   %eax,%eax
   1de48:	75 03                	jne    1de4d <mbedtls_mpi_add_mpi+0x2d>
   1de4a:	45 89 2e             	mov    %r13d,(%r14)
   1de4d:	5b                   	pop    %rbx
   1de4e:	41 5c                	pop    %r12
   1de50:	41 5d                	pop    %r13
   1de52:	41 5e                	pop    %r14
   1de54:	5d                   	pop    %rbp
   1de55:	c3                   	retq   
   1de56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1de5d:	00 00 00 
   1de60:	48 89 d6             	mov    %rdx,%rsi
   1de63:	48 89 df             	mov    %rbx,%rdi
   1de66:	e8 95 f9 ff ff       	callq  1d800 <mbedtls_mpi_cmp_abs>
   1de6b:	85 c0                	test   %eax,%eax
   1de6d:	78 19                	js     1de88 <mbedtls_mpi_add_mpi+0x68>
   1de6f:	4c 89 e2             	mov    %r12,%rdx
   1de72:	48 89 de             	mov    %rbx,%rsi
   1de75:	4c 89 f7             	mov    %r14,%rdi
   1de78:	e8 c3 fe ff ff       	callq  1dd40 <mbedtls_mpi_sub_abs>
   1de7d:	85 c0                	test   %eax,%eax
   1de7f:	75 cc                	jne    1de4d <mbedtls_mpi_add_mpi+0x2d>
   1de81:	eb c7                	jmp    1de4a <mbedtls_mpi_add_mpi+0x2a>
   1de83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1de88:	48 89 da             	mov    %rbx,%rdx
   1de8b:	4c 89 e6             	mov    %r12,%rsi
   1de8e:	4c 89 f7             	mov    %r14,%rdi
   1de91:	e8 aa fe ff ff       	callq  1dd40 <mbedtls_mpi_sub_abs>
   1de96:	85 c0                	test   %eax,%eax
   1de98:	75 b3                	jne    1de4d <mbedtls_mpi_add_mpi+0x2d>
   1de9a:	41 f7 dd             	neg    %r13d
   1de9d:	45 89 2e             	mov    %r13d,(%r14)
   1dea0:	eb ab                	jmp    1de4d <mbedtls_mpi_add_mpi+0x2d>
   1dea2:	0f 1f 40 00          	nopl   0x0(%rax)
   1dea6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1dead:	00 00 00 

000000000001deb0 <mbedtls_mpi_sub_mpi>:
   1deb0:	55                   	push   %rbp
   1deb1:	48 89 e5             	mov    %rsp,%rbp
   1deb4:	41 56                	push   %r14
   1deb6:	41 55                	push   %r13
   1deb8:	41 54                	push   %r12
   1deba:	53                   	push   %rbx
   1debb:	49 89 fe             	mov    %rdi,%r14
   1debe:	44 8b 2e             	mov    (%rsi),%r13d
   1dec1:	8b 02                	mov    (%rdx),%eax
   1dec3:	48 89 f3             	mov    %rsi,%rbx
   1dec6:	49 89 d4             	mov    %rdx,%r12
   1dec9:	41 0f af c5          	imul   %r13d,%eax
   1decd:	85 c0                	test   %eax,%eax
   1decf:	7e 2f                	jle    1df00 <mbedtls_mpi_sub_mpi+0x50>
   1ded1:	48 89 d6             	mov    %rdx,%rsi
   1ded4:	48 89 df             	mov    %rbx,%rdi
   1ded7:	e8 24 f9 ff ff       	callq  1d800 <mbedtls_mpi_cmp_abs>
   1dedc:	85 c0                	test   %eax,%eax
   1dede:	78 38                	js     1df18 <mbedtls_mpi_sub_mpi+0x68>
   1dee0:	4c 89 e2             	mov    %r12,%rdx
   1dee3:	48 89 de             	mov    %rbx,%rsi
   1dee6:	4c 89 f7             	mov    %r14,%rdi
   1dee9:	e8 52 fe ff ff       	callq  1dd40 <mbedtls_mpi_sub_abs>
   1deee:	85 c0                	test   %eax,%eax
   1def0:	74 17                	je     1df09 <mbedtls_mpi_sub_mpi+0x59>
   1def2:	5b                   	pop    %rbx
   1def3:	41 5c                	pop    %r12
   1def5:	41 5d                	pop    %r13
   1def7:	41 5e                	pop    %r14
   1def9:	5d                   	pop    %rbp
   1defa:	c3                   	retq   
   1defb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1df00:	e8 cb fc ff ff       	callq  1dbd0 <mbedtls_mpi_add_abs>
   1df05:	85 c0                	test   %eax,%eax
   1df07:	75 e9                	jne    1def2 <mbedtls_mpi_sub_mpi+0x42>
   1df09:	5b                   	pop    %rbx
   1df0a:	41 5c                	pop    %r12
   1df0c:	45 89 2e             	mov    %r13d,(%r14)
   1df0f:	41 5d                	pop    %r13
   1df11:	41 5e                	pop    %r14
   1df13:	5d                   	pop    %rbp
   1df14:	c3                   	retq   
   1df15:	0f 1f 00             	nopl   (%rax)
   1df18:	48 89 da             	mov    %rbx,%rdx
   1df1b:	4c 89 e6             	mov    %r12,%rsi
   1df1e:	4c 89 f7             	mov    %r14,%rdi
   1df21:	e8 1a fe ff ff       	callq  1dd40 <mbedtls_mpi_sub_abs>
   1df26:	85 c0                	test   %eax,%eax
   1df28:	75 c8                	jne    1def2 <mbedtls_mpi_sub_mpi+0x42>
   1df2a:	41 f7 dd             	neg    %r13d
   1df2d:	45 89 2e             	mov    %r13d,(%r14)
   1df30:	eb c0                	jmp    1def2 <mbedtls_mpi_sub_mpi+0x42>
   1df32:	0f 1f 40 00          	nopl   0x0(%rax)
   1df36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1df3d:	00 00 00 

000000000001df40 <mbedtls_mpi_add_int>:
   1df40:	55                   	push   %rbp
   1df41:	48 89 d0             	mov    %rdx,%rax
   1df44:	48 c1 f8 3f          	sar    $0x3f,%rax
   1df48:	48 89 e5             	mov    %rsp,%rbp
   1df4b:	48 31 c2             	xor    %rax,%rdx
   1df4e:	48 83 ec 30          	sub    $0x30,%rsp
   1df52:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
   1df56:	48 29 45 d0          	sub    %rax,-0x30(%rbp)
   1df5a:	83 c8 01             	or     $0x1,%eax
   1df5d:	89 45 e0             	mov    %eax,-0x20(%rbp)
   1df60:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1df64:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1df68:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
   1df6f:	00 
   1df70:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1df74:	e8 a7 fe ff ff       	callq  1de20 <mbedtls_mpi_add_mpi>
   1df79:	c9                   	leaveq 
   1df7a:	c3                   	retq   
   1df7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001df80 <mbedtls_mpi_sub_int>:
   1df80:	55                   	push   %rbp
   1df81:	48 89 d0             	mov    %rdx,%rax
   1df84:	48 c1 f8 3f          	sar    $0x3f,%rax
   1df88:	48 89 e5             	mov    %rsp,%rbp
   1df8b:	48 31 c2             	xor    %rax,%rdx
   1df8e:	48 83 ec 30          	sub    $0x30,%rsp
   1df92:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
   1df96:	48 29 45 d0          	sub    %rax,-0x30(%rbp)
   1df9a:	83 c8 01             	or     $0x1,%eax
   1df9d:	89 45 e0             	mov    %eax,-0x20(%rbp)
   1dfa0:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1dfa4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1dfa8:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
   1dfaf:	00 
   1dfb0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1dfb4:	e8 f7 fe ff ff       	callq  1deb0 <mbedtls_mpi_sub_mpi>
   1dfb9:	c9                   	leaveq 
   1dfba:	c3                   	retq   
   1dfbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001dfc0 <mbedtls_mpi_mul_mpi>:
   1dfc0:	55                   	push   %rbp
   1dfc1:	48 89 e5             	mov    %rsp,%rbp
   1dfc4:	41 57                	push   %r15
   1dfc6:	41 56                	push   %r14
   1dfc8:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1dfcc:	41 55                	push   %r13
   1dfce:	41 54                	push   %r12
   1dfd0:	53                   	push   %rbx
   1dfd1:	48 89 fb             	mov    %rdi,%rbx
   1dfd4:	49 89 f4             	mov    %rsi,%r12
   1dfd7:	48 89 c7             	mov    %rax,%rdi
   1dfda:	49 89 d5             	mov    %rdx,%r13
   1dfdd:	48 83 ec 68          	sub    $0x68,%rsp
   1dfe1:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   1dfe8:	e8 23 ed ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1dfed:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1dff1:	48 89 c7             	mov    %rax,%rdi
   1dff4:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   1dff8:	e8 13 ed ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1dffd:	4c 39 e3             	cmp    %r12,%rbx
   1e000:	0f 84 f0 00 00 00    	je     1e0f6 <mbedtls_mpi_mul_mpi+0x136>
   1e006:	4c 39 eb             	cmp    %r13,%rbx
   1e009:	0f 84 09 01 00 00    	je     1e118 <mbedtls_mpi_mul_mpi+0x158>
   1e00f:	4d 8b 74 24 08       	mov    0x8(%r12),%r14
   1e014:	4d 85 f6             	test   %r14,%r14
   1e017:	74 25                	je     1e03e <mbedtls_mpi_mul_mpi+0x7e>
   1e019:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   1e01e:	4a 83 7c f0 f8 00    	cmpq   $0x0,-0x8(%rax,%r14,8)
   1e024:	74 12                	je     1e038 <mbedtls_mpi_mul_mpi+0x78>
   1e026:	eb 16                	jmp    1e03e <mbedtls_mpi_mul_mpi+0x7e>
   1e028:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1e02f:	00 
   1e030:	4a 83 7c f0 f8 00    	cmpq   $0x0,-0x8(%rax,%r14,8)
   1e036:	75 06                	jne    1e03e <mbedtls_mpi_mul_mpi+0x7e>
   1e038:	49 83 ee 01          	sub    $0x1,%r14
   1e03c:	75 f2                	jne    1e030 <mbedtls_mpi_mul_mpi+0x70>
   1e03e:	4d 8b 7d 08          	mov    0x8(%r13),%r15
   1e042:	4d 85 ff             	test   %r15,%r15
   1e045:	74 1f                	je     1e066 <mbedtls_mpi_mul_mpi+0xa6>
   1e047:	49 8b 45 10          	mov    0x10(%r13),%rax
   1e04b:	4a 83 7c f8 f8 00    	cmpq   $0x0,-0x8(%rax,%r15,8)
   1e051:	74 0d                	je     1e060 <mbedtls_mpi_mul_mpi+0xa0>
   1e053:	eb 11                	jmp    1e066 <mbedtls_mpi_mul_mpi+0xa6>
   1e055:	0f 1f 00             	nopl   (%rax)
   1e058:	4a 83 7c f8 f8 00    	cmpq   $0x0,-0x8(%rax,%r15,8)
   1e05e:	75 06                	jne    1e066 <mbedtls_mpi_mul_mpi+0xa6>
   1e060:	49 83 ef 01          	sub    $0x1,%r15
   1e064:	75 f2                	jne    1e058 <mbedtls_mpi_mul_mpi+0x98>
   1e066:	4b 8d 34 3e          	lea    (%r14,%r15,1),%rsi
   1e06a:	48 89 df             	mov    %rbx,%rdi
   1e06d:	e8 3e ed ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1e072:	85 c0                	test   %eax,%eax
   1e074:	89 45 8c             	mov    %eax,-0x74(%rbp)
   1e077:	74 27                	je     1e0a0 <mbedtls_mpi_mul_mpi+0xe0>
   1e079:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
   1e07d:	e8 be ec ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1e082:	48 8b bd 78 ff ff ff 	mov    -0x88(%rbp),%rdi
   1e089:	e8 b2 ec ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1e08e:	8b 45 8c             	mov    -0x74(%rbp),%eax
   1e091:	48 83 c4 68          	add    $0x68,%rsp
   1e095:	5b                   	pop    %rbx
   1e096:	41 5c                	pop    %r12
   1e098:	41 5d                	pop    %r13
   1e09a:	41 5e                	pop    %r14
   1e09c:	41 5f                	pop    %r15
   1e09e:	5d                   	pop    %rbp
   1e09f:	c3                   	retq   
   1e0a0:	31 f6                	xor    %esi,%esi
   1e0a2:	48 89 df             	mov    %rbx,%rdi
   1e0a5:	e8 d6 f1 ff ff       	callq  1d280 <mbedtls_mpi_lset>
   1e0aa:	85 c0                	test   %eax,%eax
   1e0ac:	89 45 8c             	mov    %eax,-0x74(%rbp)
   1e0af:	75 c8                	jne    1e079 <mbedtls_mpi_mul_mpi+0xb9>
   1e0b1:	4d 85 ff             	test   %r15,%r15
   1e0b4:	4e 8d 1c fd f8 ff ff 	lea    -0x8(,%r15,8),%r11
   1e0bb:	ff 
   1e0bc:	74 28                	je     1e0e6 <mbedtls_mpi_mul_mpi+0x126>
   1e0be:	66 90                	xchg   %ax,%ax
   1e0c0:	49 8b 45 10          	mov    0x10(%r13),%rax
   1e0c4:	4c 89 da             	mov    %r11,%rdx
   1e0c7:	48 03 53 10          	add    0x10(%rbx),%rdx
   1e0cb:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
   1e0d0:	4c 89 f7             	mov    %r14,%rdi
   1e0d3:	4a 8b 0c 18          	mov    (%rax,%r11,1),%rcx
   1e0d7:	e8 a4 e8 ff ff       	callq  1c980 <mpi_mul_hlp>
   1e0dc:	49 83 eb 08          	sub    $0x8,%r11
   1e0e0:	49 83 ef 01          	sub    $0x1,%r15
   1e0e4:	75 da                	jne    1e0c0 <mbedtls_mpi_mul_mpi+0x100>
   1e0e6:	41 8b 04 24          	mov    (%r12),%eax
   1e0ea:	41 0f af 45 00       	imul   0x0(%r13),%eax
   1e0ef:	89 03                	mov    %eax,(%rbx)
   1e0f1:	e9 83 ff ff ff       	jmpq   1e079 <mbedtls_mpi_mul_mpi+0xb9>
   1e0f6:	4c 8b a5 78 ff ff ff 	mov    -0x88(%rbp),%r12
   1e0fd:	48 89 de             	mov    %rbx,%rsi
   1e100:	4c 89 e7             	mov    %r12,%rdi
   1e103:	e8 68 ee ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1e108:	85 c0                	test   %eax,%eax
   1e10a:	89 45 8c             	mov    %eax,-0x74(%rbp)
   1e10d:	0f 84 f3 fe ff ff    	je     1e006 <mbedtls_mpi_mul_mpi+0x46>
   1e113:	e9 61 ff ff ff       	jmpq   1e079 <mbedtls_mpi_mul_mpi+0xb9>
   1e118:	4c 8b 6d 80          	mov    -0x80(%rbp),%r13
   1e11c:	48 89 de             	mov    %rbx,%rsi
   1e11f:	4c 89 ef             	mov    %r13,%rdi
   1e122:	e8 49 ee ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1e127:	85 c0                	test   %eax,%eax
   1e129:	89 45 8c             	mov    %eax,-0x74(%rbp)
   1e12c:	0f 84 dd fe ff ff    	je     1e00f <mbedtls_mpi_mul_mpi+0x4f>
   1e132:	e9 42 ff ff ff       	jmpq   1e079 <mbedtls_mpi_mul_mpi+0xb9>
   1e137:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e13e:	00 00 

000000000001e140 <mbedtls_mpi_mul_int>:
   1e140:	55                   	push   %rbp
   1e141:	48 89 e5             	mov    %rsp,%rbp
   1e144:	48 83 ec 30          	sub    $0x30,%rsp
   1e148:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1e14c:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
   1e150:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1e154:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%rbp)
   1e15b:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
   1e162:	00 
   1e163:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1e167:	e8 54 fe ff ff       	callq  1dfc0 <mbedtls_mpi_mul_mpi>
   1e16c:	c9                   	leaveq 
   1e16d:	c3                   	retq   
   1e16e:	66 90                	xchg   %ax,%ax

000000000001e170 <mbedtls_mpi_read_string>:
   1e170:	8d 46 fe             	lea    -0x2(%rsi),%eax
   1e173:	83 f8 0e             	cmp    $0xe,%eax
   1e176:	0f 87 54 02 00 00    	ja     1e3d0 <mbedtls_mpi_read_string+0x260>
   1e17c:	55                   	push   %rbp
   1e17d:	48 89 e5             	mov    %rsp,%rbp
   1e180:	41 57                	push   %r15
   1e182:	41 56                	push   %r14
   1e184:	4c 8d 75 b0          	lea    -0x50(%rbp),%r14
   1e188:	41 55                	push   %r13
   1e18a:	41 54                	push   %r12
   1e18c:	53                   	push   %rbx
   1e18d:	49 89 d7             	mov    %rdx,%r15
   1e190:	48 89 fb             	mov    %rdi,%rbx
   1e193:	4c 89 f7             	mov    %r14,%rdi
   1e196:	41 89 f4             	mov    %esi,%r12d
   1e199:	48 83 ec 38          	sub    $0x38,%rsp
   1e19d:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
   1e1a1:	e8 6a eb ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1e1a6:	4c 89 ff             	mov    %r15,%rdi
   1e1a9:	e8 c2 74 ff ff       	callq  15670 <strlen>
   1e1ae:	41 83 fc 10          	cmp    $0x10,%r12d
   1e1b2:	49 89 c5             	mov    %rax,%r13
   1e1b5:	0f 84 a5 00 00 00    	je     1e260 <mbedtls_mpi_read_string+0xf0>
   1e1bb:	31 f6                	xor    %esi,%esi
   1e1bd:	48 89 df             	mov    %rbx,%rdi
   1e1c0:	e8 bb f0 ff ff       	callq  1d280 <mbedtls_mpi_lset>
   1e1c5:	85 c0                	test   %eax,%eax
   1e1c7:	75 71                	jne    1e23a <mbedtls_mpi_read_string+0xca>
   1e1c9:	4d 85 ed             	test   %r13,%r13
   1e1cc:	0f 84 51 01 00 00    	je     1e323 <mbedtls_mpi_read_string+0x1b3>
   1e1d2:	49 63 c4             	movslq %r12d,%rax
   1e1d5:	45 31 ff             	xor    %r15d,%r15d
   1e1d8:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1e1dc:	0f 1f 40 00          	nopl   0x0(%rax)
   1e1e0:	4d 85 ff             	test   %r15,%r15
   1e1e3:	0f 84 01 02 00 00    	je     1e3ea <mbedtls_mpi_read_string+0x27a>
   1e1e9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1e1ed:	41 bc ff 00 00 00    	mov    $0xff,%r12d
   1e1f3:	42 0f b6 04 38       	movzbl (%rax,%r15,1),%eax
   1e1f8:	8d 50 d0             	lea    -0x30(%rax),%edx
   1e1fb:	80 fa 09             	cmp    $0x9,%dl
   1e1fe:	77 09                	ja     1e209 <mbedtls_mpi_read_string+0x99>
   1e200:	0f be c8             	movsbl %al,%ecx
   1e203:	83 e9 30             	sub    $0x30,%ecx
   1e206:	4c 63 e1             	movslq %ecx,%r12
   1e209:	8d 50 bf             	lea    -0x41(%rax),%edx
   1e20c:	80 fa 05             	cmp    $0x5,%dl
   1e20f:	77 09                	ja     1e21a <mbedtls_mpi_read_string+0xaa>
   1e211:	0f be c8             	movsbl %al,%ecx
   1e214:	83 e9 37             	sub    $0x37,%ecx
   1e217:	4c 63 e1             	movslq %ecx,%r12
   1e21a:	8d 50 9f             	lea    -0x61(%rax),%edx
   1e21d:	80 fa 05             	cmp    $0x5,%dl
   1e220:	77 09                	ja     1e22b <mbedtls_mpi_read_string+0xbb>
   1e222:	0f be c8             	movsbl %al,%ecx
   1e225:	83 e9 57             	sub    $0x57,%ecx
   1e228:	4c 63 e1             	movslq %ecx,%r12
   1e22b:	4c 39 65 a8          	cmp    %r12,-0x58(%rbp)
   1e22f:	0f 87 fb 00 00 00    	ja     1e330 <mbedtls_mpi_read_string+0x1c0>
   1e235:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   1e23a:	4c 89 f7             	mov    %r14,%rdi
   1e23d:	89 45 a8             	mov    %eax,-0x58(%rbp)
   1e240:	e8 fb ea ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1e245:	8b 45 a8             	mov    -0x58(%rbp),%eax
   1e248:	48 83 c4 38          	add    $0x38,%rsp
   1e24c:	5b                   	pop    %rbx
   1e24d:	41 5c                	pop    %r12
   1e24f:	41 5d                	pop    %r13
   1e251:	41 5e                	pop    %r14
   1e253:	41 5f                	pop    %r15
   1e255:	5d                   	pop    %rbp
   1e256:	c3                   	retq   
   1e257:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1e25e:	00 00 
   1e260:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   1e267:	ff ff 3f 
   1e26a:	49 39 c5             	cmp    %rax,%r13
   1e26d:	0f 87 6d 01 00 00    	ja     1e3e0 <mbedtls_mpi_read_string+0x270>
   1e273:	4a 8d 34 ad 00 00 00 	lea    0x0(,%r13,4),%rsi
   1e27a:	00 
   1e27b:	31 c0                	xor    %eax,%eax
   1e27d:	48 89 df             	mov    %rbx,%rdi
   1e280:	40 f6 c6 3c          	test   $0x3c,%sil
   1e284:	0f 95 c0             	setne  %al
   1e287:	48 c1 ee 06          	shr    $0x6,%rsi
   1e28b:	48 01 c6             	add    %rax,%rsi
   1e28e:	e8 1d eb ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1e293:	85 c0                	test   %eax,%eax
   1e295:	75 a3                	jne    1e23a <mbedtls_mpi_read_string+0xca>
   1e297:	31 f6                	xor    %esi,%esi
   1e299:	48 89 df             	mov    %rbx,%rdi
   1e29c:	e8 df ef ff ff       	callq  1d280 <mbedtls_mpi_lset>
   1e2a1:	85 c0                	test   %eax,%eax
   1e2a3:	75 95                	jne    1e23a <mbedtls_mpi_read_string+0xca>
   1e2a5:	31 ff                	xor    %edi,%edi
   1e2a7:	4d 85 ed             	test   %r13,%r13
   1e2aa:	74 77                	je     1e323 <mbedtls_mpi_read_string+0x1b3>
   1e2ac:	0f 1f 40 00          	nopl   0x0(%rax)
   1e2b0:	49 83 fd 01          	cmp    $0x1,%r13
   1e2b4:	0f 84 e6 00 00 00    	je     1e3a0 <mbedtls_mpi_read_string+0x230>
   1e2ba:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   1e2be:	49 83 ed 01          	sub    $0x1,%r13
   1e2c2:	42 0f be 14 2e       	movsbl (%rsi,%r13,1),%edx
   1e2c7:	be ff 00 00 00       	mov    $0xff,%esi
   1e2cc:	8d 4a d0             	lea    -0x30(%rdx),%ecx
   1e2cf:	80 f9 09             	cmp    $0x9,%cl
   1e2d2:	77 09                	ja     1e2dd <mbedtls_mpi_read_string+0x16d>
   1e2d4:	0f be f2             	movsbl %dl,%esi
   1e2d7:	83 ee 30             	sub    $0x30,%esi
   1e2da:	48 63 f6             	movslq %esi,%rsi
   1e2dd:	8d 4a bf             	lea    -0x41(%rdx),%ecx
   1e2e0:	80 f9 05             	cmp    $0x5,%cl
   1e2e3:	0f 86 d7 00 00 00    	jbe    1e3c0 <mbedtls_mpi_read_string+0x250>
   1e2e9:	8d 4a 9f             	lea    -0x61(%rdx),%ecx
   1e2ec:	80 f9 05             	cmp    $0x5,%cl
   1e2ef:	0f 86 9b 00 00 00    	jbe    1e390 <mbedtls_mpi_read_string+0x220>
   1e2f5:	48 83 fe 0f          	cmp    $0xf,%rsi
   1e2f9:	0f 87 36 ff ff ff    	ja     1e235 <mbedtls_mpi_read_string+0xc5>
   1e2ff:	90                   	nop
   1e300:	89 f9                	mov    %edi,%ecx
   1e302:	4c 8b 43 10          	mov    0x10(%rbx),%r8
   1e306:	49 89 f9             	mov    %rdi,%r9
   1e309:	83 e1 0f             	and    $0xf,%ecx
   1e30c:	49 c1 e9 04          	shr    $0x4,%r9
   1e310:	48 83 c7 01          	add    $0x1,%rdi
   1e314:	c1 e1 02             	shl    $0x2,%ecx
   1e317:	48 d3 e6             	shl    %cl,%rsi
   1e31a:	4b 09 34 c8          	or     %rsi,(%r8,%r9,8)
   1e31e:	4d 85 ed             	test   %r13,%r13
   1e321:	75 8d                	jne    1e2b0 <mbedtls_mpi_read_string+0x140>
   1e323:	31 c0                	xor    %eax,%eax
   1e325:	e9 10 ff ff ff       	jmpq   1e23a <mbedtls_mpi_read_string+0xca>
   1e32a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1e330:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1e334:	48 89 de             	mov    %rbx,%rsi
   1e337:	4c 89 f7             	mov    %r14,%rdi
   1e33a:	e8 01 fe ff ff       	callq  1e140 <mbedtls_mpi_mul_int>
   1e33f:	85 c0                	test   %eax,%eax
   1e341:	0f 85 f3 fe ff ff    	jne    1e23a <mbedtls_mpi_read_string+0xca>
   1e347:	83 3b 01             	cmpl   $0x1,(%rbx)
   1e34a:	4c 89 e2             	mov    %r12,%rdx
   1e34d:	4c 89 f6             	mov    %r14,%rsi
   1e350:	48 89 df             	mov    %rbx,%rdi
   1e353:	74 2b                	je     1e380 <mbedtls_mpi_read_string+0x210>
   1e355:	e8 26 fc ff ff       	callq  1df80 <mbedtls_mpi_sub_int>
   1e35a:	85 c0                	test   %eax,%eax
   1e35c:	0f 85 d8 fe ff ff    	jne    1e23a <mbedtls_mpi_read_string+0xca>
   1e362:	49 83 c7 01          	add    $0x1,%r15
   1e366:	4d 39 fd             	cmp    %r15,%r13
   1e369:	0f 85 71 fe ff ff    	jne    1e1e0 <mbedtls_mpi_read_string+0x70>
   1e36f:	31 c0                	xor    %eax,%eax
   1e371:	e9 c4 fe ff ff       	jmpq   1e23a <mbedtls_mpi_read_string+0xca>
   1e376:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1e37d:	00 00 00 
   1e380:	e8 bb fb ff ff       	callq  1df40 <mbedtls_mpi_add_int>
   1e385:	85 c0                	test   %eax,%eax
   1e387:	74 d9                	je     1e362 <mbedtls_mpi_read_string+0x1f2>
   1e389:	e9 ac fe ff ff       	jmpq   1e23a <mbedtls_mpi_read_string+0xca>
   1e38e:	66 90                	xchg   %ax,%ax
   1e390:	83 ea 57             	sub    $0x57,%edx
   1e393:	48 63 f2             	movslq %edx,%rsi
   1e396:	e9 65 ff ff ff       	jmpq   1e300 <mbedtls_mpi_read_string+0x190>
   1e39b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e3a0:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
   1e3a4:	80 3e 2d             	cmpb   $0x2d,(%rsi)
   1e3a7:	0f 85 0d ff ff ff    	jne    1e2ba <mbedtls_mpi_read_string+0x14a>
   1e3ad:	c7 03 ff ff ff ff    	movl   $0xffffffff,(%rbx)
   1e3b3:	e9 82 fe ff ff       	jmpq   1e23a <mbedtls_mpi_read_string+0xca>
   1e3b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1e3bf:	00 
   1e3c0:	83 ea 37             	sub    $0x37,%edx
   1e3c3:	48 63 f2             	movslq %edx,%rsi
   1e3c6:	e9 35 ff ff ff       	jmpq   1e300 <mbedtls_mpi_read_string+0x190>
   1e3cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e3d0:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1e3d5:	c3                   	retq   
   1e3d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1e3dd:	00 00 00 
   1e3e0:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1e3e5:	e9 5e fe ff ff       	jmpq   1e248 <mbedtls_mpi_read_string+0xd8>
   1e3ea:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1e3ee:	80 38 2d             	cmpb   $0x2d,(%rax)
   1e3f1:	0f 85 f2 fd ff ff    	jne    1e1e9 <mbedtls_mpi_read_string+0x79>
   1e3f7:	c7 03 ff ff ff ff    	movl   $0xffffffff,(%rbx)
   1e3fd:	e9 60 ff ff ff       	jmpq   1e362 <mbedtls_mpi_read_string+0x1f2>
   1e402:	0f 1f 40 00          	nopl   0x0(%rax)
   1e406:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1e40d:	00 00 00 

000000000001e410 <mbedtls_mpi_div_mpi>:
   1e410:	55                   	push   %rbp
   1e411:	48 89 e5             	mov    %rsp,%rbp
   1e414:	41 57                	push   %r15
   1e416:	41 56                	push   %r14
   1e418:	41 55                	push   %r13
   1e41a:	41 54                	push   %r12
   1e41c:	49 89 d6             	mov    %rdx,%r14
   1e41f:	53                   	push   %rbx
   1e420:	49 89 cc             	mov    %rcx,%r12
   1e423:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
   1e42a:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
   1e431:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
   1e438:	48 89 cf             	mov    %rcx,%rdi
   1e43b:	31 f6                	xor    %esi,%esi
   1e43d:	e8 4e f7 ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   1e442:	85 c0                	test   %eax,%eax
   1e444:	41 b8 f4 ff ff ff    	mov    $0xfffffff4,%r8d
   1e44a:	0f 84 b6 00 00 00    	je     1e506 <mbedtls_mpi_div_mpi+0xf6>
   1e450:	48 8d 9d 30 ff ff ff 	lea    -0xd0(%rbp),%rbx
   1e457:	4c 8d ad 50 ff ff ff 	lea    -0xb0(%rbp),%r13
   1e45e:	4c 8d bd 70 ff ff ff 	lea    -0x90(%rbp),%r15
   1e465:	48 89 df             	mov    %rbx,%rdi
   1e468:	e8 a3 e8 ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1e46d:	4c 89 ef             	mov    %r13,%rdi
   1e470:	e8 9b e8 ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1e475:	4c 89 ff             	mov    %r15,%rdi
   1e478:	e8 93 e8 ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1e47d:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1e481:	48 89 c7             	mov    %rax,%rdi
   1e484:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   1e48b:	e8 80 e8 ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1e490:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1e494:	48 89 c7             	mov    %rax,%rdi
   1e497:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
   1e49e:	e8 6d e8 ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1e4a3:	4c 89 e6             	mov    %r12,%rsi
   1e4a6:	4c 89 f7             	mov    %r14,%rdi
   1e4a9:	e8 52 f3 ff ff       	callq  1d800 <mbedtls_mpi_cmp_abs>
   1e4ae:	85 c0                	test   %eax,%eax
   1e4b0:	78 6e                	js     1e520 <mbedtls_mpi_div_mpi+0x110>
   1e4b2:	4c 89 f6             	mov    %r14,%rsi
   1e4b5:	48 89 df             	mov    %rbx,%rdi
   1e4b8:	e8 b3 ea ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1e4bd:	85 c0                	test   %eax,%eax
   1e4bf:	41 89 c0             	mov    %eax,%r8d
   1e4c2:	0f 84 a8 00 00 00    	je     1e570 <mbedtls_mpi_div_mpi+0x160>
   1e4c8:	48 89 df             	mov    %rbx,%rdi
   1e4cb:	44 89 85 28 ff ff ff 	mov    %r8d,-0xd8(%rbp)
   1e4d2:	e8 69 e8 ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1e4d7:	4c 89 ef             	mov    %r13,%rdi
   1e4da:	e8 61 e8 ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1e4df:	4c 89 ff             	mov    %r15,%rdi
   1e4e2:	e8 59 e8 ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1e4e7:	48 8b bd 20 ff ff ff 	mov    -0xe0(%rbp),%rdi
   1e4ee:	e8 4d e8 ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1e4f3:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
   1e4fa:	e8 41 e8 ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1e4ff:	44 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%r8d
   1e506:	48 81 c4 38 01 00 00 	add    $0x138,%rsp
   1e50d:	44 89 c0             	mov    %r8d,%eax
   1e510:	5b                   	pop    %rbx
   1e511:	41 5c                	pop    %r12
   1e513:	41 5d                	pop    %r13
   1e515:	41 5e                	pop    %r14
   1e517:	41 5f                	pop    %r15
   1e519:	5d                   	pop    %rbp
   1e51a:	c3                   	retq   
   1e51b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1e520:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
   1e527:	00 
   1e528:	74 15                	je     1e53f <mbedtls_mpi_div_mpi+0x12f>
   1e52a:	48 8b bd 28 ff ff ff 	mov    -0xd8(%rbp),%rdi
   1e531:	31 f6                	xor    %esi,%esi
   1e533:	e8 48 ed ff ff       	callq  1d280 <mbedtls_mpi_lset>
   1e538:	85 c0                	test   %eax,%eax
   1e53a:	41 89 c0             	mov    %eax,%r8d
   1e53d:	75 89                	jne    1e4c8 <mbedtls_mpi_div_mpi+0xb8>
   1e53f:	48 83 bd 10 ff ff ff 	cmpq   $0x0,-0xf0(%rbp)
   1e546:	00 
   1e547:	74 1a                	je     1e563 <mbedtls_mpi_div_mpi+0x153>
   1e549:	48 8b bd 10 ff ff ff 	mov    -0xf0(%rbp),%rdi
   1e550:	4c 89 f6             	mov    %r14,%rsi
   1e553:	e8 18 ea ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1e558:	85 c0                	test   %eax,%eax
   1e55a:	41 89 c0             	mov    %eax,%r8d
   1e55d:	0f 85 65 ff ff ff    	jne    1e4c8 <mbedtls_mpi_div_mpi+0xb8>
   1e563:	45 31 c0             	xor    %r8d,%r8d
   1e566:	eb 9e                	jmp    1e506 <mbedtls_mpi_div_mpi+0xf6>
   1e568:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1e56f:	00 
   1e570:	4c 89 e6             	mov    %r12,%rsi
   1e573:	4c 89 ef             	mov    %r13,%rdi
   1e576:	e8 f5 e9 ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1e57b:	85 c0                	test   %eax,%eax
   1e57d:	41 89 c0             	mov    %eax,%r8d
   1e580:	0f 85 42 ff ff ff    	jne    1e4c8 <mbedtls_mpi_div_mpi+0xb8>
   1e586:	49 8b 46 08          	mov    0x8(%r14),%rax
   1e58a:	4c 89 ff             	mov    %r15,%rdi
   1e58d:	c7 85 50 ff ff ff 01 	movl   $0x1,-0xb0(%rbp)
   1e594:	00 00 00 
   1e597:	c7 85 30 ff ff ff 01 	movl   $0x1,-0xd0(%rbp)
   1e59e:	00 00 00 
   1e5a1:	48 8d 70 02          	lea    0x2(%rax),%rsi
   1e5a5:	e8 06 e8 ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1e5aa:	85 c0                	test   %eax,%eax
   1e5ac:	41 89 c0             	mov    %eax,%r8d
   1e5af:	0f 85 13 ff ff ff    	jne    1e4c8 <mbedtls_mpi_div_mpi+0xb8>
   1e5b5:	31 f6                	xor    %esi,%esi
   1e5b7:	4c 89 ff             	mov    %r15,%rdi
   1e5ba:	e8 c1 ec ff ff       	callq  1d280 <mbedtls_mpi_lset>
   1e5bf:	85 c0                	test   %eax,%eax
   1e5c1:	41 89 c0             	mov    %eax,%r8d
   1e5c4:	0f 85 fe fe ff ff    	jne    1e4c8 <mbedtls_mpi_div_mpi+0xb8>
   1e5ca:	48 8b bd 20 ff ff ff 	mov    -0xe0(%rbp),%rdi
   1e5d1:	be 02 00 00 00       	mov    $0x2,%esi
   1e5d6:	e8 d5 e7 ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1e5db:	85 c0                	test   %eax,%eax
   1e5dd:	41 89 c0             	mov    %eax,%r8d
   1e5e0:	0f 85 e2 fe ff ff    	jne    1e4c8 <mbedtls_mpi_div_mpi+0xb8>
   1e5e6:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
   1e5ed:	be 03 00 00 00       	mov    $0x3,%esi
   1e5f2:	e8 b9 e7 ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1e5f7:	85 c0                	test   %eax,%eax
   1e5f9:	41 89 c0             	mov    %eax,%r8d
   1e5fc:	0f 85 c6 fe ff ff    	jne    1e4c8 <mbedtls_mpi_div_mpi+0xb8>
   1e602:	4c 89 ef             	mov    %r13,%rdi
   1e605:	e8 e6 ed ff ff       	callq  1d3f0 <mbedtls_mpi_bitlen>
   1e60a:	83 e0 3f             	and    $0x3f,%eax
   1e60d:	48 83 f8 3f          	cmp    $0x3f,%rax
   1e611:	0f 84 9e 02 00 00    	je     1e8b5 <mbedtls_mpi_div_mpi+0x4a5>
   1e617:	ba 3f 00 00 00       	mov    $0x3f,%edx
   1e61c:	48 89 df             	mov    %rbx,%rdi
   1e61f:	48 29 c2             	sub    %rax,%rdx
   1e622:	48 89 d6             	mov    %rdx,%rsi
   1e625:	48 89 95 f8 fe ff ff 	mov    %rdx,-0x108(%rbp)
   1e62c:	e8 cf ef ff ff       	callq  1d600 <mbedtls_mpi_shift_l>
   1e631:	85 c0                	test   %eax,%eax
   1e633:	41 89 c0             	mov    %eax,%r8d
   1e636:	0f 85 8c fe ff ff    	jne    1e4c8 <mbedtls_mpi_div_mpi+0xb8>
   1e63c:	48 8b b5 f8 fe ff ff 	mov    -0x108(%rbp),%rsi
   1e643:	4c 89 ef             	mov    %r13,%rdi
   1e646:	e8 b5 ef ff ff       	callq  1d600 <mbedtls_mpi_shift_l>
   1e64b:	85 c0                	test   %eax,%eax
   1e64d:	41 89 c0             	mov    %eax,%r8d
   1e650:	0f 85 72 fe ff ff    	jne    1e4c8 <mbedtls_mpi_div_mpi+0xb8>
   1e656:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1e65d:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
   1e664:	4c 89 ef             	mov    %r13,%rdi
   1e667:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   1e66e:	48 89 8d e0 fe ff ff 	mov    %rcx,-0x120(%rbp)
   1e675:	48 83 e8 01          	sub    $0x1,%rax
   1e679:	48 83 e9 01          	sub    $0x1,%rcx
   1e67d:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   1e684:	48 29 c8             	sub    %rcx,%rax
   1e687:	48 89 8d f0 fe ff ff 	mov    %rcx,-0x110(%rbp)
   1e68e:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
   1e695:	48 c1 e0 06          	shl    $0x6,%rax
   1e699:	48 89 c6             	mov    %rax,%rsi
   1e69c:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   1e6a3:	e8 58 ef ff ff       	callq  1d600 <mbedtls_mpi_shift_l>
   1e6a8:	85 c0                	test   %eax,%eax
   1e6aa:	41 89 c0             	mov    %eax,%r8d
   1e6ad:	0f 85 15 fe ff ff    	jne    1e4c8 <mbedtls_mpi_div_mpi+0xb8>
   1e6b3:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
   1e6ba:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
   1e6c1:	00 
   1e6c2:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
   1e6c9:	eb 25                	jmp    1e6f0 <mbedtls_mpi_div_mpi+0x2e0>
   1e6cb:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
   1e6d2:	48 03 45 80          	add    -0x80(%rbp),%rax
   1e6d6:	4c 89 ea             	mov    %r13,%rdx
   1e6d9:	48 89 de             	mov    %rbx,%rsi
   1e6dc:	48 89 df             	mov    %rbx,%rdi
   1e6df:	48 83 00 01          	addq   $0x1,(%rax)
   1e6e3:	e8 c8 f7 ff ff       	callq  1deb0 <mbedtls_mpi_sub_mpi>
   1e6e8:	85 c0                	test   %eax,%eax
   1e6ea:	0f 85 d5 01 00 00    	jne    1e8c5 <mbedtls_mpi_div_mpi+0x4b5>
   1e6f0:	4c 89 ee             	mov    %r13,%rsi
   1e6f3:	48 89 df             	mov    %rbx,%rdi
   1e6f6:	e8 95 f3 ff ff       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1e6fb:	85 c0                	test   %eax,%eax
   1e6fd:	79 cc                	jns    1e6cb <mbedtls_mpi_div_mpi+0x2bb>
   1e6ff:	48 8b b5 e8 fe ff ff 	mov    -0x118(%rbp),%rsi
   1e706:	4c 89 ef             	mov    %r13,%rdi
   1e709:	e8 12 f0 ff ff       	callq  1d720 <mbedtls_mpi_shift_r>
   1e70e:	85 c0                	test   %eax,%eax
   1e710:	41 89 c0             	mov    %eax,%r8d
   1e713:	0f 85 af fd ff ff    	jne    1e4c8 <mbedtls_mpi_div_mpi+0xb8>
   1e719:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   1e720:	48 8b 8d 08 ff ff ff 	mov    -0xf8(%rbp),%rcx
   1e727:	4c 89 bd 08 ff ff ff 	mov    %r15,-0xf8(%rbp)
   1e72e:	4c 8b bd 20 ff ff ff 	mov    -0xe0(%rbp),%r15
   1e735:	4c 89 b5 c8 fe ff ff 	mov    %r14,-0x138(%rbp)
   1e73c:	4c 89 a5 c0 fe ff ff 	mov    %r12,-0x140(%rbp)
   1e743:	48 c1 e0 03          	shl    $0x3,%rax
   1e747:	44 89 85 d4 fe ff ff 	mov    %r8d,-0x12c(%rbp)
   1e74e:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
   1e755:	48 89 c8             	mov    %rcx,%rax
   1e758:	48 2b 85 e0 fe ff ff 	sub    -0x120(%rbp),%rax
   1e75f:	48 8d 14 c5 f8 ff ff 	lea    -0x8(,%rax,8),%rdx
   1e766:	ff 
   1e767:	48 c1 e0 06          	shl    $0x6,%rax
   1e76b:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   1e772:	48 8d 04 cd f0 ff ff 	lea    -0x10(,%rcx,8),%rax
   1e779:	ff 
   1e77a:	49 89 d6             	mov    %rdx,%r14
   1e77d:	49 89 c4             	mov    %rax,%r12
   1e780:	48 8b 8d f0 fe ff ff 	mov    -0x110(%rbp),%rcx
   1e787:	48 39 8d 00 ff ff ff 	cmp    %rcx,-0x100(%rbp)
   1e78e:	0f 86 18 02 00 00    	jbe    1e9ac <mbedtls_mpi_div_mpi+0x59c>
   1e794:	49 8d 4c 24 08       	lea    0x8(%r12),%rcx
   1e799:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1e7a0:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
   1e7a7:	4c 8b 45 80          	mov    -0x80(%rbp),%r8
   1e7ab:	48 89 8d d8 fe ff ff 	mov    %rcx,-0x128(%rbp)
   1e7b2:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
   1e7b9:	4a 8b 74 20 08       	mov    0x8(%rax,%r12,1),%rsi
   1e7be:	48 8b 14 0a          	mov    (%rdx,%rcx,1),%rdx
   1e7c2:	48 39 d6             	cmp    %rdx,%rsi
   1e7c5:	0f 82 90 01 00 00    	jb     1e95b <mbedtls_mpi_div_mpi+0x54b>
   1e7cb:	4b c7 04 30 ff ff ff 	movq   $0xffffffffffffffff,(%r8,%r14,1)
   1e7d2:	ff 
   1e7d3:	4b 83 04 30 01       	addq   $0x1,(%r8,%r14,1)
   1e7d8:	e9 a5 00 00 00       	jmpq   1e882 <mbedtls_mpi_div_mpi+0x472>
   1e7dd:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1e7e4:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
   1e7eb:	48 8b 4c 08 f8       	mov    -0x8(%rax,%rcx,1),%rcx
   1e7f0:	48 89 0a             	mov    %rcx,(%rdx)
   1e7f3:	48 8b 8d e8 fe ff ff 	mov    -0x118(%rbp),%rcx
   1e7fa:	4c 89 fe             	mov    %r15,%rsi
   1e7fd:	4c 89 ff             	mov    %r15,%rdi
   1e800:	48 8b 04 08          	mov    (%rax,%rcx,1),%rax
   1e804:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1e808:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1e80c:	4a 8b 14 30          	mov    (%rax,%r14,1),%rdx
   1e810:	e8 2b f9 ff ff       	callq  1e140 <mbedtls_mpi_mul_int>
   1e815:	85 c0                	test   %eax,%eax
   1e817:	0f 85 be 00 00 00    	jne    1e8db <mbedtls_mpi_div_mpi+0x4cb>
   1e81d:	48 8b bd 18 ff ff ff 	mov    -0xe8(%rbp),%rdi
   1e824:	31 f6                	xor    %esi,%esi
   1e826:	e8 55 ea ff ff       	callq  1d280 <mbedtls_mpi_lset>
   1e82b:	85 c0                	test   %eax,%eax
   1e82d:	0f 85 a8 00 00 00    	jne    1e8db <mbedtls_mpi_div_mpi+0x4cb>
   1e833:	48 83 bd 00 ff ff ff 	cmpq   $0x1,-0x100(%rbp)
   1e83a:	01 
   1e83b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1e83f:	0f 84 88 00 00 00    	je     1e8cd <mbedtls_mpi_div_mpi+0x4bd>
   1e845:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1e84c:	4a 8b 4c 20 f8       	mov    -0x8(%rax,%r12,1),%rcx
   1e851:	48 89 0a             	mov    %rcx,(%rdx)
   1e854:	4a 8b 0c 20          	mov    (%rax,%r12,1),%rcx
   1e858:	4c 89 ff             	mov    %r15,%rdi
   1e85b:	48 8b b5 18 ff ff ff 	mov    -0xe8(%rbp),%rsi
   1e862:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
   1e866:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
   1e86d:	48 8b 04 08          	mov    (%rax,%rcx,1),%rax
   1e871:	48 89 42 10          	mov    %rax,0x10(%rdx)
   1e875:	e8 16 f2 ff ff       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1e87a:	85 c0                	test   %eax,%eax
   1e87c:	7e 6c                	jle    1e8ea <mbedtls_mpi_div_mpi+0x4da>
   1e87e:	4c 8b 45 80          	mov    -0x80(%rbp),%r8
   1e882:	4b 83 2c 30 01       	subq   $0x1,(%r8,%r14,1)
   1e887:	31 f6                	xor    %esi,%esi
   1e889:	4c 89 ff             	mov    %r15,%rdi
   1e88c:	e8 ef e9 ff ff       	callq  1d280 <mbedtls_mpi_lset>
   1e891:	85 c0                	test   %eax,%eax
   1e893:	75 46                	jne    1e8db <mbedtls_mpi_div_mpi+0x4cb>
   1e895:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)
   1e89c:	00 
   1e89d:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
   1e8a1:	0f 85 36 ff ff ff    	jne    1e7dd <mbedtls_mpi_div_mpi+0x3cd>
   1e8a7:	31 c9                	xor    %ecx,%ecx
   1e8a9:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   1e8b0:	e9 3b ff ff ff       	jmpq   1e7f0 <mbedtls_mpi_div_mpi+0x3e0>
   1e8b5:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
   1e8bc:	00 00 00 00 
   1e8c0:	e9 91 fd ff ff       	jmpq   1e656 <mbedtls_mpi_div_mpi+0x246>
   1e8c5:	41 89 c0             	mov    %eax,%r8d
   1e8c8:	e9 fb fb ff ff       	jmpq   1e4c8 <mbedtls_mpi_div_mpi+0xb8>
   1e8cd:	31 c9                	xor    %ecx,%ecx
   1e8cf:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1e8d6:	e9 76 ff ff ff       	jmpq   1e851 <mbedtls_mpi_div_mpi+0x441>
   1e8db:	4c 8b bd 08 ff ff ff 	mov    -0xf8(%rbp),%r15
   1e8e2:	41 89 c0             	mov    %eax,%r8d
   1e8e5:	e9 de fb ff ff       	jmpq   1e4c8 <mbedtls_mpi_div_mpi+0xb8>
   1e8ea:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1e8ee:	4c 89 ee             	mov    %r13,%rsi
   1e8f1:	4c 89 ff             	mov    %r15,%rdi
   1e8f4:	4a 8b 14 30          	mov    (%rax,%r14,1),%rdx
   1e8f8:	e8 43 f8 ff ff       	callq  1e140 <mbedtls_mpi_mul_int>
   1e8fd:	85 c0                	test   %eax,%eax
   1e8ff:	75 da                	jne    1e8db <mbedtls_mpi_div_mpi+0x4cb>
   1e901:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   1e908:	4c 89 ff             	mov    %r15,%rdi
   1e90b:	48 83 e8 40          	sub    $0x40,%rax
   1e90f:	48 89 c6             	mov    %rax,%rsi
   1e912:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   1e919:	e8 e2 ec ff ff       	callq  1d600 <mbedtls_mpi_shift_l>
   1e91e:	85 c0                	test   %eax,%eax
   1e920:	75 b9                	jne    1e8db <mbedtls_mpi_div_mpi+0x4cb>
   1e922:	4c 89 fa             	mov    %r15,%rdx
   1e925:	48 89 de             	mov    %rbx,%rsi
   1e928:	48 89 df             	mov    %rbx,%rdi
   1e92b:	e8 80 f5 ff ff       	callq  1deb0 <mbedtls_mpi_sub_mpi>
   1e930:	85 c0                	test   %eax,%eax
   1e932:	75 a7                	jne    1e8db <mbedtls_mpi_div_mpi+0x4cb>
   1e934:	31 f6                	xor    %esi,%esi
   1e936:	48 89 df             	mov    %rbx,%rdi
   1e939:	e8 52 f2 ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   1e93e:	85 c0                	test   %eax,%eax
   1e940:	0f 88 3b 01 00 00    	js     1ea81 <mbedtls_mpi_div_mpi+0x671>
   1e946:	48 83 ad 00 ff ff ff 	subq   $0x1,-0x100(%rbp)
   1e94d:	01 
   1e94e:	49 83 ee 08          	sub    $0x8,%r14
   1e952:	49 83 ec 08          	sub    $0x8,%r12
   1e956:	e9 25 fe ff ff       	jmpq   1e780 <mbedtls_mpi_div_mpi+0x370>
   1e95b:	49 83 c9 ff          	or     $0xffffffffffffffff,%r9
   1e95f:	48 85 d2             	test   %rdx,%rdx
   1e962:	4f 8d 14 30          	lea    (%r8,%r14,1),%r10
   1e966:	4a 8b 3c 20          	mov    (%rax,%r12,1),%rdi
   1e96a:	74 38                	je     1e9a4 <mbedtls_mpi_div_mpi+0x594>
   1e96c:	31 c9                	xor    %ecx,%ecx
   1e96e:	4c 89 85 a8 fe ff ff 	mov    %r8,-0x158(%rbp)
   1e975:	4c 89 8d b0 fe ff ff 	mov    %r9,-0x150(%rbp)
   1e97c:	4c 89 95 b8 fe ff ff 	mov    %r10,-0x148(%rbp)
   1e983:	e8 48 23 00 00       	callq  20cd0 <__udivti3>
   1e988:	4c 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%r8
   1e98f:	4c 8b 95 b8 fe ff ff 	mov    -0x148(%rbp),%r10
   1e996:	48 85 d2             	test   %rdx,%rdx
   1e999:	49 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%r9
   1e9a0:	4c 0f 44 c8          	cmove  %rax,%r9
   1e9a4:	4d 89 0a             	mov    %r9,(%r10)
   1e9a7:	e9 27 fe ff ff       	jmpq   1e7d3 <mbedtls_mpi_div_mpi+0x3c3>
   1e9ac:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   1e9b3:	44 8b 85 d4 fe ff ff 	mov    -0x12c(%rbp),%r8d
   1e9ba:	4c 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%r14
   1e9c1:	4c 8b a5 c0 fe ff ff 	mov    -0x140(%rbp),%r12
   1e9c8:	4c 8b bd 08 ff ff ff 	mov    -0xf8(%rbp),%r15
   1e9cf:	48 85 c0             	test   %rax,%rax
   1e9d2:	74 32                	je     1ea06 <mbedtls_mpi_div_mpi+0x5f6>
   1e9d4:	4c 89 fe             	mov    %r15,%rsi
   1e9d7:	48 89 c7             	mov    %rax,%rdi
   1e9da:	44 89 85 08 ff ff ff 	mov    %r8d,-0xf8(%rbp)
   1e9e1:	e8 8a e5 ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1e9e6:	85 c0                	test   %eax,%eax
   1e9e8:	0f 85 d7 fe ff ff    	jne    1e8c5 <mbedtls_mpi_div_mpi+0x4b5>
   1e9ee:	41 8b 06             	mov    (%r14),%eax
   1e9f1:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
   1e9f8:	41 0f af 04 24       	imul   (%r12),%eax
   1e9fd:	44 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%r8d
   1ea04:	89 01                	mov    %eax,(%rcx)
   1ea06:	48 83 bd 10 ff ff ff 	cmpq   $0x0,-0xf0(%rbp)
   1ea0d:	00 
   1ea0e:	0f 84 b4 fa ff ff    	je     1e4c8 <mbedtls_mpi_div_mpi+0xb8>
   1ea14:	48 8b b5 f8 fe ff ff 	mov    -0x108(%rbp),%rsi
   1ea1b:	48 89 df             	mov    %rbx,%rdi
   1ea1e:	44 89 85 28 ff ff ff 	mov    %r8d,-0xd8(%rbp)
   1ea25:	e8 f6 ec ff ff       	callq  1d720 <mbedtls_mpi_shift_r>
   1ea2a:	85 c0                	test   %eax,%eax
   1ea2c:	0f 85 93 fe ff ff    	jne    1e8c5 <mbedtls_mpi_div_mpi+0x4b5>
   1ea32:	41 8b 06             	mov    (%r14),%eax
   1ea35:	48 8b bd 10 ff ff ff 	mov    -0xf0(%rbp),%rdi
   1ea3c:	48 89 de             	mov    %rbx,%rsi
   1ea3f:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
   1ea45:	e8 26 e5 ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1ea4a:	85 c0                	test   %eax,%eax
   1ea4c:	0f 85 73 fe ff ff    	jne    1e8c5 <mbedtls_mpi_div_mpi+0x4b5>
   1ea52:	4c 8b b5 10 ff ff ff 	mov    -0xf0(%rbp),%r14
   1ea59:	31 f6                	xor    %esi,%esi
   1ea5b:	4c 89 f7             	mov    %r14,%rdi
   1ea5e:	e8 2d f1 ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   1ea63:	85 c0                	test   %eax,%eax
   1ea65:	44 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%r8d
   1ea6c:	0f 85 56 fa ff ff    	jne    1e4c8 <mbedtls_mpi_div_mpi+0xb8>
   1ea72:	41 c7 06 01 00 00 00 	movl   $0x1,(%r14)
   1ea79:	45 31 c0             	xor    %r8d,%r8d
   1ea7c:	e9 47 fa ff ff       	jmpq   1e4c8 <mbedtls_mpi_div_mpi+0xb8>
   1ea81:	4c 89 ee             	mov    %r13,%rsi
   1ea84:	4c 89 ff             	mov    %r15,%rdi
   1ea87:	e8 e4 e4 ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1ea8c:	85 c0                	test   %eax,%eax
   1ea8e:	0f 85 47 fe ff ff    	jne    1e8db <mbedtls_mpi_div_mpi+0x4cb>
   1ea94:	48 8b b5 e0 fe ff ff 	mov    -0x120(%rbp),%rsi
   1ea9b:	4c 89 ff             	mov    %r15,%rdi
   1ea9e:	e8 5d eb ff ff       	callq  1d600 <mbedtls_mpi_shift_l>
   1eaa3:	85 c0                	test   %eax,%eax
   1eaa5:	0f 85 30 fe ff ff    	jne    1e8db <mbedtls_mpi_div_mpi+0x4cb>
   1eaab:	4c 89 fa             	mov    %r15,%rdx
   1eaae:	48 89 de             	mov    %rbx,%rsi
   1eab1:	48 89 df             	mov    %rbx,%rdi
   1eab4:	e8 67 f3 ff ff       	callq  1de20 <mbedtls_mpi_add_mpi>
   1eab9:	85 c0                	test   %eax,%eax
   1eabb:	0f 85 1a fe ff ff    	jne    1e8db <mbedtls_mpi_div_mpi+0x4cb>
   1eac1:	4c 89 f0             	mov    %r14,%rax
   1eac4:	48 03 45 80          	add    -0x80(%rbp),%rax
   1eac8:	48 83 28 01          	subq   $0x1,(%rax)
   1eacc:	e9 75 fe ff ff       	jmpq   1e946 <mbedtls_mpi_div_mpi+0x536>
   1ead1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ead6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1eadd:	00 00 00 

000000000001eae0 <mbedtls_mpi_div_int>:
   1eae0:	55                   	push   %rbp
   1eae1:	48 89 c8             	mov    %rcx,%rax
   1eae4:	48 c1 f8 3f          	sar    $0x3f,%rax
   1eae8:	48 89 e5             	mov    %rsp,%rbp
   1eaeb:	48 31 c1             	xor    %rax,%rcx
   1eaee:	48 83 ec 30          	sub    $0x30,%rsp
   1eaf2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   1eaf6:	48 29 45 d0          	sub    %rax,-0x30(%rbp)
   1eafa:	83 c8 01             	or     $0x1,%eax
   1eafd:	89 45 e0             	mov    %eax,-0x20(%rbp)
   1eb00:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
   1eb04:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1eb08:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
   1eb0f:	00 
   1eb10:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1eb14:	e8 f7 f8 ff ff       	callq  1e410 <mbedtls_mpi_div_mpi>
   1eb19:	c9                   	leaveq 
   1eb1a:	c3                   	retq   
   1eb1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001eb20 <mbedtls_mpi_mod_mpi>:
   1eb20:	55                   	push   %rbp
   1eb21:	48 89 e5             	mov    %rsp,%rbp
   1eb24:	41 55                	push   %r13
   1eb26:	41 54                	push   %r12
   1eb28:	53                   	push   %rbx
   1eb29:	49 89 f5             	mov    %rsi,%r13
   1eb2c:	48 89 fb             	mov    %rdi,%rbx
   1eb2f:	31 f6                	xor    %esi,%esi
   1eb31:	48 89 d7             	mov    %rdx,%rdi
   1eb34:	49 89 d4             	mov    %rdx,%r12
   1eb37:	48 83 ec 08          	sub    $0x8,%rsp
   1eb3b:	e8 50 f0 ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   1eb40:	85 c0                	test   %eax,%eax
   1eb42:	78 72                	js     1ebb6 <mbedtls_mpi_mod_mpi+0x96>
   1eb44:	31 ff                	xor    %edi,%edi
   1eb46:	4c 89 e1             	mov    %r12,%rcx
   1eb49:	4c 89 ea             	mov    %r13,%rdx
   1eb4c:	48 89 de             	mov    %rbx,%rsi
   1eb4f:	e8 bc f8 ff ff       	callq  1e410 <mbedtls_mpi_div_mpi>
   1eb54:	85 c0                	test   %eax,%eax
   1eb56:	74 1a                	je     1eb72 <mbedtls_mpi_mod_mpi+0x52>
   1eb58:	eb 51                	jmp    1ebab <mbedtls_mpi_mod_mpi+0x8b>
   1eb5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1eb60:	4c 89 e2             	mov    %r12,%rdx
   1eb63:	48 89 de             	mov    %rbx,%rsi
   1eb66:	48 89 df             	mov    %rbx,%rdi
   1eb69:	e8 b2 f2 ff ff       	callq  1de20 <mbedtls_mpi_add_mpi>
   1eb6e:	85 c0                	test   %eax,%eax
   1eb70:	75 39                	jne    1ebab <mbedtls_mpi_mod_mpi+0x8b>
   1eb72:	31 f6                	xor    %esi,%esi
   1eb74:	48 89 df             	mov    %rbx,%rdi
   1eb77:	e8 14 f0 ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   1eb7c:	85 c0                	test   %eax,%eax
   1eb7e:	78 e0                	js     1eb60 <mbedtls_mpi_mod_mpi+0x40>
   1eb80:	eb 18                	jmp    1eb9a <mbedtls_mpi_mod_mpi+0x7a>
   1eb82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1eb88:	4c 89 e2             	mov    %r12,%rdx
   1eb8b:	48 89 de             	mov    %rbx,%rsi
   1eb8e:	48 89 df             	mov    %rbx,%rdi
   1eb91:	e8 1a f3 ff ff       	callq  1deb0 <mbedtls_mpi_sub_mpi>
   1eb96:	85 c0                	test   %eax,%eax
   1eb98:	75 11                	jne    1ebab <mbedtls_mpi_mod_mpi+0x8b>
   1eb9a:	4c 89 e6             	mov    %r12,%rsi
   1eb9d:	48 89 df             	mov    %rbx,%rdi
   1eba0:	e8 eb ee ff ff       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1eba5:	85 c0                	test   %eax,%eax
   1eba7:	79 df                	jns    1eb88 <mbedtls_mpi_mod_mpi+0x68>
   1eba9:	31 c0                	xor    %eax,%eax
   1ebab:	48 83 c4 08          	add    $0x8,%rsp
   1ebaf:	5b                   	pop    %rbx
   1ebb0:	41 5c                	pop    %r12
   1ebb2:	41 5d                	pop    %r13
   1ebb4:	5d                   	pop    %rbp
   1ebb5:	c3                   	retq   
   1ebb6:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   1ebbb:	eb ee                	jmp    1ebab <mbedtls_mpi_mod_mpi+0x8b>
   1ebbd:	0f 1f 00             	nopl   (%rax)

000000000001ebc0 <mbedtls_mpi_mod_int>:
   1ebc0:	55                   	push   %rbp
   1ebc1:	48 85 d2             	test   %rdx,%rdx
   1ebc4:	48 89 e5             	mov    %rsp,%rbp
   1ebc7:	0f 84 c0 00 00 00    	je     1ec8d <mbedtls_mpi_mod_int+0xcd>
   1ebcd:	0f 88 c1 00 00 00    	js     1ec94 <mbedtls_mpi_mod_int+0xd4>
   1ebd3:	48 83 fa 01          	cmp    $0x1,%rdx
   1ebd7:	49 89 d0             	mov    %rdx,%r8
   1ebda:	0f 84 88 00 00 00    	je     1ec68 <mbedtls_mpi_mod_int+0xa8>
   1ebe0:	48 83 fa 02          	cmp    $0x2,%rdx
   1ebe4:	0f 84 8e 00 00 00    	je     1ec78 <mbedtls_mpi_mod_int+0xb8>
   1ebea:	4c 8b 56 08          	mov    0x8(%rsi),%r10
   1ebee:	4d 85 d2             	test   %r10,%r10
   1ebf1:	0f 84 92 00 00 00    	je     1ec89 <mbedtls_mpi_mod_int+0xc9>
   1ebf7:	4c 8b 5e 10          	mov    0x10(%rsi),%r11
   1ebfb:	31 c9                	xor    %ecx,%ecx
   1ebfd:	0f 1f 00             	nopl   (%rax)
   1ec00:	4f 8b 4c d3 f8       	mov    -0x8(%r11,%r10,8),%r9
   1ec05:	48 c1 e1 20          	shl    $0x20,%rcx
   1ec09:	31 d2                	xor    %edx,%edx
   1ec0b:	4c 89 c8             	mov    %r9,%rax
   1ec0e:	45 89 c9             	mov    %r9d,%r9d
   1ec11:	48 c1 e8 20          	shr    $0x20,%rax
   1ec15:	48 09 c1             	or     %rax,%rcx
   1ec18:	48 89 c8             	mov    %rcx,%rax
   1ec1b:	49 f7 f0             	div    %r8
   1ec1e:	31 d2                	xor    %edx,%edx
   1ec20:	49 0f af c0          	imul   %r8,%rax
   1ec24:	48 29 c1             	sub    %rax,%rcx
   1ec27:	48 c1 e1 20          	shl    $0x20,%rcx
   1ec2b:	4c 09 c9             	or     %r9,%rcx
   1ec2e:	48 89 c8             	mov    %rcx,%rax
   1ec31:	49 f7 f0             	div    %r8
   1ec34:	49 0f af c0          	imul   %r8,%rax
   1ec38:	48 29 c1             	sub    %rax,%rcx
   1ec3b:	49 83 ea 01          	sub    $0x1,%r10
   1ec3f:	75 bf                	jne    1ec00 <mbedtls_mpi_mod_int+0x40>
   1ec41:	8b 06                	mov    (%rsi),%eax
   1ec43:	85 c0                	test   %eax,%eax
   1ec45:	78 09                	js     1ec50 <mbedtls_mpi_mod_int+0x90>
   1ec47:	48 89 0f             	mov    %rcx,(%rdi)
   1ec4a:	31 c0                	xor    %eax,%eax
   1ec4c:	5d                   	pop    %rbp
   1ec4d:	c3                   	retq   
   1ec4e:	66 90                	xchg   %ax,%ax
   1ec50:	49 29 c8             	sub    %rcx,%r8
   1ec53:	48 85 c9             	test   %rcx,%rcx
   1ec56:	49 0f 45 c8          	cmovne %r8,%rcx
   1ec5a:	31 c0                	xor    %eax,%eax
   1ec5c:	48 89 0f             	mov    %rcx,(%rdi)
   1ec5f:	eb eb                	jmp    1ec4c <mbedtls_mpi_mod_int+0x8c>
   1ec61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ec68:	31 c0                	xor    %eax,%eax
   1ec6a:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
   1ec71:	5d                   	pop    %rbp
   1ec72:	c3                   	retq   
   1ec73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ec78:	48 8b 46 10          	mov    0x10(%rsi),%rax
   1ec7c:	5d                   	pop    %rbp
   1ec7d:	48 8b 00             	mov    (%rax),%rax
   1ec80:	83 e0 01             	and    $0x1,%eax
   1ec83:	48 89 07             	mov    %rax,(%rdi)
   1ec86:	31 c0                	xor    %eax,%eax
   1ec88:	c3                   	retq   
   1ec89:	31 c9                	xor    %ecx,%ecx
   1ec8b:	eb ba                	jmp    1ec47 <mbedtls_mpi_mod_int+0x87>
   1ec8d:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
   1ec92:	5d                   	pop    %rbp
   1ec93:	c3                   	retq   
   1ec94:	b8 f6 ff ff ff       	mov    $0xfffffff6,%eax
   1ec99:	5d                   	pop    %rbp
   1ec9a:	c3                   	retq   
   1ec9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000001eca0 <mpi_write_hlp>:
   1eca0:	8d 4e fe             	lea    -0x2(%rsi),%ecx
   1eca3:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1eca8:	83 f9 0e             	cmp    $0xe,%ecx
   1ecab:	77 37                	ja     1ece4 <mpi_write_hlp+0x44>
   1ecad:	55                   	push   %rbp
   1ecae:	48 89 e5             	mov    %rsp,%rbp
   1ecb1:	41 56                	push   %r14
   1ecb3:	41 55                	push   %r13
   1ecb5:	41 54                	push   %r12
   1ecb7:	53                   	push   %rbx
   1ecb8:	4c 63 f6             	movslq %esi,%r14
   1ecbb:	48 89 fb             	mov    %rdi,%rbx
   1ecbe:	48 8d 7d d8          	lea    -0x28(%rbp),%rdi
   1ecc2:	49 89 d5             	mov    %rdx,%r13
   1ecc5:	48 83 ec 10          	sub    $0x10,%rsp
   1ecc9:	4c 89 f2             	mov    %r14,%rdx
   1eccc:	48 89 de             	mov    %rbx,%rsi
   1eccf:	e8 ec fe ff ff       	callq  1ebc0 <mbedtls_mpi_mod_int>
   1ecd4:	85 c0                	test   %eax,%eax
   1ecd6:	74 18                	je     1ecf0 <mpi_write_hlp+0x50>
   1ecd8:	48 83 c4 10          	add    $0x10,%rsp
   1ecdc:	5b                   	pop    %rbx
   1ecdd:	41 5c                	pop    %r12
   1ecdf:	41 5d                	pop    %r13
   1ece1:	41 5e                	pop    %r14
   1ece3:	5d                   	pop    %rbp
   1ece4:	f3 c3                	repz retq 
   1ece6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1eced:	00 00 00 
   1ecf0:	31 f6                	xor    %esi,%esi
   1ecf2:	4c 89 f1             	mov    %r14,%rcx
   1ecf5:	48 89 da             	mov    %rbx,%rdx
   1ecf8:	48 89 df             	mov    %rbx,%rdi
   1ecfb:	e8 e0 fd ff ff       	callq  1eae0 <mbedtls_mpi_div_int>
   1ed00:	85 c0                	test   %eax,%eax
   1ed02:	75 d4                	jne    1ecd8 <mpi_write_hlp+0x38>
   1ed04:	31 f6                	xor    %esi,%esi
   1ed06:	48 89 df             	mov    %rbx,%rdi
   1ed09:	e8 82 ee ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   1ed0e:	85 c0                	test   %eax,%eax
   1ed10:	75 3e                	jne    1ed50 <mpi_write_hlp+0xb0>
   1ed12:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1ed16:	48 83 f8 09          	cmp    $0x9,%rax
   1ed1a:	76 1c                	jbe    1ed38 <mpi_write_hlp+0x98>
   1ed1c:	49 8b 55 00          	mov    0x0(%r13),%rdx
   1ed20:	83 c0 37             	add    $0x37,%eax
   1ed23:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
   1ed27:	49 89 4d 00          	mov    %rcx,0x0(%r13)
   1ed2b:	88 02                	mov    %al,(%rdx)
   1ed2d:	31 c0                	xor    %eax,%eax
   1ed2f:	eb a7                	jmp    1ecd8 <mpi_write_hlp+0x38>
   1ed31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ed38:	49 8b 55 00          	mov    0x0(%r13),%rdx
   1ed3c:	83 c0 30             	add    $0x30,%eax
   1ed3f:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
   1ed43:	49 89 4d 00          	mov    %rcx,0x0(%r13)
   1ed47:	88 02                	mov    %al,(%rdx)
   1ed49:	31 c0                	xor    %eax,%eax
   1ed4b:	eb 8b                	jmp    1ecd8 <mpi_write_hlp+0x38>
   1ed4d:	0f 1f 00             	nopl   (%rax)
   1ed50:	4c 89 ea             	mov    %r13,%rdx
   1ed53:	44 89 f6             	mov    %r14d,%esi
   1ed56:	48 89 df             	mov    %rbx,%rdi
   1ed59:	e8 42 ff ff ff       	callq  1eca0 <mpi_write_hlp>
   1ed5e:	85 c0                	test   %eax,%eax
   1ed60:	74 b0                	je     1ed12 <mpi_write_hlp+0x72>
   1ed62:	e9 71 ff ff ff       	jmpq   1ecd8 <mpi_write_hlp+0x38>
   1ed67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1ed6e:	00 00 

000000000001ed70 <mbedtls_mpi_write_string>:
   1ed70:	44 8d 4e fe          	lea    -0x2(%rsi),%r9d
   1ed74:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1ed79:	41 83 f9 0e          	cmp    $0xe,%r9d
   1ed7d:	0f 87 b6 00 00 00    	ja     1ee39 <mbedtls_mpi_write_string+0xc9>
   1ed83:	55                   	push   %rbp
   1ed84:	48 89 e5             	mov    %rsp,%rbp
   1ed87:	41 57                	push   %r15
   1ed89:	41 56                	push   %r14
   1ed8b:	41 55                	push   %r13
   1ed8d:	41 54                	push   %r12
   1ed8f:	41 89 f7             	mov    %esi,%r15d
   1ed92:	53                   	push   %rbx
   1ed93:	4d 89 c4             	mov    %r8,%r12
   1ed96:	49 89 cd             	mov    %rcx,%r13
   1ed99:	48 89 d3             	mov    %rdx,%rbx
   1ed9c:	49 89 fe             	mov    %rdi,%r14
   1ed9f:	48 83 ec 38          	sub    $0x38,%rsp
   1eda3:	e8 48 e6 ff ff       	callq  1d3f0 <mbedtls_mpi_bitlen>
   1eda8:	41 83 ff 03          	cmp    $0x3,%r15d
   1edac:	0f 8f 8e 00 00 00    	jg     1ee40 <mbedtls_mpi_write_string+0xd0>
   1edb2:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1edb6:	83 e2 01             	and    $0x1,%edx
   1edb9:	48 8d 44 10 03       	lea    0x3(%rax,%rdx,1),%rax
   1edbe:	4c 39 e8             	cmp    %r13,%rax
   1edc1:	0f 87 82 01 00 00    	ja     1ef49 <mbedtls_mpi_write_string+0x1d9>
   1edc7:	4c 8d 6d b0          	lea    -0x50(%rbp),%r13
   1edcb:	48 89 5d a8          	mov    %rbx,-0x58(%rbp)
   1edcf:	4c 89 ef             	mov    %r13,%rdi
   1edd2:	e8 39 df ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1edd7:	41 83 3e ff          	cmpl   $0xffffffff,(%r14)
   1eddb:	0f 84 48 01 00 00    	je     1ef29 <mbedtls_mpi_write_string+0x1b9>
   1ede1:	41 83 ff 10          	cmp    $0x10,%r15d
   1ede5:	74 71                	je     1ee58 <mbedtls_mpi_write_string+0xe8>
   1ede7:	4c 89 f6             	mov    %r14,%rsi
   1edea:	4c 89 ef             	mov    %r13,%rdi
   1eded:	e8 7e e1 ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1edf2:	85 c0                	test   %eax,%eax
   1edf4:	41 89 c6             	mov    %eax,%r14d
   1edf7:	75 27                	jne    1ee20 <mbedtls_mpi_write_string+0xb0>
   1edf9:	83 7d b0 ff          	cmpl   $0xffffffff,-0x50(%rbp)
   1edfd:	0f 84 3a 01 00 00    	je     1ef3d <mbedtls_mpi_write_string+0x1cd>
   1ee03:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   1ee07:	44 89 fe             	mov    %r15d,%esi
   1ee0a:	4c 89 ef             	mov    %r13,%rdi
   1ee0d:	e8 8e fe ff ff       	callq  1eca0 <mpi_write_hlp>
   1ee12:	85 c0                	test   %eax,%eax
   1ee14:	41 89 c6             	mov    %eax,%r14d
   1ee17:	0f 84 ea 00 00 00    	je     1ef07 <mbedtls_mpi_write_string+0x197>
   1ee1d:	0f 1f 00             	nopl   (%rax)
   1ee20:	4c 89 ef             	mov    %r13,%rdi
   1ee23:	e8 18 df ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1ee28:	44 89 f0             	mov    %r14d,%eax
   1ee2b:	48 83 c4 38          	add    $0x38,%rsp
   1ee2f:	5b                   	pop    %rbx
   1ee30:	41 5c                	pop    %r12
   1ee32:	41 5d                	pop    %r13
   1ee34:	41 5e                	pop    %r14
   1ee36:	41 5f                	pop    %r15
   1ee38:	5d                   	pop    %rbp
   1ee39:	f3 c3                	repz retq 
   1ee3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ee40:	48 d1 e8             	shr    %rax
   1ee43:	41 83 ff 10          	cmp    $0x10,%r15d
   1ee47:	0f 85 65 ff ff ff    	jne    1edb2 <mbedtls_mpi_write_string+0x42>
   1ee4d:	48 d1 e8             	shr    %rax
   1ee50:	e9 5d ff ff ff       	jmpq   1edb2 <mbedtls_mpi_write_string+0x42>
   1ee55:	0f 1f 00             	nopl   (%rax)
   1ee58:	49 8b 7e 08          	mov    0x8(%r14),%rdi
   1ee5c:	45 31 c9             	xor    %r9d,%r9d
   1ee5f:	48 85 ff             	test   %rdi,%rdi
   1ee62:	4c 8d 04 fd f8 ff ff 	lea    -0x8(,%rdi,8),%r8
   1ee69:	ff 
   1ee6a:	0f 84 97 00 00 00    	je     1ef07 <mbedtls_mpi_write_string+0x197>
   1ee70:	ba 07 00 00 00       	mov    $0x7,%edx
   1ee75:	48 8d 77 01          	lea    0x1(%rdi),%rsi
   1ee79:	eb 1e                	jmp    1ee99 <mbedtls_mpi_write_string+0x129>
   1ee7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ee80:	4d 85 c9             	test   %r9,%r9
   1ee83:	75 2d                	jne    1eeb2 <mbedtls_mpi_write_string+0x142>
   1ee85:	4c 8d 14 16          	lea    (%rsi,%rdx,1),%r10
   1ee89:	49 83 fa 02          	cmp    $0x2,%r10
   1ee8d:	74 23                	je     1eeb2 <mbedtls_mpi_write_string+0x142>
   1ee8f:	48 83 ea 01          	sub    $0x1,%rdx
   1ee93:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1ee97:	74 60                	je     1eef9 <mbedtls_mpi_write_string+0x189>
   1ee99:	49 8b 46 10          	mov    0x10(%r14),%rax
   1ee9d:	8d 0c d5 00 00 00 00 	lea    0x0(,%rdx,8),%ecx
   1eea4:	4a 8b 04 00          	mov    (%rax,%r8,1),%rax
   1eea8:	48 d3 e8             	shr    %cl,%rax
   1eeab:	0f b6 c8             	movzbl %al,%ecx
   1eeae:	85 c9                	test   %ecx,%ecx
   1eeb0:	74 ce                	je     1ee80 <mbedtls_mpi_write_string+0x110>
   1eeb2:	4c 8b 55 a8          	mov    -0x58(%rbp),%r10
   1eeb6:	c1 f9 04             	sar    $0x4,%ecx
   1eeb9:	83 e0 0f             	and    $0xf,%eax
   1eebc:	48 63 c9             	movslq %ecx,%rcx
   1eebf:	48 83 ea 01          	sub    $0x1,%rdx
   1eec3:	48 83 fa ff          	cmp    $0xffffffffffffffff,%rdx
   1eec7:	4d 8d 4a 01          	lea    0x1(%r10),%r9
   1eecb:	4c 89 4d a8          	mov    %r9,-0x58(%rbp)
   1eecf:	4c 8d 0d aa b1 00 00 	lea    0xb1aa(%rip),%r9        # 2a080 <K+0x100>
   1eed6:	41 0f b6 0c 09       	movzbl (%r9,%rcx,1),%ecx
   1eedb:	41 0f b6 04 01       	movzbl (%r9,%rax,1),%eax
   1eee0:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   1eee6:	41 88 0a             	mov    %cl,(%r10)
   1eee9:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
   1eeed:	4c 8d 51 01          	lea    0x1(%rcx),%r10
   1eef1:	4c 89 55 a8          	mov    %r10,-0x58(%rbp)
   1eef5:	88 01                	mov    %al,(%rcx)
   1eef7:	75 a0                	jne    1ee99 <mbedtls_mpi_write_string+0x129>
   1eef9:	49 83 e8 08          	sub    $0x8,%r8
   1eefd:	48 83 ef 01          	sub    $0x1,%rdi
   1ef01:	0f 85 69 ff ff ff    	jne    1ee70 <mbedtls_mpi_write_string+0x100>
   1ef07:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ef0b:	45 31 f6             	xor    %r14d,%r14d
   1ef0e:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1ef12:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   1ef16:	c6 00 00             	movb   $0x0,(%rax)
   1ef19:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ef1d:	48 29 d8             	sub    %rbx,%rax
   1ef20:	49 89 04 24          	mov    %rax,(%r12)
   1ef24:	e9 f7 fe ff ff       	jmpq   1ee20 <mbedtls_mpi_write_string+0xb0>
   1ef29:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1ef2d:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1ef31:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   1ef35:	c6 00 2d             	movb   $0x2d,(%rax)
   1ef38:	e9 a4 fe ff ff       	jmpq   1ede1 <mbedtls_mpi_write_string+0x71>
   1ef3d:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
   1ef44:	e9 ba fe ff ff       	jmpq   1ee03 <mbedtls_mpi_write_string+0x93>
   1ef49:	49 89 04 24          	mov    %rax,(%r12)
   1ef4d:	b8 f8 ff ff ff       	mov    $0xfffffff8,%eax
   1ef52:	e9 d4 fe ff ff       	jmpq   1ee2b <mbedtls_mpi_write_string+0xbb>
   1ef57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1ef5e:	00 00 

000000000001ef60 <mpi_check_small_factors>:
   1ef60:	48 8b 47 10          	mov    0x10(%rdi),%rax
   1ef64:	f6 00 01             	testb  $0x1,(%rax)
   1ef67:	0f 84 85 00 00 00    	je     1eff2 <mpi_check_small_factors+0x92>
   1ef6d:	55                   	push   %rbp
   1ef6e:	48 89 e5             	mov    %rsp,%rbp
   1ef71:	41 56                	push   %r14
   1ef73:	41 55                	push   %r13
   1ef75:	41 54                	push   %r12
   1ef77:	53                   	push   %rbx
   1ef78:	49 89 fd             	mov    %rdi,%r13
   1ef7b:	4c 8d 25 22 b1 00 00 	lea    0xb122(%rip),%r12        # 2a0a4 <small_prime+0x4>
   1ef82:	bb 03 00 00 00       	mov    $0x3,%ebx
   1ef87:	4c 8d 75 d8          	lea    -0x28(%rbp),%r14
   1ef8b:	48 83 ec 10          	sub    $0x10,%rsp
   1ef8f:	eb 2d                	jmp    1efbe <mpi_check_small_factors+0x5e>
   1ef91:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1ef98:	48 89 da             	mov    %rbx,%rdx
   1ef9b:	4c 89 ee             	mov    %r13,%rsi
   1ef9e:	4c 89 f7             	mov    %r14,%rdi
   1efa1:	e8 1a fc ff ff       	callq  1ebc0 <mbedtls_mpi_mod_int>
   1efa6:	85 c0                	test   %eax,%eax
   1efa8:	75 28                	jne    1efd2 <mpi_check_small_factors+0x72>
   1efaa:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   1efaf:	74 2f                	je     1efe0 <mpi_check_small_factors+0x80>
   1efb1:	49 83 c4 04          	add    $0x4,%r12
   1efb5:	49 63 5c 24 fc       	movslq -0x4(%r12),%rbx
   1efba:	85 db                	test   %ebx,%ebx
   1efbc:	7e 14                	jle    1efd2 <mpi_check_small_factors+0x72>
   1efbe:	48 89 de             	mov    %rbx,%rsi
   1efc1:	4c 89 ef             	mov    %r13,%rdi
   1efc4:	e8 c7 eb ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   1efc9:	85 c0                	test   %eax,%eax
   1efcb:	7f cb                	jg     1ef98 <mpi_check_small_factors+0x38>
   1efcd:	b8 01 00 00 00       	mov    $0x1,%eax
   1efd2:	48 83 c4 10          	add    $0x10,%rsp
   1efd6:	5b                   	pop    %rbx
   1efd7:	41 5c                	pop    %r12
   1efd9:	41 5d                	pop    %r13
   1efdb:	41 5e                	pop    %r14
   1efdd:	5d                   	pop    %rbp
   1efde:	c3                   	retq   
   1efdf:	90                   	nop
   1efe0:	48 83 c4 10          	add    $0x10,%rsp
   1efe4:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   1efe9:	5b                   	pop    %rbx
   1efea:	41 5c                	pop    %r12
   1efec:	41 5d                	pop    %r13
   1efee:	41 5e                	pop    %r14
   1eff0:	5d                   	pop    %rbp
   1eff1:	c3                   	retq   
   1eff2:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   1eff7:	c3                   	retq   
   1eff8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1efff:	00 

000000000001f000 <mbedtls_mpi_exp_mod>:
   1f000:	55                   	push   %rbp
   1f001:	48 89 e5             	mov    %rsp,%rbp
   1f004:	41 57                	push   %r15
   1f006:	41 56                	push   %r14
   1f008:	41 55                	push   %r13
   1f00a:	41 54                	push   %r12
   1f00c:	49 89 cc             	mov    %rcx,%r12
   1f00f:	53                   	push   %rbx
   1f010:	48 81 ec 38 0d 00 00 	sub    $0xd38,%rsp
   1f017:	48 89 bd 28 f3 ff ff 	mov    %rdi,-0xcd8(%rbp)
   1f01e:	48 89 b5 f8 f2 ff ff 	mov    %rsi,-0xd08(%rbp)
   1f025:	48 89 cf             	mov    %rcx,%rdi
   1f028:	31 f6                	xor    %esi,%esi
   1f02a:	48 89 95 30 f3 ff ff 	mov    %rdx,-0xcd0(%rbp)
   1f031:	4c 89 85 20 f3 ff ff 	mov    %r8,-0xce0(%rbp)
   1f038:	e8 53 eb ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   1f03d:	85 c0                	test   %eax,%eax
   1f03f:	0f 88 93 05 00 00    	js     1f5d8 <mbedtls_mpi_exp_mod+0x5d8>
   1f045:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   1f04a:	f6 00 01             	testb  $0x1,(%rax)
   1f04d:	0f 84 85 05 00 00    	je     1f5d8 <mbedtls_mpi_exp_mod+0x5d8>
   1f053:	48 8b bd 30 f3 ff ff 	mov    -0xcd0(%rbp),%rdi
   1f05a:	31 f6                	xor    %esi,%esi
   1f05c:	e8 2f eb ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   1f061:	85 c0                	test   %eax,%eax
   1f063:	0f 88 6f 05 00 00    	js     1f5d8 <mbedtls_mpi_exp_mod+0x5d8>
   1f069:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   1f06e:	bf 02 00 00 00       	mov    $0x2,%edi
   1f073:	48 8b 30             	mov    (%rax),%rsi
   1f076:	b8 04 00 00 00       	mov    $0x4,%eax
   1f07b:	48 8d 4c 36 04       	lea    0x4(%rsi,%rsi,1),%rcx
   1f080:	83 e1 08             	and    $0x8,%ecx
   1f083:	4c 8d 3c 0e          	lea    (%rsi,%rcx,1),%r15
   1f087:	48 89 f2             	mov    %rsi,%rdx
   1f08a:	48 89 f9             	mov    %rdi,%rcx
   1f08d:	49 0f af d7          	imul   %r15,%rdx
   1f091:	48 29 d1             	sub    %rdx,%rcx
   1f094:	4c 0f af f9          	imul   %rcx,%r15
   1f098:	83 e8 01             	sub    $0x1,%eax
   1f09b:	75 ea                	jne    1f087 <mbedtls_mpi_exp_mod+0x87>
   1f09d:	48 8d 85 50 f3 ff ff 	lea    -0xcb0(%rbp),%rax
   1f0a4:	48 89 c7             	mov    %rax,%rdi
   1f0a7:	48 89 85 00 f3 ff ff 	mov    %rax,-0xd00(%rbp)
   1f0ae:	e8 5d dc ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1f0b3:	48 8d 85 70 f3 ff ff 	lea    -0xc90(%rbp),%rax
   1f0ba:	48 89 c7             	mov    %rax,%rdi
   1f0bd:	48 89 85 18 f3 ff ff 	mov    %rax,-0xce8(%rbp)
   1f0c4:	e8 47 dc ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1f0c9:	48 8d 85 90 f3 ff ff 	lea    -0xc70(%rbp),%rax
   1f0d0:	48 89 c7             	mov    %rax,%rdi
   1f0d3:	48 89 85 10 f3 ff ff 	mov    %rax,-0xcf0(%rbp)
   1f0da:	e8 31 dc ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1f0df:	48 8d 85 d0 f3 ff ff 	lea    -0xc30(%rbp),%rax
   1f0e6:	31 f6                	xor    %esi,%esi
   1f0e8:	ba 00 0c 00 00       	mov    $0xc00,%edx
   1f0ed:	48 89 c7             	mov    %rax,%rdi
   1f0f0:	48 89 85 38 f3 ff ff 	mov    %rax,-0xcc8(%rbp)
   1f0f7:	e8 64 73 ff ff       	callq  16460 <memset>
   1f0fc:	48 8b bd 30 f3 ff ff 	mov    -0xcd0(%rbp),%rdi
   1f103:	e8 e8 e2 ff ff       	callq  1d3f0 <mbedtls_mpi_bitlen>
   1f108:	48 3d 9f 02 00 00    	cmp    $0x29f,%rax
   1f10e:	0f 86 cc 00 00 00    	jbe    1f1e0 <mbedtls_mpi_exp_mod+0x1e0>
   1f114:	bb 40 00 00 00       	mov    $0x40,%ebx
   1f119:	41 bd 20 00 00 00    	mov    $0x20,%r13d
   1f11f:	c7 85 e8 f2 ff ff 06 	movl   $0x6,-0xd18(%rbp)
   1f126:	00 00 00 
   1f129:	48 c7 85 f0 f2 ff ff 	movq   $0x6,-0xd10(%rbp)
   1f130:	06 00 00 00 
   1f134:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   1f139:	48 8b bd 28 f3 ff ff 	mov    -0xcd8(%rbp),%rdi
   1f140:	48 83 c0 01          	add    $0x1,%rax
   1f144:	48 89 c6             	mov    %rax,%rsi
   1f147:	48 89 85 08 f3 ff ff 	mov    %rax,-0xcf8(%rbp)
   1f14e:	e8 5d dc ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1f153:	85 c0                	test   %eax,%eax
   1f155:	41 89 c6             	mov    %eax,%r14d
   1f158:	0f 84 ea 00 00 00    	je     1f248 <mbedtls_mpi_exp_mod+0x248>
   1f15e:	48 8b b5 38 f3 ff ff 	mov    -0xcc8(%rbp),%rsi
   1f165:	4b 8d 44 6d 00       	lea    0x0(%r13,%r13,2),%rax
   1f16a:	4c 8d 24 c6          	lea    (%rsi,%rax,8),%r12
   1f16e:	66 90                	xchg   %ax,%ax
   1f170:	4c 89 e7             	mov    %r12,%rdi
   1f173:	49 83 c5 01          	add    $0x1,%r13
   1f177:	49 83 c4 18          	add    $0x18,%r12
   1f17b:	e8 c0 db ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1f180:	49 39 dd             	cmp    %rbx,%r13
   1f183:	72 eb                	jb     1f170 <mbedtls_mpi_exp_mod+0x170>
   1f185:	48 8b bd 38 f3 ff ff 	mov    -0xcc8(%rbp),%rdi
   1f18c:	48 83 c7 18          	add    $0x18,%rdi
   1f190:	e8 ab db ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1f195:	48 8b bd 18 f3 ff ff 	mov    -0xce8(%rbp),%rdi
   1f19c:	e8 9f db ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1f1a1:	48 8b bd 10 f3 ff ff 	mov    -0xcf0(%rbp),%rdi
   1f1a8:	e8 93 db ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1f1ad:	48 8b 9d 20 f3 ff ff 	mov    -0xce0(%rbp),%rbx
   1f1b4:	48 85 db             	test   %rbx,%rbx
   1f1b7:	0f 84 c3 00 00 00    	je     1f280 <mbedtls_mpi_exp_mod+0x280>
   1f1bd:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   1f1c2:	44 89 f0             	mov    %r14d,%eax
   1f1c5:	0f 84 b5 00 00 00    	je     1f280 <mbedtls_mpi_exp_mod+0x280>
   1f1cb:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1f1cf:	5b                   	pop    %rbx
   1f1d0:	41 5c                	pop    %r12
   1f1d2:	41 5d                	pop    %r13
   1f1d4:	41 5e                	pop    %r14
   1f1d6:	41 5f                	pop    %r15
   1f1d8:	5d                   	pop    %rbp
   1f1d9:	c3                   	retq   
   1f1da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   1f1e0:	48 3d ef 00 00 00    	cmp    $0xef,%rax
   1f1e6:	0f 87 b4 00 00 00    	ja     1f2a0 <mbedtls_mpi_exp_mod+0x2a0>
   1f1ec:	48 83 f8 4f          	cmp    $0x4f,%rax
   1f1f0:	0f 87 d2 00 00 00    	ja     1f2c8 <mbedtls_mpi_exp_mod+0x2c8>
   1f1f6:	48 83 f8 18          	cmp    $0x18,%rax
   1f1fa:	48 19 db             	sbb    %rbx,%rbx
   1f1fd:	48 83 e3 fa          	and    $0xfffffffffffffffa,%rbx
   1f201:	48 83 c3 08          	add    $0x8,%rbx
   1f205:	48 83 f8 18          	cmp    $0x18,%rax
   1f209:	4d 19 ed             	sbb    %r13,%r13
   1f20c:	49 83 e5 fd          	and    $0xfffffffffffffffd,%r13
   1f210:	49 83 c5 04          	add    $0x4,%r13
   1f214:	48 83 f8 18          	cmp    $0x18,%rax
   1f218:	19 f6                	sbb    %esi,%esi
   1f21a:	83 e6 fe             	and    $0xfffffffe,%esi
   1f21d:	83 c6 03             	add    $0x3,%esi
   1f220:	48 83 f8 18          	cmp    $0x18,%rax
   1f224:	48 19 c0             	sbb    %rax,%rax
   1f227:	89 b5 e8 f2 ff ff    	mov    %esi,-0xd18(%rbp)
   1f22d:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1f231:	48 83 c0 03          	add    $0x3,%rax
   1f235:	48 89 85 f0 f2 ff ff 	mov    %rax,-0xd10(%rbp)
   1f23c:	e9 f3 fe ff ff       	jmpq   1f134 <mbedtls_mpi_exp_mod+0x134>
   1f241:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f248:	48 8b 85 38 f3 ff ff 	mov    -0xcc8(%rbp),%rax
   1f24f:	48 8b b5 08 f3 ff ff 	mov    -0xcf8(%rbp),%rsi
   1f256:	48 8d 78 18          	lea    0x18(%rax),%rdi
   1f25a:	e8 51 db ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1f25f:	85 c0                	test   %eax,%eax
   1f261:	41 89 c6             	mov    %eax,%r14d
   1f264:	0f 84 83 00 00 00    	je     1f2ed <mbedtls_mpi_exp_mod+0x2ed>
   1f26a:	4c 39 eb             	cmp    %r13,%rbx
   1f26d:	0f 87 eb fe ff ff    	ja     1f15e <mbedtls_mpi_exp_mod+0x15e>
   1f273:	e9 0d ff ff ff       	jmpq   1f185 <mbedtls_mpi_exp_mod+0x185>
   1f278:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1f27f:	00 
   1f280:	48 8b bd 00 f3 ff ff 	mov    -0xd00(%rbp),%rdi
   1f287:	e8 b4 da ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1f28c:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1f290:	44 89 f0             	mov    %r14d,%eax
   1f293:	5b                   	pop    %rbx
   1f294:	41 5c                	pop    %r12
   1f296:	41 5d                	pop    %r13
   1f298:	41 5e                	pop    %r14
   1f29a:	41 5f                	pop    %r15
   1f29c:	5d                   	pop    %rbp
   1f29d:	c3                   	retq   
   1f29e:	66 90                	xchg   %ax,%ax
   1f2a0:	bb 20 00 00 00       	mov    $0x20,%ebx
   1f2a5:	41 bd 10 00 00 00    	mov    $0x10,%r13d
   1f2ab:	c7 85 e8 f2 ff ff 05 	movl   $0x5,-0xd18(%rbp)
   1f2b2:	00 00 00 
   1f2b5:	48 c7 85 f0 f2 ff ff 	movq   $0x5,-0xd10(%rbp)
   1f2bc:	05 00 00 00 
   1f2c0:	e9 6f fe ff ff       	jmpq   1f134 <mbedtls_mpi_exp_mod+0x134>
   1f2c5:	0f 1f 00             	nopl   (%rax)
   1f2c8:	bb 10 00 00 00       	mov    $0x10,%ebx
   1f2cd:	41 bd 08 00 00 00    	mov    $0x8,%r13d
   1f2d3:	c7 85 e8 f2 ff ff 04 	movl   $0x4,-0xd18(%rbp)
   1f2da:	00 00 00 
   1f2dd:	48 c7 85 f0 f2 ff ff 	movq   $0x4,-0xd10(%rbp)
   1f2e4:	04 00 00 00 
   1f2e8:	e9 47 fe ff ff       	jmpq   1f134 <mbedtls_mpi_exp_mod+0x134>
   1f2ed:	48 8b b5 08 f3 ff ff 	mov    -0xcf8(%rbp),%rsi
   1f2f4:	48 8b bd 18 f3 ff ff 	mov    -0xce8(%rbp),%rdi
   1f2fb:	48 01 f6             	add    %rsi,%rsi
   1f2fe:	e8 ad da ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1f303:	85 c0                	test   %eax,%eax
   1f305:	41 89 c6             	mov    %eax,%r14d
   1f308:	0f 85 5c ff ff ff    	jne    1f26a <mbedtls_mpi_exp_mod+0x26a>
   1f30e:	48 8b 85 f8 f2 ff ff 	mov    -0xd08(%rbp),%rax
   1f315:	8b 00                	mov    (%rax),%eax
   1f317:	83 f8 ff             	cmp    $0xffffffff,%eax
   1f31a:	89 85 e4 f2 ff ff    	mov    %eax,-0xd1c(%rbp)
   1f320:	0f 84 6e 03 00 00    	je     1f694 <mbedtls_mpi_exp_mod+0x694>
   1f326:	48 8b 85 20 f3 ff ff 	mov    -0xce0(%rbp),%rax
   1f32d:	48 85 c0             	test   %rax,%rax
   1f330:	0f 84 b6 02 00 00    	je     1f5ec <mbedtls_mpi_exp_mod+0x5ec>
   1f336:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   1f33b:	0f 84 ab 02 00 00    	je     1f5ec <mbedtls_mpi_exp_mod+0x5ec>
   1f341:	48 8b b5 20 f3 ff ff 	mov    -0xce0(%rbp),%rsi
   1f348:	48 8b bd 00 f3 ff ff 	mov    -0xd00(%rbp),%rdi
   1f34f:	ba 18 00 00 00       	mov    $0x18,%edx
   1f354:	e8 97 68 ff ff       	callq  15bf0 <memcpy>
   1f359:	4c 8b b5 f8 f2 ff ff 	mov    -0xd08(%rbp),%r14
   1f360:	4c 89 e6             	mov    %r12,%rsi
   1f363:	4c 89 f7             	mov    %r14,%rdi
   1f366:	e8 25 e7 ff ff       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1f36b:	85 c0                	test   %eax,%eax
   1f36d:	48 8b 85 38 f3 ff ff 	mov    -0xcc8(%rbp),%rax
   1f374:	48 8d 78 18          	lea    0x18(%rax),%rdi
   1f378:	0f 88 fa 02 00 00    	js     1f678 <mbedtls_mpi_exp_mod+0x678>
   1f37e:	4c 89 f6             	mov    %r14,%rsi
   1f381:	4c 89 e2             	mov    %r12,%rdx
   1f384:	e8 97 f7 ff ff       	callq  1eb20 <mbedtls_mpi_mod_mpi>
   1f389:	85 c0                	test   %eax,%eax
   1f38b:	41 89 c6             	mov    %eax,%r14d
   1f38e:	0f 85 d6 fe ff ff    	jne    1f26a <mbedtls_mpi_exp_mod+0x26a>
   1f394:	48 8b 85 00 f3 ff ff 	mov    -0xd00(%rbp),%rax
   1f39b:	48 8b 8d 18 f3 ff ff 	mov    -0xce8(%rbp),%rcx
   1f3a2:	48 83 ec 08          	sub    $0x8,%rsp
   1f3a6:	4c 8b 8d 78 f3 ff ff 	mov    -0xc88(%rbp),%r9
   1f3ad:	49 f7 df             	neg    %r15
   1f3b0:	4d 89 f8             	mov    %r15,%r8
   1f3b3:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1f3b7:	48 8d 70 08          	lea    0x8(%rax),%rsi
   1f3bb:	48 8b 85 38 f3 ff ff 	mov    -0xcc8(%rbp),%rax
   1f3c2:	48 83 c1 10          	add    $0x10,%rcx
   1f3c6:	51                   	push   %rcx
   1f3c7:	48 89 8d f8 f2 ff ff 	mov    %rcx,-0xd08(%rbp)
   1f3ce:	4c 89 e1             	mov    %r12,%rcx
   1f3d1:	48 83 c0 18          	add    $0x18,%rax
   1f3d5:	48 89 c7             	mov    %rax,%rdi
   1f3d8:	48 89 85 d8 f2 ff ff 	mov    %rax,-0xd28(%rbp)
   1f3df:	e8 0c e5 ff ff       	callq  1d8f0 <mpi_montmul.isra.3>
   1f3e4:	41 89 c6             	mov    %eax,%r14d
   1f3e7:	45 85 f6             	test   %r14d,%r14d
   1f3ea:	41 5b                	pop    %r11
   1f3ec:	58                   	pop    %rax
   1f3ed:	0f 85 77 fe ff ff    	jne    1f26a <mbedtls_mpi_exp_mod+0x26a>
   1f3f3:	48 8b b5 00 f3 ff ff 	mov    -0xd00(%rbp),%rsi
   1f3fa:	48 8b bd 28 f3 ff ff 	mov    -0xcd8(%rbp),%rdi
   1f401:	e8 6a db ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1f406:	85 c0                	test   %eax,%eax
   1f408:	41 89 c6             	mov    %eax,%r14d
   1f40b:	0f 85 59 fe ff ff    	jne    1f26a <mbedtls_mpi_exp_mod+0x26a>
   1f411:	48 8d 85 48 f3 ff ff 	lea    -0xcb8(%rbp),%rax
   1f418:	4c 8b 8d 78 f3 ff ff 	mov    -0xc88(%rbp),%r9
   1f41f:	48 8b bd 28 f3 ff ff 	mov    -0xcd8(%rbp),%rdi
   1f426:	48 83 ec 08          	sub    $0x8,%rsp
   1f42a:	ff b5 f8 f2 ff ff    	pushq  -0xd08(%rbp)
   1f430:	4d 89 f8             	mov    %r15,%r8
   1f433:	48 89 85 b0 f2 ff ff 	mov    %rax,-0xd50(%rbp)
   1f43a:	48 89 85 c0 f3 ff ff 	mov    %rax,-0xc40(%rbp)
   1f441:	48 8d 85 b0 f3 ff ff 	lea    -0xc50(%rbp),%rax
   1f448:	4c 89 e1             	mov    %r12,%rcx
   1f44b:	48 c7 85 48 f3 ff ff 	movq   $0x1,-0xcb8(%rbp)
   1f452:	01 00 00 00 
   1f456:	c7 85 b0 f3 ff ff 01 	movl   $0x1,-0xc50(%rbp)
   1f45d:	00 00 00 
   1f460:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1f464:	48 8d 70 08          	lea    0x8(%rax),%rsi
   1f468:	48 c7 85 b8 f3 ff ff 	movq   $0x1,-0xc48(%rbp)
   1f46f:	01 00 00 00 
   1f473:	48 89 85 b8 f2 ff ff 	mov    %rax,-0xd48(%rbp)
   1f47a:	e8 71 e4 ff ff       	callq  1d8f0 <mpi_montmul.isra.3>
   1f47f:	85 c0                	test   %eax,%eax
   1f481:	41 89 c6             	mov    %eax,%r14d
   1f484:	41 59                	pop    %r9
   1f486:	41 5a                	pop    %r10
   1f488:	0f 85 dc fd ff ff    	jne    1f26a <mbedtls_mpi_exp_mod+0x26a>
   1f48e:	48 83 bd f0 f2 ff ff 	cmpq   $0x1,-0xd10(%rbp)
   1f495:	01 
   1f496:	0f 85 b7 02 00 00    	jne    1f753 <mbedtls_mpi_exp_mod+0x753>
   1f49c:	48 8b 85 30 f3 ff ff 	mov    -0xcd0(%rbp),%rax
   1f4a3:	31 d2                	xor    %edx,%edx
   1f4a5:	45 31 d2             	xor    %r10d,%r10d
   1f4a8:	48 c7 85 d8 f2 ff ff 	movq   $0x0,-0xd28(%rbp)
   1f4af:	00 00 00 00 
   1f4b3:	48 c7 85 08 f3 ff ff 	movq   $0x0,-0xcf8(%rbp)
   1f4ba:	00 00 00 00 
   1f4be:	49 89 de             	mov    %rbx,%r14
   1f4c1:	48 8b 40 08          	mov    0x8(%rax),%rax
   1f4c5:	48 89 85 f8 f2 ff ff 	mov    %rax,-0xd08(%rbp)
   1f4cc:	48 8b 85 28 f3 ff ff 	mov    -0xcd8(%rbp),%rax
   1f4d3:	48 8d 48 08          	lea    0x8(%rax),%rcx
   1f4d7:	48 83 c0 10          	add    $0x10,%rax
   1f4db:	48 89 85 c0 f2 ff ff 	mov    %rax,-0xd40(%rbp)
   1f4e2:	48 8b 85 18 f3 ff ff 	mov    -0xce8(%rbp),%rax
   1f4e9:	48 89 8d c8 f2 ff ff 	mov    %rcx,-0xd38(%rbp)
   1f4f0:	48 83 c0 10          	add    $0x10,%rax
   1f4f4:	48 89 85 d0 f2 ff ff 	mov    %rax,-0xd30(%rbp)
   1f4fb:	48 8b 85 d8 f2 ff ff 	mov    -0xd28(%rbp),%rax
   1f502:	48 85 c0             	test   %rax,%rax
   1f505:	0f 84 c4 01 00 00    	je     1f6cf <mbedtls_mpi_exp_mod+0x6cf>
   1f50b:	48 83 e8 01          	sub    $0x1,%rax
   1f50f:	89 c1                	mov    %eax,%ecx
   1f511:	48 89 85 d8 f2 ff ff 	mov    %rax,-0xd28(%rbp)
   1f518:	48 8b 85 30 f3 ff ff 	mov    -0xcd0(%rbp),%rax
   1f51f:	48 8b 9d f8 f2 ff ff 	mov    -0xd08(%rbp),%rbx
   1f526:	48 8b 40 10          	mov    0x10(%rax),%rax
   1f52a:	48 8b 04 d8          	mov    (%rax,%rbx,8),%rax
   1f52e:	48 d3 e8             	shr    %cl,%rax
   1f531:	48 89 d1             	mov    %rdx,%rcx
   1f534:	83 e0 01             	and    $0x1,%eax
   1f537:	48 09 c1             	or     %rax,%rcx
   1f53a:	0f 84 ba 01 00 00    	je     1f6fa <mbedtls_mpi_exp_mod+0x6fa>
   1f540:	48 85 c0             	test   %rax,%rax
   1f543:	75 0a                	jne    1f54f <mbedtls_mpi_exp_mod+0x54f>
   1f545:	48 83 fa 01          	cmp    $0x1,%rdx
   1f549:	0f 84 b2 01 00 00    	je     1f701 <mbedtls_mpi_exp_mod+0x701>
   1f54f:	8b 8d e8 f2 ff ff    	mov    -0xd18(%rbp),%ecx
   1f555:	49 83 c2 01          	add    $0x1,%r10
   1f559:	ba 02 00 00 00       	mov    $0x2,%edx
   1f55e:	44 29 d1             	sub    %r10d,%ecx
   1f561:	48 d3 e0             	shl    %cl,%rax
   1f564:	48 09 85 08 f3 ff ff 	or     %rax,-0xcf8(%rbp)
   1f56b:	4c 39 95 f0 f2 ff ff 	cmp    %r10,-0xd10(%rbp)
   1f572:	75 87                	jne    1f4fb <mbedtls_mpi_exp_mod+0x4fb>
   1f574:	31 db                	xor    %ebx,%ebx
   1f576:	eb 19                	jmp    1f591 <mbedtls_mpi_exp_mod+0x591>
   1f578:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1f57f:	00 
   1f580:	48 83 c3 01          	add    $0x1,%rbx
   1f584:	48 39 9d f0 f2 ff ff 	cmp    %rbx,-0xd10(%rbp)
   1f58b:	0f 84 77 04 00 00    	je     1fa08 <mbedtls_mpi_exp_mod+0xa08>
   1f591:	4c 8b 8d 78 f3 ff ff 	mov    -0xc88(%rbp),%r9
   1f598:	48 8b 95 c0 f2 ff ff 	mov    -0xd40(%rbp),%rdx
   1f59f:	48 83 ec 08          	sub    $0x8,%rsp
   1f5a3:	48 8b b5 c8 f2 ff ff 	mov    -0xd38(%rbp),%rsi
   1f5aa:	48 8b bd 28 f3 ff ff 	mov    -0xcd8(%rbp),%rdi
   1f5b1:	4d 89 f8             	mov    %r15,%r8
   1f5b4:	ff b5 d0 f2 ff ff    	pushq  -0xd30(%rbp)
   1f5ba:	4c 89 e1             	mov    %r12,%rcx
   1f5bd:	e8 2e e3 ff ff       	callq  1d8f0 <mpi_montmul.isra.3>
   1f5c2:	85 c0                	test   %eax,%eax
   1f5c4:	41 58                	pop    %r8
   1f5c6:	41 59                	pop    %r9
   1f5c8:	74 b6                	je     1f580 <mbedtls_mpi_exp_mod+0x580>
   1f5ca:	4c 89 f3             	mov    %r14,%rbx
   1f5cd:	41 89 c6             	mov    %eax,%r14d
   1f5d0:	e9 95 fc ff ff       	jmpq   1f26a <mbedtls_mpi_exp_mod+0x26a>
   1f5d5:	0f 1f 00             	nopl   (%rax)
   1f5d8:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1f5dc:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1f5e1:	5b                   	pop    %rbx
   1f5e2:	41 5c                	pop    %r12
   1f5e4:	41 5d                	pop    %r13
   1f5e6:	41 5e                	pop    %r14
   1f5e8:	41 5f                	pop    %r15
   1f5ea:	5d                   	pop    %rbp
   1f5eb:	c3                   	retq   
   1f5ec:	48 8b bd 00 f3 ff ff 	mov    -0xd00(%rbp),%rdi
   1f5f3:	be 01 00 00 00       	mov    $0x1,%esi
   1f5f8:	e8 83 dc ff ff       	callq  1d280 <mbedtls_mpi_lset>
   1f5fd:	85 c0                	test   %eax,%eax
   1f5ff:	41 89 c6             	mov    %eax,%r14d
   1f602:	0f 85 62 fc ff ff    	jne    1f26a <mbedtls_mpi_exp_mod+0x26a>
   1f608:	49 8b 74 24 08       	mov    0x8(%r12),%rsi
   1f60d:	48 8b bd 00 f3 ff ff 	mov    -0xd00(%rbp),%rdi
   1f614:	48 c1 e6 07          	shl    $0x7,%rsi
   1f618:	e8 e3 df ff ff       	callq  1d600 <mbedtls_mpi_shift_l>
   1f61d:	85 c0                	test   %eax,%eax
   1f61f:	41 89 c6             	mov    %eax,%r14d
   1f622:	0f 85 42 fc ff ff    	jne    1f26a <mbedtls_mpi_exp_mod+0x26a>
   1f628:	48 8b 85 00 f3 ff ff 	mov    -0xd00(%rbp),%rax
   1f62f:	4c 89 e2             	mov    %r12,%rdx
   1f632:	48 89 c6             	mov    %rax,%rsi
   1f635:	48 89 c7             	mov    %rax,%rdi
   1f638:	e8 e3 f4 ff ff       	callq  1eb20 <mbedtls_mpi_mod_mpi>
   1f63d:	85 c0                	test   %eax,%eax
   1f63f:	41 89 c6             	mov    %eax,%r14d
   1f642:	0f 85 22 fc ff ff    	jne    1f26a <mbedtls_mpi_exp_mod+0x26a>
   1f648:	48 8b 8d 20 f3 ff ff 	mov    -0xce0(%rbp),%rcx
   1f64f:	48 85 c9             	test   %rcx,%rcx
   1f652:	0f 84 01 fd ff ff    	je     1f359 <mbedtls_mpi_exp_mod+0x359>
   1f658:	48 8b b5 00 f3 ff ff 	mov    -0xd00(%rbp),%rsi
   1f65f:	ba 18 00 00 00       	mov    $0x18,%edx
   1f664:	48 89 cf             	mov    %rcx,%rdi
   1f667:	e8 84 65 ff ff       	callq  15bf0 <memcpy>
   1f66c:	e9 e8 fc ff ff       	jmpq   1f359 <mbedtls_mpi_exp_mod+0x359>
   1f671:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   1f678:	48 8b b5 f8 f2 ff ff 	mov    -0xd08(%rbp),%rsi
   1f67f:	e8 ec d8 ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1f684:	85 c0                	test   %eax,%eax
   1f686:	41 89 c6             	mov    %eax,%r14d
   1f689:	0f 85 db fb ff ff    	jne    1f26a <mbedtls_mpi_exp_mod+0x26a>
   1f68f:	e9 00 fd ff ff       	jmpq   1f394 <mbedtls_mpi_exp_mod+0x394>
   1f694:	48 8b b5 f8 f2 ff ff 	mov    -0xd08(%rbp),%rsi
   1f69b:	48 8b bd 10 f3 ff ff 	mov    -0xcf0(%rbp),%rdi
   1f6a2:	e8 c9 d8 ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1f6a7:	85 c0                	test   %eax,%eax
   1f6a9:	41 89 c6             	mov    %eax,%r14d
   1f6ac:	0f 85 b8 fb ff ff    	jne    1f26a <mbedtls_mpi_exp_mod+0x26a>
   1f6b2:	48 8b 85 10 f3 ff ff 	mov    -0xcf0(%rbp),%rax
   1f6b9:	c7 85 90 f3 ff ff 01 	movl   $0x1,-0xc70(%rbp)
   1f6c0:	00 00 00 
   1f6c3:	48 89 85 f8 f2 ff ff 	mov    %rax,-0xd08(%rbp)
   1f6ca:	e9 57 fc ff ff       	jmpq   1f326 <mbedtls_mpi_exp_mod+0x326>
   1f6cf:	48 83 bd f8 f2 ff ff 	cmpq   $0x0,-0xd08(%rbp)
   1f6d6:	00 
   1f6d7:	0f 84 64 02 00 00    	je     1f941 <mbedtls_mpi_exp_mod+0x941>
   1f6dd:	48 83 ad f8 f2 ff ff 	subq   $0x1,-0xd08(%rbp)
   1f6e4:	01 
   1f6e5:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   1f6ea:	48 c7 85 d8 f2 ff ff 	movq   $0x3f,-0xd28(%rbp)
   1f6f1:	3f 00 00 00 
   1f6f5:	e9 1e fe ff ff       	jmpq   1f518 <mbedtls_mpi_exp_mod+0x518>
   1f6fa:	31 d2                	xor    %edx,%edx
   1f6fc:	e9 fa fd ff ff       	jmpq   1f4fb <mbedtls_mpi_exp_mod+0x4fb>
   1f701:	4c 8b 8d 78 f3 ff ff 	mov    -0xc88(%rbp),%r9
   1f708:	48 8b 95 c0 f2 ff ff 	mov    -0xd40(%rbp),%rdx
   1f70f:	4d 89 f8             	mov    %r15,%r8
   1f712:	48 8b b5 c8 f2 ff ff 	mov    -0xd38(%rbp),%rsi
   1f719:	48 8b bd 28 f3 ff ff 	mov    -0xcd8(%rbp),%rdi
   1f720:	4c 89 e1             	mov    %r12,%rcx
   1f723:	4c 89 95 a8 f2 ff ff 	mov    %r10,-0xd58(%rbp)
   1f72a:	41 52                	push   %r10
   1f72c:	ff b5 d0 f2 ff ff    	pushq  -0xd30(%rbp)
   1f732:	e8 b9 e1 ff ff       	callq  1d8f0 <mpi_montmul.isra.3>
   1f737:	85 c0                	test   %eax,%eax
   1f739:	41 5b                	pop    %r11
   1f73b:	5b                   	pop    %rbx
   1f73c:	0f 85 88 fe ff ff    	jne    1f5ca <mbedtls_mpi_exp_mod+0x5ca>
   1f742:	ba 01 00 00 00       	mov    $0x1,%edx
   1f747:	4c 8b 95 a8 f2 ff ff 	mov    -0xd58(%rbp),%r10
   1f74e:	e9 a8 fd ff ff       	jmpq   1f4fb <mbedtls_mpi_exp_mod+0x4fb>
   1f753:	49 6b c5 18          	imul   $0x18,%r13,%rax
   1f757:	49 8b 4c 24 08       	mov    0x8(%r12),%rcx
   1f75c:	48 03 85 38 f3 ff ff 	add    -0xcc8(%rbp),%rax
   1f763:	48 8d 71 01          	lea    0x1(%rcx),%rsi
   1f767:	48 89 c7             	mov    %rax,%rdi
   1f76a:	48 89 85 08 f3 ff ff 	mov    %rax,-0xcf8(%rbp)
   1f771:	e8 3a d6 ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1f776:	85 c0                	test   %eax,%eax
   1f778:	41 89 c6             	mov    %eax,%r14d
   1f77b:	0f 85 e9 fa ff ff    	jne    1f26a <mbedtls_mpi_exp_mod+0x26a>
   1f781:	48 8b b5 d8 f2 ff ff 	mov    -0xd28(%rbp),%rsi
   1f788:	48 8b bd 08 f3 ff ff 	mov    -0xcf8(%rbp),%rdi
   1f78f:	e8 dc d7 ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1f794:	85 c0                	test   %eax,%eax
   1f796:	41 89 c6             	mov    %eax,%r14d
   1f799:	0f 85 cb fa ff ff    	jne    1f26a <mbedtls_mpi_exp_mod+0x26a>
   1f79f:	48 8b 8d f0 f2 ff ff 	mov    -0xd10(%rbp),%rcx
   1f7a6:	48 8b 85 08 f3 ff ff 	mov    -0xcf8(%rbp),%rax
   1f7ad:	45 31 db             	xor    %r11d,%r11d
   1f7b0:	48 83 e9 01          	sub    $0x1,%rcx
   1f7b4:	49 89 ce             	mov    %rcx,%r14
   1f7b7:	48 8d 48 10          	lea    0x10(%rax),%rcx
   1f7bb:	48 83 c0 08          	add    $0x8,%rax
   1f7bf:	48 89 85 d0 f2 ff ff 	mov    %rax,-0xd30(%rbp)
   1f7c6:	48 89 8d d8 f2 ff ff 	mov    %rcx,-0xd28(%rbp)
   1f7cd:	4d 39 f3             	cmp    %r14,%r11
   1f7d0:	0f 83 95 00 00 00    	jae    1f86b <mbedtls_mpi_exp_mod+0x86b>
   1f7d6:	48 8b bd 08 f3 ff ff 	mov    -0xcf8(%rbp),%rdi
   1f7dd:	56                   	push   %rsi
   1f7de:	4d 89 f8             	mov    %r15,%r8
   1f7e1:	4c 8b 8d 78 f3 ff ff 	mov    -0xc88(%rbp),%r9
   1f7e8:	48 8b 95 d8 f2 ff ff 	mov    -0xd28(%rbp),%rdx
   1f7ef:	4c 89 e1             	mov    %r12,%rcx
   1f7f2:	48 8b b5 d0 f2 ff ff 	mov    -0xd30(%rbp),%rsi
   1f7f9:	ff b5 f8 f2 ff ff    	pushq  -0xd08(%rbp)
   1f7ff:	4c 89 9d c8 f2 ff ff 	mov    %r11,-0xd38(%rbp)
   1f806:	e8 e5 e0 ff ff       	callq  1d8f0 <mpi_montmul.isra.3>
   1f80b:	85 c0                	test   %eax,%eax
   1f80d:	5f                   	pop    %rdi
   1f80e:	41 58                	pop    %r8
   1f810:	75 51                	jne    1f863 <mbedtls_mpi_exp_mod+0x863>
   1f812:	4c 8b 9d c8 f2 ff ff 	mov    -0xd38(%rbp),%r11
   1f819:	49 83 c3 01          	add    $0x1,%r11
   1f81d:	eb ae                	jmp    1f7cd <mbedtls_mpi_exp_mod+0x7cd>
   1f81f:	48 8b 85 38 f3 ff ff 	mov    -0xcc8(%rbp),%rax
   1f826:	4c 8b 8d 78 f3 ff ff 	mov    -0xc88(%rbp),%r9
   1f82d:	4d 89 f8             	mov    %r15,%r8
   1f830:	57                   	push   %rdi
   1f831:	48 8b 95 d0 f2 ff ff 	mov    -0xd30(%rbp),%rdx
   1f838:	4c 89 e1             	mov    %r12,%rcx
   1f83b:	48 8b bd 28 f3 ff ff 	mov    -0xcd8(%rbp),%rdi
   1f842:	ff b5 f8 f2 ff ff    	pushq  -0xd08(%rbp)
   1f848:	48 8d 70 20          	lea    0x20(%rax),%rsi
   1f84c:	e8 9f e0 ff ff       	callq  1d8f0 <mpi_montmul.isra.3>
   1f851:	85 c0                	test   %eax,%eax
   1f853:	41 58                	pop    %r8
   1f855:	41 59                	pop    %r9
   1f857:	0f 84 a1 01 00 00    	je     1f9fe <mbedtls_mpi_exp_mod+0x9fe>
   1f85d:	4c 89 eb             	mov    %r13,%rbx
   1f860:	4d 89 f5             	mov    %r14,%r13
   1f863:	41 89 c6             	mov    %eax,%r14d
   1f866:	e9 ff f9 ff ff       	jmpq   1f26a <mbedtls_mpi_exp_mod+0x26a>
   1f86b:	49 8d 45 01          	lea    0x1(%r13),%rax
   1f86f:	4d 89 ee             	mov    %r13,%r14
   1f872:	49 6b d5 18          	imul   $0x18,%r13,%rdx
   1f876:	49 89 dd             	mov    %rbx,%r13
   1f879:	48 89 85 08 f3 ff ff 	mov    %rax,-0xcf8(%rbp)
   1f880:	48 8b 85 38 f3 ff ff 	mov    -0xcc8(%rbp),%rax
   1f887:	48 8d 48 28          	lea    0x28(%rax),%rcx
   1f88b:	48 01 c2             	add    %rax,%rdx
   1f88e:	48 83 c0 20          	add    $0x20,%rax
   1f892:	48 89 85 d8 f2 ff ff 	mov    %rax,-0xd28(%rbp)
   1f899:	48 8b 85 18 f3 ff ff 	mov    -0xce8(%rbp),%rax
   1f8a0:	48 89 8d f8 f2 ff ff 	mov    %rcx,-0xd08(%rbp)
   1f8a7:	48 83 c0 10          	add    $0x10,%rax
   1f8ab:	48 89 85 d0 f2 ff ff 	mov    %rax,-0xd30(%rbp)
   1f8b2:	4c 39 ad 08 f3 ff ff 	cmp    %r13,-0xcf8(%rbp)
   1f8b9:	0f 83 4a 02 00 00    	jae    1fb09 <mbedtls_mpi_exp_mod+0xb09>
   1f8bf:	49 8b 44 24 08       	mov    0x8(%r12),%rax
   1f8c4:	48 8d 5a 18          	lea    0x18(%rdx),%rbx
   1f8c8:	48 89 95 c8 f2 ff ff 	mov    %rdx,-0xd38(%rbp)
   1f8cf:	48 89 df             	mov    %rbx,%rdi
   1f8d2:	48 8d 70 01          	lea    0x1(%rax),%rsi
   1f8d6:	e8 d5 d4 ff ff       	callq  1cdb0 <mbedtls_mpi_grow>
   1f8db:	85 c0                	test   %eax,%eax
   1f8dd:	0f 85 7a ff ff ff    	jne    1f85d <mbedtls_mpi_exp_mod+0x85d>
   1f8e3:	48 8b 95 c8 f2 ff ff 	mov    -0xd38(%rbp),%rdx
   1f8ea:	48 89 df             	mov    %rbx,%rdi
   1f8ed:	48 89 d6             	mov    %rdx,%rsi
   1f8f0:	e8 7b d6 ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1f8f5:	85 c0                	test   %eax,%eax
   1f8f7:	0f 85 60 ff ff ff    	jne    1f85d <mbedtls_mpi_exp_mod+0x85d>
   1f8fd:	48 8b 95 f8 f2 ff ff 	mov    -0xd08(%rbp),%rdx
   1f904:	4c 8b 8d 78 f3 ff ff 	mov    -0xc88(%rbp),%r9
   1f90b:	4c 89 e1             	mov    %r12,%rcx
   1f90e:	48 8b b5 d8 f2 ff ff 	mov    -0xd28(%rbp),%rsi
   1f915:	50                   	push   %rax
   1f916:	4d 89 f8             	mov    %r15,%r8
   1f919:	ff b5 d0 f2 ff ff    	pushq  -0xd30(%rbp)
   1f91f:	48 89 df             	mov    %rbx,%rdi
   1f922:	e8 c9 df ff ff       	callq  1d8f0 <mpi_montmul.isra.3>
   1f927:	85 c0                	test   %eax,%eax
   1f929:	5a                   	pop    %rdx
   1f92a:	59                   	pop    %rcx
   1f92b:	0f 85 2c ff ff ff    	jne    1f85d <mbedtls_mpi_exp_mod+0x85d>
   1f931:	48 83 85 08 f3 ff ff 	addq   $0x1,-0xcf8(%rbp)
   1f938:	01 
   1f939:	48 89 da             	mov    %rbx,%rdx
   1f93c:	e9 71 ff ff ff       	jmpq   1f8b2 <mbedtls_mpi_exp_mod+0x8b2>
   1f941:	48 8b 85 28 f3 ff ff 	mov    -0xcd8(%rbp),%rax
   1f948:	4c 89 f3             	mov    %r14,%rbx
   1f94b:	4d 89 ee             	mov    %r13,%r14
   1f94e:	49 89 dd             	mov    %rbx,%r13
   1f951:	48 8b 9d 08 f3 ff ff 	mov    -0xcf8(%rbp),%rbx
   1f958:	4c 89 95 f0 f2 ff ff 	mov    %r10,-0xd10(%rbp)
   1f95f:	48 c7 85 30 f3 ff ff 	movq   $0x0,-0xcd0(%rbp)
   1f966:	00 00 00 00 
   1f96a:	48 8d 48 10          	lea    0x10(%rax),%rcx
   1f96e:	48 83 c0 08          	add    $0x8,%rax
   1f972:	48 89 85 d8 f2 ff ff 	mov    %rax,-0xd28(%rbp)
   1f979:	48 8b 85 18 f3 ff ff 	mov    -0xce8(%rbp),%rax
   1f980:	48 89 8d e8 f2 ff ff 	mov    %rcx,-0xd18(%rbp)
   1f987:	48 83 c0 10          	add    $0x10,%rax
   1f98b:	48 89 85 f8 f2 ff ff 	mov    %rax,-0xd08(%rbp)
   1f992:	48 8b 85 38 f3 ff ff 	mov    -0xcc8(%rbp),%rax
   1f999:	48 83 c0 28          	add    $0x28,%rax
   1f99d:	48 89 85 d0 f2 ff ff 	mov    %rax,-0xd30(%rbp)
   1f9a4:	48 8b 8d f0 f2 ff ff 	mov    -0xd10(%rbp),%rcx
   1f9ab:	48 39 8d 30 f3 ff ff 	cmp    %rcx,-0xcd0(%rbp)
   1f9b2:	0f 84 a9 00 00 00    	je     1fa61 <mbedtls_mpi_exp_mod+0xa61>
   1f9b8:	48 8b 95 e8 f2 ff ff 	mov    -0xd18(%rbp),%rdx
   1f9bf:	4c 8b 8d 78 f3 ff ff 	mov    -0xc88(%rbp),%r9
   1f9c6:	4d 89 f8             	mov    %r15,%r8
   1f9c9:	48 8b b5 d8 f2 ff ff 	mov    -0xd28(%rbp),%rsi
   1f9d0:	48 8b bd 28 f3 ff ff 	mov    -0xcd8(%rbp),%rdi
   1f9d7:	4c 89 e1             	mov    %r12,%rcx
   1f9da:	41 52                	push   %r10
   1f9dc:	ff b5 f8 f2 ff ff    	pushq  -0xd08(%rbp)
   1f9e2:	e8 09 df ff ff       	callq  1d8f0 <mpi_montmul.isra.3>
   1f9e7:	85 c0                	test   %eax,%eax
   1f9e9:	41 5b                	pop    %r11
   1f9eb:	5a                   	pop    %rdx
   1f9ec:	0f 85 6b fe ff ff    	jne    1f85d <mbedtls_mpi_exp_mod+0x85d>
   1f9f2:	48 01 db             	add    %rbx,%rbx
   1f9f5:	4c 85 eb             	test   %r13,%rbx
   1f9f8:	0f 85 21 fe ff ff    	jne    1f81f <mbedtls_mpi_exp_mod+0x81f>
   1f9fe:	48 83 85 30 f3 ff ff 	addq   $0x1,-0xcd0(%rbp)
   1fa05:	01 
   1fa06:	eb 9c                	jmp    1f9a4 <mbedtls_mpi_exp_mod+0x9a4>
   1fa08:	48 6b 85 08 f3 ff ff 	imul   $0x18,-0xcf8(%rbp),%rax
   1fa0f:	18 
   1fa10:	48 8b bd 28 f3 ff ff 	mov    -0xcd8(%rbp),%rdi
   1fa17:	4c 8b 8d 78 f3 ff ff 	mov    -0xc88(%rbp),%r9
   1fa1e:	4d 89 f8             	mov    %r15,%r8
   1fa21:	51                   	push   %rcx
   1fa22:	ff b5 d0 f2 ff ff    	pushq  -0xd30(%rbp)
   1fa28:	4c 89 e1             	mov    %r12,%rcx
   1fa2b:	48 03 85 38 f3 ff ff 	add    -0xcc8(%rbp),%rax
   1fa32:	48 8d 70 08          	lea    0x8(%rax),%rsi
   1fa36:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1fa3a:	e8 b1 de ff ff       	callq  1d8f0 <mpi_montmul.isra.3>
   1fa3f:	85 c0                	test   %eax,%eax
   1fa41:	5e                   	pop    %rsi
   1fa42:	5f                   	pop    %rdi
   1fa43:	0f 85 81 fb ff ff    	jne    1f5ca <mbedtls_mpi_exp_mod+0x5ca>
   1fa49:	ba 01 00 00 00       	mov    $0x1,%edx
   1fa4e:	45 31 d2             	xor    %r10d,%r10d
   1fa51:	48 c7 85 08 f3 ff ff 	movq   $0x0,-0xcf8(%rbp)
   1fa58:	00 00 00 00 
   1fa5c:	e9 9a fa ff ff       	jmpq   1f4fb <mbedtls_mpi_exp_mod+0x4fb>
   1fa61:	48 8b 85 b0 f2 ff ff 	mov    -0xd50(%rbp),%rax
   1fa68:	4c 8b 8d 78 f3 ff ff 	mov    -0xc88(%rbp),%r9
   1fa6f:	4c 89 e1             	mov    %r12,%rcx
   1fa72:	48 8b bd 28 f3 ff ff 	mov    -0xcd8(%rbp),%rdi
   1fa79:	4d 89 f8             	mov    %r15,%r8
   1fa7c:	48 c7 85 48 f3 ff ff 	movq   $0x1,-0xcb8(%rbp)
   1fa83:	01 00 00 00 
   1fa87:	c7 85 b0 f3 ff ff 01 	movl   $0x1,-0xc50(%rbp)
   1fa8e:	00 00 00 
   1fa91:	48 c7 85 b8 f3 ff ff 	movq   $0x1,-0xc48(%rbp)
   1fa98:	01 00 00 00 
   1fa9c:	4c 89 eb             	mov    %r13,%rbx
   1fa9f:	48 89 85 c0 f3 ff ff 	mov    %rax,-0xc40(%rbp)
   1faa6:	48 8b 85 b8 f2 ff ff 	mov    -0xd48(%rbp),%rax
   1faad:	4d 89 f5             	mov    %r14,%r13
   1fab0:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1fab4:	48 8d 70 08          	lea    0x8(%rax),%rsi
   1fab8:	50                   	push   %rax
   1fab9:	48 8b 85 18 f3 ff ff 	mov    -0xce8(%rbp),%rax
   1fac0:	48 83 c0 10          	add    $0x10,%rax
   1fac4:	50                   	push   %rax
   1fac5:	e8 26 de ff ff       	callq  1d8f0 <mpi_montmul.isra.3>
   1faca:	85 c0                	test   %eax,%eax
   1facc:	41 89 c6             	mov    %eax,%r14d
   1facf:	5a                   	pop    %rdx
   1fad0:	59                   	pop    %rcx
   1fad1:	0f 85 93 f7 ff ff    	jne    1f26a <mbedtls_mpi_exp_mod+0x26a>
   1fad7:	83 bd e4 f2 ff ff ff 	cmpl   $0xffffffff,-0xd1c(%rbp)
   1fade:	0f 85 86 f7 ff ff    	jne    1f26a <mbedtls_mpi_exp_mod+0x26a>
   1fae4:	48 8b 85 28 f3 ff ff 	mov    -0xcd8(%rbp),%rax
   1faeb:	8b 8d e4 f2 ff ff    	mov    -0xd1c(%rbp),%ecx
   1faf1:	4c 89 e6             	mov    %r12,%rsi
   1faf4:	89 08                	mov    %ecx,(%rax)
   1faf6:	48 89 c2             	mov    %rax,%rdx
   1faf9:	48 89 c7             	mov    %rax,%rdi
   1fafc:	e8 1f e3 ff ff       	callq  1de20 <mbedtls_mpi_add_mpi>
   1fb01:	41 89 c6             	mov    %eax,%r14d
   1fb04:	e9 61 f7 ff ff       	jmpq   1f26a <mbedtls_mpi_exp_mod+0x26a>
   1fb09:	4c 89 eb             	mov    %r13,%rbx
   1fb0c:	4d 89 f5             	mov    %r14,%r13
   1fb0f:	e9 88 f9 ff ff       	jmpq   1f49c <mbedtls_mpi_exp_mod+0x49c>
   1fb14:	66 90                	xchg   %ax,%ax
   1fb16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1fb1d:	00 00 00 

000000000001fb20 <mbedtls_mpi_gcd>:
   1fb20:	55                   	push   %rbp
   1fb21:	48 89 e5             	mov    %rsp,%rbp
   1fb24:	41 57                	push   %r15
   1fb26:	41 56                	push   %r14
   1fb28:	41 55                	push   %r13
   1fb2a:	4c 8d ad 70 ff ff ff 	lea    -0x90(%rbp),%r13
   1fb31:	41 54                	push   %r12
   1fb33:	53                   	push   %rbx
   1fb34:	48 8d 5d 90          	lea    -0x70(%rbp),%rbx
   1fb38:	49 89 fe             	mov    %rdi,%r14
   1fb3b:	4c 8d 65 b0          	lea    -0x50(%rbp),%r12
   1fb3f:	4c 89 ef             	mov    %r13,%rdi
   1fb42:	49 89 d7             	mov    %rdx,%r15
   1fb45:	48 83 ec 78          	sub    $0x78,%rsp
   1fb49:	48 89 b5 68 ff ff ff 	mov    %rsi,-0x98(%rbp)
   1fb50:	e8 bb d1 ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1fb55:	48 89 df             	mov    %rbx,%rdi
   1fb58:	e8 b3 d1 ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1fb5d:	4c 89 e7             	mov    %r12,%rdi
   1fb60:	e8 ab d1 ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1fb65:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi
   1fb6c:	48 89 df             	mov    %rbx,%rdi
   1fb6f:	e8 fc d3 ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1fb74:	85 c0                	test   %eax,%eax
   1fb76:	74 38                	je     1fbb0 <mbedtls_mpi_gcd+0x90>
   1fb78:	4c 89 ef             	mov    %r13,%rdi
   1fb7b:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
   1fb81:	e8 ba d1 ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1fb86:	48 89 df             	mov    %rbx,%rdi
   1fb89:	e8 b2 d1 ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1fb8e:	4c 89 e7             	mov    %r12,%rdi
   1fb91:	e8 aa d1 ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1fb96:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
   1fb9c:	48 83 c4 78          	add    $0x78,%rsp
   1fba0:	5b                   	pop    %rbx
   1fba1:	41 5c                	pop    %r12
   1fba3:	41 5d                	pop    %r13
   1fba5:	41 5e                	pop    %r14
   1fba7:	41 5f                	pop    %r15
   1fba9:	5d                   	pop    %rbp
   1fbaa:	c3                   	retq   
   1fbab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1fbb0:	4c 89 fe             	mov    %r15,%rsi
   1fbb3:	4c 89 e7             	mov    %r12,%rdi
   1fbb6:	e8 b5 d3 ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1fbbb:	85 c0                	test   %eax,%eax
   1fbbd:	75 b9                	jne    1fb78 <mbedtls_mpi_gcd+0x58>
   1fbbf:	48 89 df             	mov    %rbx,%rdi
   1fbc2:	e8 d9 d7 ff ff       	callq  1d3a0 <mbedtls_mpi_lsb>
   1fbc7:	4c 89 e7             	mov    %r12,%rdi
   1fbca:	49 89 c7             	mov    %rax,%r15
   1fbcd:	e8 ce d7 ff ff       	callq  1d3a0 <mbedtls_mpi_lsb>
   1fbd2:	49 39 c7             	cmp    %rax,%r15
   1fbd5:	48 89 df             	mov    %rbx,%rdi
   1fbd8:	4c 0f 47 f8          	cmova  %rax,%r15
   1fbdc:	4c 89 fe             	mov    %r15,%rsi
   1fbdf:	e8 3c db ff ff       	callq  1d720 <mbedtls_mpi_shift_r>
   1fbe4:	85 c0                	test   %eax,%eax
   1fbe6:	75 90                	jne    1fb78 <mbedtls_mpi_gcd+0x58>
   1fbe8:	4c 89 fe             	mov    %r15,%rsi
   1fbeb:	4c 89 e7             	mov    %r12,%rdi
   1fbee:	e8 2d db ff ff       	callq  1d720 <mbedtls_mpi_shift_r>
   1fbf3:	85 c0                	test   %eax,%eax
   1fbf5:	75 81                	jne    1fb78 <mbedtls_mpi_gcd+0x58>
   1fbf7:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
   1fbfe:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)
   1fc05:	0f 1f 00             	nopl   (%rax)
   1fc08:	31 f6                	xor    %esi,%esi
   1fc0a:	48 89 df             	mov    %rbx,%rdi
   1fc0d:	e8 7e df ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   1fc12:	85 c0                	test   %eax,%eax
   1fc14:	0f 84 a6 00 00 00    	je     1fcc0 <mbedtls_mpi_gcd+0x1a0>
   1fc1a:	48 89 df             	mov    %rbx,%rdi
   1fc1d:	e8 7e d7 ff ff       	callq  1d3a0 <mbedtls_mpi_lsb>
   1fc22:	48 89 df             	mov    %rbx,%rdi
   1fc25:	48 89 c6             	mov    %rax,%rsi
   1fc28:	e8 f3 da ff ff       	callq  1d720 <mbedtls_mpi_shift_r>
   1fc2d:	85 c0                	test   %eax,%eax
   1fc2f:	0f 85 43 ff ff ff    	jne    1fb78 <mbedtls_mpi_gcd+0x58>
   1fc35:	4c 89 e7             	mov    %r12,%rdi
   1fc38:	e8 63 d7 ff ff       	callq  1d3a0 <mbedtls_mpi_lsb>
   1fc3d:	4c 89 e7             	mov    %r12,%rdi
   1fc40:	48 89 c6             	mov    %rax,%rsi
   1fc43:	e8 d8 da ff ff       	callq  1d720 <mbedtls_mpi_shift_r>
   1fc48:	85 c0                	test   %eax,%eax
   1fc4a:	0f 85 28 ff ff ff    	jne    1fb78 <mbedtls_mpi_gcd+0x58>
   1fc50:	4c 89 e6             	mov    %r12,%rsi
   1fc53:	48 89 df             	mov    %rbx,%rdi
   1fc56:	e8 35 de ff ff       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1fc5b:	85 c0                	test   %eax,%eax
   1fc5d:	78 31                	js     1fc90 <mbedtls_mpi_gcd+0x170>
   1fc5f:	4c 89 e2             	mov    %r12,%rdx
   1fc62:	48 89 de             	mov    %rbx,%rsi
   1fc65:	48 89 df             	mov    %rbx,%rdi
   1fc68:	e8 d3 e0 ff ff       	callq  1dd40 <mbedtls_mpi_sub_abs>
   1fc6d:	85 c0                	test   %eax,%eax
   1fc6f:	0f 85 03 ff ff ff    	jne    1fb78 <mbedtls_mpi_gcd+0x58>
   1fc75:	be 01 00 00 00       	mov    $0x1,%esi
   1fc7a:	48 89 df             	mov    %rbx,%rdi
   1fc7d:	e8 9e da ff ff       	callq  1d720 <mbedtls_mpi_shift_r>
   1fc82:	85 c0                	test   %eax,%eax
   1fc84:	74 82                	je     1fc08 <mbedtls_mpi_gcd+0xe8>
   1fc86:	e9 ed fe ff ff       	jmpq   1fb78 <mbedtls_mpi_gcd+0x58>
   1fc8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1fc90:	48 89 da             	mov    %rbx,%rdx
   1fc93:	4c 89 e6             	mov    %r12,%rsi
   1fc96:	4c 89 e7             	mov    %r12,%rdi
   1fc99:	e8 a2 e0 ff ff       	callq  1dd40 <mbedtls_mpi_sub_abs>
   1fc9e:	85 c0                	test   %eax,%eax
   1fca0:	0f 85 d2 fe ff ff    	jne    1fb78 <mbedtls_mpi_gcd+0x58>
   1fca6:	be 01 00 00 00       	mov    $0x1,%esi
   1fcab:	4c 89 e7             	mov    %r12,%rdi
   1fcae:	e8 6d da ff ff       	callq  1d720 <mbedtls_mpi_shift_r>
   1fcb3:	85 c0                	test   %eax,%eax
   1fcb5:	0f 84 4d ff ff ff    	je     1fc08 <mbedtls_mpi_gcd+0xe8>
   1fcbb:	e9 b8 fe ff ff       	jmpq   1fb78 <mbedtls_mpi_gcd+0x58>
   1fcc0:	4c 89 fe             	mov    %r15,%rsi
   1fcc3:	4c 89 e7             	mov    %r12,%rdi
   1fcc6:	e8 35 d9 ff ff       	callq  1d600 <mbedtls_mpi_shift_l>
   1fccb:	85 c0                	test   %eax,%eax
   1fccd:	0f 85 a5 fe ff ff    	jne    1fb78 <mbedtls_mpi_gcd+0x58>
   1fcd3:	4c 89 e6             	mov    %r12,%rsi
   1fcd6:	4c 89 f7             	mov    %r14,%rdi
   1fcd9:	e8 92 d2 ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1fcde:	e9 95 fe ff ff       	jmpq   1fb78 <mbedtls_mpi_gcd+0x58>
   1fce3:	0f 1f 00             	nopl   (%rax)
   1fce6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1fced:	00 00 00 

000000000001fcf0 <mbedtls_mpi_fill_random>:
   1fcf0:	48 81 fe 00 04 00 00 	cmp    $0x400,%rsi
   1fcf7:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1fcfc:	77 4a                	ja     1fd48 <mbedtls_mpi_fill_random+0x58>
   1fcfe:	55                   	push   %rbp
   1fcff:	48 89 d0             	mov    %rdx,%rax
   1fd02:	48 89 f2             	mov    %rsi,%rdx
   1fd05:	48 89 e5             	mov    %rsp,%rbp
   1fd08:	41 55                	push   %r13
   1fd0a:	41 54                	push   %r12
   1fd0c:	4c 8d ad e0 fb ff ff 	lea    -0x420(%rbp),%r13
   1fd13:	53                   	push   %rbx
   1fd14:	49 89 fc             	mov    %rdi,%r12
   1fd17:	48 89 f3             	mov    %rsi,%rbx
   1fd1a:	48 89 cf             	mov    %rcx,%rdi
   1fd1d:	48 81 ec 08 04 00 00 	sub    $0x408,%rsp
   1fd24:	4c 89 ee             	mov    %r13,%rsi
   1fd27:	ff d0                	callq  *%rax
   1fd29:	85 c0                	test   %eax,%eax
   1fd2b:	75 0e                	jne    1fd3b <mbedtls_mpi_fill_random+0x4b>
   1fd2d:	48 89 da             	mov    %rbx,%rdx
   1fd30:	4c 89 ee             	mov    %r13,%rsi
   1fd33:	4c 89 e7             	mov    %r12,%rdi
   1fd36:	e8 65 d7 ff ff       	callq  1d4a0 <mbedtls_mpi_read_binary>
   1fd3b:	48 81 c4 08 04 00 00 	add    $0x408,%rsp
   1fd42:	5b                   	pop    %rbx
   1fd43:	41 5c                	pop    %r12
   1fd45:	41 5d                	pop    %r13
   1fd47:	5d                   	pop    %rbp
   1fd48:	f3 c3                	repz retq 
   1fd4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000001fd50 <mpi_miller_rabin>:
   1fd50:	55                   	push   %rbp
   1fd51:	48 89 e5             	mov    %rsp,%rbp
   1fd54:	41 57                	push   %r15
   1fd56:	41 56                	push   %r14
   1fd58:	41 55                	push   %r13
   1fd5a:	41 54                	push   %r12
   1fd5c:	4c 8d b5 50 ff ff ff 	lea    -0xb0(%rbp),%r14
   1fd63:	53                   	push   %rbx
   1fd64:	48 8d 9d 30 ff ff ff 	lea    -0xd0(%rbp),%rbx
   1fd6b:	49 89 fd             	mov    %rdi,%r13
   1fd6e:	4c 8d 65 90          	lea    -0x70(%rbp),%r12
   1fd72:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
   1fd79:	48 89 df             	mov    %rbx,%rdi
   1fd7c:	48 89 b5 18 ff ff ff 	mov    %rsi,-0xe8(%rbp)
   1fd83:	48 89 95 10 ff ff ff 	mov    %rdx,-0xf0(%rbp)
   1fd8a:	e8 81 cf ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1fd8f:	4c 89 f7             	mov    %r14,%rdi
   1fd92:	e8 79 cf ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1fd97:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   1fd9e:	48 89 c7             	mov    %rax,%rdi
   1fda1:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
   1fda8:	e8 63 cf ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1fdad:	4c 89 e7             	mov    %r12,%rdi
   1fdb0:	e8 5b cf ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1fdb5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1fdb9:	48 89 c7             	mov    %rax,%rdi
   1fdbc:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   1fdc3:	e8 48 cf ff ff       	callq  1cd10 <mbedtls_mpi_init>
   1fdc8:	ba 01 00 00 00       	mov    $0x1,%edx
   1fdcd:	4c 89 ee             	mov    %r13,%rsi
   1fdd0:	48 89 df             	mov    %rbx,%rdi
   1fdd3:	e8 a8 e1 ff ff       	callq  1df80 <mbedtls_mpi_sub_int>
   1fdd8:	85 c0                	test   %eax,%eax
   1fdda:	41 89 c7             	mov    %eax,%r15d
   1fddd:	75 21                	jne    1fe00 <mpi_miller_rabin+0xb0>
   1fddf:	48 89 df             	mov    %rbx,%rdi
   1fde2:	e8 b9 d5 ff ff       	callq  1d3a0 <mbedtls_mpi_lsb>
   1fde7:	48 89 de             	mov    %rbx,%rsi
   1fdea:	4c 89 f7             	mov    %r14,%rdi
   1fded:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
   1fdf4:	e8 77 d1 ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   1fdf9:	85 c0                	test   %eax,%eax
   1fdfb:	41 89 c7             	mov    %eax,%r15d
   1fdfe:	74 48                	je     1fe48 <mpi_miller_rabin+0xf8>
   1fe00:	48 89 df             	mov    %rbx,%rdi
   1fe03:	e8 38 cf ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1fe08:	4c 89 f7             	mov    %r14,%rdi
   1fe0b:	e8 30 cf ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1fe10:	48 8b bd 28 ff ff ff 	mov    -0xd8(%rbp),%rdi
   1fe17:	e8 24 cf ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1fe1c:	4c 89 e7             	mov    %r12,%rdi
   1fe1f:	e8 1c cf ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1fe24:	48 8b bd 20 ff ff ff 	mov    -0xe0(%rbp),%rdi
   1fe2b:	e8 10 cf ff ff       	callq  1cd40 <mbedtls_mpi_free>
   1fe30:	44 89 f8             	mov    %r15d,%eax
   1fe33:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
   1fe3a:	5b                   	pop    %rbx
   1fe3b:	41 5c                	pop    %r12
   1fe3d:	41 5d                	pop    %r13
   1fe3f:	41 5e                	pop    %r14
   1fe41:	41 5f                	pop    %r15
   1fe43:	5d                   	pop    %rbp
   1fe44:	c3                   	retq   
   1fe45:	0f 1f 00             	nopl   (%rax)
   1fe48:	48 8b b5 08 ff ff ff 	mov    -0xf8(%rbp),%rsi
   1fe4f:	4c 89 f7             	mov    %r14,%rdi
   1fe52:	e8 c9 d8 ff ff       	callq  1d720 <mbedtls_mpi_shift_r>
   1fe57:	85 c0                	test   %eax,%eax
   1fe59:	41 89 c7             	mov    %eax,%r15d
   1fe5c:	75 a2                	jne    1fe00 <mpi_miller_rabin+0xb0>
   1fe5e:	4c 89 ef             	mov    %r13,%rdi
   1fe61:	e8 8a d5 ff ff       	callq  1d3f0 <mbedtls_mpi_bitlen>
   1fe66:	48 3d 13 05 00 00    	cmp    $0x513,%rax
   1fe6c:	48 c7 85 00 ff ff ff 	movq   $0x2,-0x100(%rbp)
   1fe73:	02 00 00 00 
   1fe77:	77 67                	ja     1fee0 <mpi_miller_rabin+0x190>
   1fe79:	48 3d 51 03 00 00    	cmp    $0x351,%rax
   1fe7f:	48 c7 85 00 ff ff ff 	movq   $0x3,-0x100(%rbp)
   1fe86:	03 00 00 00 
   1fe8a:	77 54                	ja     1fee0 <mpi_miller_rabin+0x190>
   1fe8c:	48 3d 89 02 00 00    	cmp    $0x289,%rax
   1fe92:	48 c7 85 00 ff ff ff 	movq   $0x4,-0x100(%rbp)
   1fe99:	04 00 00 00 
   1fe9d:	77 41                	ja     1fee0 <mpi_miller_rabin+0x190>
   1fe9f:	48 3d 5d 01 00 00    	cmp    $0x15d,%rax
   1fea5:	48 c7 85 00 ff ff ff 	movq   $0x8,-0x100(%rbp)
   1feac:	08 00 00 00 
   1feb0:	77 2e                	ja     1fee0 <mpi_miller_rabin+0x190>
   1feb2:	48 3d f9 00 00 00    	cmp    $0xf9,%rax
   1feb8:	48 c7 85 00 ff ff ff 	movq   $0xc,-0x100(%rbp)
   1febf:	0c 00 00 00 
   1fec3:	77 1b                	ja     1fee0 <mpi_miller_rabin+0x190>
   1fec5:	48 3d 96 00 00 00    	cmp    $0x96,%rax
   1fecb:	48 19 c0             	sbb    %rax,%rax
   1fece:	83 e0 09             	and    $0x9,%eax
   1fed1:	48 83 c0 12          	add    $0x12,%rax
   1fed5:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
   1fedc:	0f 1f 40 00          	nopl   0x0(%rax)
   1fee0:	48 c7 85 f0 fe ff ff 	movq   $0x0,-0x110(%rbp)
   1fee7:	00 00 00 00 
   1feeb:	4c 89 b5 f8 fe ff ff 	mov    %r14,-0x108(%rbp)
   1fef2:	49 8b 45 08          	mov    0x8(%r13),%rax
   1fef6:	48 8b 8d 10 ff ff ff 	mov    -0xf0(%rbp),%rcx
   1fefd:	4c 89 e7             	mov    %r12,%rdi
   1ff00:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   1ff07:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
   1ff0e:	00 
   1ff0f:	e8 dc fd ff ff       	callq  1fcf0 <mbedtls_mpi_fill_random>
   1ff14:	85 c0                	test   %eax,%eax
   1ff16:	41 89 c7             	mov    %eax,%r15d
   1ff19:	0f 85 30 01 00 00    	jne    2004f <mpi_miller_rabin+0x2ff>
   1ff1f:	48 89 de             	mov    %rbx,%rsi
   1ff22:	4c 89 e7             	mov    %r12,%rdi
   1ff25:	e8 66 db ff ff       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1ff2a:	85 c0                	test   %eax,%eax
   1ff2c:	78 2d                	js     1ff5b <mpi_miller_rabin+0x20b>
   1ff2e:	4c 89 e7             	mov    %r12,%rdi
   1ff31:	e8 ba d4 ff ff       	callq  1d3f0 <mbedtls_mpi_bitlen>
   1ff36:	48 89 df             	mov    %rbx,%rdi
   1ff39:	49 89 c6             	mov    %rax,%r14
   1ff3c:	e8 af d4 ff ff       	callq  1d3f0 <mbedtls_mpi_bitlen>
   1ff41:	49 8d 76 01          	lea    0x1(%r14),%rsi
   1ff45:	4c 89 e7             	mov    %r12,%rdi
   1ff48:	48 29 c6             	sub    %rax,%rsi
   1ff4b:	e8 d0 d7 ff ff       	callq  1d720 <mbedtls_mpi_shift_r>
   1ff50:	85 c0                	test   %eax,%eax
   1ff52:	41 89 c7             	mov    %eax,%r15d
   1ff55:	0f 85 f4 00 00 00    	jne    2004f <mpi_miller_rabin+0x2ff>
   1ff5b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1ff5f:	41 be 20 00 00 00    	mov    $0x20,%r14d
   1ff65:	48 83 08 03          	orq    $0x3,(%rax)
   1ff69:	eb 1e                	jmp    1ff89 <mpi_miller_rabin+0x239>
   1ff6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   1ff70:	41 83 ee 01          	sub    $0x1,%r14d
   1ff74:	0f 84 e6 00 00 00    	je     20060 <mpi_miller_rabin+0x310>
   1ff7a:	48 89 de             	mov    %rbx,%rsi
   1ff7d:	4c 89 e7             	mov    %r12,%rdi
   1ff80:	e8 0b db ff ff       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   1ff85:	85 c0                	test   %eax,%eax
   1ff87:	78 67                	js     1fff0 <mpi_miller_rabin+0x2a0>
   1ff89:	49 8b 45 08          	mov    0x8(%r13),%rax
   1ff8d:	48 8b 8d 10 ff ff ff 	mov    -0xf0(%rbp),%rcx
   1ff94:	4c 89 e7             	mov    %r12,%rdi
   1ff97:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
   1ff9e:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
   1ffa5:	00 
   1ffa6:	e8 45 fd ff ff       	callq  1fcf0 <mbedtls_mpi_fill_random>
   1ffab:	85 c0                	test   %eax,%eax
   1ffad:	75 2a                	jne    1ffd9 <mpi_miller_rabin+0x289>
   1ffaf:	4c 89 e7             	mov    %r12,%rdi
   1ffb2:	e8 39 d4 ff ff       	callq  1d3f0 <mbedtls_mpi_bitlen>
   1ffb7:	48 89 df             	mov    %rbx,%rdi
   1ffba:	49 89 c7             	mov    %rax,%r15
   1ffbd:	e8 2e d4 ff ff       	callq  1d3f0 <mbedtls_mpi_bitlen>
   1ffc2:	49 39 c7             	cmp    %rax,%r15
   1ffc5:	76 a9                	jbe    1ff70 <mpi_miller_rabin+0x220>
   1ffc7:	4c 89 fe             	mov    %r15,%rsi
   1ffca:	4c 89 e7             	mov    %r12,%rdi
   1ffcd:	48 29 c6             	sub    %rax,%rsi
   1ffd0:	e8 4b d7 ff ff       	callq  1d720 <mbedtls_mpi_shift_r>
   1ffd5:	85 c0                	test   %eax,%eax
   1ffd7:	74 97                	je     1ff70 <mpi_miller_rabin+0x220>
   1ffd9:	41 89 c7             	mov    %eax,%r15d
   1ffdc:	4c 8b b5 f8 fe ff ff 	mov    -0x108(%rbp),%r14
   1ffe3:	e9 18 fe ff ff       	jmpq   1fe00 <mpi_miller_rabin+0xb0>
   1ffe8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1ffef:	00 
   1fff0:	be 01 00 00 00       	mov    $0x1,%esi
   1fff5:	4c 89 e7             	mov    %r12,%rdi
   1fff8:	e8 93 db ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   1fffd:	85 c0                	test   %eax,%eax
   1ffff:	7e 88                	jle    1ff89 <mpi_miller_rabin+0x239>
   20001:	4c 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%r8
   20008:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
   2000f:	4c 89 e9             	mov    %r13,%rcx
   20012:	4c 89 e6             	mov    %r12,%rsi
   20015:	4c 89 e7             	mov    %r12,%rdi
   20018:	e8 e3 ef ff ff       	callq  1f000 <mbedtls_mpi_exp_mod>
   2001d:	85 c0                	test   %eax,%eax
   2001f:	41 89 c7             	mov    %eax,%r15d
   20022:	75 2b                	jne    2004f <mpi_miller_rabin+0x2ff>
   20024:	48 89 de             	mov    %rbx,%rsi
   20027:	4c 89 e7             	mov    %r12,%rdi
   2002a:	e8 61 da ff ff       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   2002f:	85 c0                	test   %eax,%eax
   20031:	75 37                	jne    2006a <mpi_miller_rabin+0x31a>
   20033:	48 83 85 f0 fe ff ff 	addq   $0x1,-0x110(%rbp)
   2003a:	01 
   2003b:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
   20042:	48 39 85 00 ff ff ff 	cmp    %rax,-0x100(%rbp)
   20049:	0f 85 a3 fe ff ff    	jne    1fef2 <mpi_miller_rabin+0x1a2>
   2004f:	4c 8b b5 f8 fe ff ff 	mov    -0x108(%rbp),%r14
   20056:	e9 a5 fd ff ff       	jmpq   1fe00 <mpi_miller_rabin+0xb0>
   2005b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   20060:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   20065:	e9 c9 fd ff ff       	jmpq   1fe33 <mpi_miller_rabin+0xe3>
   2006a:	be 01 00 00 00       	mov    $0x1,%esi
   2006f:	4c 89 e7             	mov    %r12,%rdi
   20072:	e8 19 db ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   20077:	85 c0                	test   %eax,%eax
   20079:	74 b8                	je     20033 <mpi_miller_rabin+0x2e3>
   2007b:	48 83 bd 08 ff ff ff 	cmpq   $0x1,-0xf8(%rbp)
   20082:	01 
   20083:	41 be 01 00 00 00    	mov    $0x1,%r14d
   20089:	77 4f                	ja     200da <mpi_miller_rabin+0x38a>
   2008b:	eb 5c                	jmp    200e9 <mpi_miller_rabin+0x399>
   2008d:	0f 1f 00             	nopl   (%rax)
   20090:	48 8b bd 28 ff ff ff 	mov    -0xd8(%rbp),%rdi
   20097:	4c 89 e2             	mov    %r12,%rdx
   2009a:	4c 89 e6             	mov    %r12,%rsi
   2009d:	e8 1e df ff ff       	callq  1dfc0 <mbedtls_mpi_mul_mpi>
   200a2:	85 c0                	test   %eax,%eax
   200a4:	75 79                	jne    2011f <mpi_miller_rabin+0x3cf>
   200a6:	48 8b b5 28 ff ff ff 	mov    -0xd8(%rbp),%rsi
   200ad:	4c 89 ea             	mov    %r13,%rdx
   200b0:	4c 89 e7             	mov    %r12,%rdi
   200b3:	e8 68 ea ff ff       	callq  1eb20 <mbedtls_mpi_mod_mpi>
   200b8:	85 c0                	test   %eax,%eax
   200ba:	75 63                	jne    2011f <mpi_miller_rabin+0x3cf>
   200bc:	be 01 00 00 00       	mov    $0x1,%esi
   200c1:	4c 89 e7             	mov    %r12,%rdi
   200c4:	e8 c7 da ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   200c9:	85 c0                	test   %eax,%eax
   200cb:	74 1c                	je     200e9 <mpi_miller_rabin+0x399>
   200cd:	49 83 c6 01          	add    $0x1,%r14
   200d1:	4c 39 b5 08 ff ff ff 	cmp    %r14,-0xf8(%rbp)
   200d8:	74 0f                	je     200e9 <mpi_miller_rabin+0x399>
   200da:	48 89 de             	mov    %rbx,%rsi
   200dd:	4c 89 e7             	mov    %r12,%rdi
   200e0:	e8 ab d9 ff ff       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   200e5:	85 c0                	test   %eax,%eax
   200e7:	75 a7                	jne    20090 <mpi_miller_rabin+0x340>
   200e9:	48 89 de             	mov    %rbx,%rsi
   200ec:	4c 89 e7             	mov    %r12,%rdi
   200ef:	e8 9c d9 ff ff       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   200f4:	85 c0                	test   %eax,%eax
   200f6:	75 15                	jne    2010d <mpi_miller_rabin+0x3bd>
   200f8:	be 01 00 00 00       	mov    $0x1,%esi
   200fd:	4c 89 e7             	mov    %r12,%rdi
   20100:	e8 8b da ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   20105:	85 c0                	test   %eax,%eax
   20107:	0f 85 26 ff ff ff    	jne    20033 <mpi_miller_rabin+0x2e3>
   2010d:	4c 8b b5 f8 fe ff ff 	mov    -0x108(%rbp),%r14
   20114:	41 bf f2 ff ff ff    	mov    $0xfffffff2,%r15d
   2011a:	e9 e1 fc ff ff       	jmpq   1fe00 <mpi_miller_rabin+0xb0>
   2011f:	4c 8b b5 f8 fe ff ff 	mov    -0x108(%rbp),%r14
   20126:	41 89 c7             	mov    %eax,%r15d
   20129:	e9 d2 fc ff ff       	jmpq   1fe00 <mpi_miller_rabin+0xb0>
   2012e:	66 90                	xchg   %ax,%ax

0000000000020130 <mbedtls_mpi_inv_mod>:
   20130:	55                   	push   %rbp
   20131:	48 89 e5             	mov    %rsp,%rbp
   20134:	41 57                	push   %r15
   20136:	41 56                	push   %r14
   20138:	41 55                	push   %r13
   2013a:	41 54                	push   %r12
   2013c:	49 89 d4             	mov    %rdx,%r12
   2013f:	53                   	push   %rbx
   20140:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
   20147:	48 89 bd 78 fe ff ff 	mov    %rdi,-0x188(%rbp)
   2014e:	48 89 b5 a8 fe ff ff 	mov    %rsi,-0x158(%rbp)
   20155:	48 89 d7             	mov    %rdx,%rdi
   20158:	31 f6                	xor    %esi,%esi
   2015a:	e8 31 da ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   2015f:	85 c0                	test   %eax,%eax
   20161:	0f 8e c9 02 00 00    	jle    20430 <mbedtls_mpi_inv_mod+0x300>
   20167:	4c 8d ad d0 fe ff ff 	lea    -0x130(%rbp),%r13
   2016e:	4c 8d b5 f0 fe ff ff 	lea    -0x110(%rbp),%r14
   20175:	48 8d 9d b0 fe ff ff 	lea    -0x150(%rbp),%rbx
   2017c:	4c 8d 7d 90          	lea    -0x70(%rbp),%r15
   20180:	4c 89 ef             	mov    %r13,%rdi
   20183:	e8 88 cb ff ff       	callq  1cd10 <mbedtls_mpi_init>
   20188:	4c 89 f7             	mov    %r14,%rdi
   2018b:	e8 80 cb ff ff       	callq  1cd10 <mbedtls_mpi_init>
   20190:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   20197:	48 89 c7             	mov    %rax,%rdi
   2019a:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
   201a1:	e8 6a cb ff ff       	callq  1cd10 <mbedtls_mpi_init>
   201a6:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
   201ad:	48 89 c7             	mov    %rax,%rdi
   201b0:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
   201b7:	e8 54 cb ff ff       	callq  1cd10 <mbedtls_mpi_init>
   201bc:	48 89 df             	mov    %rbx,%rdi
   201bf:	e8 4c cb ff ff       	callq  1cd10 <mbedtls_mpi_init>
   201c4:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   201cb:	48 89 c7             	mov    %rax,%rdi
   201ce:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
   201d5:	e8 36 cb ff ff       	callq  1cd10 <mbedtls_mpi_init>
   201da:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   201e1:	48 89 c7             	mov    %rax,%rdi
   201e4:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
   201eb:	e8 20 cb ff ff       	callq  1cd10 <mbedtls_mpi_init>
   201f0:	4c 89 ff             	mov    %r15,%rdi
   201f3:	e8 18 cb ff ff       	callq  1cd10 <mbedtls_mpi_init>
   201f8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   201fc:	48 89 c7             	mov    %rax,%rdi
   201ff:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
   20206:	e8 05 cb ff ff       	callq  1cd10 <mbedtls_mpi_init>
   2020b:	48 8b b5 a8 fe ff ff 	mov    -0x158(%rbp),%rsi
   20212:	4c 89 e2             	mov    %r12,%rdx
   20215:	48 89 df             	mov    %rbx,%rdi
   20218:	e8 03 f9 ff ff       	callq  1fb20 <mbedtls_mpi_gcd>
   2021d:	85 c0                	test   %eax,%eax
   2021f:	74 7f                	je     202a0 <mbedtls_mpi_inv_mod+0x170>
   20221:	4c 89 ef             	mov    %r13,%rdi
   20224:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%rbp)
   2022a:	e8 11 cb ff ff       	callq  1cd40 <mbedtls_mpi_free>
   2022f:	4c 89 f7             	mov    %r14,%rdi
   20232:	e8 09 cb ff ff       	callq  1cd40 <mbedtls_mpi_free>
   20237:	48 8b bd 88 fe ff ff 	mov    -0x178(%rbp),%rdi
   2023e:	e8 fd ca ff ff       	callq  1cd40 <mbedtls_mpi_free>
   20243:	48 8b bd 80 fe ff ff 	mov    -0x180(%rbp),%rdi
   2024a:	e8 f1 ca ff ff       	callq  1cd40 <mbedtls_mpi_free>
   2024f:	48 89 df             	mov    %rbx,%rdi
   20252:	e8 e9 ca ff ff       	callq  1cd40 <mbedtls_mpi_free>
   20257:	48 8b bd a0 fe ff ff 	mov    -0x160(%rbp),%rdi
   2025e:	e8 dd ca ff ff       	callq  1cd40 <mbedtls_mpi_free>
   20263:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
   2026a:	e8 d1 ca ff ff       	callq  1cd40 <mbedtls_mpi_free>
   2026f:	4c 89 ff             	mov    %r15,%rdi
   20272:	e8 c9 ca ff ff       	callq  1cd40 <mbedtls_mpi_free>
   20277:	48 8b bd 90 fe ff ff 	mov    -0x170(%rbp),%rdi
   2027e:	e8 bd ca ff ff       	callq  1cd40 <mbedtls_mpi_free>
   20283:	8b 85 a8 fe ff ff    	mov    -0x158(%rbp),%eax
   20289:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
   20290:	5b                   	pop    %rbx
   20291:	41 5c                	pop    %r12
   20293:	41 5d                	pop    %r13
   20295:	41 5e                	pop    %r14
   20297:	41 5f                	pop    %r15
   20299:	5d                   	pop    %rbp
   2029a:	c3                   	retq   
   2029b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   202a0:	be 01 00 00 00       	mov    $0x1,%esi
   202a5:	48 89 df             	mov    %rbx,%rdi
   202a8:	e8 e3 d8 ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   202ad:	89 c2                	mov    %eax,%edx
   202af:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   202b4:	85 d2                	test   %edx,%edx
   202b6:	0f 85 65 ff ff ff    	jne    20221 <mbedtls_mpi_inv_mod+0xf1>
   202bc:	48 8b b5 a8 fe ff ff 	mov    -0x158(%rbp),%rsi
   202c3:	4c 89 e2             	mov    %r12,%rdx
   202c6:	4c 89 ef             	mov    %r13,%rdi
   202c9:	e8 52 e8 ff ff       	callq  1eb20 <mbedtls_mpi_mod_mpi>
   202ce:	85 c0                	test   %eax,%eax
   202d0:	0f 85 4b ff ff ff    	jne    20221 <mbedtls_mpi_inv_mod+0xf1>
   202d6:	4c 89 ee             	mov    %r13,%rsi
   202d9:	4c 89 f7             	mov    %r14,%rdi
   202dc:	e8 8f cc ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   202e1:	85 c0                	test   %eax,%eax
   202e3:	0f 85 38 ff ff ff    	jne    20221 <mbedtls_mpi_inv_mod+0xf1>
   202e9:	48 8b bd a0 fe ff ff 	mov    -0x160(%rbp),%rdi
   202f0:	4c 89 e6             	mov    %r12,%rsi
   202f3:	e8 78 cc ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   202f8:	85 c0                	test   %eax,%eax
   202fa:	0f 85 21 ff ff ff    	jne    20221 <mbedtls_mpi_inv_mod+0xf1>
   20300:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
   20307:	4c 89 e6             	mov    %r12,%rsi
   2030a:	e8 61 cc ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   2030f:	85 c0                	test   %eax,%eax
   20311:	0f 85 0a ff ff ff    	jne    20221 <mbedtls_mpi_inv_mod+0xf1>
   20317:	48 8b bd 88 fe ff ff 	mov    -0x178(%rbp),%rdi
   2031e:	be 01 00 00 00       	mov    $0x1,%esi
   20323:	e8 58 cf ff ff       	callq  1d280 <mbedtls_mpi_lset>
   20328:	85 c0                	test   %eax,%eax
   2032a:	0f 85 f1 fe ff ff    	jne    20221 <mbedtls_mpi_inv_mod+0xf1>
   20330:	48 8b bd 80 fe ff ff 	mov    -0x180(%rbp),%rdi
   20337:	31 f6                	xor    %esi,%esi
   20339:	e8 42 cf ff ff       	callq  1d280 <mbedtls_mpi_lset>
   2033e:	85 c0                	test   %eax,%eax
   20340:	0f 85 db fe ff ff    	jne    20221 <mbedtls_mpi_inv_mod+0xf1>
   20346:	31 f6                	xor    %esi,%esi
   20348:	4c 89 ff             	mov    %r15,%rdi
   2034b:	e8 30 cf ff ff       	callq  1d280 <mbedtls_mpi_lset>
   20350:	85 c0                	test   %eax,%eax
   20352:	0f 85 c9 fe ff ff    	jne    20221 <mbedtls_mpi_inv_mod+0xf1>
   20358:	48 8b bd 90 fe ff ff 	mov    -0x170(%rbp),%rdi
   2035f:	be 01 00 00 00       	mov    $0x1,%esi
   20364:	e8 17 cf ff ff       	callq  1d280 <mbedtls_mpi_lset>
   20369:	85 c0                	test   %eax,%eax
   2036b:	0f 85 b0 fe ff ff    	jne    20221 <mbedtls_mpi_inv_mod+0xf1>
   20371:	4c 89 a5 70 fe ff ff 	mov    %r12,-0x190(%rbp)
   20378:	48 89 9d a8 fe ff ff 	mov    %rbx,-0x158(%rbp)
   2037f:	4c 8b a5 80 fe ff ff 	mov    -0x180(%rbp),%r12
   20386:	48 8b 9d 88 fe ff ff 	mov    -0x178(%rbp),%rbx
   2038d:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   20394:	f6 00 01             	testb  $0x1,(%rax)
   20397:	75 2b                	jne    203c4 <mbedtls_mpi_inv_mod+0x294>
   20399:	e9 36 01 00 00       	jmpq   204d4 <mbedtls_mpi_inv_mod+0x3a4>
   2039e:	be 01 00 00 00       	mov    $0x1,%esi
   203a3:	4c 89 ff             	mov    %r15,%rdi
   203a6:	e8 75 d3 ff ff       	callq  1d720 <mbedtls_mpi_shift_r>
   203ab:	85 c0                	test   %eax,%eax
   203ad:	75 75                	jne    20424 <mbedtls_mpi_inv_mod+0x2f4>
   203af:	48 8b bd 90 fe ff ff 	mov    -0x170(%rbp),%rdi
   203b6:	be 01 00 00 00       	mov    $0x1,%esi
   203bb:	e8 60 d3 ff ff       	callq  1d720 <mbedtls_mpi_shift_r>
   203c0:	85 c0                	test   %eax,%eax
   203c2:	75 60                	jne    20424 <mbedtls_mpi_inv_mod+0x2f4>
   203c4:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   203c8:	f6 00 01             	testb  $0x1,(%rax)
   203cb:	75 6d                	jne    2043a <mbedtls_mpi_inv_mod+0x30a>
   203cd:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
   203d4:	be 01 00 00 00       	mov    $0x1,%esi
   203d9:	e8 42 d3 ff ff       	callq  1d720 <mbedtls_mpi_shift_r>
   203de:	85 c0                	test   %eax,%eax
   203e0:	75 42                	jne    20424 <mbedtls_mpi_inv_mod+0x2f4>
   203e2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   203e6:	f6 00 01             	testb  $0x1,(%rax)
   203e9:	75 09                	jne    203f4 <mbedtls_mpi_inv_mod+0x2c4>
   203eb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   203ef:	f6 00 01             	testb  $0x1,(%rax)
   203f2:	74 aa                	je     2039e <mbedtls_mpi_inv_mod+0x26e>
   203f4:	48 8b 95 a0 fe ff ff 	mov    -0x160(%rbp),%rdx
   203fb:	4c 89 fe             	mov    %r15,%rsi
   203fe:	4c 89 ff             	mov    %r15,%rdi
   20401:	e8 1a da ff ff       	callq  1de20 <mbedtls_mpi_add_mpi>
   20406:	85 c0                	test   %eax,%eax
   20408:	75 1a                	jne    20424 <mbedtls_mpi_inv_mod+0x2f4>
   2040a:	48 8b bd 90 fe ff ff 	mov    -0x170(%rbp),%rdi
   20411:	4c 89 ea             	mov    %r13,%rdx
   20414:	48 89 fe             	mov    %rdi,%rsi
   20417:	e8 94 da ff ff       	callq  1deb0 <mbedtls_mpi_sub_mpi>
   2041c:	85 c0                	test   %eax,%eax
   2041e:	0f 84 7a ff ff ff    	je     2039e <mbedtls_mpi_inv_mod+0x26e>
   20424:	48 8b 9d a8 fe ff ff 	mov    -0x158(%rbp),%rbx
   2042b:	e9 f1 fd ff ff       	jmpq   20221 <mbedtls_mpi_inv_mod+0xf1>
   20430:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   20435:	e9 4f fe ff ff       	jmpq   20289 <mbedtls_mpi_inv_mod+0x159>
   2043a:	48 8b b5 98 fe ff ff 	mov    -0x168(%rbp),%rsi
   20441:	4c 89 f7             	mov    %r14,%rdi
   20444:	e8 47 d6 ff ff       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   20449:	85 c0                	test   %eax,%eax
   2044b:	0f 88 11 01 00 00    	js     20562 <mbedtls_mpi_inv_mod+0x432>
   20451:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
   20458:	4c 89 f6             	mov    %r14,%rsi
   2045b:	4c 89 f7             	mov    %r14,%rdi
   2045e:	e8 4d da ff ff       	callq  1deb0 <mbedtls_mpi_sub_mpi>
   20463:	85 c0                	test   %eax,%eax
   20465:	75 bd                	jne    20424 <mbedtls_mpi_inv_mod+0x2f4>
   20467:	4c 89 fa             	mov    %r15,%rdx
   2046a:	48 89 de             	mov    %rbx,%rsi
   2046d:	48 89 df             	mov    %rbx,%rdi
   20470:	e8 3b da ff ff       	callq  1deb0 <mbedtls_mpi_sub_mpi>
   20475:	85 c0                	test   %eax,%eax
   20477:	75 ab                	jne    20424 <mbedtls_mpi_inv_mod+0x2f4>
   20479:	48 8b 95 90 fe ff ff 	mov    -0x170(%rbp),%rdx
   20480:	4c 89 e6             	mov    %r12,%rsi
   20483:	4c 89 e7             	mov    %r12,%rdi
   20486:	e8 25 da ff ff       	callq  1deb0 <mbedtls_mpi_sub_mpi>
   2048b:	85 c0                	test   %eax,%eax
   2048d:	75 95                	jne    20424 <mbedtls_mpi_inv_mod+0x2f4>
   2048f:	31 f6                	xor    %esi,%esi
   20491:	4c 89 f7             	mov    %r14,%rdi
   20494:	e8 f7 d6 ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   20499:	85 c0                	test   %eax,%eax
   2049b:	0f 85 ec fe ff ff    	jne    2038d <mbedtls_mpi_inv_mod+0x25d>
   204a1:	4c 8b a5 70 fe ff ff 	mov    -0x190(%rbp),%r12
   204a8:	48 8b 9d a8 fe ff ff 	mov    -0x158(%rbp),%rbx
   204af:	31 f6                	xor    %esi,%esi
   204b1:	4c 89 ff             	mov    %r15,%rdi
   204b4:	e8 d7 d6 ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   204b9:	85 c0                	test   %eax,%eax
   204bb:	79 7b                	jns    20538 <mbedtls_mpi_inv_mod+0x408>
   204bd:	4c 89 e2             	mov    %r12,%rdx
   204c0:	4c 89 fe             	mov    %r15,%rsi
   204c3:	4c 89 ff             	mov    %r15,%rdi
   204c6:	e8 55 d9 ff ff       	callq  1de20 <mbedtls_mpi_add_mpi>
   204cb:	85 c0                	test   %eax,%eax
   204cd:	74 e0                	je     204af <mbedtls_mpi_inv_mod+0x37f>
   204cf:	e9 4d fd ff ff       	jmpq   20221 <mbedtls_mpi_inv_mod+0xf1>
   204d4:	be 01 00 00 00       	mov    $0x1,%esi
   204d9:	4c 89 f7             	mov    %r14,%rdi
   204dc:	e8 3f d2 ff ff       	callq  1d720 <mbedtls_mpi_shift_r>
   204e1:	85 c0                	test   %eax,%eax
   204e3:	0f 85 3b ff ff ff    	jne    20424 <mbedtls_mpi_inv_mod+0x2f4>
   204e9:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   204f0:	f6 00 01             	testb  $0x1,(%rax)
   204f3:	0f 85 b8 00 00 00    	jne    205b1 <mbedtls_mpi_inv_mod+0x481>
   204f9:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   20500:	f6 00 01             	testb  $0x1,(%rax)
   20503:	0f 85 a8 00 00 00    	jne    205b1 <mbedtls_mpi_inv_mod+0x481>
   20509:	be 01 00 00 00       	mov    $0x1,%esi
   2050e:	48 89 df             	mov    %rbx,%rdi
   20511:	e8 0a d2 ff ff       	callq  1d720 <mbedtls_mpi_shift_r>
   20516:	85 c0                	test   %eax,%eax
   20518:	0f 85 06 ff ff ff    	jne    20424 <mbedtls_mpi_inv_mod+0x2f4>
   2051e:	be 01 00 00 00       	mov    $0x1,%esi
   20523:	4c 89 e7             	mov    %r12,%rdi
   20526:	e8 f5 d1 ff ff       	callq  1d720 <mbedtls_mpi_shift_r>
   2052b:	85 c0                	test   %eax,%eax
   2052d:	0f 84 5a fe ff ff    	je     2038d <mbedtls_mpi_inv_mod+0x25d>
   20533:	e9 ec fe ff ff       	jmpq   20424 <mbedtls_mpi_inv_mod+0x2f4>
   20538:	4c 89 e6             	mov    %r12,%rsi
   2053b:	4c 89 ff             	mov    %r15,%rdi
   2053e:	e8 4d d5 ff ff       	callq  1da90 <mbedtls_mpi_cmp_mpi>
   20543:	85 c0                	test   %eax,%eax
   20545:	0f 88 9b 00 00 00    	js     205e6 <mbedtls_mpi_inv_mod+0x4b6>
   2054b:	4c 89 e2             	mov    %r12,%rdx
   2054e:	4c 89 fe             	mov    %r15,%rsi
   20551:	4c 89 ff             	mov    %r15,%rdi
   20554:	e8 57 d9 ff ff       	callq  1deb0 <mbedtls_mpi_sub_mpi>
   20559:	85 c0                	test   %eax,%eax
   2055b:	74 db                	je     20538 <mbedtls_mpi_inv_mod+0x408>
   2055d:	e9 bf fc ff ff       	jmpq   20221 <mbedtls_mpi_inv_mod+0xf1>
   20562:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
   20569:	4c 89 f2             	mov    %r14,%rdx
   2056c:	48 89 fe             	mov    %rdi,%rsi
   2056f:	e8 3c d9 ff ff       	callq  1deb0 <mbedtls_mpi_sub_mpi>
   20574:	85 c0                	test   %eax,%eax
   20576:	0f 85 a8 fe ff ff    	jne    20424 <mbedtls_mpi_inv_mod+0x2f4>
   2057c:	48 89 da             	mov    %rbx,%rdx
   2057f:	4c 89 fe             	mov    %r15,%rsi
   20582:	4c 89 ff             	mov    %r15,%rdi
   20585:	e8 26 d9 ff ff       	callq  1deb0 <mbedtls_mpi_sub_mpi>
   2058a:	85 c0                	test   %eax,%eax
   2058c:	0f 85 92 fe ff ff    	jne    20424 <mbedtls_mpi_inv_mod+0x2f4>
   20592:	48 8b bd 90 fe ff ff 	mov    -0x170(%rbp),%rdi
   20599:	4c 89 e2             	mov    %r12,%rdx
   2059c:	48 89 fe             	mov    %rdi,%rsi
   2059f:	e8 0c d9 ff ff       	callq  1deb0 <mbedtls_mpi_sub_mpi>
   205a4:	85 c0                	test   %eax,%eax
   205a6:	0f 84 e3 fe ff ff    	je     2048f <mbedtls_mpi_inv_mod+0x35f>
   205ac:	e9 73 fe ff ff       	jmpq   20424 <mbedtls_mpi_inv_mod+0x2f4>
   205b1:	48 8b 95 a0 fe ff ff 	mov    -0x160(%rbp),%rdx
   205b8:	48 89 de             	mov    %rbx,%rsi
   205bb:	48 89 df             	mov    %rbx,%rdi
   205be:	e8 5d d8 ff ff       	callq  1de20 <mbedtls_mpi_add_mpi>
   205c3:	85 c0                	test   %eax,%eax
   205c5:	0f 85 59 fe ff ff    	jne    20424 <mbedtls_mpi_inv_mod+0x2f4>
   205cb:	4c 89 ea             	mov    %r13,%rdx
   205ce:	4c 89 e6             	mov    %r12,%rsi
   205d1:	4c 89 e7             	mov    %r12,%rdi
   205d4:	e8 d7 d8 ff ff       	callq  1deb0 <mbedtls_mpi_sub_mpi>
   205d9:	85 c0                	test   %eax,%eax
   205db:	0f 84 28 ff ff ff    	je     20509 <mbedtls_mpi_inv_mod+0x3d9>
   205e1:	e9 3e fe ff ff       	jmpq   20424 <mbedtls_mpi_inv_mod+0x2f4>
   205e6:	48 8b bd 78 fe ff ff 	mov    -0x188(%rbp),%rdi
   205ed:	4c 89 fe             	mov    %r15,%rsi
   205f0:	e8 7b c9 ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   205f5:	e9 27 fc ff ff       	jmpq   20221 <mbedtls_mpi_inv_mod+0xf1>
   205fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000020600 <mbedtls_mpi_is_prime>:
   20600:	55                   	push   %rbp
   20601:	48 89 e5             	mov    %rsp,%rbp
   20604:	41 55                	push   %r13
   20606:	41 54                	push   %r12
   20608:	53                   	push   %rbx
   20609:	48 8d 5d c0          	lea    -0x40(%rbp),%rbx
   2060d:	49 89 f4             	mov    %rsi,%r12
   20610:	31 f6                	xor    %esi,%esi
   20612:	49 89 d5             	mov    %rdx,%r13
   20615:	48 83 ec 28          	sub    $0x28,%rsp
   20619:	48 8b 47 08          	mov    0x8(%rdi),%rax
   2061d:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
   20624:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   20628:	48 8b 47 10          	mov    0x10(%rdi),%rax
   2062c:	48 89 df             	mov    %rbx,%rdi
   2062f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   20633:	e8 58 d5 ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   20638:	85 c0                	test   %eax,%eax
   2063a:	74 54                	je     20690 <mbedtls_mpi_is_prime+0x90>
   2063c:	be 01 00 00 00       	mov    $0x1,%esi
   20641:	48 89 df             	mov    %rbx,%rdi
   20644:	e8 47 d5 ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   20649:	85 c0                	test   %eax,%eax
   2064b:	74 43                	je     20690 <mbedtls_mpi_is_prime+0x90>
   2064d:	be 02 00 00 00       	mov    $0x2,%esi
   20652:	48 89 df             	mov    %rbx,%rdi
   20655:	e8 36 d5 ff ff       	callq  1db90 <mbedtls_mpi_cmp_int>
   2065a:	85 c0                	test   %eax,%eax
   2065c:	75 12                	jne    20670 <mbedtls_mpi_is_prime+0x70>
   2065e:	31 c0                	xor    %eax,%eax
   20660:	48 83 c4 28          	add    $0x28,%rsp
   20664:	5b                   	pop    %rbx
   20665:	41 5c                	pop    %r12
   20667:	41 5d                	pop    %r13
   20669:	5d                   	pop    %rbp
   2066a:	c3                   	retq   
   2066b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   20670:	48 89 df             	mov    %rbx,%rdi
   20673:	e8 e8 e8 ff ff       	callq  1ef60 <mpi_check_small_factors>
   20678:	85 c0                	test   %eax,%eax
   2067a:	74 24                	je     206a0 <mbedtls_mpi_is_prime+0xa0>
   2067c:	83 f8 01             	cmp    $0x1,%eax
   2067f:	74 dd                	je     2065e <mbedtls_mpi_is_prime+0x5e>
   20681:	48 83 c4 28          	add    $0x28,%rsp
   20685:	5b                   	pop    %rbx
   20686:	41 5c                	pop    %r12
   20688:	41 5d                	pop    %r13
   2068a:	5d                   	pop    %rbp
   2068b:	c3                   	retq   
   2068c:	0f 1f 40 00          	nopl   0x0(%rax)
   20690:	48 83 c4 28          	add    $0x28,%rsp
   20694:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   20699:	5b                   	pop    %rbx
   2069a:	41 5c                	pop    %r12
   2069c:	41 5d                	pop    %r13
   2069e:	5d                   	pop    %rbp
   2069f:	c3                   	retq   
   206a0:	4c 89 ea             	mov    %r13,%rdx
   206a3:	4c 89 e6             	mov    %r12,%rsi
   206a6:	48 89 df             	mov    %rbx,%rdi
   206a9:	e8 a2 f6 ff ff       	callq  1fd50 <mpi_miller_rabin>
   206ae:	eb b0                	jmp    20660 <mbedtls_mpi_is_prime+0x60>

00000000000206b0 <mbedtls_mpi_gen_prime>:
   206b0:	4c 8d 4e fd          	lea    -0x3(%rsi),%r9
   206b4:	49 81 f9 fd 1f 00 00 	cmp    $0x1ffd,%r9
   206bb:	0f 87 17 01 00 00    	ja     207d8 <mbedtls_mpi_gen_prime+0x128>
   206c1:	55                   	push   %rbp
   206c2:	48 89 e5             	mov    %rsp,%rbp
   206c5:	41 57                	push   %r15
   206c7:	41 56                	push   %r14
   206c9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   206cd:	41 55                	push   %r13
   206cf:	41 54                	push   %r12
   206d1:	53                   	push   %rbx
   206d2:	49 89 f4             	mov    %rsi,%r12
   206d5:	48 89 fb             	mov    %rdi,%rbx
   206d8:	48 89 c7             	mov    %rax,%rdi
   206db:	4d 89 c7             	mov    %r8,%r15
   206de:	49 89 ce             	mov    %rcx,%r14
   206e1:	48 83 ec 48          	sub    $0x48,%rsp
   206e5:	89 55 94             	mov    %edx,-0x6c(%rbp)
   206e8:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   206ec:	e8 1f c6 ff ff       	callq  1cd10 <mbedtls_mpi_init>
   206f1:	31 f6                	xor    %esi,%esi
   206f3:	4c 89 e0             	mov    %r12,%rax
   206f6:	41 f6 c4 3f          	test   $0x3f,%r12b
   206fa:	40 0f 95 c6          	setne  %sil
   206fe:	48 c1 e8 06          	shr    $0x6,%rax
   20702:	4c 89 f9             	mov    %r15,%rcx
   20705:	48 01 c6             	add    %rax,%rsi
   20708:	4c 89 f2             	mov    %r14,%rdx
   2070b:	48 89 df             	mov    %rbx,%rdi
   2070e:	48 c1 e6 03          	shl    $0x3,%rsi
   20712:	e8 d9 f5 ff ff       	callq  1fcf0 <mbedtls_mpi_fill_random>
   20717:	85 c0                	test   %eax,%eax
   20719:	41 89 c5             	mov    %eax,%r13d
   2071c:	74 22                	je     20740 <mbedtls_mpi_gen_prime+0x90>
   2071e:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
   20722:	e8 19 c6 ff ff       	callq  1cd40 <mbedtls_mpi_free>
   20727:	48 83 c4 48          	add    $0x48,%rsp
   2072b:	44 89 e8             	mov    %r13d,%eax
   2072e:	5b                   	pop    %rbx
   2072f:	41 5c                	pop    %r12
   20731:	41 5d                	pop    %r13
   20733:	41 5e                	pop    %r14
   20735:	41 5f                	pop    %r15
   20737:	5d                   	pop    %rbp
   20738:	c3                   	retq   
   20739:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20740:	48 89 df             	mov    %rbx,%rdi
   20743:	e8 a8 cc ff ff       	callq  1d3f0 <mbedtls_mpi_bitlen>
   20748:	49 39 c4             	cmp    %rax,%r12
   2074b:	72 6b                	jb     207b8 <mbedtls_mpi_gen_prime+0x108>
   2074d:	49 8d 74 24 ff       	lea    -0x1(%r12),%rsi
   20752:	ba 01 00 00 00       	mov    $0x1,%edx
   20757:	48 89 df             	mov    %rbx,%rdi
   2075a:	e8 c1 cb ff ff       	callq  1d320 <mbedtls_mpi_set_bit>
   2075f:	8b 4d 94             	mov    -0x6c(%rbp),%ecx
   20762:	48 8b 53 10          	mov    0x10(%rbx),%rdx
   20766:	85 c9                	test   %ecx,%ecx
   20768:	48 8b 02             	mov    (%rdx),%rax
   2076b:	75 73                	jne    207e0 <mbedtls_mpi_gen_prime+0x130>
   2076d:	48 83 c8 01          	or     $0x1,%rax
   20771:	48 89 02             	mov    %rax,(%rdx)
   20774:	eb 1e                	jmp    20794 <mbedtls_mpi_gen_prime+0xe4>
   20776:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2077d:	00 00 00 
   20780:	ba 02 00 00 00       	mov    $0x2,%edx
   20785:	48 89 de             	mov    %rbx,%rsi
   20788:	48 89 df             	mov    %rbx,%rdi
   2078b:	e8 b0 d7 ff ff       	callq  1df40 <mbedtls_mpi_add_int>
   20790:	85 c0                	test   %eax,%eax
   20792:	75 37                	jne    207cb <mbedtls_mpi_gen_prime+0x11b>
   20794:	4c 89 fa             	mov    %r15,%rdx
   20797:	4c 89 f6             	mov    %r14,%rsi
   2079a:	48 89 df             	mov    %rbx,%rdi
   2079d:	e8 5e fe ff ff       	callq  20600 <mbedtls_mpi_is_prime>
   207a2:	85 c0                	test   %eax,%eax
   207a4:	0f 84 74 ff ff ff    	je     2071e <mbedtls_mpi_gen_prime+0x6e>
   207aa:	83 f8 f2             	cmp    $0xfffffff2,%eax
   207ad:	74 d1                	je     20780 <mbedtls_mpi_gen_prime+0xd0>
   207af:	eb 1a                	jmp    207cb <mbedtls_mpi_gen_prime+0x11b>
   207b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   207b8:	4c 29 e0             	sub    %r12,%rax
   207bb:	48 89 df             	mov    %rbx,%rdi
   207be:	48 8d 70 01          	lea    0x1(%rax),%rsi
   207c2:	e8 59 cf ff ff       	callq  1d720 <mbedtls_mpi_shift_r>
   207c7:	85 c0                	test   %eax,%eax
   207c9:	74 82                	je     2074d <mbedtls_mpi_gen_prime+0x9d>
   207cb:	41 89 c5             	mov    %eax,%r13d
   207ce:	e9 4b ff ff ff       	jmpq   2071e <mbedtls_mpi_gen_prime+0x6e>
   207d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   207d8:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   207dd:	c3                   	retq   
   207de:	66 90                	xchg   %ax,%ax
   207e0:	48 83 c8 03          	or     $0x3,%rax
   207e4:	48 8d 7d a8          	lea    -0x58(%rbp),%rdi
   207e8:	48 89 de             	mov    %rbx,%rsi
   207eb:	48 89 02             	mov    %rax,(%rdx)
   207ee:	ba 03 00 00 00       	mov    $0x3,%edx
   207f3:	e8 c8 e3 ff ff       	callq  1ebc0 <mbedtls_mpi_mod_int>
   207f8:	85 c0                	test   %eax,%eax
   207fa:	75 cf                	jne    207cb <mbedtls_mpi_gen_prime+0x11b>
   207fc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   20800:	ba 08 00 00 00       	mov    $0x8,%edx
   20805:	48 85 c0             	test   %rax,%rax
   20808:	0f 84 b7 00 00 00    	je     208c5 <mbedtls_mpi_gen_prime+0x215>
   2080e:	48 83 f8 01          	cmp    $0x1,%rax
   20812:	0f 84 a8 00 00 00    	je     208c0 <mbedtls_mpi_gen_prime+0x210>
   20818:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
   2081c:	48 89 de             	mov    %rbx,%rsi
   2081f:	e8 4c c7 ff ff       	callq  1cf70 <mbedtls_mpi_copy>
   20824:	85 c0                	test   %eax,%eax
   20826:	75 a3                	jne    207cb <mbedtls_mpi_gen_prime+0x11b>
   20828:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
   2082c:	be 01 00 00 00       	mov    $0x1,%esi
   20831:	e8 ea ce ff ff       	callq  1d720 <mbedtls_mpi_shift_r>
   20836:	85 c0                	test   %eax,%eax
   20838:	75 91                	jne    207cb <mbedtls_mpi_gen_prime+0x11b>
   2083a:	eb 3a                	jmp    20876 <mbedtls_mpi_gen_prime+0x1c6>
   2083c:	0f 1f 40 00          	nopl   0x0(%rax)
   20840:	83 f8 f2             	cmp    $0xfffffff2,%eax
   20843:	75 86                	jne    207cb <mbedtls_mpi_gen_prime+0x11b>
   20845:	ba 0c 00 00 00       	mov    $0xc,%edx
   2084a:	48 89 de             	mov    %rbx,%rsi
   2084d:	48 89 df             	mov    %rbx,%rdi
   20850:	e8 eb d6 ff ff       	callq  1df40 <mbedtls_mpi_add_int>
   20855:	85 c0                	test   %eax,%eax
   20857:	0f 85 6e ff ff ff    	jne    207cb <mbedtls_mpi_gen_prime+0x11b>
   2085d:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
   20861:	ba 06 00 00 00       	mov    $0x6,%edx
   20866:	48 89 fe             	mov    %rdi,%rsi
   20869:	e8 d2 d6 ff ff       	callq  1df40 <mbedtls_mpi_add_int>
   2086e:	85 c0                	test   %eax,%eax
   20870:	0f 85 55 ff ff ff    	jne    207cb <mbedtls_mpi_gen_prime+0x11b>
   20876:	48 89 df             	mov    %rbx,%rdi
   20879:	e8 e2 e6 ff ff       	callq  1ef60 <mpi_check_small_factors>
   2087e:	85 c0                	test   %eax,%eax
   20880:	75 be                	jne    20840 <mbedtls_mpi_gen_prime+0x190>
   20882:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
   20886:	e8 d5 e6 ff ff       	callq  1ef60 <mpi_check_small_factors>
   2088b:	85 c0                	test   %eax,%eax
   2088d:	75 b1                	jne    20840 <mbedtls_mpi_gen_prime+0x190>
   2088f:	4c 89 fa             	mov    %r15,%rdx
   20892:	4c 89 f6             	mov    %r14,%rsi
   20895:	48 89 df             	mov    %rbx,%rdi
   20898:	e8 b3 f4 ff ff       	callq  1fd50 <mpi_miller_rabin>
   2089d:	85 c0                	test   %eax,%eax
   2089f:	75 9f                	jne    20840 <mbedtls_mpi_gen_prime+0x190>
   208a1:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
   208a5:	4c 89 fa             	mov    %r15,%rdx
   208a8:	4c 89 f6             	mov    %r14,%rsi
   208ab:	e8 a0 f4 ff ff       	callq  1fd50 <mpi_miller_rabin>
   208b0:	85 c0                	test   %eax,%eax
   208b2:	75 8c                	jne    20840 <mbedtls_mpi_gen_prime+0x190>
   208b4:	e9 65 fe ff ff       	jmpq   2071e <mbedtls_mpi_gen_prime+0x6e>
   208b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   208c0:	ba 04 00 00 00       	mov    $0x4,%edx
   208c5:	48 89 de             	mov    %rbx,%rsi
   208c8:	48 89 df             	mov    %rbx,%rdi
   208cb:	e8 70 d6 ff ff       	callq  1df40 <mbedtls_mpi_add_int>
   208d0:	85 c0                	test   %eax,%eax
   208d2:	0f 85 f3 fe ff ff    	jne    207cb <mbedtls_mpi_gen_prime+0x11b>
   208d8:	e9 3b ff ff ff       	jmpq   20818 <mbedtls_mpi_gen_prime+0x168>
   208dd:	0f 1f 00             	nopl   (%rax)

00000000000208e0 <__udivmodti4>:
   208e0:	55                   	push   %rbp
   208e1:	48 85 f6             	test   %rsi,%rsi
   208e4:	48 89 e5             	mov    %rsp,%rbp
   208e7:	41 57                	push   %r15
   208e9:	41 56                	push   %r14
   208eb:	41 55                	push   %r13
   208ed:	41 54                	push   %r12
   208ef:	49 89 d5             	mov    %rdx,%r13
   208f2:	53                   	push   %rbx
   208f3:	49 89 ce             	mov    %rcx,%r14
   208f6:	75 38                	jne    20930 <__udivmodti4+0x50>
   208f8:	48 85 c9             	test   %rcx,%rcx
   208fb:	0f 85 e7 00 00 00    	jne    209e8 <__udivmodti4+0x108>
   20901:	4d 85 c0             	test   %r8,%r8
   20904:	74 13                	je     20919 <__udivmodti4+0x39>
   20906:	48 89 f8             	mov    %rdi,%rax
   20909:	31 d2                	xor    %edx,%edx
   2090b:	49 c7 40 08 00 00 00 	movq   $0x0,0x8(%r8)
   20912:	00 
   20913:	49 f7 f5             	div    %r13
   20916:	49 89 10             	mov    %rdx,(%r8)
   20919:	48 89 f8             	mov    %rdi,%rax
   2091c:	31 d2                	xor    %edx,%edx
   2091e:	49 f7 f5             	div    %r13
   20921:	5b                   	pop    %rbx
   20922:	31 d2                	xor    %edx,%edx
   20924:	41 5c                	pop    %r12
   20926:	41 5d                	pop    %r13
   20928:	41 5e                	pop    %r14
   2092a:	41 5f                	pop    %r15
   2092c:	5d                   	pop    %rbp
   2092d:	c3                   	retq   
   2092e:	66 90                	xchg   %ax,%ax
   20930:	48 85 d2             	test   %rdx,%rdx
   20933:	49 89 d3             	mov    %rdx,%r11
   20936:	75 40                	jne    20978 <__udivmodti4+0x98>
   20938:	48 85 c9             	test   %rcx,%rcx
   2093b:	0f 84 cf 00 00 00    	je     20a10 <__udivmodti4+0x130>
   20941:	48 85 ff             	test   %rdi,%rdi
   20944:	0f 85 f6 02 00 00    	jne    20c40 <__udivmodti4+0x360>
   2094a:	4d 85 c0             	test   %r8,%r8
   2094d:	74 13                	je     20962 <__udivmodti4+0x82>
   2094f:	48 89 f0             	mov    %rsi,%rax
   20952:	31 d2                	xor    %edx,%edx
   20954:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
   2095b:	48 f7 f1             	div    %rcx
   2095e:	49 89 50 08          	mov    %rdx,0x8(%r8)
   20962:	48 89 f0             	mov    %rsi,%rax
   20965:	31 d2                	xor    %edx,%edx
   20967:	48 f7 f1             	div    %rcx
   2096a:	31 d2                	xor    %edx,%edx
   2096c:	e9 8f 00 00 00       	jmpq   20a00 <__udivmodti4+0x120>
   20971:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20978:	48 85 c9             	test   %rcx,%rcx
   2097b:	0f 85 bf 00 00 00    	jne    20a40 <__udivmodti4+0x160>
   20981:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
   20985:	48 85 c2             	test   %rax,%rdx
   20988:	0f 85 02 02 00 00    	jne    20b90 <__udivmodti4+0x2b0>
   2098e:	4d 85 c0             	test   %r8,%r8
   20991:	74 0e                	je     209a1 <__udivmodti4+0xc1>
   20993:	48 21 f8             	and    %rdi,%rax
   20996:	49 c7 40 08 00 00 00 	movq   $0x0,0x8(%r8)
   2099d:	00 
   2099e:	49 89 00             	mov    %rax,(%r8)
   209a1:	49 83 fb 01          	cmp    $0x1,%r11
   209a5:	0f 84 15 03 00 00    	je     20cc0 <__udivmodti4+0x3e0>
   209ab:	f3 4d 0f bc db       	tzcnt  %r11,%r11
   209b0:	48 89 f0             	mov    %rsi,%rax
   209b3:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
   209ba:	00 
   209bb:	44 89 d9             	mov    %r11d,%ecx
   209be:	48 d3 e8             	shr    %cl,%rax
   209c1:	b9 40 00 00 00       	mov    $0x40,%ecx
   209c6:	44 29 d9             	sub    %r11d,%ecx
   209c9:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   209cd:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   209d1:	48 d3 e6             	shl    %cl,%rsi
   209d4:	44 89 d9             	mov    %r11d,%ecx
   209d7:	48 d3 ef             	shr    %cl,%rdi
   209da:	48 09 f7             	or     %rsi,%rdi
   209dd:	48 89 f8             	mov    %rdi,%rax
   209e0:	eb 1e                	jmp    20a00 <__udivmodti4+0x120>
   209e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   209e8:	4d 85 c0             	test   %r8,%r8
   209eb:	0f 84 7c 01 00 00    	je     20b6d <__udivmodti4+0x28d>
   209f1:	49 89 38             	mov    %rdi,(%r8)
   209f4:	49 c7 40 08 00 00 00 	movq   $0x0,0x8(%r8)
   209fb:	00 
   209fc:	31 c0                	xor    %eax,%eax
   209fe:	31 d2                	xor    %edx,%edx
   20a00:	5b                   	pop    %rbx
   20a01:	41 5c                	pop    %r12
   20a03:	41 5d                	pop    %r13
   20a05:	41 5e                	pop    %r14
   20a07:	41 5f                	pop    %r15
   20a09:	5d                   	pop    %rbp
   20a0a:	c3                   	retq   
   20a0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   20a10:	4d 85 c0             	test   %r8,%r8
   20a13:	74 13                	je     20a28 <__udivmodti4+0x148>
   20a15:	48 89 f0             	mov    %rsi,%rax
   20a18:	31 d2                	xor    %edx,%edx
   20a1a:	49 c7 40 08 00 00 00 	movq   $0x0,0x8(%r8)
   20a21:	00 
   20a22:	48 f7 f1             	div    %rcx
   20a25:	49 89 10             	mov    %rdx,(%r8)
   20a28:	31 c9                	xor    %ecx,%ecx
   20a2a:	48 89 f0             	mov    %rsi,%rax
   20a2d:	31 d2                	xor    %edx,%edx
   20a2f:	48 f7 f1             	div    %rcx
   20a32:	5b                   	pop    %rbx
   20a33:	31 d2                	xor    %edx,%edx
   20a35:	41 5c                	pop    %r12
   20a37:	41 5d                	pop    %r13
   20a39:	41 5e                	pop    %r14
   20a3b:	41 5f                	pop    %r15
   20a3d:	5d                   	pop    %rbp
   20a3e:	c3                   	retq   
   20a3f:	90                   	nop
   20a40:	48 0f bd c9          	bsr    %rcx,%rcx
   20a44:	48 0f bd c6          	bsr    %rsi,%rax
   20a48:	48 83 f1 3f          	xor    $0x3f,%rcx
   20a4c:	48 83 f0 3f          	xor    $0x3f,%rax
   20a50:	89 cb                	mov    %ecx,%ebx
   20a52:	29 c3                	sub    %eax,%ebx
   20a54:	83 fb 3f             	cmp    $0x3f,%ebx
   20a57:	89 d8                	mov    %ebx,%eax
   20a59:	0f 87 09 01 00 00    	ja     20b68 <__udivmodti4+0x288>
   20a5f:	8d 5b 01             	lea    0x1(%rbx),%ebx
   20a62:	41 bf 40 00 00 00    	mov    $0x40,%r15d
   20a68:	44 8d 58 c1          	lea    -0x3f(%rax),%r11d
   20a6c:	49 89 fa             	mov    %rdi,%r10
   20a6f:	49 89 f4             	mov    %rsi,%r12
   20a72:	41 29 df             	sub    %ebx,%r15d
   20a75:	4d 63 db             	movslq %r11d,%r11
   20a78:	44 89 f9             	mov    %r15d,%ecx
   20a7b:	49 c1 fb 3f          	sar    $0x3f,%r11
   20a7f:	49 d3 e2             	shl    %cl,%r10
   20a82:	89 d9                	mov    %ebx,%ecx
   20a84:	49 d3 ec             	shr    %cl,%r12
   20a87:	48 d3 ef             	shr    %cl,%rdi
   20a8a:	44 89 f9             	mov    %r15d,%ecx
   20a8d:	4d 21 dc             	and    %r11,%r12
   20a90:	48 d3 e6             	shl    %cl,%rsi
   20a93:	49 21 fb             	and    %rdi,%r11
   20a96:	4c 09 de             	or     %r11,%rsi
   20a99:	45 31 db             	xor    %r11d,%r11d
   20a9c:	4c 89 e8             	mov    %r13,%rax
   20a9f:	4c 89 f2             	mov    %r14,%rdx
   20aa2:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
   20aa6:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
   20aaa:	41 89 d8             	mov    %ebx,%r8d
   20aad:	48 83 d2 ff          	adc    $0xffffffffffffffff,%rdx
   20ab1:	31 c9                	xor    %ecx,%ecx
   20ab3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   20ab7:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   20abb:	89 ca                	mov    %ecx,%edx
   20abd:	0f 1f 00             	nopl   (%rax)
   20ac0:	48 8d 04 36          	lea    (%rsi,%rsi,1),%rax
   20ac4:	4d 89 d7             	mov    %r10,%r15
   20ac7:	49 89 f1             	mov    %rsi,%r9
   20aca:	49 c1 ef 3f          	shr    $0x3f,%r15
   20ace:	4c 89 de             	mov    %r11,%rsi
   20ad1:	4d 01 d2             	add    %r10,%r10
   20ad4:	4c 09 f8             	or     %r15,%rax
   20ad7:	48 c1 ee 3f          	shr    $0x3f,%rsi
   20adb:	4d 01 db             	add    %r11,%r11
   20ade:	49 09 f2             	or     %rsi,%r10
   20ae1:	48 89 c6             	mov    %rax,%rsi
   20ae4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   20ae8:	49 09 d3             	or     %rdx,%r11
   20aeb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   20aef:	4d 01 e4             	add    %r12,%r12
   20af2:	49 c1 e9 3f          	shr    $0x3f,%r9
   20af6:	4d 09 cc             	or     %r9,%r12
   20af9:	48 29 f0             	sub    %rsi,%rax
   20afc:	4c 19 e2             	sbb    %r12,%rdx
   20aff:	4c 89 e7             	mov    %r12,%rdi
   20b02:	48 89 d0             	mov    %rdx,%rax
   20b05:	48 c1 f8 3f          	sar    $0x3f,%rax
   20b09:	49 89 c7             	mov    %rax,%r15
   20b0c:	89 c2                	mov    %eax,%edx
   20b0e:	4c 21 f0             	and    %r14,%rax
   20b11:	4d 21 ef             	and    %r13,%r15
   20b14:	83 e2 01             	and    $0x1,%edx
   20b17:	4c 29 fe             	sub    %r15,%rsi
   20b1a:	48 19 c7             	sbb    %rax,%rdi
   20b1d:	41 83 e8 01          	sub    $0x1,%r8d
   20b21:	49 89 fc             	mov    %rdi,%r12
   20b24:	75 9a                	jne    20ac0 <__udivmodti4+0x1e0>
   20b26:	4c 89 55 b8          	mov    %r10,-0x48(%rbp)
   20b2a:	4c 89 5d b0          	mov    %r11,-0x50(%rbp)
   20b2e:	89 d0                	mov    %edx,%eax
   20b30:	4c 8b 4d b0          	mov    -0x50(%rbp),%r9
   20b34:	4c 8b 55 b8          	mov    -0x48(%rbp),%r10
   20b38:	4c 8b 45 a8          	mov    -0x58(%rbp),%r8
   20b3c:	4d 0f a4 ca 01       	shld   $0x1,%r9,%r10
   20b41:	4d 01 c9             	add    %r9,%r9
   20b44:	4c 09 c8             	or     %r9,%rax
   20b47:	4d 85 c0             	test   %r8,%r8
   20b4a:	4c 89 d2             	mov    %r10,%rdx
   20b4d:	0f 84 ad fe ff ff    	je     20a00 <__udivmodti4+0x120>
   20b53:	49 89 30             	mov    %rsi,(%r8)
   20b56:	49 89 78 08          	mov    %rdi,0x8(%r8)
   20b5a:	5b                   	pop    %rbx
   20b5b:	41 5c                	pop    %r12
   20b5d:	41 5d                	pop    %r13
   20b5f:	41 5e                	pop    %r14
   20b61:	41 5f                	pop    %r15
   20b63:	5d                   	pop    %rbp
   20b64:	c3                   	retq   
   20b65:	0f 1f 00             	nopl   (%rax)
   20b68:	4d 85 c0             	test   %r8,%r8
   20b6b:	75 0f                	jne    20b7c <__udivmodti4+0x29c>
   20b6d:	31 c0                	xor    %eax,%eax
   20b6f:	31 d2                	xor    %edx,%edx
   20b71:	5b                   	pop    %rbx
   20b72:	41 5c                	pop    %r12
   20b74:	41 5d                	pop    %r13
   20b76:	41 5e                	pop    %r14
   20b78:	41 5f                	pop    %r15
   20b7a:	5d                   	pop    %rbp
   20b7b:	c3                   	retq   
   20b7c:	49 89 38             	mov    %rdi,(%r8)
   20b7f:	49 89 70 08          	mov    %rsi,0x8(%r8)
   20b83:	31 c0                	xor    %eax,%eax
   20b85:	31 d2                	xor    %edx,%edx
   20b87:	e9 74 fe ff ff       	jmpq   20a00 <__udivmodti4+0x120>
   20b8c:	0f 1f 40 00          	nopl   0x0(%rax)
   20b90:	48 0f bd c2          	bsr    %rdx,%rax
   20b94:	48 0f bd d6          	bsr    %rsi,%rdx
   20b98:	b9 80 00 00 00       	mov    $0x80,%ecx
   20b9d:	48 83 f2 3f          	xor    $0x3f,%rdx
   20ba1:	48 83 f0 3f          	xor    $0x3f,%rax
   20ba5:	49 89 fb             	mov    %rdi,%r11
   20ba8:	29 d0                	sub    %edx,%eax
   20baa:	ba 40 00 00 00       	mov    $0x40,%edx
   20baf:	49 89 f2             	mov    %rsi,%r10
   20bb2:	8d 58 41             	lea    0x41(%rax),%ebx
   20bb5:	49 89 fc             	mov    %rdi,%r12
   20bb8:	29 da                	sub    %ebx,%edx
   20bba:	29 d9                	sub    %ebx,%ecx
   20bbc:	41 89 d7             	mov    %edx,%r15d
   20bbf:	4c 63 ca             	movslq %edx,%r9
   20bc2:	8d 50 01             	lea    0x1(%rax),%edx
   20bc5:	49 d3 e3             	shl    %cl,%r11
   20bc8:	49 d3 e2             	shl    %cl,%r10
   20bcb:	49 c1 f9 3f          	sar    $0x3f,%r9
   20bcf:	89 d1                	mov    %edx,%ecx
   20bd1:	4d 21 cb             	and    %r9,%r11
   20bd4:	44 89 7d c0          	mov    %r15d,-0x40(%rbp)
   20bd8:	49 d3 ec             	shr    %cl,%r12
   20bdb:	44 89 f9             	mov    %r15d,%ecx
   20bde:	4c 63 fa             	movslq %edx,%r15
   20be1:	4d 09 e2             	or     %r12,%r10
   20be4:	49 89 f4             	mov    %rsi,%r12
   20be7:	49 c1 ff 3f          	sar    $0x3f,%r15
   20beb:	4d 21 d1             	and    %r10,%r9
   20bee:	49 89 fa             	mov    %rdi,%r10
   20bf1:	49 d3 e2             	shl    %cl,%r10
   20bf4:	4c 89 d1             	mov    %r10,%rcx
   20bf7:	4c 63 d0             	movslq %eax,%r10
   20bfa:	b8 3f 00 00 00       	mov    $0x3f,%eax
   20bff:	49 c1 fa 3f          	sar    $0x3f,%r10
   20c03:	29 d8                	sub    %ebx,%eax
   20c05:	49 21 ca             	and    %rcx,%r10
   20c08:	89 d9                	mov    %ebx,%ecx
   20c0a:	48 98                	cltq   
   20c0c:	49 d3 ec             	shr    %cl,%r12
   20c0f:	4d 09 ca             	or     %r9,%r10
   20c12:	89 d1                	mov    %edx,%ecx
   20c14:	49 89 f1             	mov    %rsi,%r9
   20c17:	48 c1 f8 3f          	sar    $0x3f,%rax
   20c1b:	4d 21 fc             	and    %r15,%r12
   20c1e:	49 d3 e9             	shr    %cl,%r9
   20c21:	0f b6 4d c0          	movzbl -0x40(%rbp),%ecx
   20c25:	4c 21 c8             	and    %r9,%rax
   20c28:	48 d3 e6             	shl    %cl,%rsi
   20c2b:	89 d9                	mov    %ebx,%ecx
   20c2d:	48 d3 ef             	shr    %cl,%rdi
   20c30:	48 09 fe             	or     %rdi,%rsi
   20c33:	4c 21 fe             	and    %r15,%rsi
   20c36:	48 09 c6             	or     %rax,%rsi
   20c39:	e9 5e fe ff ff       	jmpq   20a9c <__udivmodti4+0x1bc>
   20c3e:	66 90                	xchg   %ax,%ax
   20c40:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
   20c44:	48 85 c1             	test   %rax,%rcx
   20c47:	75 27                	jne    20c70 <__udivmodti4+0x390>
   20c49:	4d 85 c0             	test   %r8,%r8
   20c4c:	74 0a                	je     20c58 <__udivmodti4+0x378>
   20c4e:	48 21 f0             	and    %rsi,%rax
   20c51:	49 89 38             	mov    %rdi,(%r8)
   20c54:	49 89 40 08          	mov    %rax,0x8(%r8)
   20c58:	f3 48 0f bc c9       	tzcnt  %rcx,%rcx
   20c5d:	48 89 f0             	mov    %rsi,%rax
   20c60:	31 d2                	xor    %edx,%edx
   20c62:	48 d3 e8             	shr    %cl,%rax
   20c65:	e9 96 fd ff ff       	jmpq   20a00 <__udivmodti4+0x120>
   20c6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   20c70:	48 0f bd d9          	bsr    %rcx,%rbx
   20c74:	48 0f bd c6          	bsr    %rsi,%rax
   20c78:	48 83 f3 3f          	xor    $0x3f,%rbx
   20c7c:	48 83 f0 3f          	xor    $0x3f,%rax
   20c80:	89 d9                	mov    %ebx,%ecx
   20c82:	29 c1                	sub    %eax,%ecx
   20c84:	83 f9 3e             	cmp    $0x3e,%ecx
   20c87:	0f 87 db fe ff ff    	ja     20b68 <__udivmodti4+0x288>
   20c8d:	8d 59 01             	lea    0x1(%rcx),%ebx
   20c90:	b8 40 00 00 00       	mov    $0x40,%eax
   20c95:	49 89 fa             	mov    %rdi,%r10
   20c98:	49 89 f4             	mov    %rsi,%r12
   20c9b:	29 d8                	sub    %ebx,%eax
   20c9d:	89 c1                	mov    %eax,%ecx
   20c9f:	49 d3 e2             	shl    %cl,%r10
   20ca2:	89 d9                	mov    %ebx,%ecx
   20ca4:	49 d3 ec             	shr    %cl,%r12
   20ca7:	89 c1                	mov    %eax,%ecx
   20ca9:	48 d3 e6             	shl    %cl,%rsi
   20cac:	89 d9                	mov    %ebx,%ecx
   20cae:	48 d3 ef             	shr    %cl,%rdi
   20cb1:	48 09 fe             	or     %rdi,%rsi
   20cb4:	e9 e3 fd ff ff       	jmpq   20a9c <__udivmodti4+0x1bc>
   20cb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   20cc0:	48 89 f8             	mov    %rdi,%rax
   20cc3:	48 89 f2             	mov    %rsi,%rdx
   20cc6:	e9 35 fd ff ff       	jmpq   20a00 <__udivmodti4+0x120>
   20ccb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000020cd0 <__udivti3>:
   20cd0:	55                   	push   %rbp
   20cd1:	45 31 c0             	xor    %r8d,%r8d
   20cd4:	48 89 e5             	mov    %rsp,%rbp
   20cd7:	5d                   	pop    %rbp
   20cd8:	e9 03 fc ff ff       	jmpq   208e0 <__udivmodti4>
   20cdd:	0f 1f 00             	nopl   (%rax)

0000000000020ce0 <aes_ctx_free>:
   20ce0:	55                   	push   %rbp
   20ce1:	48 89 e5             	mov    %rsp,%rbp
   20ce4:	53                   	push   %rbx
   20ce5:	48 89 fb             	mov    %rdi,%rbx
   20ce8:	48 83 ec 08          	sub    $0x8,%rsp
   20cec:	e8 2f 04 00 00       	callq  21120 <mbedtls_aes_free>
   20cf1:	48 83 c4 08          	add    $0x8,%rsp
   20cf5:	48 89 df             	mov    %rbx,%rdi
   20cf8:	5b                   	pop    %rbx
   20cf9:	5d                   	pop    %rbp
   20cfa:	e9 61 87 fe ff       	jmpq   9460 <free>
   20cff:	90                   	nop

0000000000020d00 <aes_ctx_alloc>:
   20d00:	55                   	push   %rbp
   20d01:	be 20 01 00 00       	mov    $0x120,%esi
   20d06:	bf 01 00 00 00       	mov    $0x1,%edi
   20d0b:	48 89 e5             	mov    %rsp,%rbp
   20d0e:	53                   	push   %rbx
   20d0f:	48 83 ec 08          	sub    $0x8,%rsp
   20d13:	e8 08 87 fe ff       	callq  9420 <calloc>
   20d18:	48 85 c0             	test   %rax,%rax
   20d1b:	48 89 c3             	mov    %rax,%rbx
   20d1e:	74 08                	je     20d28 <aes_ctx_alloc+0x28>
   20d20:	48 89 c7             	mov    %rax,%rdi
   20d23:	e8 d8 03 00 00       	callq  21100 <mbedtls_aes_init>
   20d28:	48 83 c4 08          	add    $0x8,%rsp
   20d2c:	48 89 d8             	mov    %rbx,%rax
   20d2f:	5b                   	pop    %rbx
   20d30:	5d                   	pop    %rbp
   20d31:	c3                   	retq   
   20d32:	0f 1f 40 00          	nopl   0x0(%rax)
   20d36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   20d3d:	00 00 00 

0000000000020d40 <aes_setkey_dec_wrap>:
   20d40:	55                   	push   %rbp
   20d41:	48 89 e5             	mov    %rsp,%rbp
   20d44:	5d                   	pop    %rbp
   20d45:	e9 36 07 00 00       	jmpq   21480 <mbedtls_aes_setkey_dec>
   20d4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000020d50 <aes_setkey_enc_wrap>:
   20d50:	55                   	push   %rbp
   20d51:	48 89 e5             	mov    %rsp,%rbp
   20d54:	5d                   	pop    %rbp
   20d55:	e9 e6 03 00 00       	jmpq   21140 <mbedtls_aes_setkey_enc>
   20d5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000020d60 <aes_crypt_ecb_wrap>:
   20d60:	55                   	push   %rbp
   20d61:	48 89 e5             	mov    %rsp,%rbp
   20d64:	5d                   	pop    %rbp
   20d65:	e9 06 12 00 00       	jmpq   21f70 <mbedtls_aes_crypt_ecb>
   20d6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000020d70 <aes_gen_tables>:
   20d70:	55                   	push   %rbp
   20d71:	ba 01 00 00 00       	mov    $0x1,%edx
   20d76:	31 c9                	xor    %ecx,%ecx
   20d78:	bf 02 00 00 00       	mov    $0x2,%edi
   20d7d:	31 c0                	xor    %eax,%eax
   20d7f:	41 b8 1b 00 00 00    	mov    $0x1b,%r8d
   20d85:	48 89 e5             	mov    %rsp,%rbp
   20d88:	41 57                	push   %r15
   20d8a:	41 56                	push   %r14
   20d8c:	41 55                	push   %r13
   20d8e:	41 54                	push   %r12
   20d90:	48 8d b5 d4 f7 ff ff 	lea    -0x82c(%rbp),%rsi
   20d97:	53                   	push   %rbx
   20d98:	48 81 ec a0 07 00 00 	sub    $0x7a0,%rsp
   20d9f:	c7 85 d0 f7 ff ff 01 	movl   $0x1,-0x830(%rbp)
   20da6:	00 00 00 
   20da9:	c7 85 d4 fb ff ff 00 	movl   $0x0,-0x42c(%rbp)
   20db0:	00 00 00 
   20db3:	eb 1f                	jmp    20dd4 <aes_gen_tables+0x64>
   20db5:	0f 1f 00             	nopl   (%rax)
   20db8:	48 63 fa             	movslq %edx,%rdi
   20dbb:	25 80 00 00 00       	and    $0x80,%eax
   20dc0:	89 16                	mov    %edx,(%rsi)
   20dc2:	89 8c bd d0 fb ff ff 	mov    %ecx,-0x430(%rbp,%rdi,4)
   20dc9:	8d 3c 12             	lea    (%rdx,%rdx,1),%edi
   20dcc:	41 0f 45 c0          	cmovne %r8d,%eax
   20dd0:	48 83 c6 04          	add    $0x4,%rsi
   20dd4:	31 d0                	xor    %edx,%eax
   20dd6:	83 c1 01             	add    $0x1,%ecx
   20dd9:	31 f8                	xor    %edi,%eax
   20ddb:	81 f9 00 01 00 00    	cmp    $0x100,%ecx
   20de1:	0f b6 d0             	movzbl %al,%edx
   20de4:	75 d2                	jne    20db8 <aes_gen_tables+0x48>
   20de6:	48 8d 0d b3 b6 20 04 	lea    0x420b6b3(%rip),%rcx        # 422c4a0 <RCON>
   20ded:	48 8d 3d d4 b6 20 04 	lea    0x420b6d4(%rip),%rdi        # 422c4c8 <RCON+0x28>
   20df4:	b8 01 00 00 00       	mov    $0x1,%eax
   20df9:	be 1b 00 00 00       	mov    $0x1b,%esi
   20dfe:	66 90                	xchg   %ax,%ax
   20e00:	89 01                	mov    %eax,(%rcx)
   20e02:	8d 14 00             	lea    (%rax,%rax,1),%edx
   20e05:	25 80 00 00 00       	and    $0x80,%eax
   20e0a:	0f 45 c6             	cmovne %esi,%eax
   20e0d:	48 83 c1 04          	add    $0x4,%rcx
   20e11:	31 d0                	xor    %edx,%eax
   20e13:	48 39 cf             	cmp    %rcx,%rdi
   20e16:	0f b6 c0             	movzbl %al,%eax
   20e19:	75 e5                	jne    20e00 <aes_gen_tables+0x90>
   20e1b:	4c 8d a5 d0 fb ff ff 	lea    -0x430(%rbp),%r12
   20e22:	48 8d 1d b8 d7 20 04 	lea    0x420d7b8(%rip),%rbx        # 422e5e1 <FSb+0x1>
   20e29:	4c 8d 05 b0 c6 20 04 	lea    0x420c6b0(%rip),%r8        # 422d4e0 <RSb>
   20e30:	c6 05 a9 d7 20 04 63 	movb   $0x63,0x420d7a9(%rip)        # 422e5e0 <FSb>
   20e37:	c6 05 05 c7 20 04 00 	movb   $0x0,0x420c705(%rip)        # 422d543 <RSb+0x63>
   20e3e:	45 31 d2             	xor    %r10d,%r10d
   20e41:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   20e47:	41 bb ff 00 00 00    	mov    $0xff,%r11d
   20e4d:	0f 1f 00             	nopl   (%rax)
   20e50:	44 89 d8             	mov    %r11d,%eax
   20e53:	43 2b 44 94 04       	sub    0x4(%r12,%r10,4),%eax
   20e58:	48 98                	cltq   
   20e5a:	8b b4 85 d0 f7 ff ff 	mov    -0x830(%rbp,%rax,4),%esi
   20e61:	8d 0c 36             	lea    (%rsi,%rsi,1),%ecx
   20e64:	89 f0                	mov    %esi,%eax
   20e66:	83 f6 63             	xor    $0x63,%esi
   20e69:	c1 f8 07             	sar    $0x7,%eax
   20e6c:	09 c1                	or     %eax,%ecx
   20e6e:	44 0f b6 e9          	movzbl %cl,%r13d
   20e72:	43 8d 4c 2d 00       	lea    0x0(%r13,%r13,1),%ecx
   20e77:	44 89 e8             	mov    %r13d,%eax
   20e7a:	44 31 ee             	xor    %r13d,%esi
   20e7d:	c1 f8 07             	sar    $0x7,%eax
   20e80:	09 c1                	or     %eax,%ecx
   20e82:	0f b6 f9             	movzbl %cl,%edi
   20e85:	8d 04 3f             	lea    (%rdi,%rdi,1),%eax
   20e88:	89 fa                	mov    %edi,%edx
   20e8a:	c1 fa 07             	sar    $0x7,%edx
   20e8d:	09 c2                	or     %eax,%edx
   20e8f:	0f b6 c2             	movzbl %dl,%eax
   20e92:	8d 0c 00             	lea    (%rax,%rax,1),%ecx
   20e95:	89 c2                	mov    %eax,%edx
   20e97:	c1 fa 07             	sar    $0x7,%edx
   20e9a:	09 ca                	or     %ecx,%edx
   20e9c:	89 f1                	mov    %esi,%ecx
   20e9e:	31 f9                	xor    %edi,%ecx
   20ea0:	0f b6 d2             	movzbl %dl,%edx
   20ea3:	31 c8                	xor    %ecx,%eax
   20ea5:	31 d0                	xor    %edx,%eax
   20ea7:	42 88 04 13          	mov    %al,(%rbx,%r10,1)
   20eab:	48 98                	cltq   
   20ead:	49 83 c2 01          	add    $0x1,%r10
   20eb1:	45 88 0c 00          	mov    %r9b,(%r8,%rax,1)
   20eb5:	41 83 c1 01          	add    $0x1,%r9d
   20eb9:	41 81 f9 00 01 00 00 	cmp    $0x100,%r9d
   20ec0:	75 8e                	jne    20e50 <aes_gen_tables+0xe0>
   20ec2:	8b 85 08 fc ff ff    	mov    -0x3f8(%rbp),%eax
   20ec8:	31 d2                	xor    %edx,%edx
   20eca:	4c 8d 2d 0f d7 20 04 	lea    0x420d70f(%rip),%r13        # 422e5e0 <FSb>
   20ed1:	4c 8d 25 08 d3 20 04 	lea    0x420d308(%rip),%r12        # 422e1e0 <FT0>
   20ed8:	48 8d 1d 01 cf 20 04 	lea    0x420cf01(%rip),%rbx        # 422dde0 <FT1>
   20edf:	4c 8d 1d fa ca 20 04 	lea    0x420cafa(%rip),%r11        # 422d9e0 <FT2>
   20ee6:	4c 8d 15 f3 c6 20 04 	lea    0x420c6f3(%rip),%r10        # 422d5e0 <FT3>
   20eed:	4c 8d 0d ec c1 20 04 	lea    0x420c1ec(%rip),%r9        # 422d0e0 <RT0>
   20ef4:	89 85 cc f7 ff ff    	mov    %eax,-0x834(%rbp)
   20efa:	8b 85 f4 fb ff ff    	mov    -0x40c(%rbp),%eax
   20f00:	89 85 c8 f7 ff ff    	mov    %eax,-0x838(%rbp)
   20f06:	8b 85 04 fc ff ff    	mov    -0x3fc(%rbp),%eax
   20f0c:	89 85 c4 f7 ff ff    	mov    %eax,-0x83c(%rbp)
   20f12:	8b 85 fc fb ff ff    	mov    -0x404(%rbp),%eax
   20f18:	89 85 c0 f7 ff ff    	mov    %eax,-0x840(%rbp)
   20f1e:	e9 49 01 00 00       	jmpq   2106c <aes_gen_tables+0x2fc>
   20f23:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   20f28:	8b 84 85 d0 fb ff ff 	mov    -0x430(%rbp,%rax,4),%eax
   20f2f:	8b bd c8 f7 ff ff    	mov    -0x838(%rbp),%edi
   20f35:	01 c7                	add    %eax,%edi
   20f37:	48 63 cf             	movslq %edi,%rcx
   20f3a:	41 89 fe             	mov    %edi,%r14d
   20f3d:	48 69 c9 81 80 80 80 	imul   $0xffffffff80808081,%rcx,%rcx
   20f44:	41 c1 fe 1f          	sar    $0x1f,%r14d
   20f48:	48 c1 e9 20          	shr    $0x20,%rcx
   20f4c:	01 f9                	add    %edi,%ecx
   20f4e:	c1 f9 07             	sar    $0x7,%ecx
   20f51:	44 29 f1             	sub    %r14d,%ecx
   20f54:	41 89 ce             	mov    %ecx,%r14d
   20f57:	41 c1 e6 08          	shl    $0x8,%r14d
   20f5b:	41 29 ce             	sub    %ecx,%r14d
   20f5e:	44 29 f7             	sub    %r14d,%edi
   20f61:	48 63 ff             	movslq %edi,%rdi
   20f64:	44 8b b4 bd d0 f7 ff 	mov    -0x830(%rbp,%rdi,4),%r14d
   20f6b:	ff 
   20f6c:	8b bd c4 f7 ff ff    	mov    -0x83c(%rbp),%edi
   20f72:	01 c7                	add    %eax,%edi
   20f74:	45 89 f7             	mov    %r14d,%r15d
   20f77:	48 63 cf             	movslq %edi,%rcx
   20f7a:	41 89 fe             	mov    %edi,%r14d
   20f7d:	41 c1 e7 08          	shl    $0x8,%r15d
   20f81:	48 69 c9 81 80 80 80 	imul   $0xffffffff80808081,%rcx,%rcx
   20f88:	41 c1 fe 1f          	sar    $0x1f,%r14d
   20f8c:	48 c1 e9 20          	shr    $0x20,%rcx
   20f90:	01 f9                	add    %edi,%ecx
   20f92:	c1 f9 07             	sar    $0x7,%ecx
   20f95:	44 29 f1             	sub    %r14d,%ecx
   20f98:	41 89 ce             	mov    %ecx,%r14d
   20f9b:	41 c1 e6 08          	shl    $0x8,%r14d
   20f9f:	41 29 ce             	sub    %ecx,%r14d
   20fa2:	44 29 f7             	sub    %r14d,%edi
   20fa5:	48 63 ff             	movslq %edi,%rdi
   20fa8:	44 8b b4 bd d0 f7 ff 	mov    -0x830(%rbp,%rdi,4),%r14d
   20faf:	ff 
   20fb0:	8b bd cc f7 ff ff    	mov    -0x834(%rbp),%edi
   20fb6:	01 c7                	add    %eax,%edi
   20fb8:	41 c1 e6 10          	shl    $0x10,%r14d
   20fbc:	48 63 cf             	movslq %edi,%rcx
   20fbf:	45 31 fe             	xor    %r15d,%r14d
   20fc2:	41 89 ff             	mov    %edi,%r15d
   20fc5:	48 69 c9 81 80 80 80 	imul   $0xffffffff80808081,%rcx,%rcx
   20fcc:	41 c1 ff 1f          	sar    $0x1f,%r15d
   20fd0:	48 c1 e9 20          	shr    $0x20,%rcx
   20fd4:	01 f9                	add    %edi,%ecx
   20fd6:	c1 f9 07             	sar    $0x7,%ecx
   20fd9:	44 29 f9             	sub    %r15d,%ecx
   20fdc:	41 89 cf             	mov    %ecx,%r15d
   20fdf:	41 c1 e7 08          	shl    $0x8,%r15d
   20fe3:	41 29 cf             	sub    %ecx,%r15d
   20fe6:	44 29 ff             	sub    %r15d,%edi
   20fe9:	03 85 c0 f7 ff ff    	add    -0x840(%rbp),%eax
   20fef:	48 63 ff             	movslq %edi,%rdi
   20ff2:	44 33 b4 bd d0 f7 ff 	xor    -0x830(%rbp,%rdi,4),%r14d
   20ff9:	ff 
   20ffa:	48 63 c8             	movslq %eax,%rcx
   20ffd:	89 c7                	mov    %eax,%edi
   20fff:	48 69 c9 81 80 80 80 	imul   $0xffffffff80808081,%rcx,%rcx
   21006:	c1 ff 1f             	sar    $0x1f,%edi
   21009:	48 c1 e9 20          	shr    $0x20,%rcx
   2100d:	01 c1                	add    %eax,%ecx
   2100f:	c1 f9 07             	sar    $0x7,%ecx
   21012:	29 f9                	sub    %edi,%ecx
   21014:	89 cf                	mov    %ecx,%edi
   21016:	c1 e7 08             	shl    $0x8,%edi
   21019:	29 cf                	sub    %ecx,%edi
   2101b:	29 f8                	sub    %edi,%eax
   2101d:	48 98                	cltq   
   2101f:	8b 84 85 d0 f7 ff ff 	mov    -0x830(%rbp,%rax,4),%eax
   21026:	c1 e0 18             	shl    $0x18,%eax
   21029:	41 31 c6             	xor    %eax,%r14d
   2102c:	44 89 f1             	mov    %r14d,%ecx
   2102f:	c1 c1 08             	rol    $0x8,%ecx
   21032:	89 c8                	mov    %ecx,%eax
   21034:	c1 c0 08             	rol    $0x8,%eax
   21037:	89 c7                	mov    %eax,%edi
   21039:	c1 c7 08             	rol    $0x8,%edi
   2103c:	4c 8d 3d 9d bc 20 04 	lea    0x420bc9d(%rip),%r15        # 422cce0 <RT1>
   21043:	48 83 c2 01          	add    $0x1,%rdx
   21047:	45 89 34 31          	mov    %r14d,(%r9,%rsi,1)
   2104b:	48 81 fa 00 01 00 00 	cmp    $0x100,%rdx
   21052:	41 89 0c 37          	mov    %ecx,(%r15,%rsi,1)
   21056:	48 8d 0d 83 b8 20 04 	lea    0x420b883(%rip),%rcx        # 422c8e0 <RT2>
   2105d:	89 04 31             	mov    %eax,(%rcx,%rsi,1)
   21060:	48 8d 05 79 b4 20 04 	lea    0x420b479(%rip),%rax        # 422c4e0 <RT3>
   21067:	89 3c 30             	mov    %edi,(%rax,%rsi,1)
   2106a:	74 74                	je     210e0 <aes_gen_tables+0x370>
   2106c:	41 0f b6 74 15 00    	movzbl 0x0(%r13,%rdx,1),%esi
   21072:	89 f0                	mov    %esi,%eax
   21074:	8d 0c 36             	lea    (%rsi,%rsi,1),%ecx
   21077:	89 f7                	mov    %esi,%edi
   21079:	83 e0 80             	and    $0xffffff80,%eax
   2107c:	3c 01                	cmp    $0x1,%al
   2107e:	19 c0                	sbb    %eax,%eax
   21080:	c1 e7 08             	shl    $0x8,%edi
   21083:	f7 d0                	not    %eax
   21085:	83 e0 1b             	and    $0x1b,%eax
   21088:	31 c8                	xor    %ecx,%eax
   2108a:	89 f1                	mov    %esi,%ecx
   2108c:	c1 e1 10             	shl    $0x10,%ecx
   2108f:	0f b6 c0             	movzbl %al,%eax
   21092:	31 f9                	xor    %edi,%ecx
   21094:	31 c1                	xor    %eax,%ecx
   21096:	31 f0                	xor    %esi,%eax
   21098:	48 8d 34 95 00 00 00 	lea    0x0(,%rdx,4),%rsi
   2109f:	00 
   210a0:	c1 e0 18             	shl    $0x18,%eax
   210a3:	31 c1                	xor    %eax,%ecx
   210a5:	41 0f b6 04 10       	movzbl (%r8,%rdx,1),%eax
   210aa:	41 89 0c 94          	mov    %ecx,(%r12,%rdx,4)
   210ae:	c1 c1 08             	rol    $0x8,%ecx
   210b1:	89 0c 93             	mov    %ecx,(%rbx,%rdx,4)
   210b4:	c1 c1 08             	rol    $0x8,%ecx
   210b7:	41 89 0c 93          	mov    %ecx,(%r11,%rdx,4)
   210bb:	c1 c1 08             	rol    $0x8,%ecx
   210be:	85 c0                	test   %eax,%eax
   210c0:	41 89 0c 92          	mov    %ecx,(%r10,%rdx,4)
   210c4:	0f 85 5e fe ff ff    	jne    20f28 <aes_gen_tables+0x1b8>
   210ca:	31 ff                	xor    %edi,%edi
   210cc:	31 c0                	xor    %eax,%eax
   210ce:	31 c9                	xor    %ecx,%ecx
   210d0:	45 31 f6             	xor    %r14d,%r14d
   210d3:	e9 64 ff ff ff       	jmpq   2103c <aes_gen_tables+0x2cc>
   210d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   210df:	00 
   210e0:	48 81 c4 a0 07 00 00 	add    $0x7a0,%rsp
   210e7:	5b                   	pop    %rbx
   210e8:	41 5c                	pop    %r12
   210ea:	41 5d                	pop    %r13
   210ec:	41 5e                	pop    %r14
   210ee:	41 5f                	pop    %r15
   210f0:	5d                   	pop    %rbp
   210f1:	c3                   	retq   
   210f2:	0f 1f 40 00          	nopl   0x0(%rax)
   210f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   210fd:	00 00 00 

0000000000021100 <mbedtls_aes_init>:
   21100:	55                   	push   %rbp
   21101:	ba 20 01 00 00       	mov    $0x120,%edx
   21106:	31 f6                	xor    %esi,%esi
   21108:	48 89 e5             	mov    %rsp,%rbp
   2110b:	5d                   	pop    %rbp
   2110c:	e9 4f 53 ff ff       	jmpq   16460 <memset>
   21111:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   21116:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2111d:	00 00 00 

0000000000021120 <mbedtls_aes_free>:
   21120:	55                   	push   %rbp
   21121:	48 85 ff             	test   %rdi,%rdi
   21124:	48 89 e5             	mov    %rsp,%rbp
   21127:	74 13                	je     2113c <mbedtls_aes_free+0x1c>
   21129:	48 8d 87 20 01 00 00 	lea    0x120(%rdi),%rax
   21130:	c6 07 00             	movb   $0x0,(%rdi)
   21133:	48 83 c7 01          	add    $0x1,%rdi
   21137:	48 39 c7             	cmp    %rax,%rdi
   2113a:	75 f4                	jne    21130 <mbedtls_aes_free+0x10>
   2113c:	5d                   	pop    %rbp
   2113d:	c3                   	retq   
   2113e:	66 90                	xchg   %ax,%ax

0000000000021140 <mbedtls_aes_setkey_enc>:
   21140:	8b 05 3a b3 20 04    	mov    0x420b33a(%rip),%eax        # 422c480 <aes_init_done>
   21146:	55                   	push   %rbp
   21147:	48 89 e5             	mov    %rsp,%rbp
   2114a:	41 56                	push   %r14
   2114c:	41 89 d6             	mov    %edx,%r14d
   2114f:	85 c0                	test   %eax,%eax
   21151:	41 55                	push   %r13
   21153:	49 89 f5             	mov    %rsi,%r13
   21156:	41 54                	push   %r12
   21158:	49 89 fc             	mov    %rdi,%r12
   2115b:	53                   	push   %rbx
   2115c:	0f 84 56 01 00 00    	je     212b8 <mbedtls_aes_setkey_enc+0x178>
   21162:	41 81 fe c0 00 00 00 	cmp    $0xc0,%r14d
   21169:	0f 84 65 01 00 00    	je     212d4 <mbedtls_aes_setkey_enc+0x194>
   2116f:	41 81 fe 00 01 00 00 	cmp    $0x100,%r14d
   21176:	0f 84 6c 01 00 00    	je     212e8 <mbedtls_aes_setkey_enc+0x1a8>
   2117c:	41 81 fe 80 00 00 00 	cmp    $0x80,%r14d
   21183:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax
   21188:	74 0e                	je     21198 <mbedtls_aes_setkey_enc+0x58>
   2118a:	5b                   	pop    %rbx
   2118b:	41 5c                	pop    %r12
   2118d:	41 5d                	pop    %r13
   2118f:	41 5e                	pop    %r14
   21191:	5d                   	pop    %rbp
   21192:	c3                   	retq   
   21193:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   21198:	41 c7 04 24 0a 00 00 	movl   $0xa,(%r12)
   2119f:	00 
   211a0:	49 8d 5c 24 10       	lea    0x10(%r12),%rbx
   211a5:	bf 00 00 00 02       	mov    $0x2000000,%edi
   211aa:	49 89 5c 24 08       	mov    %rbx,0x8(%r12)
   211af:	e8 3c 0e 00 00       	callq  21ff0 <mbedtls_aesni_has_support>
   211b4:	85 c0                	test   %eax,%eax
   211b6:	0f 85 3c 01 00 00    	jne    212f8 <mbedtls_aes_setkey_enc+0x1b8>
   211bc:	44 89 f2             	mov    %r14d,%edx
   211bf:	45 31 c0             	xor    %r8d,%r8d
   211c2:	c1 ea 05             	shr    $0x5,%edx
   211c5:	0f 1f 00             	nopl   (%rax)
   211c8:	42 8d 3c 85 00 00 00 	lea    0x0(,%r8,4),%edi
   211cf:	00 
   211d0:	8d 4f 01             	lea    0x1(%rdi),%ecx
   211d3:	41 0f b6 4c 0d 00    	movzbl 0x0(%r13,%rcx,1),%ecx
   211d9:	89 ce                	mov    %ecx,%esi
   211db:	8d 4f 02             	lea    0x2(%rdi),%ecx
   211de:	c1 e6 08             	shl    $0x8,%esi
   211e1:	41 0f b6 4c 0d 00    	movzbl 0x0(%r13,%rcx,1),%ecx
   211e7:	c1 e1 10             	shl    $0x10,%ecx
   211ea:	09 f1                	or     %esi,%ecx
   211ec:	89 fe                	mov    %edi,%esi
   211ee:	41 0f b6 74 35 00    	movzbl 0x0(%r13,%rsi,1),%esi
   211f4:	09 f1                	or     %esi,%ecx
   211f6:	8d 77 03             	lea    0x3(%rdi),%esi
   211f9:	41 0f b6 7c 35 00    	movzbl 0x0(%r13,%rsi,1),%edi
   211ff:	c1 e7 18             	shl    $0x18,%edi
   21202:	09 f9                	or     %edi,%ecx
   21204:	42 89 0c 83          	mov    %ecx,(%rbx,%r8,4)
   21208:	49 83 c0 01          	add    $0x1,%r8
   2120c:	44 39 c2             	cmp    %r8d,%edx
   2120f:	77 b7                	ja     211c8 <mbedtls_aes_setkey_enc+0x88>
   21211:	41 8b 14 24          	mov    (%r12),%edx
   21215:	83 fa 0c             	cmp    $0xc,%edx
   21218:	0f 84 d2 01 00 00    	je     213f0 <mbedtls_aes_setkey_enc+0x2b0>
   2121e:	83 fa 0e             	cmp    $0xe,%edx
   21221:	0f 84 e9 00 00 00    	je     21310 <mbedtls_aes_setkey_enc+0x1d0>
   21227:	83 fa 0a             	cmp    $0xa,%edx
   2122a:	0f 85 5a ff ff ff    	jne    2118a <mbedtls_aes_setkey_enc+0x4a>
   21230:	4c 8d 05 69 b2 20 04 	lea    0x420b269(%rip),%r8        # 422c4a0 <RCON>
   21237:	4c 8d 0d 8a b2 20 04 	lea    0x420b28a(%rip),%r9        # 422c4c8 <RCON+0x28>
   2123e:	48 8d 35 9b d3 20 04 	lea    0x420d39b(%rip),%rsi        # 422e5e0 <FSb>
   21245:	0f 1f 00             	nopl   (%rax)
   21248:	8b 7b 0c             	mov    0xc(%rbx),%edi
   2124b:	49 83 c0 04          	add    $0x4,%r8
   2124f:	48 83 c3 10          	add    $0x10,%rbx
   21253:	48 89 fa             	mov    %rdi,%rdx
   21256:	0f b6 d6             	movzbl %dh,%edx
   21259:	0f b6 0c 16          	movzbl (%rsi,%rdx,1),%ecx
   2125d:	8b 53 f0             	mov    -0x10(%rbx),%edx
   21260:	41 33 50 fc          	xor    -0x4(%r8),%edx
   21264:	31 ca                	xor    %ecx,%edx
   21266:	89 f9                	mov    %edi,%ecx
   21268:	c1 e9 18             	shr    $0x18,%ecx
   2126b:	0f b6 0c 0e          	movzbl (%rsi,%rcx,1),%ecx
   2126f:	c1 e1 10             	shl    $0x10,%ecx
   21272:	31 ca                	xor    %ecx,%edx
   21274:	40 0f b6 cf          	movzbl %dil,%ecx
   21278:	0f b6 0c 0e          	movzbl (%rsi,%rcx,1),%ecx
   2127c:	c1 e1 18             	shl    $0x18,%ecx
   2127f:	31 ca                	xor    %ecx,%edx
   21281:	89 f9                	mov    %edi,%ecx
   21283:	c1 e9 10             	shr    $0x10,%ecx
   21286:	0f b6 c9             	movzbl %cl,%ecx
   21289:	0f b6 0c 0e          	movzbl (%rsi,%rcx,1),%ecx
   2128d:	c1 e1 08             	shl    $0x8,%ecx
   21290:	31 ca                	xor    %ecx,%edx
   21292:	89 13                	mov    %edx,(%rbx)
   21294:	33 53 f4             	xor    -0xc(%rbx),%edx
   21297:	89 53 04             	mov    %edx,0x4(%rbx)
   2129a:	33 53 f8             	xor    -0x8(%rbx),%edx
   2129d:	89 53 08             	mov    %edx,0x8(%rbx)
   212a0:	31 fa                	xor    %edi,%edx
   212a2:	89 53 0c             	mov    %edx,0xc(%rbx)
   212a5:	4d 39 c1             	cmp    %r8,%r9
   212a8:	75 9e                	jne    21248 <mbedtls_aes_setkey_enc+0x108>
   212aa:	5b                   	pop    %rbx
   212ab:	41 5c                	pop    %r12
   212ad:	41 5d                	pop    %r13
   212af:	41 5e                	pop    %r14
   212b1:	5d                   	pop    %rbp
   212b2:	c3                   	retq   
   212b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   212b8:	e8 b3 fa ff ff       	callq  20d70 <aes_gen_tables>
   212bd:	41 81 fe c0 00 00 00 	cmp    $0xc0,%r14d
   212c4:	c7 05 b2 b1 20 04 01 	movl   $0x1,0x420b1b2(%rip)        # 422c480 <aes_init_done>
   212cb:	00 00 00 
   212ce:	0f 85 9b fe ff ff    	jne    2116f <mbedtls_aes_setkey_enc+0x2f>
   212d4:	41 c7 04 24 0c 00 00 	movl   $0xc,(%r12)
   212db:	00 
   212dc:	e9 bf fe ff ff       	jmpq   211a0 <mbedtls_aes_setkey_enc+0x60>
   212e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   212e8:	41 c7 04 24 0e 00 00 	movl   $0xe,(%r12)
   212ef:	00 
   212f0:	e9 ab fe ff ff       	jmpq   211a0 <mbedtls_aes_setkey_enc+0x60>
   212f5:	0f 1f 00             	nopl   (%rax)
   212f8:	5b                   	pop    %rbx
   212f9:	44 89 f2             	mov    %r14d,%edx
   212fc:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
   21301:	4c 89 ee             	mov    %r13,%rsi
   21304:	41 5c                	pop    %r12
   21306:	41 5d                	pop    %r13
   21308:	41 5e                	pop    %r14
   2130a:	5d                   	pop    %rbp
   2130b:	e9 60 0f 00 00       	jmpq   22270 <mbedtls_aesni_setkey_enc>
   21310:	48 8d 3d 89 b1 20 04 	lea    0x420b189(%rip),%rdi        # 422c4a0 <RCON>
   21317:	48 8d 35 c2 d2 20 04 	lea    0x420d2c2(%rip),%rsi        # 422e5e0 <FSb>
   2131e:	49 81 c4 f0 00 00 00 	add    $0xf0,%r12
   21325:	0f 1f 00             	nopl   (%rax)
   21328:	44 8b 43 1c          	mov    0x1c(%rbx),%r8d
   2132c:	48 83 c3 20          	add    $0x20,%rbx
   21330:	48 83 c7 04          	add    $0x4,%rdi
   21334:	4c 89 c2             	mov    %r8,%rdx
   21337:	0f b6 d6             	movzbl %dh,%edx
   2133a:	44 0f b6 0c 16       	movzbl (%rsi,%rdx,1),%r9d
   2133f:	8b 53 e0             	mov    -0x20(%rbx),%edx
   21342:	33 57 fc             	xor    -0x4(%rdi),%edx
   21345:	89 d1                	mov    %edx,%ecx
   21347:	44 89 c2             	mov    %r8d,%edx
   2134a:	c1 ea 18             	shr    $0x18,%edx
   2134d:	44 31 c9             	xor    %r9d,%ecx
   21350:	0f b6 14 16          	movzbl (%rsi,%rdx,1),%edx
   21354:	c1 e2 10             	shl    $0x10,%edx
   21357:	31 d1                	xor    %edx,%ecx
   21359:	41 0f b6 d0          	movzbl %r8b,%edx
   2135d:	0f b6 14 16          	movzbl (%rsi,%rdx,1),%edx
   21361:	c1 e2 18             	shl    $0x18,%edx
   21364:	31 d1                	xor    %edx,%ecx
   21366:	44 89 c2             	mov    %r8d,%edx
   21369:	c1 ea 10             	shr    $0x10,%edx
   2136c:	0f b6 d2             	movzbl %dl,%edx
   2136f:	0f b6 14 16          	movzbl (%rsi,%rdx,1),%edx
   21373:	c1 e2 08             	shl    $0x8,%edx
   21376:	31 d1                	xor    %edx,%ecx
   21378:	8b 53 ec             	mov    -0x14(%rbx),%edx
   2137b:	89 0b                	mov    %ecx,(%rbx)
   2137d:	33 4b e4             	xor    -0x1c(%rbx),%ecx
   21380:	89 4b 04             	mov    %ecx,0x4(%rbx)
   21383:	33 4b e8             	xor    -0x18(%rbx),%ecx
   21386:	31 ca                	xor    %ecx,%edx
   21388:	89 4b 08             	mov    %ecx,0x8(%rbx)
   2138b:	0f b6 ca             	movzbl %dl,%ecx
   2138e:	89 53 0c             	mov    %edx,0xc(%rbx)
   21391:	44 0f b6 0c 0e       	movzbl (%rsi,%rcx,1),%r9d
   21396:	89 d1                	mov    %edx,%ecx
   21398:	c1 e9 18             	shr    $0x18,%ecx
   2139b:	44 33 4b f0          	xor    -0x10(%rbx),%r9d
   2139f:	0f b6 0c 0e          	movzbl (%rsi,%rcx,1),%ecx
   213a3:	c1 e1 18             	shl    $0x18,%ecx
   213a6:	41 31 c9             	xor    %ecx,%r9d
   213a9:	0f b6 ce             	movzbl %dh,%ecx
   213ac:	c1 ea 10             	shr    $0x10,%edx
   213af:	0f b6 0c 0e          	movzbl (%rsi,%rcx,1),%ecx
   213b3:	c1 e1 08             	shl    $0x8,%ecx
   213b6:	41 31 c9             	xor    %ecx,%r9d
   213b9:	0f b6 ca             	movzbl %dl,%ecx
   213bc:	0f b6 0c 0e          	movzbl (%rsi,%rcx,1),%ecx
   213c0:	44 89 ca             	mov    %r9d,%edx
   213c3:	c1 e1 10             	shl    $0x10,%ecx
   213c6:	31 ca                	xor    %ecx,%edx
   213c8:	89 53 10             	mov    %edx,0x10(%rbx)
   213cb:	33 53 f4             	xor    -0xc(%rbx),%edx
   213ce:	89 53 14             	mov    %edx,0x14(%rbx)
   213d1:	33 53 f8             	xor    -0x8(%rbx),%edx
   213d4:	89 53 18             	mov    %edx,0x18(%rbx)
   213d7:	44 31 c2             	xor    %r8d,%edx
   213da:	89 53 1c             	mov    %edx,0x1c(%rbx)
   213dd:	4c 39 e3             	cmp    %r12,%rbx
   213e0:	0f 85 42 ff ff ff    	jne    21328 <mbedtls_aes_setkey_enc+0x1e8>
   213e6:	5b                   	pop    %rbx
   213e7:	41 5c                	pop    %r12
   213e9:	41 5d                	pop    %r13
   213eb:	41 5e                	pop    %r14
   213ed:	5d                   	pop    %rbp
   213ee:	c3                   	retq   
   213ef:	90                   	nop
   213f0:	4c 8d 05 a9 b0 20 04 	lea    0x420b0a9(%rip),%r8        # 422c4a0 <RCON>
   213f7:	48 8d 35 e2 d1 20 04 	lea    0x420d1e2(%rip),%rsi        # 422e5e0 <FSb>
   213fe:	49 81 c4 d0 00 00 00 	add    $0xd0,%r12
   21405:	0f 1f 00             	nopl   (%rax)
   21408:	8b 7b 14             	mov    0x14(%rbx),%edi
   2140b:	48 83 c3 18          	add    $0x18,%rbx
   2140f:	49 83 c0 04          	add    $0x4,%r8
   21413:	48 89 fa             	mov    %rdi,%rdx
   21416:	0f b6 d6             	movzbl %dh,%edx
   21419:	0f b6 0c 16          	movzbl (%rsi,%rdx,1),%ecx
   2141d:	8b 53 e8             	mov    -0x18(%rbx),%edx
   21420:	41 33 50 fc          	xor    -0x4(%r8),%edx
   21424:	31 ca                	xor    %ecx,%edx
   21426:	89 f9                	mov    %edi,%ecx
   21428:	c1 e9 18             	shr    $0x18,%ecx
   2142b:	0f b6 0c 0e          	movzbl (%rsi,%rcx,1),%ecx
   2142f:	c1 e1 10             	shl    $0x10,%ecx
   21432:	31 ca                	xor    %ecx,%edx
   21434:	40 0f b6 cf          	movzbl %dil,%ecx
   21438:	0f b6 0c 0e          	movzbl (%rsi,%rcx,1),%ecx
   2143c:	c1 e1 18             	shl    $0x18,%ecx
   2143f:	31 ca                	xor    %ecx,%edx
   21441:	89 f9                	mov    %edi,%ecx
   21443:	c1 e9 10             	shr    $0x10,%ecx
   21446:	0f b6 c9             	movzbl %cl,%ecx
   21449:	0f b6 0c 0e          	movzbl (%rsi,%rcx,1),%ecx
   2144d:	c1 e1 08             	shl    $0x8,%ecx
   21450:	31 ca                	xor    %ecx,%edx
   21452:	89 13                	mov    %edx,(%rbx)
   21454:	33 53 ec             	xor    -0x14(%rbx),%edx
   21457:	89 53 04             	mov    %edx,0x4(%rbx)
   2145a:	33 53 f0             	xor    -0x10(%rbx),%edx
   2145d:	89 53 08             	mov    %edx,0x8(%rbx)
   21460:	33 53 f4             	xor    -0xc(%rbx),%edx
   21463:	89 53 0c             	mov    %edx,0xc(%rbx)
   21466:	33 53 f8             	xor    -0x8(%rbx),%edx
   21469:	89 53 10             	mov    %edx,0x10(%rbx)
   2146c:	31 fa                	xor    %edi,%edx
   2146e:	89 53 14             	mov    %edx,0x14(%rbx)
   21471:	4c 39 e3             	cmp    %r12,%rbx
   21474:	75 92                	jne    21408 <mbedtls_aes_setkey_enc+0x2c8>
   21476:	5b                   	pop    %rbx
   21477:	41 5c                	pop    %r12
   21479:	41 5d                	pop    %r13
   2147b:	41 5e                	pop    %r14
   2147d:	5d                   	pop    %rbp
   2147e:	c3                   	retq   
   2147f:	90                   	nop

0000000000021480 <mbedtls_aes_setkey_dec>:
   21480:	55                   	push   %rbp
   21481:	48 89 e5             	mov    %rsp,%rbp
   21484:	41 57                	push   %r15
   21486:	41 56                	push   %r14
   21488:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
   2148f:	41 55                	push   %r13
   21491:	41 54                	push   %r12
   21493:	53                   	push   %rbx
   21494:	49 89 fc             	mov    %rdi,%r12
   21497:	49 89 f5             	mov    %rsi,%r13
   2149a:	48 89 c7             	mov    %rax,%rdi
   2149d:	48 89 c3             	mov    %rax,%rbx
   214a0:	41 89 d6             	mov    %edx,%r14d
   214a3:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
   214aa:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
   214b1:	e8 4a fc ff ff       	callq  21100 <mbedtls_aes_init>
   214b6:	49 8d 44 24 10       	lea    0x10(%r12),%rax
   214bb:	44 89 f2             	mov    %r14d,%edx
   214be:	4c 89 ee             	mov    %r13,%rsi
   214c1:	48 89 df             	mov    %rbx,%rdi
   214c4:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   214c9:	e8 72 fc ff ff       	callq  21140 <mbedtls_aes_setkey_enc>
   214ce:	85 c0                	test   %eax,%eax
   214d0:	89 85 ac fe ff ff    	mov    %eax,-0x154(%rbp)
   214d6:	74 28                	je     21500 <mbedtls_aes_setkey_dec+0x80>
   214d8:	48 8b bd a0 fe ff ff 	mov    -0x160(%rbp),%rdi
   214df:	e8 3c fc ff ff       	callq  21120 <mbedtls_aes_free>
   214e4:	8b 85 ac fe ff ff    	mov    -0x154(%rbp),%eax
   214ea:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
   214f1:	5b                   	pop    %rbx
   214f2:	41 5c                	pop    %r12
   214f4:	41 5d                	pop    %r13
   214f6:	41 5e                	pop    %r14
   214f8:	41 5f                	pop    %r15
   214fa:	5d                   	pop    %rbp
   214fb:	c3                   	retq   
   214fc:	0f 1f 40 00          	nopl   0x0(%rax)
   21500:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
   21506:	bf 00 00 00 02       	mov    $0x2000000,%edi
   2150b:	41 89 04 24          	mov    %eax,(%r12)
   2150f:	e8 dc 0a 00 00       	callq  21ff0 <mbedtls_aesni_has_support>
   21514:	85 c0                	test   %eax,%eax
   21516:	0f 85 23 01 00 00    	jne    2163f <mbedtls_aes_setkey_dec+0x1bf>
   2151c:	8b 85 b0 fe ff ff    	mov    -0x150(%rbp),%eax
   21522:	48 8b 95 b8 fe ff ff 	mov    -0x148(%rbp),%rdx
   21529:	c1 e0 02             	shl    $0x2,%eax
   2152c:	48 98                	cltq   
   2152e:	4c 8d 34 82          	lea    (%rdx,%rax,4),%r14
   21532:	41 8b 06             	mov    (%r14),%eax
   21535:	49 83 ee 10          	sub    $0x10,%r14
   21539:	41 89 44 24 10       	mov    %eax,0x10(%r12)
   2153e:	41 8b 46 14          	mov    0x14(%r14),%eax
   21542:	41 89 44 24 14       	mov    %eax,0x14(%r12)
   21547:	41 8b 46 18          	mov    0x18(%r14),%eax
   2154b:	41 89 44 24 18       	mov    %eax,0x18(%r12)
   21550:	49 8d 44 24 20       	lea    0x20(%r12),%rax
   21555:	48 89 c7             	mov    %rax,%rdi
   21558:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
   2155f:	41 8b 46 1c          	mov    0x1c(%r14),%eax
   21563:	41 89 44 24 1c       	mov    %eax,0x1c(%r12)
   21568:	41 8b 04 24          	mov    (%r12),%eax
   2156c:	44 8d 68 ff          	lea    -0x1(%rax),%r13d
   21570:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%rbp)
   21576:	45 85 ed             	test   %r13d,%r13d
   21579:	0f 8e 9a 00 00 00    	jle    21619 <mbedtls_aes_setkey_dec+0x199>
   2157f:	4c 8d 25 5a bb 20 04 	lea    0x420bb5a(%rip),%r12        # 422d0e0 <RT0>
   21586:	48 8d 35 53 d0 20 04 	lea    0x420d053(%rip),%rsi        # 422e5e0 <FSb>
   2158d:	4c 8d 1d 4c af 20 04 	lea    0x420af4c(%rip),%r11        # 422c4e0 <RT3>
   21594:	4c 8d 15 45 b7 20 04 	lea    0x420b745(%rip),%r10        # 422cce0 <RT1>
   2159b:	4c 8d 0d 3e b3 20 04 	lea    0x420b33e(%rip),%r9        # 422c8e0 <RT2>
   215a2:	4d 89 f0             	mov    %r14,%r8
   215a5:	0f 1f 00             	nopl   (%rax)
   215a8:	31 d2                	xor    %edx,%edx
   215aa:	41 8b 04 10          	mov    (%r8,%rdx,1),%eax
   215ae:	0f b6 c8             	movzbl %al,%ecx
   215b1:	0f b6 1c 0e          	movzbl (%rsi,%rcx,1),%ebx
   215b5:	89 c1                	mov    %eax,%ecx
   215b7:	c1 e9 18             	shr    $0x18,%ecx
   215ba:	44 0f b6 3c 0e       	movzbl (%rsi,%rcx,1),%r15d
   215bf:	41 8b 0c 9c          	mov    (%r12,%rbx,4),%ecx
   215c3:	0f b6 dc             	movzbl %ah,%ebx
   215c6:	c1 e8 10             	shr    $0x10,%eax
   215c9:	0f b6 1c 1e          	movzbl (%rsi,%rbx,1),%ebx
   215cd:	0f b6 c0             	movzbl %al,%eax
   215d0:	0f b6 04 06          	movzbl (%rsi,%rax,1),%eax
   215d4:	43 33 0c bb          	xor    (%r11,%r15,4),%ecx
   215d8:	41 33 0c 9a          	xor    (%r10,%rbx,4),%ecx
   215dc:	41 33 0c 81          	xor    (%r9,%rax,4),%ecx
   215e0:	89 0c 17             	mov    %ecx,(%rdi,%rdx,1)
   215e3:	48 83 c2 04          	add    $0x4,%rdx
   215e7:	48 83 fa 10          	cmp    $0x10,%rdx
   215eb:	75 bd                	jne    215aa <mbedtls_aes_setkey_dec+0x12a>
   215ed:	48 83 c7 10          	add    $0x10,%rdi
   215f1:	49 83 e8 10          	sub    $0x10,%r8
   215f5:	41 83 ed 01          	sub    $0x1,%r13d
   215f9:	75 ad                	jne    215a8 <mbedtls_aes_setkey_dec+0x128>
   215fb:	8b 85 a8 fe ff ff    	mov    -0x158(%rbp),%eax
   21601:	83 e8 02             	sub    $0x2,%eax
   21604:	48 83 c0 01          	add    $0x1,%rax
   21608:	48 89 c2             	mov    %rax,%rdx
   2160b:	48 c1 e2 04          	shl    $0x4,%rdx
   2160f:	48 01 95 98 fe ff ff 	add    %rdx,-0x168(%rbp)
   21616:	49 29 d6             	sub    %rdx,%r14
   21619:	41 8b 06             	mov    (%r14),%eax
   2161c:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
   21623:	89 07                	mov    %eax,(%rdi)
   21625:	41 8b 46 04          	mov    0x4(%r14),%eax
   21629:	89 47 04             	mov    %eax,0x4(%rdi)
   2162c:	41 8b 46 08          	mov    0x8(%r14),%eax
   21630:	89 47 08             	mov    %eax,0x8(%rdi)
   21633:	41 8b 46 0c          	mov    0xc(%r14),%eax
   21637:	89 47 0c             	mov    %eax,0xc(%rdi)
   2163a:	e9 99 fe ff ff       	jmpq   214d8 <mbedtls_aes_setkey_dec+0x58>
   2163f:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
   21644:	41 8b 14 24          	mov    (%r12),%edx
   21648:	48 8b b5 b8 fe ff ff 	mov    -0x148(%rbp),%rsi
   2164f:	e8 8c 0b 00 00       	callq  221e0 <mbedtls_aesni_inverse_key>
   21654:	e9 7f fe ff ff       	jmpq   214d8 <mbedtls_aes_setkey_dec+0x58>
   21659:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000021660 <mbedtls_aes_encrypt>:
   21660:	55                   	push   %rbp
   21661:	4c 8d 1d 78 c3 20 04 	lea    0x420c378(%rip),%r11        # 422d9e0 <FT2>
   21668:	48 89 e5             	mov    %rsp,%rbp
   2166b:	41 57                	push   %r15
   2166d:	41 56                	push   %r14
   2166f:	41 55                	push   %r13
   21671:	41 54                	push   %r12
   21673:	49 89 d7             	mov    %rdx,%r15
   21676:	53                   	push   %rbx
   21677:	4c 8d 35 62 cb 20 04 	lea    0x420cb62(%rip),%r14        # 422e1e0 <FT0>
   2167e:	4c 8d 2d 5b bf 20 04 	lea    0x420bf5b(%rip),%r13        # 422d5e0 <FT3>
   21685:	4c 8d 25 54 c7 20 04 	lea    0x420c754(%rip),%r12        # 422dde0 <FT1>
   2168c:	48 8b 47 08          	mov    0x8(%rdi),%rax
   21690:	8b 17                	mov    (%rdi),%edx
   21692:	44 8b 06             	mov    (%rsi),%r8d
   21695:	8b 4e 04             	mov    0x4(%rsi),%ecx
   21698:	8b 5e 08             	mov    0x8(%rsi),%ebx
   2169b:	44 8b 4e 0c          	mov    0xc(%rsi),%r9d
   2169f:	d1 fa                	sar    %edx
   216a1:	48 8d 70 10          	lea    0x10(%rax),%rsi
   216a5:	44 33 00             	xor    (%rax),%r8d
   216a8:	33 48 04             	xor    0x4(%rax),%ecx
   216ab:	33 58 08             	xor    0x8(%rax),%ebx
   216ae:	44 33 48 0c          	xor    0xc(%rax),%r9d
   216b2:	83 fa 01             	cmp    $0x1,%edx
   216b5:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
   216b9:	8b 78 10             	mov    0x10(%rax),%edi
   216bc:	0f 8e c4 01 00 00    	jle    21886 <mbedtls_aes_encrypt+0x226>
   216c2:	8d 42 fe             	lea    -0x2(%rdx),%eax
   216c5:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   216c9:	4c 8d 35 10 cb 20 04 	lea    0x420cb10(%rip),%r14        # 422e1e0 <FT0>
   216d0:	4c 8d 2d 09 bf 20 04 	lea    0x420bf09(%rip),%r13        # 422d5e0 <FT3>
   216d7:	4c 8d 25 02 c7 20 04 	lea    0x420c702(%rip),%r12        # 422dde0 <FT1>
   216de:	4c 8d 1d fb c2 20 04 	lea    0x420c2fb(%rip),%r11        # 422d9e0 <FT2>
   216e5:	89 45 d0             	mov    %eax,-0x30(%rbp)
   216e8:	48 83 c0 01          	add    $0x1,%rax
   216ec:	4c 89 7d c0          	mov    %r15,-0x40(%rbp)
   216f0:	48 c1 e0 05          	shl    $0x5,%rax
   216f4:	49 89 f2             	mov    %rsi,%r10
   216f7:	48 01 f0             	add    %rsi,%rax
   216fa:	49 89 c7             	mov    %rax,%r15
   216fd:	0f 1f 00             	nopl   (%rax)
   21700:	44 89 ca             	mov    %r9d,%edx
   21703:	41 0f b6 c0          	movzbl %r8b,%eax
   21707:	89 ce                	mov    %ecx,%esi
   21709:	c1 ea 18             	shr    $0x18,%edx
   2170c:	41 8b 04 86          	mov    (%r14,%rax,4),%eax
   21710:	c1 ee 18             	shr    $0x18,%esi
   21713:	41 33 44 95 00       	xor    0x0(%r13,%rdx,4),%eax
   21718:	0f b6 d5             	movzbl %ch,%edx
   2171b:	41 33 04 94          	xor    (%r12,%rdx,4),%eax
   2171f:	89 da                	mov    %ebx,%edx
   21721:	c1 ea 10             	shr    $0x10,%edx
   21724:	0f b6 d2             	movzbl %dl,%edx
   21727:	41 33 04 93          	xor    (%r11,%rdx,4),%eax
   2172b:	44 89 c2             	mov    %r8d,%edx
   2172e:	c1 ea 18             	shr    $0x18,%edx
   21731:	31 c7                	xor    %eax,%edi
   21733:	0f b6 c1             	movzbl %cl,%eax
   21736:	c1 e9 10             	shr    $0x10,%ecx
   21739:	41 8b 04 86          	mov    (%r14,%rax,4),%eax
   2173d:	41 33 44 95 00       	xor    0x0(%r13,%rdx,4),%eax
   21742:	0f b6 d7             	movzbl %bh,%edx
   21745:	41 33 42 04          	xor    0x4(%r10),%eax
   21749:	0f b6 c9             	movzbl %cl,%ecx
   2174c:	41 33 04 94          	xor    (%r12,%rdx,4),%eax
   21750:	44 89 ca             	mov    %r9d,%edx
   21753:	c1 ea 10             	shr    $0x10,%edx
   21756:	0f b6 d2             	movzbl %dl,%edx
   21759:	41 33 04 93          	xor    (%r11,%rdx,4),%eax
   2175d:	0f b6 d3             	movzbl %bl,%edx
   21760:	c1 eb 18             	shr    $0x18,%ebx
   21763:	41 8b 14 96          	mov    (%r14,%rdx,4),%edx
   21767:	41 33 54 b5 00       	xor    0x0(%r13,%rsi,4),%edx
   2176c:	41 33 52 08          	xor    0x8(%r10),%edx
   21770:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   21773:	4c 89 c8             	mov    %r9,%rax
   21776:	45 0f b6 c9          	movzbl %r9b,%r9d
   2177a:	0f b6 f4             	movzbl %ah,%esi
   2177d:	4c 89 c0             	mov    %r8,%rax
   21780:	41 33 14 b4          	xor    (%r12,%rsi,4),%edx
   21784:	44 89 c6             	mov    %r8d,%esi
   21787:	44 0f b6 c7          	movzbl %dil,%r8d
   2178b:	c1 ee 10             	shr    $0x10,%esi
   2178e:	47 8b 04 86          	mov    (%r14,%r8,4),%r8d
   21792:	40 0f b6 f6          	movzbl %sil,%esi
   21796:	41 33 14 b3          	xor    (%r11,%rsi,4),%edx
   2179a:	43 8b 34 8e          	mov    (%r14,%r9,4),%esi
   2179e:	41 89 f9             	mov    %edi,%r9d
   217a1:	41 33 74 9d 00       	xor    0x0(%r13,%rbx,4),%esi
   217a6:	0f b6 dc             	movzbl %ah,%ebx
   217a9:	41 c1 e9 18          	shr    $0x18,%r9d
   217ad:	41 33 72 0c          	xor    0xc(%r10),%esi
   217b1:	41 33 34 9c          	xor    (%r12,%rbx,4),%esi
   217b5:	8b 5d d4             	mov    -0x2c(%rbp),%ebx
   217b8:	41 33 34 8b          	xor    (%r11,%rcx,4),%esi
   217bc:	48 89 d8             	mov    %rbx,%rax
   217bf:	89 f1                	mov    %esi,%ecx
   217c1:	c1 e9 18             	shr    $0x18,%ecx
   217c4:	45 33 44 8d 00       	xor    0x0(%r13,%rcx,4),%r8d
   217c9:	0f b6 cc             	movzbl %ah,%ecx
   217cc:	89 d8                	mov    %ebx,%eax
   217ce:	45 33 42 10          	xor    0x10(%r10),%r8d
   217d2:	45 33 04 8c          	xor    (%r12,%rcx,4),%r8d
   217d6:	89 d1                	mov    %edx,%ecx
   217d8:	c1 e9 10             	shr    $0x10,%ecx
   217db:	0f b6 c9             	movzbl %cl,%ecx
   217de:	45 33 04 8b          	xor    (%r11,%rcx,4),%r8d
   217e2:	0f b6 cb             	movzbl %bl,%ecx
   217e5:	0f b6 de             	movzbl %dh,%ebx
   217e8:	41 8b 0c 8e          	mov    (%r14,%rcx,4),%ecx
   217ec:	43 33 4c 8d 00       	xor    0x0(%r13,%r9,4),%ecx
   217f1:	41 89 f1             	mov    %esi,%r9d
   217f4:	41 33 4a 14          	xor    0x14(%r10),%ecx
   217f8:	41 c1 e9 10          	shr    $0x10,%r9d
   217fc:	49 83 c2 20          	add    $0x20,%r10
   21800:	41 33 0c 9c          	xor    (%r12,%rbx,4),%ecx
   21804:	45 0f b6 c9          	movzbl %r9b,%r9d
   21808:	0f b6 da             	movzbl %dl,%ebx
   2180b:	43 33 0c 8b          	xor    (%r11,%r9,4),%ecx
   2180f:	41 89 c1             	mov    %eax,%r9d
   21812:	41 8b 1c 9e          	mov    (%r14,%rbx,4),%ebx
   21816:	41 c1 e9 18          	shr    $0x18,%r9d
   2181a:	48 89 f0             	mov    %rsi,%rax
   2181d:	c1 ea 18             	shr    $0x18,%edx
   21820:	43 33 5c 8d 00       	xor    0x0(%r13,%r9,4),%ebx
   21825:	0f b6 c4             	movzbl %ah,%eax
   21828:	41 89 f9             	mov    %edi,%r9d
   2182b:	41 33 5a f8          	xor    -0x8(%r10),%ebx
   2182f:	41 c1 e9 10          	shr    $0x10,%r9d
   21833:	40 0f b6 f6          	movzbl %sil,%esi
   21837:	41 33 1c 84          	xor    (%r12,%rax,4),%ebx
   2183b:	48 89 f8             	mov    %rdi,%rax
   2183e:	45 0f b6 c9          	movzbl %r9b,%r9d
   21842:	0f b6 fc             	movzbl %ah,%edi
   21845:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   21848:	43 33 1c 8b          	xor    (%r11,%r9,4),%ebx
   2184c:	45 8b 0c b6          	mov    (%r14,%rsi,4),%r9d
   21850:	45 33 4c 95 00       	xor    0x0(%r13,%rdx,4),%r9d
   21855:	45 33 4a fc          	xor    -0x4(%r10),%r9d
   21859:	c1 e8 10             	shr    $0x10,%eax
   2185c:	45 33 0c bc          	xor    (%r12,%rdi,4),%r9d
   21860:	41 8b 3a             	mov    (%r10),%edi
   21863:	0f b6 c0             	movzbl %al,%eax
   21866:	45 33 0c 83          	xor    (%r11,%rax,4),%r9d
   2186a:	4d 39 d7             	cmp    %r10,%r15
   2186d:	0f 85 8d fe ff ff    	jne    21700 <mbedtls_aes_encrypt+0xa0>
   21873:	8b 45 d0             	mov    -0x30(%rbp),%eax
   21876:	4c 8b 7d c0          	mov    -0x40(%rbp),%r15
   2187a:	48 83 c0 01          	add    $0x1,%rax
   2187e:	48 c1 e0 05          	shl    $0x5,%rax
   21882:	48 01 45 c8          	add    %rax,-0x38(%rbp)
   21886:	44 89 ca             	mov    %r9d,%edx
   21889:	41 0f b6 c0          	movzbl %r8b,%eax
   2188d:	4c 8b 55 c8          	mov    -0x38(%rbp),%r10
   21891:	c1 ea 18             	shr    $0x18,%edx
   21894:	41 8b 04 86          	mov    (%r14,%rax,4),%eax
   21898:	44 89 c6             	mov    %r8d,%esi
   2189b:	41 33 44 95 00       	xor    0x0(%r13,%rdx,4),%eax
   218a0:	0f b6 d5             	movzbl %ch,%edx
   218a3:	c1 ee 18             	shr    $0x18,%esi
   218a6:	31 f8                	xor    %edi,%eax
   218a8:	41 33 04 94          	xor    (%r12,%rdx,4),%eax
   218ac:	89 da                	mov    %ebx,%edx
   218ae:	c1 ea 10             	shr    $0x10,%edx
   218b1:	89 cf                	mov    %ecx,%edi
   218b3:	0f b6 d2             	movzbl %dl,%edx
   218b6:	c1 ef 18             	shr    $0x18,%edi
   218b9:	41 33 04 93          	xor    (%r11,%rdx,4),%eax
   218bd:	0f b6 d1             	movzbl %cl,%edx
   218c0:	c1 e9 10             	shr    $0x10,%ecx
   218c3:	41 8b 14 96          	mov    (%r14,%rdx,4),%edx
   218c7:	41 33 54 b5 00       	xor    0x0(%r13,%rsi,4),%edx
   218cc:	0f b6 f7             	movzbl %bh,%esi
   218cf:	41 33 52 04          	xor    0x4(%r10),%edx
   218d3:	0f b6 c9             	movzbl %cl,%ecx
   218d6:	41 33 14 b4          	xor    (%r12,%rsi,4),%edx
   218da:	44 89 ce             	mov    %r9d,%esi
   218dd:	c1 ee 10             	shr    $0x10,%esi
   218e0:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   218e3:	4c 89 c8             	mov    %r9,%rax
   218e6:	40 0f b6 f6          	movzbl %sil,%esi
   218ea:	45 0f b6 c9          	movzbl %r9b,%r9d
   218ee:	41 33 14 b3          	xor    (%r11,%rsi,4),%edx
   218f2:	0f b6 f3             	movzbl %bl,%esi
   218f5:	c1 eb 18             	shr    $0x18,%ebx
   218f8:	41 8b 34 b6          	mov    (%r14,%rsi,4),%esi
   218fc:	41 33 74 bd 00       	xor    0x0(%r13,%rdi,4),%esi
   21901:	0f b6 fc             	movzbl %ah,%edi
   21904:	41 33 72 08          	xor    0x8(%r10),%esi
   21908:	4c 89 c0             	mov    %r8,%rax
   2190b:	41 33 34 bc          	xor    (%r12,%rdi,4),%esi
   2190f:	44 89 c7             	mov    %r8d,%edi
   21912:	c1 ef 10             	shr    $0x10,%edi
   21915:	40 0f b6 ff          	movzbl %dil,%edi
   21919:	41 33 34 bb          	xor    (%r11,%rdi,4),%esi
   2191d:	43 8b 3c 8e          	mov    (%r14,%r9,4),%edi
   21921:	4d 89 d6             	mov    %r10,%r14
   21924:	41 33 7c 9d 00       	xor    0x0(%r13,%rbx,4),%edi
   21929:	89 fb                	mov    %edi,%ebx
   2192b:	0f b6 fc             	movzbl %ah,%edi
   2192e:	41 33 5a 0c          	xor    0xc(%r10),%ebx
   21932:	41 33 1c bc          	xor    (%r12,%rdi,4),%ebx
   21936:	44 8b 65 d4          	mov    -0x2c(%rbp),%r12d
   2193a:	48 89 f0             	mov    %rsi,%rax
   2193d:	41 33 1c 8b          	xor    (%r11,%rcx,4),%ebx
   21941:	48 8d 0d 98 cc 20 04 	lea    0x420cc98(%rip),%rcx        # 422e5e0 <FSb>
   21948:	41 0f b6 fc          	movzbl %r12b,%edi
   2194c:	44 0f b6 14 39       	movzbl (%rcx,%rdi,1),%r10d
   21951:	89 df                	mov    %ebx,%edi
   21953:	45 33 56 10          	xor    0x10(%r14),%r10d
   21957:	c1 ef 18             	shr    $0x18,%edi
   2195a:	0f b6 3c 39          	movzbl (%rcx,%rdi,1),%edi
   2195e:	c1 e7 18             	shl    $0x18,%edi
   21961:	41 31 fa             	xor    %edi,%r10d
   21964:	0f b6 fe             	movzbl %dh,%edi
   21967:	44 0f b6 04 39       	movzbl (%rcx,%rdi,1),%r8d
   2196c:	44 89 d7             	mov    %r10d,%edi
   2196f:	41 c1 e0 08          	shl    $0x8,%r8d
   21973:	44 31 c7             	xor    %r8d,%edi
   21976:	41 89 f0             	mov    %esi,%r8d
   21979:	41 c1 e8 10          	shr    $0x10,%r8d
   2197d:	45 0f b6 c0          	movzbl %r8b,%r8d
   21981:	46 0f b6 14 01       	movzbl (%rcx,%r8,1),%r10d
   21986:	41 c1 e2 10          	shl    $0x10,%r10d
   2198a:	41 31 fa             	xor    %edi,%r10d
   2198d:	0f b6 fa             	movzbl %dl,%edi
   21990:	44 0f b6 0c 39       	movzbl (%rcx,%rdi,1),%r9d
   21995:	44 89 e7             	mov    %r12d,%edi
   21998:	c1 ef 18             	shr    $0x18,%edi
   2199b:	45 33 4e 14          	xor    0x14(%r14),%r9d
   2199f:	0f b6 3c 39          	movzbl (%rcx,%rdi,1),%edi
   219a3:	c1 e7 18             	shl    $0x18,%edi
   219a6:	41 31 f9             	xor    %edi,%r9d
   219a9:	0f b6 fc             	movzbl %ah,%edi
   219ac:	4c 89 e0             	mov    %r12,%rax
   219af:	44 0f b6 04 39       	movzbl (%rcx,%rdi,1),%r8d
   219b4:	44 89 cf             	mov    %r9d,%edi
   219b7:	41 c1 e0 08          	shl    $0x8,%r8d
   219bb:	44 31 c7             	xor    %r8d,%edi
   219be:	41 89 d8             	mov    %ebx,%r8d
   219c1:	41 c1 e8 10          	shr    $0x10,%r8d
   219c5:	45 0f b6 c0          	movzbl %r8b,%r8d
   219c9:	46 0f b6 0c 01       	movzbl (%rcx,%r8,1),%r9d
   219ce:	41 c1 e1 10          	shl    $0x10,%r9d
   219d2:	41 31 f9             	xor    %edi,%r9d
   219d5:	40 0f b6 fe          	movzbl %sil,%edi
   219d9:	c1 ee 18             	shr    $0x18,%esi
   219dc:	44 0f b6 04 39       	movzbl (%rcx,%rdi,1),%r8d
   219e1:	89 d7                	mov    %edx,%edi
   219e3:	0f b6 34 31          	movzbl (%rcx,%rsi,1),%esi
   219e7:	c1 ef 18             	shr    $0x18,%edi
   219ea:	45 33 46 18          	xor    0x18(%r14),%r8d
   219ee:	c1 ea 10             	shr    $0x10,%edx
   219f1:	0f b6 3c 39          	movzbl (%rcx,%rdi,1),%edi
   219f5:	0f b6 d2             	movzbl %dl,%edx
   219f8:	c1 e6 18             	shl    $0x18,%esi
   219fb:	c1 e7 18             	shl    $0x18,%edi
   219fe:	41 31 f8             	xor    %edi,%r8d
   21a01:	0f b6 ff             	movzbl %bh,%edi
   21a04:	0f b6 db             	movzbl %bl,%ebx
   21a07:	44 0f b6 1c 39       	movzbl (%rcx,%rdi,1),%r11d
   21a0c:	44 89 c7             	mov    %r8d,%edi
   21a0f:	45 89 e0             	mov    %r12d,%r8d
   21a12:	41 c1 e8 10          	shr    $0x10,%r8d
   21a16:	45 0f b6 c0          	movzbl %r8b,%r8d
   21a1a:	46 0f b6 04 01       	movzbl (%rcx,%r8,1),%r8d
   21a1f:	41 c1 e3 08          	shl    $0x8,%r11d
   21a23:	44 31 df             	xor    %r11d,%edi
   21a26:	41 c1 e0 10          	shl    $0x10,%r8d
   21a2a:	41 31 f8             	xor    %edi,%r8d
   21a2d:	0f b6 3c 19          	movzbl (%rcx,%rbx,1),%edi
   21a31:	41 33 7e 1c          	xor    0x1c(%r14),%edi
   21a35:	31 fe                	xor    %edi,%esi
   21a37:	0f b6 fc             	movzbl %ah,%edi
   21a3a:	0f b6 04 11          	movzbl (%rcx,%rdx,1),%eax
   21a3e:	44 89 d2             	mov    %r10d,%edx
   21a41:	0f b6 3c 39          	movzbl (%rcx,%rdi,1),%edi
   21a45:	45 88 17             	mov    %r10b,(%r15)
   21a48:	c1 ea 08             	shr    $0x8,%edx
   21a4b:	45 88 4f 04          	mov    %r9b,0x4(%r15)
   21a4f:	45 88 47 08          	mov    %r8b,0x8(%r15)
   21a53:	41 88 57 01          	mov    %dl,0x1(%r15)
   21a57:	44 89 d2             	mov    %r10d,%edx
   21a5a:	41 c1 ea 18          	shr    $0x18,%r10d
   21a5e:	c1 ea 10             	shr    $0x10,%edx
   21a61:	c1 e0 10             	shl    $0x10,%eax
   21a64:	45 88 57 03          	mov    %r10b,0x3(%r15)
   21a68:	41 88 57 02          	mov    %dl,0x2(%r15)
   21a6c:	44 89 ca             	mov    %r9d,%edx
   21a6f:	c1 e7 08             	shl    $0x8,%edi
   21a72:	c1 ea 08             	shr    $0x8,%edx
   21a75:	31 fe                	xor    %edi,%esi
   21a77:	41 88 57 05          	mov    %dl,0x5(%r15)
   21a7b:	44 89 ca             	mov    %r9d,%edx
   21a7e:	31 f0                	xor    %esi,%eax
   21a80:	c1 ea 10             	shr    $0x10,%edx
   21a83:	41 88 47 0c          	mov    %al,0xc(%r15)
   21a87:	41 c1 e9 18          	shr    $0x18,%r9d
   21a8b:	41 88 57 06          	mov    %dl,0x6(%r15)
   21a8f:	44 89 c2             	mov    %r8d,%edx
   21a92:	45 88 4f 07          	mov    %r9b,0x7(%r15)
   21a96:	c1 ea 08             	shr    $0x8,%edx
   21a99:	41 88 57 09          	mov    %dl,0x9(%r15)
   21a9d:	44 89 c2             	mov    %r8d,%edx
   21aa0:	41 c1 e8 18          	shr    $0x18,%r8d
   21aa4:	c1 ea 10             	shr    $0x10,%edx
   21aa7:	45 88 47 0b          	mov    %r8b,0xb(%r15)
   21aab:	41 88 57 0a          	mov    %dl,0xa(%r15)
   21aaf:	89 c2                	mov    %eax,%edx
   21ab1:	c1 ea 08             	shr    $0x8,%edx
   21ab4:	41 88 57 0d          	mov    %dl,0xd(%r15)
   21ab8:	89 c2                	mov    %eax,%edx
   21aba:	c1 e8 18             	shr    $0x18,%eax
   21abd:	c1 ea 10             	shr    $0x10,%edx
   21ac0:	41 88 47 0f          	mov    %al,0xf(%r15)
   21ac4:	41 88 57 0e          	mov    %dl,0xe(%r15)
   21ac8:	5b                   	pop    %rbx
   21ac9:	41 5c                	pop    %r12
   21acb:	41 5d                	pop    %r13
   21acd:	41 5e                	pop    %r14
   21acf:	41 5f                	pop    %r15
   21ad1:	5d                   	pop    %rbp
   21ad2:	c3                   	retq   
   21ad3:	0f 1f 00             	nopl   (%rax)
   21ad6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   21add:	00 00 00 

0000000000021ae0 <mbedtls_aes_decrypt>:
   21ae0:	55                   	push   %rbp
   21ae1:	4c 8d 1d f8 b1 20 04 	lea    0x420b1f8(%rip),%r11        # 422cce0 <RT1>
   21ae8:	4c 8d 15 f1 ad 20 04 	lea    0x420adf1(%rip),%r10        # 422c8e0 <RT2>
   21aef:	48 89 e5             	mov    %rsp,%rbp
   21af2:	41 57                	push   %r15
   21af4:	41 56                	push   %r14
   21af6:	41 55                	push   %r13
   21af8:	41 54                	push   %r12
   21afa:	49 89 d6             	mov    %rdx,%r14
   21afd:	53                   	push   %rbx
   21afe:	4c 8d 2d db b5 20 04 	lea    0x420b5db(%rip),%r13        # 422d0e0 <RT0>
   21b05:	4c 8d 25 d4 a9 20 04 	lea    0x420a9d4(%rip),%r12        # 422c4e0 <RT3>
   21b0c:	48 8b 47 08          	mov    0x8(%rdi),%rax
   21b10:	8b 1e                	mov    (%rsi),%ebx
   21b12:	8b 4e 04             	mov    0x4(%rsi),%ecx
   21b15:	44 8b 46 08          	mov    0x8(%rsi),%r8d
   21b19:	8b 76 0c             	mov    0xc(%rsi),%esi
   21b1c:	48 8d 50 10          	lea    0x10(%rax),%rdx
   21b20:	33 18                	xor    (%rax),%ebx
   21b22:	33 48 04             	xor    0x4(%rax),%ecx
   21b25:	44 33 40 08          	xor    0x8(%rax),%r8d
   21b29:	33 70 0c             	xor    0xc(%rax),%esi
   21b2c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   21b30:	8b 17                	mov    (%rdi),%edx
   21b32:	44 8b 78 10          	mov    0x10(%rax),%r15d
   21b36:	d1 fa                	sar    %edx
   21b38:	83 fa 01             	cmp    $0x1,%edx
   21b3b:	0f 8e d3 01 00 00    	jle    21d14 <mbedtls_aes_decrypt+0x234>
   21b41:	8d 42 fe             	lea    -0x2(%rdx),%eax
   21b44:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
   21b48:	4c 8d 2d 91 b5 20 04 	lea    0x420b591(%rip),%r13        # 422d0e0 <RT0>
   21b4f:	4c 8d 25 8a a9 20 04 	lea    0x420a98a(%rip),%r12        # 422c4e0 <RT3>
   21b56:	4c 8d 1d 83 b1 20 04 	lea    0x420b183(%rip),%r11        # 422cce0 <RT1>
   21b5d:	4c 8d 15 7c ad 20 04 	lea    0x420ad7c(%rip),%r10        # 422c8e0 <RT2>
   21b64:	89 45 d0             	mov    %eax,-0x30(%rbp)
   21b67:	48 83 c0 01          	add    $0x1,%rax
   21b6b:	44 89 c2             	mov    %r8d,%edx
   21b6e:	48 c1 e0 05          	shl    $0x5,%rax
   21b72:	49 89 f9             	mov    %rdi,%r9
   21b75:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
   21b78:	48 01 f8             	add    %rdi,%rax
   21b7b:	4c 89 75 c0          	mov    %r14,-0x40(%rbp)
   21b7f:	49 89 c0             	mov    %rax,%r8
   21b82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   21b88:	44 8b 75 d4          	mov    -0x2c(%rbp),%r14d
   21b8c:	48 89 f1             	mov    %rsi,%rcx
   21b8f:	0f b6 c3             	movzbl %bl,%eax
   21b92:	41 8b 44 85 00       	mov    0x0(%r13,%rax,4),%eax
   21b97:	44 89 f7             	mov    %r14d,%edi
   21b9a:	c1 ef 18             	shr    $0x18,%edi
   21b9d:	41 33 04 bc          	xor    (%r12,%rdi,4),%eax
   21ba1:	0f b6 fd             	movzbl %ch,%edi
   21ba4:	44 89 f1             	mov    %r14d,%ecx
   21ba7:	41 33 04 bb          	xor    (%r11,%rdi,4),%eax
   21bab:	89 d7                	mov    %edx,%edi
   21bad:	0f b6 cd             	movzbl %ch,%ecx
   21bb0:	c1 ef 10             	shr    $0x10,%edi
   21bb3:	40 0f b6 ff          	movzbl %dil,%edi
   21bb7:	41 33 04 ba          	xor    (%r10,%rdi,4),%eax
   21bbb:	89 d7                	mov    %edx,%edi
   21bbd:	c1 ef 18             	shr    $0x18,%edi
   21bc0:	41 31 c7             	xor    %eax,%r15d
   21bc3:	41 0f b6 c6          	movzbl %r14b,%eax
   21bc7:	41 89 f6             	mov    %esi,%r14d
   21bca:	41 8b 44 85 00       	mov    0x0(%r13,%rax,4),%eax
   21bcf:	41 33 04 bc          	xor    (%r12,%rdi,4),%eax
   21bd3:	0f b6 ff             	movzbl %bh,%edi
   21bd6:	41 33 41 04          	xor    0x4(%r9),%eax
   21bda:	41 c1 ee 18          	shr    $0x18,%r14d
   21bde:	41 33 04 bb          	xor    (%r11,%rdi,4),%eax
   21be2:	89 f7                	mov    %esi,%edi
   21be4:	40 0f b6 f6          	movzbl %sil,%esi
   21be8:	c1 ef 10             	shr    $0x10,%edi
   21beb:	41 8b 74 b5 00       	mov    0x0(%r13,%rsi,4),%esi
   21bf0:	40 0f b6 ff          	movzbl %dil,%edi
   21bf4:	41 33 04 ba          	xor    (%r10,%rdi,4),%eax
   21bf8:	0f b6 fa             	movzbl %dl,%edi
   21bfb:	0f b6 d6             	movzbl %dh,%edx
   21bfe:	41 8b 7c bd 00       	mov    0x0(%r13,%rdi,4),%edi
   21c03:	43 33 3c b4          	xor    (%r12,%r14,4),%edi
   21c07:	41 89 de             	mov    %ebx,%r14d
   21c0a:	41 33 79 08          	xor    0x8(%r9),%edi
   21c0e:	c1 eb 18             	shr    $0x18,%ebx
   21c11:	41 c1 ee 10          	shr    $0x10,%r14d
   21c15:	41 33 3c 8b          	xor    (%r11,%rcx,4),%edi
   21c19:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
   21c1c:	45 0f b6 f6          	movzbl %r14b,%r14d
   21c20:	41 33 34 9c          	xor    (%r12,%rbx,4),%esi
   21c24:	43 33 3c b2          	xor    (%r10,%r14,4),%edi
   21c28:	41 33 71 0c          	xor    0xc(%r9),%esi
   21c2c:	c1 e9 10             	shr    $0x10,%ecx
   21c2f:	41 33 34 93          	xor    (%r11,%rdx,4),%esi
   21c33:	89 c2                	mov    %eax,%edx
   21c35:	0f b6 c9             	movzbl %cl,%ecx
   21c38:	c1 ea 18             	shr    $0x18,%edx
   21c3b:	41 33 34 8a          	xor    (%r10,%rcx,4),%esi
   21c3f:	41 0f b6 cf          	movzbl %r15b,%ecx
   21c43:	41 8b 5c 8d 00       	mov    0x0(%r13,%rcx,4),%ebx
   21c48:	41 33 1c 94          	xor    (%r12,%rdx,4),%ebx
   21c4c:	41 33 59 10          	xor    0x10(%r9),%ebx
   21c50:	48 89 f1             	mov    %rsi,%rcx
   21c53:	41 89 f6             	mov    %esi,%r14d
   21c56:	0f b6 d5             	movzbl %ch,%edx
   21c59:	0f b6 c8             	movzbl %al,%ecx
   21c5c:	41 33 1c 93          	xor    (%r11,%rdx,4),%ebx
   21c60:	89 fa                	mov    %edi,%edx
   21c62:	41 8b 4c 8d 00       	mov    0x0(%r13,%rcx,4),%ecx
   21c67:	c1 ea 10             	shr    $0x10,%edx
   21c6a:	0f b6 d2             	movzbl %dl,%edx
   21c6d:	41 33 1c 92          	xor    (%r10,%rdx,4),%ebx
   21c71:	89 fa                	mov    %edi,%edx
   21c73:	c1 ea 18             	shr    $0x18,%edx
   21c76:	41 33 0c 94          	xor    (%r12,%rdx,4),%ecx
   21c7a:	4c 89 fa             	mov    %r15,%rdx
   21c7d:	41 33 49 14          	xor    0x14(%r9),%ecx
   21c81:	0f b6 d6             	movzbl %dh,%edx
   21c84:	41 c1 ee 18          	shr    $0x18,%r14d
   21c88:	41 33 0c 93          	xor    (%r11,%rdx,4),%ecx
   21c8c:	89 f2                	mov    %esi,%edx
   21c8e:	40 0f b6 f6          	movzbl %sil,%esi
   21c92:	c1 ea 10             	shr    $0x10,%edx
   21c95:	49 83 c1 20          	add    $0x20,%r9
   21c99:	0f b6 d2             	movzbl %dl,%edx
   21c9c:	41 33 0c 92          	xor    (%r10,%rdx,4),%ecx
   21ca0:	40 0f b6 d7          	movzbl %dil,%edx
   21ca4:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
   21ca7:	41 8b 54 95 00       	mov    0x0(%r13,%rdx,4),%edx
   21cac:	0f b6 cc             	movzbl %ah,%ecx
   21caf:	43 33 14 b4          	xor    (%r12,%r14,4),%edx
   21cb3:	45 89 fe             	mov    %r15d,%r14d
   21cb6:	41 c1 ef 18          	shr    $0x18,%r15d
   21cba:	41 33 51 f8          	xor    -0x8(%r9),%edx
   21cbe:	41 8b 74 b5 00       	mov    0x0(%r13,%rsi,4),%esi
   21cc3:	41 c1 ee 10          	shr    $0x10,%r14d
   21cc7:	41 33 14 8b          	xor    (%r11,%rcx,4),%edx
   21ccb:	43 33 34 bc          	xor    (%r12,%r15,4),%esi
   21ccf:	48 89 f9             	mov    %rdi,%rcx
   21cd2:	41 33 71 fc          	xor    -0x4(%r9),%esi
   21cd6:	c1 e8 10             	shr    $0x10,%eax
   21cd9:	0f b6 fd             	movzbl %ch,%edi
   21cdc:	41 33 34 bb          	xor    (%r11,%rdi,4),%esi
   21ce0:	45 0f b6 f6          	movzbl %r14b,%r14d
   21ce4:	0f b6 c0             	movzbl %al,%eax
   21ce7:	43 33 14 b2          	xor    (%r10,%r14,4),%edx
   21ceb:	41 33 34 82          	xor    (%r10,%rax,4),%esi
   21cef:	4d 39 c8             	cmp    %r9,%r8
   21cf2:	45 8b 39             	mov    (%r9),%r15d
   21cf5:	0f 85 8d fe ff ff    	jne    21b88 <mbedtls_aes_decrypt+0xa8>
   21cfb:	8b 45 d0             	mov    -0x30(%rbp),%eax
   21cfe:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
   21d01:	41 89 d0             	mov    %edx,%r8d
   21d04:	4c 8b 75 c0          	mov    -0x40(%rbp),%r14
   21d08:	48 83 c0 01          	add    $0x1,%rax
   21d0c:	48 c1 e0 05          	shl    $0x5,%rax
   21d10:	48 01 45 c8          	add    %rax,-0x38(%rbp)
   21d14:	89 ca                	mov    %ecx,%edx
   21d16:	0f b6 c3             	movzbl %bl,%eax
   21d19:	44 89 c7             	mov    %r8d,%edi
   21d1c:	c1 ea 18             	shr    $0x18,%edx
   21d1f:	41 8b 44 85 00       	mov    0x0(%r13,%rax,4),%eax
   21d24:	c1 ef 18             	shr    $0x18,%edi
   21d27:	41 33 04 94          	xor    (%r12,%rdx,4),%eax
   21d2b:	48 89 f2             	mov    %rsi,%rdx
   21d2e:	41 89 f1             	mov    %esi,%r9d
   21d31:	0f b6 d6             	movzbl %dh,%edx
   21d34:	41 c1 e9 18          	shr    $0x18,%r9d
   21d38:	44 31 f8             	xor    %r15d,%eax
   21d3b:	41 33 04 93          	xor    (%r11,%rdx,4),%eax
   21d3f:	44 89 c2             	mov    %r8d,%edx
   21d42:	c1 ea 10             	shr    $0x10,%edx
   21d45:	4c 8b 7d c8          	mov    -0x38(%rbp),%r15
   21d49:	0f b6 d2             	movzbl %dl,%edx
   21d4c:	41 33 04 92          	xor    (%r10,%rdx,4),%eax
   21d50:	0f b6 d1             	movzbl %cl,%edx
   21d53:	41 8b 54 95 00       	mov    0x0(%r13,%rdx,4),%edx
   21d58:	41 33 14 bc          	xor    (%r12,%rdi,4),%edx
   21d5c:	0f b6 ff             	movzbl %bh,%edi
   21d5f:	41 33 57 04          	xor    0x4(%r15),%edx
   21d63:	41 33 14 bb          	xor    (%r11,%rdi,4),%edx
   21d67:	89 f7                	mov    %esi,%edi
   21d69:	40 0f b6 f6          	movzbl %sil,%esi
   21d6d:	c1 ef 10             	shr    $0x10,%edi
   21d70:	41 8b 74 b5 00       	mov    0x0(%r13,%rsi,4),%esi
   21d75:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   21d78:	40 0f b6 ff          	movzbl %dil,%edi
   21d7c:	0f b6 c5             	movzbl %ch,%eax
   21d7f:	c1 e9 10             	shr    $0x10,%ecx
   21d82:	41 33 14 ba          	xor    (%r10,%rdi,4),%edx
   21d86:	41 0f b6 f8          	movzbl %r8b,%edi
   21d8a:	0f b6 c9             	movzbl %cl,%ecx
   21d8d:	41 8b 7c bd 00       	mov    0x0(%r13,%rdi,4),%edi
   21d92:	43 33 3c 8c          	xor    (%r12,%r9,4),%edi
   21d96:	41 89 d9             	mov    %ebx,%r9d
   21d99:	c1 eb 18             	shr    $0x18,%ebx
   21d9c:	41 33 7f 08          	xor    0x8(%r15),%edi
   21da0:	41 c1 e9 10          	shr    $0x10,%r9d
   21da4:	41 33 34 9c          	xor    (%r12,%rbx,4),%esi
   21da8:	41 33 3c 83          	xor    (%r11,%rax,4),%edi
   21dac:	4c 89 c0             	mov    %r8,%rax
   21daf:	44 8b 65 d4          	mov    -0x2c(%rbp),%r12d
   21db3:	45 0f b6 c9          	movzbl %r9b,%r9d
   21db7:	43 33 3c 8a          	xor    (%r10,%r9,4),%edi
   21dbb:	89 f3                	mov    %esi,%ebx
   21dbd:	0f b6 f4             	movzbl %ah,%esi
   21dc0:	41 33 5f 0c          	xor    0xc(%r15),%ebx
   21dc4:	41 33 1c b3          	xor    (%r11,%rsi,4),%ebx
   21dc8:	41 0f b6 f4          	movzbl %r12b,%esi
   21dcc:	4c 89 e0             	mov    %r12,%rax
   21dcf:	41 33 1c 8a          	xor    (%r10,%rcx,4),%ebx
   21dd3:	48 8d 0d 06 b7 20 04 	lea    0x420b706(%rip),%rcx        # 422d4e0 <RSb>
   21dda:	44 0f b6 0c 31       	movzbl (%rcx,%rsi,1),%r9d
   21ddf:	89 d6                	mov    %edx,%esi
   21de1:	c1 ee 18             	shr    $0x18,%esi
   21de4:	45 33 4f 10          	xor    0x10(%r15),%r9d
   21de8:	0f b6 34 31          	movzbl (%rcx,%rsi,1),%esi
   21dec:	c1 e6 18             	shl    $0x18,%esi
   21def:	41 31 f1             	xor    %esi,%r9d
   21df2:	0f b6 f7             	movzbl %bh,%esi
   21df5:	44 0f b6 04 31       	movzbl (%rcx,%rsi,1),%r8d
   21dfa:	44 89 ce             	mov    %r9d,%esi
   21dfd:	41 c1 e0 08          	shl    $0x8,%r8d
   21e01:	44 31 c6             	xor    %r8d,%esi
   21e04:	41 89 f8             	mov    %edi,%r8d
   21e07:	41 c1 e8 10          	shr    $0x10,%r8d
   21e0b:	45 0f b6 c0          	movzbl %r8b,%r8d
   21e0f:	46 0f b6 0c 01       	movzbl (%rcx,%r8,1),%r9d
   21e14:	41 c1 e1 10          	shl    $0x10,%r9d
   21e18:	41 31 f1             	xor    %esi,%r9d
   21e1b:	0f b6 f2             	movzbl %dl,%esi
   21e1e:	44 0f b6 04 31       	movzbl (%rcx,%rsi,1),%r8d
   21e23:	89 fe                	mov    %edi,%esi
   21e25:	c1 ee 18             	shr    $0x18,%esi
   21e28:	45 33 47 14          	xor    0x14(%r15),%r8d
   21e2c:	0f b6 34 31          	movzbl (%rcx,%rsi,1),%esi
   21e30:	c1 e6 18             	shl    $0x18,%esi
   21e33:	41 31 f0             	xor    %esi,%r8d
   21e36:	0f b6 f4             	movzbl %ah,%esi
   21e39:	0f b6 c6             	movzbl %dh,%eax
   21e3c:	44 0f b6 14 31       	movzbl (%rcx,%rsi,1),%r10d
   21e41:	44 89 c6             	mov    %r8d,%esi
   21e44:	41 89 d8             	mov    %ebx,%r8d
   21e47:	41 c1 e8 10          	shr    $0x10,%r8d
   21e4b:	c1 ea 10             	shr    $0x10,%edx
   21e4e:	45 0f b6 c0          	movzbl %r8b,%r8d
   21e52:	0f b6 d2             	movzbl %dl,%edx
   21e55:	46 0f b6 04 01       	movzbl (%rcx,%r8,1),%r8d
   21e5a:	41 c1 e2 08          	shl    $0x8,%r10d
   21e5e:	44 31 d6             	xor    %r10d,%esi
   21e61:	41 c1 e0 10          	shl    $0x10,%r8d
   21e65:	41 31 f0             	xor    %esi,%r8d
   21e68:	40 0f b6 f7          	movzbl %dil,%esi
   21e6c:	44 0f b6 14 31       	movzbl (%rcx,%rsi,1),%r10d
   21e71:	89 de                	mov    %ebx,%esi
   21e73:	44 0f b6 1c 01       	movzbl (%rcx,%rax,1),%r11d
   21e78:	c1 ee 18             	shr    $0x18,%esi
   21e7b:	45 33 57 18          	xor    0x18(%r15),%r10d
   21e7f:	44 89 e0             	mov    %r12d,%eax
   21e82:	0f b6 34 31          	movzbl (%rcx,%rsi,1),%esi
   21e86:	c1 e8 18             	shr    $0x18,%eax
   21e89:	0f b6 db             	movzbl %bl,%ebx
   21e8c:	41 c1 e3 08          	shl    $0x8,%r11d
   21e90:	c1 e6 18             	shl    $0x18,%esi
   21e93:	44 31 d6             	xor    %r10d,%esi
   21e96:	44 31 de             	xor    %r11d,%esi
   21e99:	44 0f b6 1c 19       	movzbl (%rcx,%rbx,1),%r11d
   21e9e:	48 89 fb             	mov    %rdi,%rbx
   21ea1:	41 89 f2             	mov    %esi,%r10d
   21ea4:	44 89 e6             	mov    %r12d,%esi
   21ea7:	0f b6 ff             	movzbl %bh,%edi
   21eaa:	c1 ee 10             	shr    $0x10,%esi
   21ead:	45 33 5f 1c          	xor    0x1c(%r15),%r11d
   21eb1:	40 0f b6 f6          	movzbl %sil,%esi
   21eb5:	0f b6 34 31          	movzbl (%rcx,%rsi,1),%esi
   21eb9:	c1 e6 10             	shl    $0x10,%esi
   21ebc:	44 31 d6             	xor    %r10d,%esi
   21ebf:	41 89 c2             	mov    %eax,%r10d
   21ec2:	42 0f b6 04 11       	movzbl (%rcx,%r10,1),%eax
   21ec7:	44 0f b6 14 39       	movzbl (%rcx,%rdi,1),%r10d
   21ecc:	c1 e0 18             	shl    $0x18,%eax
   21ecf:	41 c1 e2 08          	shl    $0x8,%r10d
   21ed3:	44 31 d8             	xor    %r11d,%eax
   21ed6:	44 31 d0             	xor    %r10d,%eax
   21ed9:	89 c7                	mov    %eax,%edi
   21edb:	0f b6 04 11          	movzbl (%rcx,%rdx,1),%eax
   21edf:	44 89 ca             	mov    %r9d,%edx
   21ee2:	c1 ea 08             	shr    $0x8,%edx
   21ee5:	45 88 0e             	mov    %r9b,(%r14)
   21ee8:	45 88 46 04          	mov    %r8b,0x4(%r14)
   21eec:	41 88 56 01          	mov    %dl,0x1(%r14)
   21ef0:	44 89 ca             	mov    %r9d,%edx
   21ef3:	41 c1 e9 18          	shr    $0x18,%r9d
   21ef7:	c1 ea 10             	shr    $0x10,%edx
   21efa:	41 88 76 08          	mov    %sil,0x8(%r14)
   21efe:	45 88 4e 03          	mov    %r9b,0x3(%r14)
   21f02:	41 88 56 02          	mov    %dl,0x2(%r14)
   21f06:	44 89 c2             	mov    %r8d,%edx
   21f09:	c1 e0 10             	shl    $0x10,%eax
   21f0c:	c1 ea 08             	shr    $0x8,%edx
   21f0f:	31 f8                	xor    %edi,%eax
   21f11:	41 88 56 05          	mov    %dl,0x5(%r14)
   21f15:	44 89 c2             	mov    %r8d,%edx
   21f18:	41 88 46 0c          	mov    %al,0xc(%r14)
   21f1c:	c1 ea 10             	shr    $0x10,%edx
   21f1f:	41 c1 e8 18          	shr    $0x18,%r8d
   21f23:	41 88 56 06          	mov    %dl,0x6(%r14)
   21f27:	89 f2                	mov    %esi,%edx
   21f29:	45 88 46 07          	mov    %r8b,0x7(%r14)
   21f2d:	c1 ea 08             	shr    $0x8,%edx
   21f30:	41 88 56 09          	mov    %dl,0x9(%r14)
   21f34:	89 f2                	mov    %esi,%edx
   21f36:	c1 ee 18             	shr    $0x18,%esi
   21f39:	c1 ea 10             	shr    $0x10,%edx
   21f3c:	41 88 76 0b          	mov    %sil,0xb(%r14)
   21f40:	41 88 56 0a          	mov    %dl,0xa(%r14)
   21f44:	89 c2                	mov    %eax,%edx
   21f46:	c1 ea 08             	shr    $0x8,%edx
   21f49:	41 88 56 0d          	mov    %dl,0xd(%r14)
   21f4d:	89 c2                	mov    %eax,%edx
   21f4f:	c1 e8 18             	shr    $0x18,%eax
   21f52:	c1 ea 10             	shr    $0x10,%edx
   21f55:	41 88 46 0f          	mov    %al,0xf(%r14)
   21f59:	41 88 56 0e          	mov    %dl,0xe(%r14)
   21f5d:	5b                   	pop    %rbx
   21f5e:	41 5c                	pop    %r12
   21f60:	41 5d                	pop    %r13
   21f62:	41 5e                	pop    %r14
   21f64:	41 5f                	pop    %r15
   21f66:	5d                   	pop    %rbp
   21f67:	c3                   	retq   
   21f68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   21f6f:	00 

0000000000021f70 <mbedtls_aes_crypt_ecb>:
   21f70:	55                   	push   %rbp
   21f71:	48 89 e5             	mov    %rsp,%rbp
   21f74:	41 56                	push   %r14
   21f76:	41 55                	push   %r13
   21f78:	41 54                	push   %r12
   21f7a:	53                   	push   %rbx
   21f7b:	48 89 fb             	mov    %rdi,%rbx
   21f7e:	bf 00 00 00 02       	mov    $0x2000000,%edi
   21f83:	41 89 f6             	mov    %esi,%r14d
   21f86:	49 89 d4             	mov    %rdx,%r12
   21f89:	49 89 cd             	mov    %rcx,%r13
   21f8c:	e8 5f 00 00 00       	callq  21ff0 <mbedtls_aesni_has_support>
   21f91:	85 c0                	test   %eax,%eax
   21f93:	75 23                	jne    21fb8 <mbedtls_aes_crypt_ecb+0x48>
   21f95:	41 83 fe 01          	cmp    $0x1,%r14d
   21f99:	4c 89 ea             	mov    %r13,%rdx
   21f9c:	4c 89 e6             	mov    %r12,%rsi
   21f9f:	48 89 df             	mov    %rbx,%rdi
   21fa2:	74 34                	je     21fd8 <mbedtls_aes_crypt_ecb+0x68>
   21fa4:	e8 37 fb ff ff       	callq  21ae0 <mbedtls_aes_decrypt>
   21fa9:	5b                   	pop    %rbx
   21faa:	31 c0                	xor    %eax,%eax
   21fac:	41 5c                	pop    %r12
   21fae:	41 5d                	pop    %r13
   21fb0:	41 5e                	pop    %r14
   21fb2:	5d                   	pop    %rbp
   21fb3:	c3                   	retq   
   21fb4:	0f 1f 40 00          	nopl   0x0(%rax)
   21fb8:	4c 89 e9             	mov    %r13,%rcx
   21fbb:	4c 89 e2             	mov    %r12,%rdx
   21fbe:	44 89 f6             	mov    %r14d,%esi
   21fc1:	48 89 df             	mov    %rbx,%rdi
   21fc4:	5b                   	pop    %rbx
   21fc5:	41 5c                	pop    %r12
   21fc7:	41 5d                	pop    %r13
   21fc9:	41 5e                	pop    %r14
   21fcb:	5d                   	pop    %rbp
   21fcc:	e9 2f 00 00 00       	jmpq   22000 <mbedtls_aesni_crypt_ecb>
   21fd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   21fd8:	e8 83 f6 ff ff       	callq  21660 <mbedtls_aes_encrypt>
   21fdd:	5b                   	pop    %rbx
   21fde:	31 c0                	xor    %eax,%eax
   21fe0:	41 5c                	pop    %r12
   21fe2:	41 5d                	pop    %r13
   21fe4:	41 5e                	pop    %r14
   21fe6:	5d                   	pop    %rbp
   21fe7:	c3                   	retq   
   21fe8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   21fef:	00 

0000000000021ff0 <mbedtls_aesni_has_support>:
   21ff0:	55                   	push   %rbp
   21ff1:	b8 01 00 00 00       	mov    $0x1,%eax
   21ff6:	48 89 e5             	mov    %rsp,%rbp
   21ff9:	5d                   	pop    %rbp
   21ffa:	c3                   	retq   
   21ffb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000022000 <mbedtls_aesni_crypt_ecb>:
   22000:	55                   	push   %rbp
   22001:	8b 07                	mov    (%rdi),%eax
   22003:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
   22007:	48 89 e5             	mov    %rsp,%rbp
   2200a:	f3 0f 6f 02          	movdqu (%rdx),%xmm0
   2200e:	f3 0f 6f 0f          	movdqu (%rdi),%xmm1
   22012:	66 0f ef c1          	pxor   %xmm1,%xmm0
   22016:	48 83 c7 10          	add    $0x10,%rdi
   2201a:	83 e8 01             	sub    $0x1,%eax
   2201d:	85 f6                	test   %esi,%esi
   2201f:	74 1d                	je     2203e <mbedtls_aesni_crypt_ecb+0x3e>
   22021:	f3 0f 6f 0f          	movdqu (%rdi),%xmm1
   22025:	66 0f 38 dc c1       	aesenc %xmm1,%xmm0
   2202a:	48 83 c7 10          	add    $0x10,%rdi
   2202e:	83 e8 01             	sub    $0x1,%eax
   22031:	75 ee                	jne    22021 <mbedtls_aesni_crypt_ecb+0x21>
   22033:	f3 0f 6f 0f          	movdqu (%rdi),%xmm1
   22037:	66 0f 38 dd c1       	aesenclast %xmm1,%xmm0
   2203c:	eb 1b                	jmp    22059 <mbedtls_aesni_crypt_ecb+0x59>
   2203e:	f3 0f 6f 0f          	movdqu (%rdi),%xmm1
   22042:	66 0f 38 de c1       	aesdec %xmm1,%xmm0
   22047:	48 83 c7 10          	add    $0x10,%rdi
   2204b:	83 e8 01             	sub    $0x1,%eax
   2204e:	75 ee                	jne    2203e <mbedtls_aesni_crypt_ecb+0x3e>
   22050:	f3 0f 6f 0f          	movdqu (%rdi),%xmm1
   22054:	66 0f 38 df c1       	aesdeclast %xmm1,%xmm0
   22059:	f3 0f 7f 01          	movdqu %xmm0,(%rcx)
   2205d:	31 c0                	xor    %eax,%eax
   2205f:	5d                   	pop    %rbp
   22060:	c3                   	retq   
   22061:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   22066:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   2206d:	00 00 00 

0000000000022070 <mbedtls_aesni_gcm_mult>:
   22070:	55                   	push   %rbp
   22071:	b8 10 00 00 00       	mov    $0x10,%eax
   22076:	31 c9                	xor    %ecx,%ecx
   22078:	48 89 e5             	mov    %rsp,%rbp
   2207b:	4c 8d 4d d0          	lea    -0x30(%rbp),%r9
   2207f:	4c 8d 55 e0          	lea    -0x20(%rbp),%r10
   22083:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   22088:	44 0f b6 44 06 ff    	movzbl -0x1(%rsi,%rax,1),%r8d
   2208e:	45 88 04 09          	mov    %r8b,(%r9,%rcx,1)
   22092:	44 0f b6 44 02 ff    	movzbl -0x1(%rdx,%rax,1),%r8d
   22098:	45 88 04 0a          	mov    %r8b,(%r10,%rcx,1)
   2209c:	48 83 c1 01          	add    $0x1,%rcx
   220a0:	48 83 e8 01          	sub    $0x1,%rax
   220a4:	75 e2                	jne    22088 <mbedtls_aesni_gcm_mult+0x18>
   220a6:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   220aa:	f3 41 0f 6f 01       	movdqu (%r9),%xmm0
   220af:	f3 41 0f 6f 0a       	movdqu (%r10),%xmm1
   220b4:	66 0f 6f d1          	movdqa %xmm1,%xmm2
   220b8:	66 0f 6f d9          	movdqa %xmm1,%xmm3
   220bc:	66 0f 6f e1          	movdqa %xmm1,%xmm4
   220c0:	66 0f 3a 44 c8 00    	pclmullqlqdq %xmm0,%xmm1
   220c6:	66 0f 3a 44 d0 11    	pclmulhqhqdq %xmm0,%xmm2
   220cc:	66 0f 3a 44 d8 10    	pclmullqhqdq %xmm0,%xmm3
   220d2:	66 0f 3a 44 e0 01    	pclmulhqlqdq %xmm0,%xmm4
   220d8:	66 0f ef e3          	pxor   %xmm3,%xmm4
   220dc:	66 0f 6f dc          	movdqa %xmm4,%xmm3
   220e0:	66 0f 73 dc 08       	psrldq $0x8,%xmm4
   220e5:	66 0f 73 fb 08       	pslldq $0x8,%xmm3
   220ea:	66 0f ef d4          	pxor   %xmm4,%xmm2
   220ee:	66 0f ef cb          	pxor   %xmm3,%xmm1
   220f2:	66 0f 6f d9          	movdqa %xmm1,%xmm3
   220f6:	66 0f 6f e2          	movdqa %xmm2,%xmm4
   220fa:	66 0f 73 f1 01       	psllq  $0x1,%xmm1
   220ff:	66 0f 73 f2 01       	psllq  $0x1,%xmm2
   22104:	66 0f 73 d3 3f       	psrlq  $0x3f,%xmm3
   22109:	66 0f 73 d4 3f       	psrlq  $0x3f,%xmm4
   2210e:	66 0f 6f eb          	movdqa %xmm3,%xmm5
   22112:	66 0f 73 fb 08       	pslldq $0x8,%xmm3
   22117:	66 0f 73 fc 08       	pslldq $0x8,%xmm4
   2211c:	66 0f 73 dd 08       	psrldq $0x8,%xmm5
   22121:	66 0f eb cb          	por    %xmm3,%xmm1
   22125:	66 0f eb d4          	por    %xmm4,%xmm2
   22129:	66 0f eb d5          	por    %xmm5,%xmm2
   2212d:	66 0f 6f d9          	movdqa %xmm1,%xmm3
   22131:	66 0f 6f e1          	movdqa %xmm1,%xmm4
   22135:	66 0f 6f e9          	movdqa %xmm1,%xmm5
   22139:	66 0f 73 f3 3f       	psllq  $0x3f,%xmm3
   2213e:	66 0f 73 f4 3e       	psllq  $0x3e,%xmm4
   22143:	66 0f 73 f5 39       	psllq  $0x39,%xmm5
   22148:	66 0f ef dc          	pxor   %xmm4,%xmm3
   2214c:	66 0f ef dd          	pxor   %xmm5,%xmm3
   22150:	66 0f 73 fb 08       	pslldq $0x8,%xmm3
   22155:	66 0f ef cb          	pxor   %xmm3,%xmm1
   22159:	66 0f 6f c1          	movdqa %xmm1,%xmm0
   2215d:	66 0f 6f e1          	movdqa %xmm1,%xmm4
   22161:	66 0f 6f e9          	movdqa %xmm1,%xmm5
   22165:	66 0f 73 d0 01       	psrlq  $0x1,%xmm0
   2216a:	66 0f 73 d4 02       	psrlq  $0x2,%xmm4
   2216f:	66 0f 73 d5 07       	psrlq  $0x7,%xmm5
   22174:	66 0f ef c4          	pxor   %xmm4,%xmm0
   22178:	66 0f ef c5          	pxor   %xmm5,%xmm0
   2217c:	66 0f 6f d9          	movdqa %xmm1,%xmm3
   22180:	66 0f 6f e1          	movdqa %xmm1,%xmm4
   22184:	66 0f 6f e9          	movdqa %xmm1,%xmm5
   22188:	66 0f 73 f3 3f       	psllq  $0x3f,%xmm3
   2218d:	66 0f 73 f4 3e       	psllq  $0x3e,%xmm4
   22192:	66 0f 73 f5 39       	psllq  $0x39,%xmm5
   22197:	66 0f ef dc          	pxor   %xmm4,%xmm3
   2219b:	66 0f ef dd          	pxor   %xmm5,%xmm3
   2219f:	66 0f 73 db 08       	psrldq $0x8,%xmm3
   221a4:	66 0f ef c3          	pxor   %xmm3,%xmm0
   221a8:	66 0f ef c1          	pxor   %xmm1,%xmm0
   221ac:	66 0f ef c2          	pxor   %xmm2,%xmm0
   221b0:	f3 0f 7f 00          	movdqu %xmm0,(%rax)
   221b4:	48 8d 4d ef          	lea    -0x11(%rbp),%rcx
   221b8:	48 83 c0 0f          	add    $0xf,%rax
   221bc:	0f 1f 40 00          	nopl   0x0(%rax)
   221c0:	0f b6 10             	movzbl (%rax),%edx
   221c3:	48 83 e8 01          	sub    $0x1,%rax
   221c7:	48 83 c7 01          	add    $0x1,%rdi
   221cb:	88 57 ff             	mov    %dl,-0x1(%rdi)
   221ce:	48 39 c8             	cmp    %rcx,%rax
   221d1:	75 ed                	jne    221c0 <mbedtls_aesni_gcm_mult+0x150>
   221d3:	5d                   	pop    %rbp
   221d4:	c3                   	retq   
   221d5:	90                   	nop
   221d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   221dd:	00 00 00 

00000000000221e0 <mbedtls_aesni_inverse_key>:
   221e0:	55                   	push   %rbp
   221e1:	c1 e2 04             	shl    $0x4,%edx
   221e4:	48 89 e5             	mov    %rsp,%rbp
   221e7:	41 55                	push   %r13
   221e9:	41 54                	push   %r12
   221eb:	4c 63 e2             	movslq %edx,%r12
   221ee:	53                   	push   %rbx
   221ef:	ba 10 00 00 00       	mov    $0x10,%edx
   221f4:	49 01 f4             	add    %rsi,%r12
   221f7:	48 89 f3             	mov    %rsi,%rbx
   221fa:	49 89 fd             	mov    %rdi,%r13
   221fd:	48 83 ec 08          	sub    $0x8,%rsp
   22201:	4c 89 e6             	mov    %r12,%rsi
   22204:	e8 e7 39 ff ff       	callq  15bf0 <memcpy>
   22209:	49 8d 74 24 f0       	lea    -0x10(%r12),%rsi
   2220e:	49 8d 7d 10          	lea    0x10(%r13),%rdi
   22212:	48 39 f3             	cmp    %rsi,%rbx
   22215:	73 40                	jae    22257 <mbedtls_aesni_inverse_key+0x77>
   22217:	48 89 f0             	mov    %rsi,%rax
   2221a:	48 89 fa             	mov    %rdi,%rdx
   2221d:	0f 1f 00             	nopl   (%rax)
   22220:	f3 0f 6f 00          	movdqu (%rax),%xmm0
   22224:	66 0f 38 db c0       	aesimc %xmm0,%xmm0
   22229:	f3 0f 7f 02          	movdqu %xmm0,(%rdx)
   2222d:	48 83 e8 10          	sub    $0x10,%rax
   22231:	48 83 c2 10          	add    $0x10,%rdx
   22235:	48 39 c3             	cmp    %rax,%rbx
   22238:	72 e6                	jb     22220 <mbedtls_aesni_inverse_key+0x40>
   2223a:	49 29 dc             	sub    %rbx,%r12
   2223d:	49 8d 44 24 ef       	lea    -0x11(%r12),%rax
   22242:	48 c1 e8 04          	shr    $0x4,%rax
   22246:	48 83 c0 01          	add    $0x1,%rax
   2224a:	48 89 c2             	mov    %rax,%rdx
   2224d:	48 c1 e2 04          	shl    $0x4,%rdx
   22251:	48 29 d6             	sub    %rdx,%rsi
   22254:	48 01 d7             	add    %rdx,%rdi
   22257:	48 83 c4 08          	add    $0x8,%rsp
   2225b:	ba 10 00 00 00       	mov    $0x10,%edx
   22260:	5b                   	pop    %rbx
   22261:	41 5c                	pop    %r12
   22263:	41 5d                	pop    %r13
   22265:	5d                   	pop    %rbp
   22266:	e9 85 39 ff ff       	jmpq   15bf0 <memcpy>
   2226b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000022270 <mbedtls_aesni_setkey_enc>:
   22270:	55                   	push   %rbp
   22271:	48 81 fa c0 00 00 00 	cmp    $0xc0,%rdx
   22278:	48 89 e5             	mov    %rsp,%rbp
   2227b:	0f 84 9f 01 00 00    	je     22420 <mbedtls_aesni_setkey_enc+0x1b0>
   22281:	48 81 fa 00 01 00 00 	cmp    $0x100,%rdx
   22288:	0f 84 c2 00 00 00    	je     22350 <mbedtls_aesni_setkey_enc+0xe0>
   2228e:	48 83 c2 80          	add    $0xffffffffffffff80,%rdx
   22292:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax
   22297:	74 07                	je     222a0 <mbedtls_aesni_setkey_enc+0x30>
   22299:	5d                   	pop    %rbp
   2229a:	c3                   	retq   
   2229b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   222a0:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   222a4:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
   222a8:	eb 2d                	jmp    222d7 <mbedtls_aesni_setkey_enc+0x67>
   222aa:	66 0f 70 c9 ff       	pshufd $0xff,%xmm1,%xmm1
   222af:	66 0f ef c8          	pxor   %xmm0,%xmm1
   222b3:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   222b8:	66 0f ef c8          	pxor   %xmm0,%xmm1
   222bc:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   222c1:	66 0f ef c8          	pxor   %xmm0,%xmm1
   222c5:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   222ca:	66 0f ef c1          	pxor   %xmm1,%xmm0
   222ce:	48 83 c7 10          	add    $0x10,%rdi
   222d2:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
   222d6:	c3                   	retq   
   222d7:	66 0f 3a df c8 01    	aeskeygenassist $0x1,%xmm0,%xmm1
   222dd:	e8 c8 ff ff ff       	callq  222aa <mbedtls_aesni_setkey_enc+0x3a>
   222e2:	66 0f 3a df c8 02    	aeskeygenassist $0x2,%xmm0,%xmm1
   222e8:	e8 bd ff ff ff       	callq  222aa <mbedtls_aesni_setkey_enc+0x3a>
   222ed:	66 0f 3a df c8 04    	aeskeygenassist $0x4,%xmm0,%xmm1
   222f3:	e8 b2 ff ff ff       	callq  222aa <mbedtls_aesni_setkey_enc+0x3a>
   222f8:	66 0f 3a df c8 08    	aeskeygenassist $0x8,%xmm0,%xmm1
   222fe:	e8 a7 ff ff ff       	callq  222aa <mbedtls_aesni_setkey_enc+0x3a>
   22303:	66 0f 3a df c8 10    	aeskeygenassist $0x10,%xmm0,%xmm1
   22309:	e8 9c ff ff ff       	callq  222aa <mbedtls_aesni_setkey_enc+0x3a>
   2230e:	66 0f 3a df c8 20    	aeskeygenassist $0x20,%xmm0,%xmm1
   22314:	e8 91 ff ff ff       	callq  222aa <mbedtls_aesni_setkey_enc+0x3a>
   22319:	66 0f 3a df c8 40    	aeskeygenassist $0x40,%xmm0,%xmm1
   2231f:	e8 86 ff ff ff       	callq  222aa <mbedtls_aesni_setkey_enc+0x3a>
   22324:	66 0f 3a df c8 80    	aeskeygenassist $0x80,%xmm0,%xmm1
   2232a:	e8 7b ff ff ff       	callq  222aa <mbedtls_aesni_setkey_enc+0x3a>
   2232f:	66 0f 3a df c8 1b    	aeskeygenassist $0x1b,%xmm0,%xmm1
   22335:	e8 70 ff ff ff       	callq  222aa <mbedtls_aesni_setkey_enc+0x3a>
   2233a:	66 0f 3a df c8 36    	aeskeygenassist $0x36,%xmm0,%xmm1
   22340:	e8 65 ff ff ff       	callq  222aa <mbedtls_aesni_setkey_enc+0x3a>
   22345:	31 c0                	xor    %eax,%eax
   22347:	5d                   	pop    %rbp
   22348:	c3                   	retq   
   22349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   22350:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   22354:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
   22358:	48 83 c7 10          	add    $0x10,%rdi
   2235c:	f3 0f 6f 4e 10       	movdqu 0x10(%rsi),%xmm1
   22361:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   22365:	eb 5f                	jmp    223c6 <mbedtls_aesni_setkey_enc+0x156>
   22367:	66 0f 70 d2 ff       	pshufd $0xff,%xmm2,%xmm2
   2236c:	66 0f ef d0          	pxor   %xmm0,%xmm2
   22370:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   22375:	66 0f ef d0          	pxor   %xmm0,%xmm2
   22379:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   2237e:	66 0f ef d0          	pxor   %xmm0,%xmm2
   22382:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   22387:	66 0f ef c2          	pxor   %xmm2,%xmm0
   2238b:	48 83 c7 10          	add    $0x10,%rdi
   2238f:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
   22393:	66 0f 3a df d0 00    	aeskeygenassist $0x0,%xmm0,%xmm2
   22399:	66 0f 70 d2 aa       	pshufd $0xaa,%xmm2,%xmm2
   2239e:	66 0f ef d1          	pxor   %xmm1,%xmm2
   223a2:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   223a7:	66 0f ef d1          	pxor   %xmm1,%xmm2
   223ab:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   223b0:	66 0f ef d1          	pxor   %xmm1,%xmm2
   223b4:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   223b9:	66 0f ef ca          	pxor   %xmm2,%xmm1
   223bd:	48 83 c7 10          	add    $0x10,%rdi
   223c1:	f3 0f 7f 0f          	movdqu %xmm1,(%rdi)
   223c5:	c3                   	retq   
   223c6:	66 0f 3a df d1 01    	aeskeygenassist $0x1,%xmm1,%xmm2
   223cc:	e8 96 ff ff ff       	callq  22367 <mbedtls_aesni_setkey_enc+0xf7>
   223d1:	66 0f 3a df d1 02    	aeskeygenassist $0x2,%xmm1,%xmm2
   223d7:	e8 8b ff ff ff       	callq  22367 <mbedtls_aesni_setkey_enc+0xf7>
   223dc:	66 0f 3a df d1 04    	aeskeygenassist $0x4,%xmm1,%xmm2
   223e2:	e8 80 ff ff ff       	callq  22367 <mbedtls_aesni_setkey_enc+0xf7>
   223e7:	66 0f 3a df d1 08    	aeskeygenassist $0x8,%xmm1,%xmm2
   223ed:	e8 75 ff ff ff       	callq  22367 <mbedtls_aesni_setkey_enc+0xf7>
   223f2:	66 0f 3a df d1 10    	aeskeygenassist $0x10,%xmm1,%xmm2
   223f8:	e8 6a ff ff ff       	callq  22367 <mbedtls_aesni_setkey_enc+0xf7>
   223fd:	66 0f 3a df d1 20    	aeskeygenassist $0x20,%xmm1,%xmm2
   22403:	e8 5f ff ff ff       	callq  22367 <mbedtls_aesni_setkey_enc+0xf7>
   22408:	66 0f 3a df d1 40    	aeskeygenassist $0x40,%xmm1,%xmm2
   2240e:	e8 54 ff ff ff       	callq  22367 <mbedtls_aesni_setkey_enc+0xf7>
   22413:	31 c0                	xor    %eax,%eax
   22415:	5d                   	pop    %rbp
   22416:	c3                   	retq   
   22417:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   2241e:	00 00 
   22420:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
   22424:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
   22428:	48 83 c7 10          	add    $0x10,%rdi
   2242c:	f3 0f 7e 4e 10       	movq   0x10(%rsi),%xmm1
   22431:	66 0f d6 0f          	movq   %xmm1,(%rdi)
   22435:	48 83 c7 08          	add    $0x8,%rdi
   22439:	eb 47                	jmp    22482 <mbedtls_aesni_setkey_enc+0x212>
   2243b:	66 0f 70 d2 55       	pshufd $0x55,%xmm2,%xmm2
   22440:	66 0f ef d0          	pxor   %xmm0,%xmm2
   22444:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   22449:	66 0f ef d0          	pxor   %xmm0,%xmm2
   2244d:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   22452:	66 0f ef d0          	pxor   %xmm0,%xmm2
   22456:	66 0f 73 f8 04       	pslldq $0x4,%xmm0
   2245b:	66 0f ef c2          	pxor   %xmm2,%xmm0
   2245f:	f3 0f 7f 07          	movdqu %xmm0,(%rdi)
   22463:	48 83 c7 10          	add    $0x10,%rdi
   22467:	66 0f 70 d0 ff       	pshufd $0xff,%xmm0,%xmm2
   2246c:	66 0f ef d1          	pxor   %xmm1,%xmm2
   22470:	66 0f 73 f9 04       	pslldq $0x4,%xmm1
   22475:	66 0f ef ca          	pxor   %xmm2,%xmm1
   22479:	66 0f d6 0f          	movq   %xmm1,(%rdi)
   2247d:	48 83 c7 08          	add    $0x8,%rdi
   22481:	c3                   	retq   
   22482:	66 0f 3a df d1 01    	aeskeygenassist $0x1,%xmm1,%xmm2
   22488:	e8 ae ff ff ff       	callq  2243b <mbedtls_aesni_setkey_enc+0x1cb>
   2248d:	66 0f 3a df d1 02    	aeskeygenassist $0x2,%xmm1,%xmm2
   22493:	e8 a3 ff ff ff       	callq  2243b <mbedtls_aesni_setkey_enc+0x1cb>
   22498:	66 0f 3a df d1 04    	aeskeygenassist $0x4,%xmm1,%xmm2
   2249e:	e8 98 ff ff ff       	callq  2243b <mbedtls_aesni_setkey_enc+0x1cb>
   224a3:	66 0f 3a df d1 08    	aeskeygenassist $0x8,%xmm1,%xmm2
   224a9:	e8 8d ff ff ff       	callq  2243b <mbedtls_aesni_setkey_enc+0x1cb>
   224ae:	66 0f 3a df d1 10    	aeskeygenassist $0x10,%xmm1,%xmm2
   224b4:	e8 82 ff ff ff       	callq  2243b <mbedtls_aesni_setkey_enc+0x1cb>
   224b9:	66 0f 3a df d1 20    	aeskeygenassist $0x20,%xmm1,%xmm2
   224bf:	e8 77 ff ff ff       	callq  2243b <mbedtls_aesni_setkey_enc+0x1cb>
   224c4:	66 0f 3a df d1 40    	aeskeygenassist $0x40,%xmm1,%xmm2
   224ca:	e8 6c ff ff ff       	callq  2243b <mbedtls_aesni_setkey_enc+0x1cb>
   224cf:	66 0f 3a df d1 80    	aeskeygenassist $0x80,%xmm1,%xmm2
   224d5:	e8 61 ff ff ff       	callq  2243b <mbedtls_aesni_setkey_enc+0x1cb>
   224da:	31 c0                	xor    %eax,%eax
   224dc:	5d                   	pop    %rbp
   224dd:	c3                   	retq   

Disassembly of section .plt.got:

00000000000224e0 <.plt.got>:
   224e0:	ff 25 6a 81 20 00    	jmpq   *0x20816a(%rip)        # 22a650 <data_start+0x198>
   224e6:	66 90                	xchg   %ax,%ax
